[{"lineNumber": 21, "col_offset": 0, "nodeName": "collectPowerData", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "_getPowerData", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "_calculatePowerDataRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "_retrievePowerData", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "_composeStructuredData", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 228, "col_offset": 0, "nodeName": "_getSerialno", "type": "Callable[..., Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "serialno", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "Mon", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "engine", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "filename", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "power_data", "type": "List[Dict[str, float]]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "filename", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "lines", "type": "List[Dict[str, float]]"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "lines", "type": "List[Dict[str, float]]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "num", "type": "int"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "WINDOW_SIZE", "type": "int"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "THRESHOLD", "type": "int"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "sum", "type": "int"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "ranges", "type": "List[Dict[str, int]]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "i", "type": "int"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "max_range", "type": "Dict[str, int]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "r", "type": "Dict[str, int]"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "ranges", "type": "List[Dict[str, int]]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "data", "type": "Dict[str, Dict[str, Union[List[Any], str, Dict[str, Any]]]]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "THRESHOLD", "type": "int"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "num", "type": "int"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "i", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "end_idx", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "sum", "type": "int"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "count", "type": "int"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "base_current", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "energy", "type": "int"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "prev_time", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "total_time", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "power", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "energy_per_inference", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "latency", "type": "Any"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "data", "type": "Dict[str, Dict[str, Union[List[Any], str, Dict[str, Any]]]]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "serialno", "type": "None"}, {"lineNumber": 230, "col_offset": 7, "nodeName": "monsoon_map", "type": "Any"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "serialno", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "_getSerialno", "type": "Callable[..., Any]"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "hash", "type": "Any"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "monsoon_map", "type": "Any"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "serialno", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "Monsoon", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "setup_usb", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "serialno", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "setVout", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "voltage", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "setPowerupTime", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "setPowerUpCurrentLimit", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "setRunTimeCurrentLimit", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "setVoltageChannel", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "SampleEngine", "type": "Any"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "Mon", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "enableCSVOutput", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "filename", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "ConsoleOutput", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "sample_time", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "startSampling", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "disableCSVOutput", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "_getPowerData", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "filename", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "start_idx", "type": "int"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "end_idx", "type": "int"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "_calculatePowerDataRange", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "power_data", "type": "List[Dict[str, float]]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "_retrievePowerData", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "power_data", "type": "List[Dict[str, float]]"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "start_idx", "type": "int"}, {"lineNumber": 75, "col_offset": 53, "nodeName": "end_idx", "type": "int"}, {"lineNumber": 75, "col_offset": 62, "nodeName": "num_iters", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "f", "type": "file"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 109, "col_offset": 7, "nodeName": "num", "type": "int"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "WINDOW_SIZE", "type": "int"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "WINDOW_SIZE", "type": "int"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "sum", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "WINDOW_SIZE", "type": "int"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "start", "type": "int"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "sum", "type": "int"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "end", "type": "int"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "ranges", "type": "List[Dict[str, int]]"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "data", "type": "Dict[str, Dict[str, Union[List[Any], str, Dict[str, Any]]]]"}, {"lineNumber": 175, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "end_idx", "type": "Any"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "num", "type": "int"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "start_idx", "type": "Any"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "end_idx", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "entry", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "curr_time", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "prev_time", "type": "Any"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "curr_time", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "energy", "type": "Union[Any, int]"}, {"lineNumber": 194, "col_offset": 21, "nodeName": "total_time", "type": "Any"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "energy", "type": "Union[Any, int]"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "num_iters", "type": "Any"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "num_iters", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "_composeStructuredData", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 197, "col_offset": 44, "nodeName": "energy_per_inference", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "data", "type": "Dict[str, Dict[str, Union[List[Any], str, Dict[str, Any]]]]"}, {"lineNumber": 199, "col_offset": 20, "nodeName": "_composeStructuredData", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 199, "col_offset": 43, "nodeName": "power", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "data", "type": "Dict[str, Dict[str, Union[List[Any], str, Dict[str, Any]]]]"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "_composeStructuredData", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 200, "col_offset": 45, "nodeName": "latency", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "metric", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "unit", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "map", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "info", "type": "Any"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "HVPM", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "Mon", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "Mon", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "Mon", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "Mon", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "Mon", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "Mon", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "sampleEngine", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "f", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "engine", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "engine", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 58, "col_offset": 50, "nodeName": "filename", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "engine", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "engine", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 62, "col_offset": 61, "nodeName": "filename", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "start_idx", "type": "int"}, {"lineNumber": 71, "col_offset": 50, "nodeName": "end_idx", "type": "int"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "filename", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "readline", "type": "Callable[..., str]"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "line", "type": "str"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "pattern", "type": "Pattern[str]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "num", "type": "int"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "end", "type": "int"}, {"lineNumber": 157, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "ranges", "type": "List[Dict[str, int]]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "max_range", "type": "Dict[str, int]"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "r", "type": "Dict[str, int]"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "max_range", "type": "Dict[str, int]"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "max_range", "type": "Dict[str, int]"}, {"lineNumber": 170, "col_offset": 7, "nodeName": "start_idx", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "end_idx", "type": "Any"}, {"lineNumber": 180, "col_offset": 38, "nodeName": "THRESHOLD", "type": "int"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "count", "type": "int"}, {"lineNumber": 183, "col_offset": 34, "nodeName": "count", "type": "int"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "sum", "type": "Union[int, Any]"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "count", "type": "int"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "entry", "type": "Any"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 201, "col_offset": 50, "nodeName": "base_current", "type": "Any"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "energy_per_inference", "type": "Any"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 204, "col_offset": 43, "nodeName": "power", "type": "Any"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 205, "col_offset": 59, "nodeName": "latency", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "monsoon_map", "type": "Any"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "hash", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "map", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "serialno", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 25, "col_offset": 67, "nodeName": "hash", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 49, "nodeName": "power_data", "type": "List[Dict[str, float]]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "f", "type": "file"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "readline", "type": "Callable[..., str]"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "match", "type": "Callable"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "line", "type": "str"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "THRESHOLD", "type": "int"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 125, "col_offset": 54, "nodeName": "THRESHOLD", "type": "int"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 132, "col_offset": 51, "nodeName": "THRESHOLD", "type": "int"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 142, "col_offset": 53, "nodeName": "THRESHOLD", "type": "int"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "end", "type": "int"}, {"lineNumber": 149, "col_offset": 48, "nodeName": "THRESHOLD", "type": "int"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "end", "type": "int"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "start", "type": "int"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "num", "type": "int"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "end", "type": "int"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "num", "type": "int"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 191, "col_offset": 49, "nodeName": "curr_time", "type": "Any"}, {"lineNumber": 191, "col_offset": 61, "nodeName": "prev_time", "type": "Any"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "total_time", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "json", "type": "module"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "map", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 25, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 25, "col_offset": 56, "nodeName": "serialno", "type": "Any"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "power_data", "type": "List[Dict[str, float]]"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "power_data", "type": "List[Dict[str, float]]"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "f", "type": "file"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "re", "type": "module"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "pattern", "type": "Pattern[str]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "new_line", "type": "Dict[str, float]"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "num", "type": "int"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "sum", "type": "Union[int, Any]"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "WINDOW_SIZE", "type": "int"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "sum", "type": "Union[int, Any]"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "num", "type": "int"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "sum", "type": "Any"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "WINDOW_SIZE", "type": "int"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "THRESHOLD", "type": "int"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "sum", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "num", "type": "int"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "start", "type": "int"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "WINDOW_SIZE", "type": "int"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "num", "type": "int"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "sum", "type": "Union[int, Any]"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "WINDOW_SIZE", "type": "int"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "sum", "type": "Union[int, Any]"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "WINDOW_SIZE", "type": "int"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "ranges", "type": "List[Dict[str, int]]"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "start", "type": "int"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "end", "type": "int"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "r", "type": "Dict[str, int]"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "r", "type": "Dict[str, int]"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "max_range", "type": "Dict[str, int]"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "max_range", "type": "Dict[str, int]"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "start_idx", "type": "Any"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "base_current", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "end_idx", "type": "Any"}, {"lineNumber": 193, "col_offset": 58, "nodeName": "start_idx", "type": "Any"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "hash", "type": "Any"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "start_idx", "type": "int"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "end_idx", "type": "int"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "lines", "type": "List[Dict[str, float]]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "entry", "type": "Any"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "group", "type": "Callable"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "group", "type": "Callable"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "group", "type": "Callable"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 127, "col_offset": 50, "nodeName": "sum", "type": "Any"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "WINDOW_SIZE", "type": "int"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "power_data", "type": "Any"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "end", "type": "int"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "WINDOW_SIZE", "type": "int"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "WINDOW_SIZE", "type": "int"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "WINDOW_SIZE", "type": "int"}]