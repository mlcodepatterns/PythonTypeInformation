[{"lineNumber": 20, "col_offset": 0, "nodeName": "values_single_params", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "values_list_params", "type": "Callable[[], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "values_range_params", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "get_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "values_single", "type": "Dict[str, Union[List[str], List[Any], List[int]]]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "values_list", "type": "Dict[str, Union[List[str], List[Any], List[Union[str, float]], List[Union[int, float]], List[int]]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "values_range", "type": "Dict[str, Union[List[Any], List[str], Tuple[int, float, int], Tuple[int, int, int], Tuple[float, int, int]]]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "values_single_params", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "values_list_params", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "values_range_params", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "values_single", "type": "Dict[str, Union[List[str], List[Any], List[int]]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "values_list", "type": "Dict[str, Union[List[str], List[Any], List[Union[str, float]], List[Union[int, float]], List[int]]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "values_range", "type": "Dict[str, Union[List[Any], List[str], Tuple[int, float, int], Tuple[int, int, int], Tuple[float, int, int]]]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "values_single", "type": "Dict[str, Union[List[str], List[Any], List[int]]]"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "values_list", "type": "Dict[str, Union[List[str], List[Any], List[Union[str, float]], List[Union[int, float]], List[int]]]"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "values_range", "type": "Dict[str, Union[List[Any], List[str], Tuple[int, float, int], Tuple[int, int, int], Tuple[float, int, int]]]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "model", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "cervical_cancer", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "x", "type": "int"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "x", "type": "int"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "x", "type": "Tuple[Any, Any]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "x", "type": "Tuple[Any, Any]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "x", "type": "Tuple[Any, Any]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "x", "type": "Tuple[Any, Any]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "x", "type": "Tuple[Any, Any]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "x", "type": "Tuple[Any, Any]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "x", "type": "Dict[str, Union[List[Any], Tuple[Union[float, int], Union[float, int], int]]]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "x", "type": "Dict[str, Union[List[Any], Tuple[Union[float, int], Union[float, int], int]]]"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "binary_crossentropy", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "sparse_categorical_crossentropy", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "categorical_crossentropy", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "Adagrad", "type": "Any"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "Adamax", "type": "Any"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "RMSprop", "type": "Any"}, {"lineNumber": 46, "col_offset": 58, "nodeName": "Adadelta", "type": "Any"}, {"lineNumber": 46, "col_offset": 68, "nodeName": "Nadam", "type": "Any"}, {"lineNumber": 46, "col_offset": 75, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "Nadam", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "binary_crossentropy", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "sparse_categorical_crossentropy", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "categorical_crossentropy", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "relu", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "values_single", "type": "Dict[str, Union[List[str], List[Any], List[int]]]"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "values_list", "type": "Dict[str, Union[List[str], List[Any], List[Union[str, float]], List[Union[int, float]], List[int]]]"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "values_range", "type": "Dict[str, Union[List[Any], List[str], Tuple[int, float, int], Tuple[int, int, int], Tuple[float, int, int]]]"}, {"lineNumber": 124, "col_offset": 66, "nodeName": "get_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "cervical_cancer", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "models", "type": "module"}, {"lineNumber": 133, "col_offset": 61, "nodeName": "splt", "type": "Any"}, {"lineNumber": 133, "col_offset": 66, "nodeName": "x", "type": "Any"}, {"lineNumber": 134, "col_offset": 66, "nodeName": "y", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "Scan", "type": "Type[talos.scan.Scan.Scan]"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "y", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "Scan", "type": "Type[talos.scan.Scan.Scan]"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "Scan", "type": "Type[talos.scan.Scan.Scan]"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "values_single", "type": "Dict[str, Union[List[str], List[Any], List[int]]]"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "values_list", "type": "Dict[str, Union[List[str], List[Any], List[Union[str, float]], List[Union[int, float]], List[int]]]"}, {"lineNumber": 192, "col_offset": 46, "nodeName": "values_range", "type": "Dict[str, Union[List[Any], List[str], Tuple[int, float, int], Tuple[int, int, int], Tuple[float, int, int]]]"}, {"lineNumber": 192, "col_offset": 66, "nodeName": "get_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "iris", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 195, "col_offset": 61, "nodeName": "splt", "type": "Any"}, {"lineNumber": 195, "col_offset": 66, "nodeName": "x", "type": "Any"}, {"lineNumber": 196, "col_offset": 66, "nodeName": "y", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "Scan", "type": "Type[talos.scan.Scan.Scan]"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "y", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "Scan", "type": "Type[talos.scan.Scan.Scan]"}, {"lineNumber": 208, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "y", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "Scan", "type": "Type[talos.scan.Scan.Scan]"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "y", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "Reporting", "type": "Type[talos.commands.reporting.Reporting]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "correlate", "type": "Callable[..., Any]"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "high", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "low", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "rounds", "type": "Callable[[], int]"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "rounds2high", "type": "Callable[..., Any]"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "best_params", "type": "Callable[..., Any]"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "plot_corr", "type": "Callable[..., Any]"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "plot_hist", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "plot_line", "type": "Callable[..., Any]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "Reporting", "type": "Type[talos.commands.reporting.Reporting]"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "correlate", "type": "Callable[..., Any]"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "high", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "low", "type": "Callable[..., Any]"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "rounds", "type": "Callable[[], int]"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "rounds2high", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "best_params", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "plot_corr", "type": "Callable[..., Any]"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "plot_hist", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "plot_line", "type": "Callable[..., Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "icu_mortality", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "icu_mortality", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "titanic", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "iris", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "cervical_cancer", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "breast_cancer", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "iris", "type": "Callable[[], Dict[str, Union[List[Any], Tuple[Union[float, int], Union[float, int], int]]]]"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "breast_cancer", "type": "Callable[[], Dict[str, Union[List[Any], Tuple[Union[float, int], Union[float, int], int]]]]"}, {"lineNumber": 112, "col_offset": 68, "nodeName": "task", "type": "int"}, {"lineNumber": 113, "col_offset": 64, "nodeName": "task", "type": "int"}, {"lineNumber": 114, "col_offset": 66, "nodeName": "task", "type": "int"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "datasets", "type": "module"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "templates", "type": "module"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 134, "col_offset": 66, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "values_single", "type": "Dict[str, Union[List[str], List[Any], List[int]]]"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "cervical_cancer", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "y_val", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "values_list", "type": "Dict[str, Union[List[str], List[Any], List[Union[str, float]], List[Union[int, float]], List[int]]]"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "cervical_cancer", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "values_range", "type": "Dict[str, Union[List[Any], List[str], Tuple[int, float, int], Tuple[int, int, int], Tuple[float, int, int]]]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "cervical_cancer", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 192, "col_offset": 46, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "datasets", "type": "module"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 196, "col_offset": 66, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "values_single", "type": "Dict[str, Union[List[str], List[Any], List[int]]]"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "iris", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 208, "col_offset": 13, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 210, "col_offset": 19, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "y_val", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "values_list", "type": "Dict[str, Union[List[str], List[Any], List[Union[str, float]], List[Union[int, float]], List[int]]]"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "iris", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "values_range", "type": "Dict[str, Union[List[Any], List[str], Tuple[int, float, int], Tuple[int, int, int], Tuple[float, int, int]]]"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "iris", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 256, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 256, "col_offset": 18, "nodeName": "val_acc", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "datasets", "type": "module"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "datasets", "type": "module"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "datasets", "type": "module"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "datasets", "type": "module"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "datasets", "type": "module"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "datasets", "type": "module"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "params", "type": "module"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "params", "type": "module"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "values_single_params", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "values_list_params", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "values_range_params", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "templates", "type": "module"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "ta", "type": "module"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "models", "type": "module"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "models", "type": "module"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "self", "type": "BinaryTest"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "models", "type": "module"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "templates", "type": "module"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "models", "type": "module"}, {"lineNumber": 210, "col_offset": 19, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "models", "type": "module"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "self", "type": "MultiLabelTest"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "models", "type": "module"}, {"lineNumber": 256, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "templates", "type": "module"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "templates", "type": "module"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "templates", "type": "module"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "templates", "type": "module"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "templates", "type": "module"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "templates", "type": "module"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "templates", "type": "module"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "templates", "type": "module"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "ta", "type": "module"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "templates", "type": "module"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "templates", "type": "module"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "templates", "type": "module"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "ta", "type": "module"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "templates", "type": "module"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "templates", "type": "module"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "templates", "type": "module"}, {"lineNumber": 256, "col_offset": 18, "nodeName": "r", "type": "talos.commands.reporting.Reporting"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "ta", "type": "module"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "ta", "type": "module"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "ta", "type": "module"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "ta", "type": "module"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "ta", "type": "module"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "ta", "type": "module"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "ta", "type": "module"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "ta", "type": "module"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "ta", "type": "module"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "ta", "type": "module"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "ta", "type": "module"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "ta", "type": "module"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "ta", "type": "module"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "ta", "type": "module"}]