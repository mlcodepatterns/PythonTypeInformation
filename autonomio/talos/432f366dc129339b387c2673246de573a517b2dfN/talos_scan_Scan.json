[{"lineNumber": 139, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "params", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "experiment_name", "type": "Any"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "experiment_name", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "y_val", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "y_val", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "val_split", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "val_split", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "random_method", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "random_method", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "performance_target", "type": "Any"}, {"lineNumber": 150, "col_offset": 34, "nodeName": "performance_target", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "fraction_limit", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "fraction_limit", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "round_limit", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "round_limit", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "time_limit", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "time_limit", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "boolean_limit", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "boolean_limit", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "reduction_method", "type": "Any"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "reduction_method", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "reduction_interval", "type": "Any"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "reduction_interval", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "reduction_window", "type": "Any"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "reduction_window", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "reduction_threshold", "type": "Any"}, {"lineNumber": 160, "col_offset": 35, "nodeName": "reduction_threshold", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "reduction_metric", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "reduction_metric", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "minimize_loss", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "minimize_loss", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "debug", "type": "Any"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "debug", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "seed", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "clear_session", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "clear_session", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "disable_progress_bar", "type": "Any"}, {"lineNumber": 168, "col_offset": 36, "nodeName": "disable_progress_bar", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "print_params", "type": "Any"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "print_params", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 141, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "Scan"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "runtime", "type": "Callable[[], Any]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "scan_run", "type": "Any"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "self", "type": "Scan"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "Scan"}]