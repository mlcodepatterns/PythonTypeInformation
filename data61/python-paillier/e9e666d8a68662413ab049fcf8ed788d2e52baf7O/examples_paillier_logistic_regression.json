[{"lineNumber": 23, "col_offset": 0, "nodeName": "get_data", "type": "Callable[[], Any]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "data_url", "type": "str"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "ham_file", "type": "str"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "spam_file", "type": "str"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "encrypt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "predict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "encrypted_predict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "unencrypted_predict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "learn", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "evaluate", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "seed", "type": "Any"}, {"lineNumber": 176, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "model", "type": "LogisticRegression"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "encrypted_model", "type": "LogisticRegression"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "random", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "f", "type": "file"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "ham", "type": "List[List[str]]"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "f", "type": "file"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "spam", "type": "List[List[str]]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "ham", "type": "List[List[str]]"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "spam", "type": "List[List[str]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "encrypted", "type": "bool"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "maxweight", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "cnts", "type": "Counter[str]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "email", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "vocab", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "word2index", "type": "Dict[str, int]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "iter", "type": "int"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "encrypted", "type": "bool"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "pred", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "word", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "email", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "pred", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "pred", "type": "int"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "word", "type": "str"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "email", "type": "List[str]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "pred", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "pred", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "pred", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "delta", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "word", "type": "str"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "email", "type": "List[str]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "delta", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "ham", "type": "List[List[str]]"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "spam", "type": "List[List[str]]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "get_data", "type": "Callable[[], Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "pubkey", "type": "phe.paillier.PaillierPublicKey"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "prikey", "type": "phe.paillier.PaillierPrivateKey"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "generate_paillier_keypair", "type": "Callable[..., Tuple[phe.paillier.PaillierPublicKey, phe.paillier.PaillierPrivateKey]]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "LogisticRegression", "type": "Type[LogisticRegression]"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "encrypt", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "pubkey", "type": "phe.paillier.PaillierPublicKey"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "isfile", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "ham_file", "type": "str"}, {"lineNumber": 28, "col_offset": 53, "nodeName": "hamdata", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "isfile", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "spam_file", "type": "str"}, {"lineNumber": 33, "col_offset": 54, "nodeName": "spamdata", "type": "Any"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "ham_file", "type": "str"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "spam_file", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "positives", "type": "List[List[str]]"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "negatives", "type": "List[List[str]]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "word", "type": "str"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "email", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "word", "type": "str"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "vocab", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "positives", "type": "List[List[str]]"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "negatives", "type": "List[List[str]]"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "iterations", "type": "int"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "error", "type": "int"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "x", "type": "Union[int, Any]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "exp_t", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "encrypted", "type": "bool"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "pubkey", "type": "phe.paillier.PaillierPublicKey"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "pubkey", "type": "phe.paillier.PaillierPublicKey"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "encrypted_weights", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "weights", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "encrypt", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "softmax", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "pred", "type": "Union[Any, int]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "email", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "pred", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "target", "type": "int"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "fp", "type": "float"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "tn", "type": "float"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "tp", "type": "float"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "fn", "type": "float"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "h", "type": "List[str]"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "encrypted_pred", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "h", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "encrypted_pred", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "paillier", "type": "module"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "spam", "type": "List[List[str]]"}, {"lineNumber": 184, "col_offset": 46, "nodeName": "ham", "type": "List[List[str]]"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "model", "type": "LogisticRegression"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "data_url", "type": "str"}, {"lineNumber": 27, "col_offset": 40, "nodeName": "ham_file", "type": "str"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "urlopen", "type": "Any"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "hamfile", "type": "file"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "data_url", "type": "str"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "spam_file", "type": "str"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "urlopen", "type": "Any"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "spamfile", "type": "file"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "row", "type": "str"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "row", "type": "str"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "word2index", "type": "Dict[str, int]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "iterations", "type": "int"}, {"lineNumber": 73, "col_offset": 70, "nodeName": "alpha", "type": "float"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "error", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "error", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "exp", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "x", "type": "Union[int, Any]"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "exp_t", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "encrypted", "type": "bool"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "weights", "type": "None"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "encrypted_predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "email", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "unencrypted_predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 44, "nodeName": "email", "type": "List[str]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "pubkey", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "encrypted_weights", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "weights", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "weights", "type": "Any"}, {"lineNumber": 137, "col_offset": 51, "nodeName": "delta", "type": "Any"}, {"lineNumber": 137, "col_offset": 59, "nodeName": "alpha", "type": "float"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "ham", "type": "List[List[str]]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 53, "nodeName": "h", "type": "List[str]"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "pred", "type": "Any"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "spam", "type": "List[List[str]]"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "h", "type": "List[str]"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "pred", "type": "Any"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 171, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 172, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "request", "type": "Any"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "data_url", "type": "str"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "ham_file", "type": "str"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "ham_file", "type": "str"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "request", "type": "Any"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "data_url", "type": "str"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "spam_file", "type": "str"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "spam_file", "type": "str"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "readlines", "type": "Callable[..., List[str]]"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "readlines", "type": "Callable[..., List[str]]"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "cnts", "type": "Counter[str]"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "cnts", "type": "Counter[str]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "word", "type": "str"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "rand", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "max", "type": "Callable"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "iter", "type": "int"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "exp_t", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "encrypted_model", "type": "LogisticRegression"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "decrypt", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "encrypted_pred", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "pred", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "tn", "type": "float"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "fp", "type": "float"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "encrypted_model", "type": "LogisticRegression"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "decrypt", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "encrypted_pred", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "pred", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "tp", "type": "float"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "fn", "type": "float"}, {"lineNumber": 169, "col_offset": 74, "nodeName": "fp", "type": "float"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "hamfile", "type": "file"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "read", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "spamfile", "type": "file"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "read", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "row", "type": "str"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "f", "type": "file"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "row", "type": "str"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "f", "type": "file"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "word", "type": "str"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "vocab", "type": "List[str]"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "positives", "type": "List[List[str]]"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 51, "nodeName": "negatives", "type": "List[List[str]]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "learn", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 77, "nodeName": "alpha", "type": "float"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "learn", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 77, "nodeName": "alpha", "type": "float"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "error", "type": "Union[int, Any]"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "exp", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "encrypted_weights", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "encrypt", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 66, "nodeName": "weight", "type": "Any"}, {"lineNumber": 123, "col_offset": 43, "nodeName": "word2index", "type": "Dict[Any, int]"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "word2index", "type": "Dict[str, int]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "word2index", "type": "Dict[str, int]"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "prikey", "type": "phe.paillier.PaillierPrivateKey"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "prikey", "type": "phe.paillier.PaillierPrivateKey"}, {"lineNumber": 169, "col_offset": 69, "nodeName": "fn", "type": "float"}, {"lineNumber": 171, "col_offset": 69, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 172, "col_offset": 85, "nodeName": "fp", "type": "float"}, {"lineNumber": 172, "col_offset": 90, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 173, "col_offset": 81, "nodeName": "fn", "type": "float"}, {"lineNumber": 173, "col_offset": 86, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "hamdata", "type": "Any"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "spamdata", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "positives", "type": "List[List[str]]"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "negatives", "type": "List[List[str]]"}, {"lineNumber": 85, "col_offset": 62, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 85, "col_offset": 68, "nodeName": "n", "type": "int"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "x", "type": "Union[int, Any]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "pubkey", "type": "phe.paillier.PaillierPublicKey"}, {"lineNumber": 123, "col_offset": 43, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 123, "col_offset": 59, "nodeName": "word", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 129, "col_offset": 49, "nodeName": "word", "type": "str"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "word", "type": "str"}, {"lineNumber": 169, "col_offset": 59, "nodeName": "tn", "type": "float"}, {"lineNumber": 169, "col_offset": 64, "nodeName": "tp", "type": "float"}, {"lineNumber": 171, "col_offset": 58, "nodeName": "tn", "type": "float"}, {"lineNumber": 171, "col_offset": 63, "nodeName": "tp", "type": "float"}, {"lineNumber": 171, "col_offset": 90, "nodeName": "fp", "type": "float"}, {"lineNumber": 172, "col_offset": 96, "nodeName": "tp", "type": "float"}, {"lineNumber": 172, "col_offset": 101, "nodeName": "fp", "type": "float"}, {"lineNumber": 173, "col_offset": 92, "nodeName": "tn", "type": "float"}, {"lineNumber": 173, "col_offset": 97, "nodeName": "fn", "type": "float"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "self", "type": "LogisticRegression"}, {"lineNumber": 171, "col_offset": 85, "nodeName": "fn", "type": "float"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 82, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 171, "col_offset": 75, "nodeName": "tn", "type": "float"}, {"lineNumber": 171, "col_offset": 80, "nodeName": "tp", "type": "float"}, {"lineNumber": 81, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 61, "nodeName": "positives", "type": "List[List[str]]"}, {"lineNumber": 82, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 61, "nodeName": "negatives", "type": "List[List[str]]"}]