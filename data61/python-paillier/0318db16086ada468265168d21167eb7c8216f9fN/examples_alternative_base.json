[{"lineNumber": 17, "col_offset": 0, "nodeName": "encode_and_encrypt_example", "type": "Callable[[], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "math_example", "type": "Callable[[], Any]"}, {"lineNumber": 8, "col_offset": 27, "nodeName": "EncodedNumber", "type": "Type[phe.encoding.EncodedNumber]"}, {"lineNumber": 8, "col_offset": 27, "nodeName": "encoding", "type": "module"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "BASE", "type": "int"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "LOG2_BASE", "type": "float"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "public_key", "type": "phe.paillier.PaillierPublicKey"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "private_key", "type": "phe.paillier.PaillierPrivateKey"}, {"lineNumber": 14, "col_offset": 26, "nodeName": "generate_paillier_keypair", "type": "Callable[..., Tuple[phe.paillier.PaillierPublicKey, phe.paillier.PaillierPrivateKey]]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "encoded", "type": "ExampleEncodedNumber"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "encrypted", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "decrypted_but_encoded", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "a", "type": "int"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "b", "type": "int"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "encoded_a", "type": "ExampleEncodedNumber"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "encoded_b", "type": "ExampleEncodedNumber"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "encrypted_a", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "encrypted_b", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "encrypted_c", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "decrypted_but_encoded", "type": "Any"}, {"lineNumber": 64, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 8, "col_offset": 27, "nodeName": "phe", "type": "module"}, {"lineNumber": 10, "col_offset": 16, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 10, "col_offset": 25, "nodeName": "BASE", "type": "int"}, {"lineNumber": 14, "col_offset": 26, "nodeName": "paillier", "type": "module"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "encode", "type": "Callable"}, {"lineNumber": 19, "col_offset": 42, "nodeName": "public_key", "type": "phe.paillier.PaillierPublicKey"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "encrypt", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 35, "nodeName": "encoded", "type": "ExampleEncodedNumber"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "decrypt_encoded", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "encrypted", "type": "Any"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "ExampleEncodedNumber", "type": "Type[ExampleEncodedNumber]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "encode", "type": "Callable"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "public_key", "type": "phe.paillier.PaillierPublicKey"}, {"lineNumber": 40, "col_offset": 56, "nodeName": "a", "type": "int"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "encode", "type": "Callable"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "public_key", "type": "phe.paillier.PaillierPublicKey"}, {"lineNumber": 41, "col_offset": 56, "nodeName": "b", "type": "int"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "a", "type": "int"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "b", "type": "int"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "encrypt", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "encoded_a", "type": "ExampleEncodedNumber"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "encrypt", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "encoded_b", "type": "ExampleEncodedNumber"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "encrypted_a", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "encrypted_b", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "decrypt_encoded", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "encrypted_c", "type": "Any"}, {"lineNumber": 56, "col_offset": 49, "nodeName": "ExampleEncodedNumber", "type": "Type[ExampleEncodedNumber]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "encode_and_encrypt_example", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "math_example", "type": "Callable[[], Any]"}, {"lineNumber": 10, "col_offset": 16, "nodeName": "math", "type": "module"}, {"lineNumber": 18, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 18, "col_offset": 84, "nodeName": "BASE", "type": "int"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "ExampleEncodedNumber", "type": "Type[ExampleEncodedNumber]"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "decode", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "public_key", "type": "phe.paillier.PaillierPublicKey"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "private_key", "type": "phe.paillier.PaillierPrivateKey"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 35, "col_offset": 64, "nodeName": "BASE", "type": "int"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "ExampleEncodedNumber", "type": "Type[ExampleEncodedNumber]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "ExampleEncodedNumber", "type": "Type[ExampleEncodedNumber]"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "decode", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "decode", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "public_key", "type": "phe.paillier.PaillierPublicKey"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "public_key", "type": "phe.paillier.PaillierPublicKey"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "private_key", "type": "phe.paillier.PaillierPrivateKey"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 84, "nodeName": "ExampleEncodedNumber", "type": "Type[ExampleEncodedNumber]"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "encoded", "type": "ExampleEncodedNumber"}, {"lineNumber": 35, "col_offset": 64, "nodeName": "ExampleEncodedNumber", "type": "Type[ExampleEncodedNumber]"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "encoded_a", "type": "ExampleEncodedNumber"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "encoded_b", "type": "ExampleEncodedNumber"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "decode", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "decode", "type": "Any"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "decrypted_but_encoded", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "a", "type": "int"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "b", "type": "int"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "decode", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "decrypted_but_encoded", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "decrypted_but_encoded", "type": "Any"}]