[{"lineNumber": 29, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "testPowMod", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "testInvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "testInvertNonPrime", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "testPrimeOverN", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "testIsqrt", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "PaillierUtilTest", "type": "Type[PaillierUtilTest]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "testExtendedEuclieanAlgorithm", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "testMillerRabin", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "testIsPrime", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "testEncodeDecodePositiveNonZeroInt", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "testFailToEncodeZero", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 125, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "p", "type": "int"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "a", "type": "int"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "p", "type": "int"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "HAVE_GMP", "type": "bool"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "HAVE_GMP", "type": "bool"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "HAVE_CRYPTO", "type": "bool"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "HAVE_CRYPTO", "type": "bool"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "HAVE_GMP", "type": "bool"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "HAVE_CRYPTO", "type": "bool"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "HAVE_GMP", "type": "bool"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "HAVE_GMP", "type": "bool"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "HAVE_CRYPTO", "type": "bool"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "HAVE_CRYPTO", "type": "bool"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "a", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "composite", "type": "int"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "composite", "type": "int"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "p", "type": "int"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "iinv", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "nsq", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "util", "type": "module"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "util", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "util", "type": "module"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "util", "type": "module"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "util", "type": "module"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "util", "type": "module"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "a", "type": "int"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "b", "type": "int"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilTest"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "powmod", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilTest"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "powmod", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "invert", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "p", "type": "int"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilTest"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "p", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilTest"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "getprimeover", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "getprimeover", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "n", "type": "int"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "n", "type": "int"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "extended_euclidean_algorithm", "type": "Callable"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "r", "type": "int"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "s", "type": "int"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "t", "type": "int"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "extended_euclidean_algorithm", "type": "Callable"}, {"lineNumber": 83, "col_offset": 56, "nodeName": "a", "type": "int"}, {"lineNumber": 83, "col_offset": 59, "nodeName": "b", "type": "int"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "r", "type": "int"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "r", "type": "int"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "miller_rabin", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "a", "type": "int"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "miller_rabin", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "a", "type": "int"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "first_primes", "type": "List[int]"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "first_primes", "type": "List[int]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "miller_rabin", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "composite", "type": "int"}, {"lineNumber": 92, "col_offset": 54, "nodeName": "a", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "is_prime", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "is_prime", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "is_prime", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "is_prime", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "is_prime", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "is_prime", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "is_prime", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "is_prime", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "is_prime", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "is_prime", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "is_prime", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "first_primes", "type": "List[int]"}, {"lineNumber": 109, "col_offset": 44, "nodeName": "first_primes", "type": "List[int]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "is_prime", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "composite", "type": "int"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "a", "type": "int"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "int_to_base64", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "util", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "PaillierUtilTest"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "p", "type": "int"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "a", "type": "int"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "util", "type": "module"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "util", "type": "module"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "PaillierUtilTest"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "PaillierUtilTest"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 60, "nodeName": "isqrt", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 71, "nodeName": "n", "type": "int"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "PaillierUtilTest"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "isqrt", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "nsq", "type": "int"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "improved_i_sqrt", "type": "Callable[[Any], int]"}, {"lineNumber": 58, "col_offset": 67, "nodeName": "nsq", "type": "int"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "util", "type": "module"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "PaillierUtilFallbacksTest"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "gcd", "type": "Any"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "a", "type": "int"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "b", "type": "int"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "util", "type": "module"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "util", "type": "module"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "util", "type": "module"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "util", "type": "module"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "util", "type": "module"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "util", "type": "module"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 109, "col_offset": 44, "nodeName": "util", "type": "module"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "Base64UtilTest"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "base64_to_int", "type": "Callable[[Any], int]"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "self", "type": "Base64UtilTest"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "util", "type": "module"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "iinv", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "invert", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "a", "type": "int"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "p", "type": "int"}, {"lineNumber": 51, "col_offset": 45, "nodeName": "n", "type": "int"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "floor", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 57, "col_offset": 60, "nodeName": "util", "type": "module"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "util", "type": "module"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "util", "type": "module"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "s", "type": "int"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "a", "type": "int"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "t", "type": "int"}, {"lineNumber": 84, "col_offset": 40, "nodeName": "b", "type": "int"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "util", "type": "module"}, {"lineNumber": 118, "col_offset": 51, "nodeName": "int_to_base64", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 70, "nodeName": "a", "type": "int"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "util", "type": "module"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "math", "type": "module"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 57, "col_offset": 54, "nodeName": "n", "type": "int"}, {"lineNumber": 118, "col_offset": 51, "nodeName": "util", "type": "module"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "math", "type": "module"}]