[{"lineNumber": 8, "col_offset": 16, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3, "col_offset": 0, "nodeName": "enable_eager_execution", "type": "Any"}, {"lineNumber": 8, "col_offset": 16, "nodeName": "test", "type": "Any"}, {"lineNumber": 34, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 3, "col_offset": 0, "nodeName": "v1", "type": "Any"}, {"lineNumber": 8, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "linear_idx", "type": "List[int]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "desired", "type": "List[List[int]]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "actual", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "linear_idx", "type": "List[int]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "desired", "type": "List[List[int]]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "actual", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "mat", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "desired", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "actual", "type": "Any"}, {"lineNumber": 35, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 3, "col_offset": 0, "nodeName": "compat", "type": "Any"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "unravel_index", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 33, "nodeName": "linear_idx", "type": "List[int]"}, {"lineNumber": 15, "col_offset": 45, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "desired", "type": "List[List[int]]"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "unravel_index", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 33, "nodeName": "linear_idx", "type": "List[int]"}, {"lineNumber": 21, "col_offset": 45, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "desired", "type": "List[List[int]]"}, {"lineNumber": 25, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "replace_tf_svd_with_np_svd", "type": "Callable[[], None]"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 35, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 3, "col_offset": 0, "nodeName": "tf", "type": "Any"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "utils", "type": "module"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 16, "col_offset": 33, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 16, "col_offset": 47, "nodeName": "actual", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "utils", "type": "module"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 22, "col_offset": 33, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 22, "col_offset": 47, "nodeName": "actual", "type": "Any"}, {"lineNumber": 25, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "svd", "type": "Any"}, {"lineNumber": 26, "col_offset": 42, "nodeName": "mat", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "svd", "type": "Any"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "mat", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "actual", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "desired", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "abs", "type": "Any"}, {"lineNumber": 30, "col_offset": 65, "nodeName": "eye", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "abs", "type": "Any"}, {"lineNumber": 31, "col_offset": 65, "nodeName": "eye", "type": "Any"}, {"lineNumber": 35, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 16, "col_offset": 33, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 22, "col_offset": 33, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "dot", "type": "Any"}, {"lineNumber": 30, "col_offset": 38, "nodeName": "T", "type": "Any"}, {"lineNumber": 30, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "dot", "type": "Any"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "T", "type": "Any"}, {"lineNumber": 31, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 51, "nodeName": "desired", "type": "Any"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 51, "nodeName": "desired", "type": "Any"}, {"lineNumber": 30, "col_offset": 38, "nodeName": "actual", "type": "Any"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "actual", "type": "Any"}]