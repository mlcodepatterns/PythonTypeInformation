[{"lineNumber": 7, "col_offset": 16, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 7, "col_offset": 16, "nodeName": "test", "type": "Any"}, {"lineNumber": 35, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 7, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 12, "col_offset": 6, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 13, "col_offset": 6, "nodeName": "linear_idx", "type": "List[int]"}, {"lineNumber": 14, "col_offset": 6, "nodeName": "desired", "type": "List[List[int]]"}, {"lineNumber": 15, "col_offset": 6, "nodeName": "actual", "type": "Any"}, {"lineNumber": 18, "col_offset": 6, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 19, "col_offset": 6, "nodeName": "linear_idx", "type": "List[int]"}, {"lineNumber": 20, "col_offset": 6, "nodeName": "desired", "type": "List[List[int]]"}, {"lineNumber": 21, "col_offset": 6, "nodeName": "actual", "type": "Any"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 26, "col_offset": 6, "nodeName": "mat", "type": "Any"}, {"lineNumber": 27, "col_offset": 6, "nodeName": "desired", "type": "Any"}, {"lineNumber": 29, "col_offset": 6, "nodeName": "actual", "type": "Any"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 10, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "unravel_index", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 35, "nodeName": "linear_idx", "type": "List[int]"}, {"lineNumber": 15, "col_offset": 47, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 16, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "desired", "type": "List[List[int]]"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "unravel_index", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "linear_idx", "type": "List[int]"}, {"lineNumber": 21, "col_offset": 47, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 22, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "desired", "type": "List[List[int]]"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "run", "type": "Any"}, {"lineNumber": 28, "col_offset": 6, "nodeName": "replace_tf_svd_with_np_svd", "type": "Callable[[], None]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 30, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 31, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 10, "col_offset": 9, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "utils", "type": "module"}, {"lineNumber": 16, "col_offset": 6, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 16, "col_offset": 35, "nodeName": "eval", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "utils", "type": "module"}, {"lineNumber": 22, "col_offset": 6, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "eval", "type": "Any"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "sess", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "svd", "type": "Any"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "mat", "type": "Any"}, {"lineNumber": 28, "col_offset": 6, "nodeName": "utils", "type": "module"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "svd", "type": "Any"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "mat", "type": "Any"}, {"lineNumber": 30, "col_offset": 6, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "actual", "type": "Any"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "desired", "type": "Any"}, {"lineNumber": 31, "col_offset": 6, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "abs", "type": "Any"}, {"lineNumber": 31, "col_offset": 67, "nodeName": "eye", "type": "Any"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "abs", "type": "Any"}, {"lineNumber": 32, "col_offset": 67, "nodeName": "eye", "type": "Any"}, {"lineNumber": 16, "col_offset": 35, "nodeName": "actual", "type": "Any"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "actual", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "dot", "type": "Any"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "T", "type": "Any"}, {"lineNumber": 31, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "dot", "type": "Any"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "T", "type": "Any"}, {"lineNumber": 32, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 53, "nodeName": "desired", "type": "Any"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "desired", "type": "Any"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "actual", "type": "Any"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "actual", "type": "Any"}]