[{"lineNumber": 10, "col_offset": 16, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "color", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "color", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "color", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "color", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "data", "type": "List[Dict[str, List[str]]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "created", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "created", "type": "Dict[nothing, nothing]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "label", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "created", "type": "Dict[nothing, nothing]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "label", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "created", "type": "Set[Tuple[str, None]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "saved", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "new", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "labels", "type": "List[List[str]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "docs", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "labels", "type": "List[List[str]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "saved_labels", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "labels", "type": "List[List[List[Union[int, str]]]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "docs", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "labels", "type": "List[List[List[Union[int, str]]]]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "saved_labels", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "docs", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "labels", "type": "List[List[str]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "words", "type": "List[str]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "tags", "type": "List[str]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "entities", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "Color", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "hex", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "Color", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "hex", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "Color", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "hex", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "extract_label", "type": "Any"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "data", "type": "List[Dict[str, List[str]]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "exclude_created_labels", "type": "Any"}, {"lineNumber": 41, "col_offset": 52, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 60, "nodeName": "created", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "to_serializer_format", "type": "Any"}, {"lineNumber": 49, "col_offset": 50, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "created", "type": "Dict[nothing, nothing]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "get_shortkey", "type": "Any"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "label", "type": "str"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "created", "type": "Dict[nothing, nothing]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "get_shortkey", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "label", "type": "str"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "created", "type": "Set[Tuple[str, None]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "update_saved_labels", "type": "Any"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "saved", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 56, "nodeName": "new", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "text_color", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "extract_unique_labels", "type": "Any"}, {"lineNumber": 88, "col_offset": 61, "nodeName": "labels", "type": "List[List[str]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "actual", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "make_annotations", "type": "Any"}, {"lineNumber": 97, "col_offset": 56, "nodeName": "docs", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 62, "nodeName": "labels", "type": "List[List[str]]"}, {"lineNumber": 97, "col_offset": 70, "nodeName": "saved_labels", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "actual", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "extract_unique_labels", "type": "Any"}, {"lineNumber": 111, "col_offset": 63, "nodeName": "labels", "type": "List[List[List[Union[int, str]]]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "actual", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "make_annotations", "type": "Any"}, {"lineNumber": 120, "col_offset": 58, "nodeName": "docs", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 64, "nodeName": "labels", "type": "List[List[List[Union[int, str]]]]"}, {"lineNumber": 120, "col_offset": 72, "nodeName": "saved_labels", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "make_annotations", "type": "Any"}, {"lineNumber": 133, "col_offset": 49, "nodeName": "docs", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 55, "nodeName": "labels", "type": "List[List[str]]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "get_entities", "type": "Any"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "tags", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "calc_char_offset", "type": "Any"}, {"lineNumber": 148, "col_offset": 46, "nodeName": "words", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 53, "nodeName": "tags", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "entities", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "Color", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestColor"}, {"lineNumber": 13, "col_offset": 29, "nodeName": "red", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TestColor"}, {"lineNumber": 14, "col_offset": 29, "nodeName": "green", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestColor"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "blue", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestColor"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "color", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestColor"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "contrast_color", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestColor"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "contrast_color", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "BaseStorage", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestBaseStorage"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "Label", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "BaseStorage", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestBaseStorage"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "BaseStorage", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestBaseStorage"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "BaseStorage", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestBaseStorage"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "BaseStorage", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestBaseStorage"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "Label", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "Label", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "BaseStorage", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestBaseStorage"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "ClassificationStorage", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestClassificationStorage"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "Document", "type": "Any"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "Document", "type": "Any"}, {"lineNumber": 93, "col_offset": 68, "nodeName": "Document", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "Label", "type": "Any"}, {"lineNumber": 95, "col_offset": 78, "nodeName": "Label", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "ClassificationStorage", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestClassificationStorage"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "SequenceLabelingStorage", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestSequenceLabelingStorage"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "Document", "type": "Any"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "Document", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "Label", "type": "Any"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "Label", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "SequenceLabelingStorage", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestSequenceLabelingStorage"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "Document", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "Document", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "Seq2seqStorage", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestSeq2seqStorage"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "CoNLLParser", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestCoNLLParser"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestCoNLLParser"}, {"lineNumber": 13, "col_offset": 29, "nodeName": "color", "type": "Any"}, {"lineNumber": 14, "col_offset": 29, "nodeName": "color", "type": "Any"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "color", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "color", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "color", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "actual", "type": "Any"}]