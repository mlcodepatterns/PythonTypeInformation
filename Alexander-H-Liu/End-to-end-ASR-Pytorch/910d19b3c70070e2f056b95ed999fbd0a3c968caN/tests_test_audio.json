[{"lineNumber": 8, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "test_filter_bank", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "test_mfcc", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_cmvn", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_delta", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "test_delta_delta", "type": "Callable[[Any], Any]"}, {"lineNumber": 8, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "filepath", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "y_no_delta", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "TestAudio"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "create_transform", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 22, "col_offset": 46, "nodeName": "audio_config", "type": "Dict[str, Union[str, int, bool]]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "filepath", "type": "str"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "skipTest", "type": "Callable[[Any], None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "create_transform", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "audio_config", "type": "Dict[str, Union[str, int, bool]]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "filepath", "type": "str"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "create_transform", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "audio_config", "type": "Dict[str, Union[str, int, bool]]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "filepath", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "create_transform", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "audio_config", "type": "Dict[str, Union[str, int, float, bool]]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "filepath", "type": "str"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "create_transform", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "audio_config", "type": "Dict[str, Union[str, int, float, bool]]"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "transform", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "filepath", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "y_no_delta", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "create_transform", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "audio_config", "type": "Dict[str, Union[str, int, bool]]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "filepath", "type": "str"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "audio", "type": "module"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "self", "type": "TestAudio"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestAudio"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 24, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 24, "col_offset": 46, "nodeName": "d", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestAudio"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "audio", "type": "module"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "self", "type": "TestAudio"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestAudio"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "d", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "audio", "type": "module"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "self", "type": "TestAudio"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestAudio"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "d", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "mean", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "std", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "audio", "type": "module"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "self", "type": "TestAudio"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestAudio"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 46, "nodeName": "d", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "audio", "type": "module"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "self", "type": "TestAudio"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "audio", "type": "module"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "self", "type": "TestAudio"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestAudio"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "d", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 10, "col_offset": 14, "nodeName": "TestAudio", "type": "Type[TestAudio]"}, {"lineNumber": 10, "col_offset": 25, "nodeName": "self", "type": "TestAudio"}, {"lineNumber": 24, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "y", "type": "Any"}]