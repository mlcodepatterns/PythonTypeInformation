[{"lineNumber": 116, "col_offset": 0, "nodeName": "beam_decode", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 13, "col_offset": 13, "nodeName": "BaseSolver", "type": "Type[src.solver.BaseSolver]"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "feat", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "feat_len", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "txt", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "txt_len", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "hyp_seqs", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "output_file", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "greedy", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "feat", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "feat_len", "type": "Any"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "txt", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "to", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "to", "type": "Any"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "device", "type": "Any"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "to", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "device", "type": "Any"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "sum", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "to", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "device", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "hyps", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "outIndex", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "hyp_seqs", "type": "List[Any]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 17, "col_offset": 33, "nodeName": "paras", "type": "Any"}, {"lineNumber": 17, "col_offset": 40, "nodeName": "mode", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "src_config", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Solver"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Solver"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "greedy", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 42, "col_offset": 82, "nodeName": "msg", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "load_dataset", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Tuple[Any, Any, Any, Any, Any, Any]]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "njobs", "type": "Any"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "pin_memory", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "verbose", "type": "Callable[[Any], None]"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "msg", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Solver"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "ASR", "type": "Type[src.asr.ASR]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "feat_dim", "type": "Any"}, {"lineNumber": 50, "col_offset": 40, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "load_ckpt", "type": "Callable[[], None]"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "BeamDecoder", "type": "Type[src.decode.BeamDecoder]"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "emb_decoder", "type": "src.plugin.EmbeddingRegularizer"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "verbose", "type": "Callable[[Any], None]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "Solver"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "Solver"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "s", "type": "nothing"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "ds", "type": "nothing"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "cur_output_path", "type": "str"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "greedy", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "verbose", "type": "Callable[[Any], None]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "hyp_seqs", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "truth", "type": "Any"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "results", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "hyp_seqs", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "truth", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "feat", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "feat_len", "type": "Any"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "txt", "type": "Any"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "txt", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "feat", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "feat_len", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "hyp", "type": "Any"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "hyp", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "hyps", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "src_config", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "src_config", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Solver"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "self", "type": "Solver"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "ckpdir", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "self", "type": "Solver"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "paras", "type": "Any"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "paras", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "paras", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Solver"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "self", "type": "Solver"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "EmbeddingRegularizer", "type": "Type[src.plugin.EmbeddingRegularizer]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "dec_dim", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Solver"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "self", "type": "Solver"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Solver"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "create_msg", "type": "Callable[[], List[str]]"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "dv_set", "type": "Any"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "tt_set", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "Solver"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 74, "col_offset": 59, "nodeName": "s", "type": "nothing"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "self", "type": "Solver"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "cur_beam_path", "type": "str"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "beam_decode_func", "type": "functools.partial[nothing]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "results", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Solver"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "decode", "type": "Any"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "truth", "type": "Any"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "greedy", "type": "Any"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "torch", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 21, "col_offset": 48, "nodeName": "src_config", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "Solver"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "self", "type": "Solver"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Solver"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "self", "type": "Solver"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "self", "type": "Solver"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "self", "type": "Solver"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "self", "type": "Solver"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "self", "type": "Solver"}, {"lineNumber": 44, "col_offset": 57, "nodeName": "config", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "self", "type": "Solver"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "config", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "self", "type": "Solver"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "model", "type": "src.asr.ASR"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "model", "type": "src.asr.ASR"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "config", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "decoder", "type": "src.decode.BeamDecoder"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "self", "type": "Solver"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "self", "type": "Solver"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "output_file", "type": "str"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "cur_output_path", "type": "str"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "verbose", "type": "Callable[[Any], None]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "verbose", "type": "Callable[[Any], None]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "self", "type": "Solver"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 86, "col_offset": 61, "nodeName": "s", "type": "nothing"}, {"lineNumber": 87, "col_offset": 54, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "verbose", "type": "Callable[[Any], None]"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "beam_decode", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "verbose", "type": "Callable[[Any], None]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "write_hyp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "results", "type": "Any"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "cur_output_path", "type": "str"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "cur_beam_path", "type": "str"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "decode", "type": "Any"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "hyp", "type": "Any"}, {"lineNumber": 106, "col_offset": 55, "nodeName": "hyp", "type": "Any"}, {"lineNumber": 106, "col_offset": 62, "nodeName": "hyp_seqs", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "best_path", "type": "str"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "self", "type": "Solver"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 20, "col_offset": 56, "nodeName": "src_config", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "Solver"}, {"lineNumber": 21, "col_offset": 48, "nodeName": "self", "type": "Solver"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Solver"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "self", "type": "Solver"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 44, "col_offset": 57, "nodeName": "self", "type": "Solver"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "self", "type": "Solver"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "self", "type": "Solver"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "self", "type": "Solver"}, {"lineNumber": 58, "col_offset": 54, "nodeName": "config", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "Solver"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "self", "type": "Solver"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "self", "type": "Solver"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "self", "type": "Solver"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "self", "type": "Solver"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "self", "type": "Solver"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 81, "col_offset": 97, "nodeName": "s", "type": "nothing"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "self", "type": "Solver"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "cur_output_path", "type": "str"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "output_file", "type": "str"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "open", "type": "Callable"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "cur_beam_path", "type": "str"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "write", "type": "Callable"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "self", "type": "Solver"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 90, "col_offset": 110, "nodeName": "s", "type": "nothing"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "device", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "Parallel", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "self", "type": "Solver"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 98, "col_offset": 70, "nodeName": "cur_output_path", "type": "str"}, {"lineNumber": 98, "col_offset": 92, "nodeName": "cur_beam_path", "type": "str"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "self", "type": "Solver"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "self", "type": "Solver"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "self", "type": "Solver"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "self", "type": "Solver"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "open", "type": "Callable"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "beam_path", "type": "str"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "b", "type": "int"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "hyp", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "hyp_seqs", "type": "List[Any]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "self", "type": "Solver"}, {"lineNumber": 20, "col_offset": 56, "nodeName": "self", "type": "Solver"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "self", "type": "Solver"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "self", "type": "Solver"}, {"lineNumber": 58, "col_offset": 54, "nodeName": "self", "type": "Solver"}, {"lineNumber": 81, "col_offset": 100, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 104, "nodeName": "ds", "type": "nothing"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "self", "type": "Solver"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "self", "type": "Solver"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "self", "type": "Solver"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 92, "col_offset": 62, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "self", "type": "Solver"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "njobs", "type": "Any"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "data", "type": "Any"}, {"lineNumber": 98, "col_offset": 70, "nodeName": "self", "type": "Solver"}, {"lineNumber": 98, "col_offset": 92, "nodeName": "self", "type": "Solver"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "self", "type": "Solver"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "write", "type": "Callable"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "txt", "type": "Any"}, {"lineNumber": 92, "col_offset": 62, "nodeName": "copy", "type": "module"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "self", "type": "Solver"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "paras", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "delayed", "type": "Any"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "beam_decode_func", "type": "functools.partial[nothing]"}, {"lineNumber": 96, "col_offset": 64, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 96, "col_offset": 69, "nodeName": "ds", "type": "nothing"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 109, "col_offset": 54, "nodeName": "truth", "type": "Any"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "self", "type": "Solver"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "hyp_seqs", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "join", "type": "Callable"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 113, "col_offset": 57, "nodeName": "hyp", "type": "Any"}, {"lineNumber": 113, "col_offset": 62, "nodeName": "truth", "type": "Any"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "b", "type": "int"}]