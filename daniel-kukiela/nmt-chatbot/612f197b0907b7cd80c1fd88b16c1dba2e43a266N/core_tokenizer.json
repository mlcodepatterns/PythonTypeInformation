[{"lineNumber": 49, "col_offset": 0, "nodeName": "tokenize", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "replace", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 0, "nodeName": "detokenize", "type": "Callable[[Any], Any]"}, {"lineNumber": 222, "col_offset": 0, "nodeName": "sentence_split", "type": "Callable[[Any], Any]"}, {"lineNumber": 238, "col_offset": 0, "nodeName": "apply_bpe_load", "type": "Callable[[], Any]"}, {"lineNumber": 246, "col_offset": 0, "nodeName": "apply_bpe_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 0, "nodeName": "apply_bpe", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "matched_regexes", "type": "List[Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "unmatched_regexes", "type": "List[Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "phrase", "type": "None"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "protected_phrase_regex", "type": "None"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "protected_phrase_regex", "type": "Any"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "protected_phrases_regex", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 3, "nodeName": "protected_phrase_regex", "type": "Any"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "protected_phrases_replace", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "protected_phrases_counter", "type": "int"}, {"lineNumber": 221, "col_offset": 0, "nodeName": "re_split", "type": "Any"}, {"lineNumber": 245, "col_offset": 0, "nodeName": "joins", "type": "List[nothing]"}, {"lineNumber": 251, "col_offset": 0, "nodeName": "sentence_cache", "type": "Dict[Any, str]"}, {"lineNumber": 12, "col_offset": 77, "nodeName": "protected_file", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "protected_phrases_regex", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "matched_regex", "type": "Any"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "matched_regex", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "protected_phrases_replace", "type": "List[nothing]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "protected_phrases_counter", "type": "int"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "protected_periods_counter", "type": "int"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "m", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 136, "col_offset": 7, "nodeName": "protected_phrases_counter", "type": "int"}, {"lineNumber": 138, "col_offset": 7, "nodeName": "protected_periods_counter", "type": "int"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "phrase", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "space", "type": "str"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "replacement", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "protected_phrases_counter", "type": "int"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "replacement", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "detokenized_answers", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "answer", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "answers", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "detokenized_answers", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "compile", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "line", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "line", "type": "Any"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "joins", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "joins_data", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "entities", "type": "Union[Any, List[Any]]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "new_sentence", "type": "List[Any]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "entity", "type": "Any"}, {"lineNumber": 266, "col_offset": 18, "nodeName": "entities", "type": "Union[Any, List[Any]]"}, {"lineNumber": 12, "col_offset": 5, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 13, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "search", "type": "Any"}, {"lineNumber": 22, "col_offset": 72, "nodeName": "protected_phrase_regex", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "compile", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "compile", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "phrase", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "phrase", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "compile", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "compile", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "compile", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "compile", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "compile", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "compile", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "compile", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "compile", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "unescape", "type": "Any"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "strip", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "sub", "type": "Any"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "findall", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "space", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "protected_periods_counter", "type": "int"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "dots", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "strip", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "sub", "type": "Any"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 91, "col_offset": 7, "nodeName": "preprocessing", "type": "Dict[str, Optional[Union[int, str]]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "words", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "sentence", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "word", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "words", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "sentence", "type": "str"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "sentence", "type": "str"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "replace", "type": "Any"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "phrase", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "phrase", "type": "Any"}, {"lineNumber": 157, "col_offset": 7, "nodeName": "preprocessing", "type": "Dict[str, Optional[Union[int, str]]]"}, {"lineNumber": 158, "col_offset": 82, "nodeName": "answers_detokenize_file", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "answers_detokenize_regex", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 7, "nodeName": "preprocessing", "type": "Dict[str, Optional[Union[int, str]]]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "answers", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "detokenize_regex", "type": "Any"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "answers_detokenize_regex", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "answer", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "re", "type": "Any"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "sub", "type": "Any"}, {"lineNumber": 232, "col_offset": 41, "nodeName": "line", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 239, "col_offset": 188, "nodeName": "bpe_file", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "joins", "type": "Dict[Tuple[Any, ...], Any]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "apply_bpe_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "joins", "type": "Dict[Tuple[Any, ...], Any]"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "sentence_split", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "original_entity", "type": "Any"}, {"lineNumber": 269, "col_offset": 26, "nodeName": "entity", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "entity", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "prev_char", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "char", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "nentity", "type": "str"}, {"lineNumber": 330, "col_offset": 42, "nodeName": "nentity", "type": "str"}, {"lineNumber": 333, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "new_sentence", "type": "List[Any]"}, {"lineNumber": 12, "col_offset": 10, "nodeName": "preprocessing", "type": "Dict[str, Optional[Union[int, str]]]"}, {"lineNumber": 13, "col_offset": 35, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "re", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "protected_phrase_regex", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "re", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "re", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "re", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "re", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "re", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "re", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "re", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "re", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "re", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "re", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "html", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 72, "col_offset": 7, "nodeName": "regex", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "search", "type": "Any"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "sub", "type": "Any"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "replace", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "preprocessing", "type": "Dict[str, Optional[Union[int, str]]]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "sub", "type": "Any"}, {"lineNumber": 97, "col_offset": 50, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "sub", "type": "Any"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "sentence", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "sub", "type": "Any"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "sentence", "type": "str"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "sub", "type": "Any"}, {"lineNumber": 132, "col_offset": 53, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "sub", "type": "Any"}, {"lineNumber": 137, "col_offset": 147, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "sub", "type": "Any"}, {"lineNumber": 139, "col_offset": 128, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "preprocessing", "type": "Dict[str, Optional[Union[int, str]]]"}, {"lineNumber": 151, "col_offset": 50, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 151, "col_offset": 76, "nodeName": "space", "type": "str"}, {"lineNumber": 151, "col_offset": 83, "nodeName": "protected_phrases_counter", "type": "int"}, {"lineNumber": 151, "col_offset": 110, "nodeName": "space", "type": "str"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "protected_phrases_replace", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "diffrence", "type": "int"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "replace", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "answer", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "preprocessing", "type": "Dict[str, Optional[Union[int, str]]]"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "split", "type": "Any"}, {"lineNumber": 231, "col_offset": 23, "nodeName": "replace", "type": "Any"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "re_split", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 240, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "preprocessing", "type": "Dict[str, Optional[Union[int, str]]]"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "original_entity", "type": "Any"}, {"lineNumber": 270, "col_offset": 30, "nodeName": "sentence_cache", "type": "Dict[Any, str]"}, {"lineNumber": 275, "col_offset": 17, "nodeName": "split", "type": "Any"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "entity", "type": "Any"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "entity", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "prev_char", "type": "Any"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "char", "type": "Any"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "subjoins", "type": "Dict[Tuple[Any, Any], Any]"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "pair", "type": "Any"}, {"lineNumber": 303, "col_offset": 28, "nodeName": "pair", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "new_pair", "type": "Any"}, {"lineNumber": 328, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 329, "col_offset": 28, "nodeName": "nentity", "type": "str"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "sentence_cache", "type": "Dict[Any, str]"}, {"lineNumber": 13, "col_offset": 90, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "matched_regexes", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "group", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "unmatched_regexes", "type": "List[Any]"}, {"lineNumber": 28, "col_offset": 90, "nodeName": "matched_regexes", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 68, "nodeName": "unmatched_regexes", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "regex", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "regex", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "preprocessing", "type": "Dict[str, Optional[Union[int, str]]]"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "m", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "replace", "type": "Any"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "dots", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "regex", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "replace", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "word", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "sentence", "type": "str"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "group", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "preprocessing", "type": "Dict[str, Optional[Union[int, str]]]"}, {"lineNumber": 159, "col_offset": 40, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "search", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "detokenize_regex", "type": "Any"}, {"lineNumber": 181, "col_offset": 43, "nodeName": "answer", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "regex", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "regex", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "answer", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "detokenized_answers", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 49, "nodeName": "escape", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 239, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 275, "col_offset": 17, "nodeName": "entity", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 293, "col_offset": 24, "nodeName": "pair", "type": "Tuple[Any, Any]"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "min", "type": "Callable"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "subjoins", "type": "Dict[Tuple[Any, Any], Any]"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "first", "type": "Any"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "second", "type": "Any"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "first", "type": "Any"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "second", "type": "Any"}, {"lineNumber": 309, "col_offset": 18, "nodeName": "pair", "type": "Any"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "index", "type": "int"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "first", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "new_sentence", "type": "List[Any]"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "original_entity", "type": "Any"}, {"lineNumber": 13, "col_offset": 103, "nodeName": "split", "type": "Any"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "matched_regex", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "regex", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "regex", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 81, "col_offset": 72, "nodeName": "space", "type": "str"}, {"lineNumber": 81, "col_offset": 90, "nodeName": "space", "type": "str"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "regex", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "regex", "type": "Dict[str, Any]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "word", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "word", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "sentence", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "regex", "type": "Dict[str, Any]"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "regex", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "regex", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 62, "nodeName": "protected_phrases_replace", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "regex", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "entity", "type": "Any"}, {"lineNumber": 159, "col_offset": 95, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "re", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "compile", "type": "Any"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "detokenize_regex", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "finditer", "type": "Any"}, {"lineNumber": 185, "col_offset": 40, "nodeName": "answer", "type": "Any"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "compile", "type": "Any"}, {"lineNumber": 200, "col_offset": 35, "nodeName": "detokenize_regex", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "finditer", "type": "Any"}, {"lineNumber": 201, "col_offset": 40, "nodeName": "answer", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "replace_from", "type": "Any"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "replace_to", "type": "Any"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "position", "type": "Any"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "diffrence", "type": "int"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "answer", "type": "Any"}, {"lineNumber": 221, "col_offset": 49, "nodeName": "re", "type": "Any"}, {"lineNumber": 231, "col_offset": 23, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 235, "col_offset": 89, "nodeName": "strip", "type": "Any"}, {"lineNumber": 235, "col_offset": 107, "nodeName": "token", "type": "Any"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "preprocessing", "type": "Dict[str, Optional[Union[int, str]]]"}, {"lineNumber": 239, "col_offset": 60, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 240, "col_offset": 23, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 240, "col_offset": 45, "nodeName": "k", "type": "Any"}, {"lineNumber": 240, "col_offset": 48, "nodeName": "v", "type": "Any"}, {"lineNumber": 240, "col_offset": 53, "nodeName": "items", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "new_sentence", "type": "List[Any]"}, {"lineNumber": 271, "col_offset": 32, "nodeName": "sentence_cache", "type": "Dict[Any, str]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "prev_char", "type": "Any"}, {"lineNumber": 281, "col_offset": 37, "nodeName": "char", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "new_sentence", "type": "List[Any]"}, {"lineNumber": 286, "col_offset": 32, "nodeName": "entity", "type": "Any"}, {"lineNumber": 293, "col_offset": 29, "nodeName": "joins", "type": "List[nothing]"}, {"lineNumber": 293, "col_offset": 45, "nodeName": "pair", "type": "Tuple[Any, Any]"}, {"lineNumber": 293, "col_offset": 53, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "get", "type": "Callable"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "pair", "type": "Any"}, {"lineNumber": 299, "col_offset": 27, "nodeName": "pair", "type": "Any"}, {"lineNumber": 299, "col_offset": 39, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 312, "col_offset": 36, "nodeName": "pair", "type": "Any"}, {"lineNumber": 315, "col_offset": 19, "nodeName": "index", "type": "int"}, {"lineNumber": 317, "col_offset": 19, "nodeName": "index", "type": "int"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 328, "col_offset": 57, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 28, "col_offset": 60, "nodeName": "join", "type": "Callable"}, {"lineNumber": 28, "col_offset": 69, "nodeName": "matched_regexes", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 81, "col_offset": 79, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 83, "nodeName": "dots", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "word", "type": "Any"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "m", "type": "Any"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "search", "type": "Any"}, {"lineNumber": 113, "col_offset": 55, "nodeName": "m", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "m", "type": "Any"}, {"lineNumber": 139, "col_offset": 69, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "groups", "type": "Any"}, {"lineNumber": 159, "col_offset": 108, "nodeName": "split", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "re", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "regex", "type": "Any"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "groups", "type": "Any"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "detokenize_regex", "type": "Any"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "re", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "regex", "type": "Any"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "replace", "type": "Any"}, {"lineNumber": 206, "col_offset": 44, "nodeName": "diffrence", "type": "int"}, {"lineNumber": 235, "col_offset": 89, "nodeName": "token", "type": "Any"}, {"lineNumber": 235, "col_offset": 116, "nodeName": "split", "type": "Any"}, {"lineNumber": 240, "col_offset": 23, "nodeName": "json", "type": "module"}, {"lineNumber": 271, "col_offset": 47, "nodeName": "original_entity", "type": "Any"}, {"lineNumber": 293, "col_offset": 35, "nodeName": "pair", "type": "Tuple[Any, Any]"}, {"lineNumber": 293, "col_offset": 62, "nodeName": "pair", "type": "Tuple[Any, Any]"}, {"lineNumber": 293, "col_offset": 70, "nodeName": "joins", "type": "List[nothing]"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "subjoins", "type": "Dict[Tuple[Any, Any], Any]"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 316, "col_offset": 61, "nodeName": "new_pair", "type": "Any"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 318, "col_offset": 40, "nodeName": "new_pair", "type": "Any"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 320, "col_offset": 20, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 320, "col_offset": 32, "nodeName": "new_pair", "type": "Any"}, {"lineNumber": 322, "col_offset": 24, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 328, "col_offset": 39, "nodeName": "first", "type": "Any"}, {"lineNumber": 328, "col_offset": 46, "nodeName": "second", "type": "Any"}, {"lineNumber": 13, "col_offset": 64, "nodeName": "word", "type": "Any"}, {"lineNumber": 13, "col_offset": 103, "nodeName": "read", "type": "Any"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "unmatched_regexes", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 88, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 139, "col_offset": 73, "nodeName": "replace", "type": "Any"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "entity", "type": "Any"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "group", "type": "Any"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 192, "col_offset": 50, "nodeName": "groups", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "position", "type": "Any"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "answer", "type": "Any"}, {"lineNumber": 197, "col_offset": 43, "nodeName": "replace", "type": "Any"}, {"lineNumber": 204, "col_offset": 35, "nodeName": "groups", "type": "Any"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "start", "type": "Any"}, {"lineNumber": 207, "col_offset": 54, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 207, "col_offset": 58, "nodeName": "replace_to", "type": "Any"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "answer", "type": "Any"}, {"lineNumber": 210, "col_offset": 49, "nodeName": "replace", "type": "Any"}, {"lineNumber": 210, "col_offset": 75, "nodeName": "replace_from", "type": "Any"}, {"lineNumber": 210, "col_offset": 89, "nodeName": "replace_to", "type": "Any"}, {"lineNumber": 235, "col_offset": 63, "nodeName": "line", "type": "Any"}, {"lineNumber": 235, "col_offset": 116, "nodeName": "line", "type": "Any"}, {"lineNumber": 239, "col_offset": 99, "nodeName": "preprocessing", "type": "Dict[str, Optional[Union[int, str]]]"}, {"lineNumber": 240, "col_offset": 53, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 63, "nodeName": "bpe_file", "type": "Any"}, {"lineNumber": 317, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 317, "col_offset": 31, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 322, "col_offset": 30, "nodeName": "index", "type": "int"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 13, "col_offset": 103, "nodeName": "protected_file", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "regex", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 92, "nodeName": "replace", "type": "Any"}, {"lineNumber": 159, "col_offset": 69, "nodeName": "word", "type": "Any"}, {"lineNumber": 159, "col_offset": 108, "nodeName": "read", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "groups", "type": "Any"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "groups", "type": "Any"}, {"lineNumber": 197, "col_offset": 43, "nodeName": "detokenize_regex", "type": "Any"}, {"lineNumber": 204, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 207, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "replace_from", "type": "Any"}, {"lineNumber": 210, "col_offset": 37, "nodeName": "position", "type": "Any"}, {"lineNumber": 235, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 235, "col_offset": 49, "nodeName": "line", "type": "Any"}, {"lineNumber": 240, "col_offset": 53, "nodeName": "json", "type": "module"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "index", "type": "int"}, {"lineNumber": 316, "col_offset": 40, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "index", "type": "int"}, {"lineNumber": 318, "col_offset": 50, "nodeName": "pairs", "type": "List[Union[Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 139, "col_offset": 73, "nodeName": "replace", "type": "Any"}, {"lineNumber": 159, "col_offset": 108, "nodeName": "answers_detokenize_file", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "p", "type": "Any"}, {"lineNumber": 193, "col_offset": 39, "nodeName": "start", "type": "Any"}, {"lineNumber": 193, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "answer", "type": "Any"}, {"lineNumber": 194, "col_offset": 57, "nodeName": "replace", "type": "Any"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "groups", "type": "Any"}, {"lineNumber": 210, "col_offset": 49, "nodeName": "answer", "type": "Any"}, {"lineNumber": 137, "col_offset": 92, "nodeName": "replace", "type": "Any"}, {"lineNumber": 193, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 194, "col_offset": 45, "nodeName": "position", "type": "Any"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "p", "type": "Any"}, {"lineNumber": 210, "col_offset": 56, "nodeName": "position", "type": "Any"}, {"lineNumber": 316, "col_offset": 46, "nodeName": "index", "type": "int"}, {"lineNumber": 318, "col_offset": 56, "nodeName": "index", "type": "int"}, {"lineNumber": 139, "col_offset": 73, "nodeName": "group", "type": "Any"}, {"lineNumber": 194, "col_offset": 57, "nodeName": "answer", "type": "Any"}, {"lineNumber": 137, "col_offset": 92, "nodeName": "group", "type": "Any"}, {"lineNumber": 139, "col_offset": 73, "nodeName": "number", "type": "Any"}, {"lineNumber": 194, "col_offset": 64, "nodeName": "position", "type": "Any"}, {"lineNumber": 137, "col_offset": 92, "nodeName": "number", "type": "Any"}]