[{"lineNumber": 14, "col_offset": 0, "nodeName": "score_answers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "replace_in_answers", "type": "Callable[[Any], Any]"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "answers_blacklist", "type": "None"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "vocab_blacklist", "type": "None"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "answers_replace", "type": "None"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "vocab_replace", "type": "None"}, {"lineNumber": 10, "col_offset": 77, "nodeName": "answers_blacklist_file", "type": "TextIO"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "answers_blacklist", "type": "List[Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "answers_rate", "type": "List[int]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "answer", "type": "Any"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "answers", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "answers_rate", "type": "List[int]"}, {"lineNumber": 34, "col_offset": 75, "nodeName": "answers_replace_file", "type": "TextIO"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "answers_replace", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "replaces_answers", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "answer", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "answers", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "replaces_answers", "type": "List[Any]"}, {"lineNumber": 10, "col_offset": 5, "nodeName": "open", "type": "Callable"}, {"lineNumber": 11, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 34, "col_offset": 5, "nodeName": "open", "type": "Callable"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "replace", "type": "Any"}, {"lineNumber": 10, "col_offset": 10, "nodeName": "preprocessing", "type": "Dict[str, Optional[Union[int, str]]]"}, {"lineNumber": 11, "col_offset": 29, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "search", "type": "Callable"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "answer", "type": "Any"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "preprocessing", "type": "Dict[str, Optional[Union[int, str]]]"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "diffrence", "type": "int"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "replace", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "replace_from", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "replace_to", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "answer", "type": "Any"}, {"lineNumber": 11, "col_offset": 84, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 35, "col_offset": 82, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "split", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "strip", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "strip", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "search", "type": "Callable"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "replace_from", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "answer", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "regex", "type": "Pattern[Any]"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "p", "type": "Match[Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "replaces_answers", "type": "List[Any]"}, {"lineNumber": 11, "col_offset": 97, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "answers_rate", "type": "List[int]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 35, "col_offset": 95, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "replace", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "replace_from", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "finditer", "type": "Callable"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "answer", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "replace_from", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "position", "type": "int"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "diffrence", "type": "int"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "answer", "type": "Any"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "search", "type": "Callable"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "regex", "type": "Any"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "answer", "type": "Any"}, {"lineNumber": 22, "col_offset": 46, "nodeName": "regex", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "answers_rate", "type": "List[int]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "answers_rate", "type": "List[int]"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "replace", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "replace", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "re", "type": "module"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "regex", "type": "Pattern[Any]"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "diffrence", "type": "int"}, {"lineNumber": 11, "col_offset": 58, "nodeName": "word", "type": "Any"}, {"lineNumber": 11, "col_offset": 97, "nodeName": "read", "type": "Callable"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 22, "col_offset": 55, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 56, "nodeName": "word", "type": "Any"}, {"lineNumber": 35, "col_offset": 95, "nodeName": "read", "type": "Callable"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "groups", "type": "Callable"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "start", "type": "Callable[..., int]"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 58, "nodeName": "replace_to", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "answer", "type": "Any"}, {"lineNumber": 66, "col_offset": 49, "nodeName": "replace", "type": "Any"}, {"lineNumber": 66, "col_offset": 75, "nodeName": "replace_from", "type": "Any"}, {"lineNumber": 66, "col_offset": 89, "nodeName": "replace_to", "type": "Any"}, {"lineNumber": 11, "col_offset": 97, "nodeName": "answers_blacklist_file", "type": "TextIO"}, {"lineNumber": 35, "col_offset": 95, "nodeName": "answers_replace_file", "type": "TextIO"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "p", "type": "Match[Any]"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "p", "type": "Match[Any]"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "replace_from", "type": "Any"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "position", "type": "int"}, {"lineNumber": 66, "col_offset": 49, "nodeName": "answer", "type": "Any"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "position", "type": "int"}]