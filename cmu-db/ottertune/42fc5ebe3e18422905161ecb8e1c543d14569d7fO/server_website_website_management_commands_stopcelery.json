[{"lineNumber": 13, "col_offset": 14, "nodeName": "BaseCommand", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "add_arguments", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "handle", "type": "Callable[..., Any]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "help", "type": "str"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "celery_cmd", "type": "Callable[..., str]"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "max_wait_sec", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "check_pidfiles", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "check_pidfiles", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "check_pidfiles", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "pidfile", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "wait_sec", "type": "int"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "pidfile", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "wait_sec", "type": "int"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "pidfile", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "local", "type": "Any"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "f", "type": "file"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "pid", "type": "str"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "pidfile", "type": "Any"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "wait_sec", "type": "int"}, {"lineNumber": 48, "col_offset": 57, "nodeName": "max_wait_sec", "type": "int"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "write", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "write", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "pidfile", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "settings", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "local", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "check_pidfiles", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "name", "type": "str"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "pidfile", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "write", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "Command"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 48, "col_offset": 57, "nodeName": "self", "type": "Command"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "time", "type": "module"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "NOTICE", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "SUCCESS", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 66, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "name", "type": "str"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "f", "type": "file"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "pid", "type": "str"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "NOTICE", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "self", "type": "Command"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "style", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "pidfile", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "name", "type": "str"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "self", "type": "Command"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "style", "type": "Any"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "name", "type": "str"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "self", "type": "Command"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "style", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 42, "col_offset": 85, "nodeName": "name", "type": "str"}, {"lineNumber": 42, "col_offset": 91, "nodeName": "e", "type": "Exception"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "self", "type": "Command"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "self", "type": "Command"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "self", "type": "Command"}]