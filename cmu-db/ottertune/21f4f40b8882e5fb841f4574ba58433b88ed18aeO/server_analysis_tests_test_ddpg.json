[{"lineNumber": 20, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 49, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "ddpg", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "total_reward", "type": "float"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "setUpClass", "type": "Callable[[Any], None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "cls", "type": "Type[TestDDPG]"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "DDPG", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "knob_data", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "prev_metric_data", "type": "numpy.ndarray"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "metric_data", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "reward", "type": "float"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "prev_metric_data", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "knob_data", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "reward", "type": "float"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "total_reward", "type": "float"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "reward", "type": "float"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "add_sample", "type": "Any"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "prev_metric_data", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 50, "nodeName": "knob_data", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 61, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 69, "nodeName": "metric_data", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "choose_action", "type": "Any"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "prev_metric_data", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestDDPG"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "total_reward", "type": "float"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "TestDDPG", "type": "Type[TestDDPG]"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "cls", "type": "Type[TestDDPG]"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "reward", "type": "float"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "ddpg", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "replay_memory", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "update", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "ddpg", "type": "Any"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "cls", "type": "Type[TestDDPG]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "ddpg", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "ddpg", "type": "Any"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "self", "type": "TestDDPG"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "random", "type": "module"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "random", "type": "module"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "random", "type": "module"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "cls", "type": "Type[TestDDPG]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "cls", "type": "Type[TestDDPG]"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "random", "type": "module"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "prev_metric_data", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 59, "nodeName": "knob_data", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "prev_metric_data", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 59, "nodeName": "knob_data", "type": "Any"}]