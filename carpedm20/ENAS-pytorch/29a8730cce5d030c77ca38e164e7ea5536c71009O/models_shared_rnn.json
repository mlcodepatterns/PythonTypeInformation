[{"lineNumber": 17, "col_offset": 0, "nodeName": "_get_dropped_weights", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "isnan", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "logger", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "Module", "type": "Any"}, {"lineNumber": 138, "col_offset": 10, "nodeName": "SharedModel", "type": "Type[models.shared_base.SharedModel]"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "get_logger", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "dropped_w", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "dropped_w", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 138, "col_offset": 10, "nodeName": "shared_base", "type": "module"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "utils", "type": "module"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "w_raw", "type": "Any"}, {"lineNumber": 41, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "dropped_w", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "dropped_w", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "padding_idx", "type": "Union[Any, int]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "training", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "dropout", "type": "Union[Any, int]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 138, "col_offset": 10, "nodeName": "models", "type": "module"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "lockdrop", "type": "LockedDropout"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "tie_weights", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "w_xc", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "w_xh", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "w_hc", "type": "None"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "w_hh", "type": "None"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "static_init_hidden", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "time_steps", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "is_train", "type": "Union[Any, bool]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "embed", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "h1tohT", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "logits", "type": "List[Any]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "step", "type": "int"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "h1tohT", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "raw_output", "type": "Any"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "dropped_output", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "leaf_node_ids", "type": "List[Any]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "leaf_nodes", "type": "List[Any]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "num", "type": "int"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "num", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "init_range", "type": "float"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "dropout_p", "type": "Any"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "num_embeddings", "type": "Any"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 86, "col_offset": 36, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "norm_type", "type": "Any"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "scale_grad_by_freq", "type": "Any"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "dropout", "type": "int"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "masked_weight", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "masked_weight", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "weight", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "scale", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "masked_weight", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "masked_weight", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "padding_idx", "type": "Union[Any, int]"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "norm_type", "type": "Any"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "scale_grad_by_freq", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "bernoulli_", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "expand_as", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[models.shared_base.SharedModel], None]"}, {"lineNumber": 141, "col_offset": 48, "nodeName": "self", "type": "RNN"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "num_tokens", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "EmbeddingDropout", "type": "Type[EmbeddingDropout]"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "num_tokens", "type": "Any"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "shared_embed", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "LockedDropout", "type": "Type[LockedDropout]"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "shared_embed", "type": "Any"}, {"lineNumber": 158, "col_offset": 49, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "shared_embed", "type": "Any"}, {"lineNumber": 159, "col_offset": 49, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 170, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 171, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "jdx", "type": "int"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "mode", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "batch_norm", "type": "None"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "reset_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "keydefaultdict", "type": "Any"}, {"lineNumber": 195, "col_offset": 55, "nodeName": "init_hidden", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "info", "type": "Any"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "is_train", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "_get_dropped_weights", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 209, "col_offset": 41, "nodeName": "w_hh_raw", "type": "Any"}, {"lineNumber": 210, "col_offset": 41, "nodeName": "shared_wdrop", "type": "Any"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "training", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "_get_dropped_weights", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 41, "nodeName": "w_hc_raw", "type": "Any"}, {"lineNumber": 213, "col_offset": 41, "nodeName": "shared_wdrop", "type": "Any"}, {"lineNumber": 214, "col_offset": 41, "nodeName": "training", "type": "Any"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "encoder", "type": "EmbeddingDropout"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "shared_dropouti", "type": "Any"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "time_steps", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "x_t", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "hidden_norms", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "max_norm", "type": "float"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "stack", "type": "Any"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "h1tohT", "type": "List[Any]"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "stack", "type": "Any"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "logits", "type": "List[Any]"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "shared_dropout", "type": "Any"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "view", "type": "Any"}, {"lineNumber": 264, "col_offset": 32, "nodeName": "dropped_output", "type": "Any"}, {"lineNumber": 265, "col_offset": 32, "nodeName": "h1tohT", "type": "Any"}, {"lineNumber": 266, "col_offset": 28, "nodeName": "raw_output", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 267, "col_offset": 32, "nodeName": "extra_out", "type": "Dict[str, Any]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "get_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 303, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 333, "col_offset": 11, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 339, "col_offset": 40, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 340, "col_offset": 34, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 340, "col_offset": 41, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "lower", "type": "Any"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "relu", "type": "Any"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "size", "type": "Callable[[Any], Any]"}, {"lineNumber": 357, "col_offset": 39, "nodeName": "w_xc", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "size", "type": "Callable[[Any], Any]"}, {"lineNumber": 358, "col_offset": 39, "nodeName": "w_xh", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "debug", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "dropped_w", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "new", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "bernoulli_", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "expand_as", "type": "Any"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "weight", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "masked_weight", "type": "Any"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "scale", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "F", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "training", "type": "Any"}, {"lineNumber": 130, "col_offset": 36, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 132, "col_offset": 63, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "m", "type": "Any"}, {"lineNumber": 133, "col_offset": 55, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "SharedModel", "type": "Type[models.shared_base.SharedModel]"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "args", "type": "Any"}, {"lineNumber": 149, "col_offset": 48, "nodeName": "shared_dropoute", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "encoder", "type": "EmbeddingDropout"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 158, "col_offset": 49, "nodeName": "args", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 159, "col_offset": 49, "nodeName": "args", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 166, "col_offset": 42, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "collections", "type": "module"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "collections", "type": "module"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "self", "type": "RNN"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "BatchNorm1d", "type": "Any"}, {"lineNumber": 190, "col_offset": 45, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "self", "type": "RNN"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "utils", "type": "module"}, {"lineNumber": 195, "col_offset": 55, "nodeName": "self", "type": "RNN"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "logger", "type": "Any"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 207, "col_offset": 32, "nodeName": "mode", "type": "Any"}, {"lineNumber": 210, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "self", "type": "RNN"}, {"lineNumber": 213, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 214, "col_offset": 41, "nodeName": "self", "type": "RNN"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "static_init_hidden", "type": "Any"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "self", "type": "RNN"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "lockdrop", "type": "LockedDropout"}, {"lineNumber": 222, "col_offset": 34, "nodeName": "embed", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "embed", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "logit", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "cell", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "x_t", "type": "Any"}, {"lineNumber": 237, "col_offset": 43, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 237, "col_offset": 51, "nodeName": "dag", "type": "Any"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "norm", "type": "Any"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "max_norm", "type": "float"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "norm", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "norm", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "logit", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 249, "col_offset": 26, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 255, "col_offset": 21, "nodeName": "lockdrop", "type": "LockedDropout"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "self", "type": "RNN"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "view", "type": "Any"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 262, "col_offset": 31, "nodeName": "size", "type": "Any"}, {"lineNumber": 262, "col_offset": 47, "nodeName": "size", "type": "Any"}, {"lineNumber": 262, "col_offset": 63, "nodeName": "size", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "self", "type": "RNN"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "F", "type": "Any"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "h_prev", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "collections", "type": "module"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 300, "col_offset": 22, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "dag", "type": "Any"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "id", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "w_c", "type": "Any"}, {"lineNumber": 329, "col_offset": 22, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 329, "col_offset": 37, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 329, "col_offset": 48, "nodeName": "leaf_node_ids", "type": "List[Any]"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "stack", "type": "Any"}, {"lineNumber": 330, "col_offset": 40, "nodeName": "leaf_nodes", "type": "List[Any]"}, {"lineNumber": 333, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 334, "col_offset": 37, "nodeName": "output", "type": "Any"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 339, "col_offset": 40, "nodeName": "args", "type": "Any"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "utils", "type": "module"}, {"lineNumber": 340, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 346, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "shared_base", "type": "module"}, {"lineNumber": 357, "col_offset": 39, "nodeName": "self", "type": "RNN"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "shared_base", "type": "module"}, {"lineNumber": 358, "col_offset": 39, "nodeName": "self", "type": "RNN"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "collections", "type": "module"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 367, "col_offset": 22, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 368, "col_offset": 20, "nodeName": "dag", "type": "Any"}, {"lineNumber": 371, "col_offset": 16, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 371, "col_offset": 26, "nodeName": "id", "type": "Any"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "w_c", "type": "Any"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "num", "type": "Any"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "num", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "logger", "type": "Any"}, {"lineNumber": 389, "col_offset": 30, "nodeName": "mode", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "self", "type": "RNN"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "uniform_", "type": "Any"}, {"lineNumber": 391, "col_offset": 45, "nodeName": "init_range", "type": "float"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "size", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "dropout", "type": "Union[Any, int]"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "dropout", "type": "Union[Any, int]"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "mask", "type": "Any"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "self", "type": "LockedDropout"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "new", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "shared_base", "type": "module"}, {"lineNumber": 149, "col_offset": 48, "nodeName": "args", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "RNN"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "self", "type": "RNN"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "args", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 166, "col_offset": 42, "nodeName": "args", "type": "Any"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "idx", "type": "int"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 175, "col_offset": 47, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 176, "col_offset": 47, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 178, "col_offset": 37, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 178, "col_offset": 47, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 179, "col_offset": 47, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "idx", "type": "int"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 184, "col_offset": 39, "nodeName": "jdx", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "idx", "type": "int"}, {"lineNumber": 186, "col_offset": 46, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 187, "col_offset": 39, "nodeName": "jdx", "type": "Any"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 190, "col_offset": 45, "nodeName": "args", "type": "Any"}, {"lineNumber": 207, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 210, "col_offset": 41, "nodeName": "self", "type": "RNN"}, {"lineNumber": 213, "col_offset": 41, "nodeName": "self", "type": "RNN"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "self", "type": "RNN"}, {"lineNumber": 217, "col_offset": 45, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "self", "type": "RNN"}, {"lineNumber": 223, "col_offset": 63, "nodeName": "is_train", "type": "Union[bool, Any]"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "shared_dropouti", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "step", "type": "int"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "self", "type": "RNN"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "info", "type": "Any"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "norm", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 244, "col_offset": 32, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 244, "col_offset": 56, "nodeName": "data", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 246, "col_offset": 51, "nodeName": "max_norm", "type": "float"}, {"lineNumber": 246, "col_offset": 60, "nodeName": "detached_norm", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "logits", "type": "List[Any]"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "h1tohT", "type": "List[Any]"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 255, "col_offset": 21, "nodeName": "self", "type": "RNN"}, {"lineNumber": 256, "col_offset": 63, "nodeName": "is_train", "type": "Union[bool, Any]"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "shared_dropout", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 261, "col_offset": 55, "nodeName": "size", "type": "Any"}, {"lineNumber": 262, "col_offset": 31, "nodeName": "output", "type": "Any"}, {"lineNumber": 262, "col_offset": 47, "nodeName": "output", "type": "Any"}, {"lineNumber": 262, "col_offset": 63, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "w_xc", "type": "Any"}, {"lineNumber": 276, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 276, "col_offset": 40, "nodeName": "linear", "type": "Any"}, {"lineNumber": 276, "col_offset": 49, "nodeName": "h_prev", "type": "Any"}, {"lineNumber": 276, "col_offset": 57, "nodeName": "w_hc", "type": "Any"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 300, "col_offset": 22, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "get_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 314, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 315, "col_offset": 29, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 329, "col_offset": 24, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "self", "type": "RNN"}, {"lineNumber": 339, "col_offset": 40, "nodeName": "self", "type": "RNN"}, {"lineNumber": 340, "col_offset": 41, "nodeName": "self", "type": "RNN"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "models", "type": "module"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "models", "type": "module"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 364, "col_offset": 19, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 367, "col_offset": 22, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 371, "col_offset": 26, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 372, "col_offset": 30, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 379, "col_offset": 23, "nodeName": "size", "type": "Callable[[Any], Any]"}, {"lineNumber": 379, "col_offset": 47, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "size", "type": "Callable[[Any], Any]"}, {"lineNumber": 380, "col_offset": 47, "nodeName": "w_c", "type": "Any"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 389, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 391, "col_offset": 33, "nodeName": "init_range", "type": "float"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "weight", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "weight", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 132, "col_offset": 37, "nodeName": "size", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "models", "type": "module"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 175, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 176, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 178, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 178, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 179, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "self", "type": "RNN"}, {"lineNumber": 184, "col_offset": 46, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 186, "col_offset": 46, "nodeName": "self", "type": "RNN"}, {"lineNumber": 187, "col_offset": 46, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 197, "col_offset": 47, "nodeName": "num_parameters", "type": "Any"}, {"lineNumber": 207, "col_offset": 32, "nodeName": "self", "type": "RNN"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "hidden_norms", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "logger", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "norm", "type": "Any"}, {"lineNumber": 244, "col_offset": 32, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 244, "col_offset": 56, "nodeName": "norm", "type": "Any"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "size", "type": "Any"}, {"lineNumber": 261, "col_offset": 55, "nodeName": "output", "type": "Any"}, {"lineNumber": 275, "col_offset": 26, "nodeName": "dag", "type": "Any"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "self", "type": "RNN"}, {"lineNumber": 276, "col_offset": 40, "nodeName": "F", "type": "Any"}, {"lineNumber": 276, "col_offset": 57, "nodeName": "self", "type": "RNN"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 306, "col_offset": 41, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 311, "col_offset": 40, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 312, "col_offset": 40, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "self", "type": "RNN"}, {"lineNumber": 314, "col_offset": 40, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 315, "col_offset": 18, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 315, "col_offset": 29, "nodeName": "F", "type": "Any"}, {"lineNumber": 315, "col_offset": 39, "nodeName": "w_c", "type": "Any"}, {"lineNumber": 316, "col_offset": 18, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 349, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 372, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 376, "col_offset": 22, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 376, "col_offset": 40, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 377, "col_offset": 22, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 377, "col_offset": 40, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 379, "col_offset": 23, "nodeName": "shared_base", "type": "module"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "shared_base", "type": "module"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 384, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 384, "col_offset": 29, "nodeName": "num_parameters", "type": "Any"}, {"lineNumber": 389, "col_offset": 30, "nodeName": "self", "type": "RNN"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 184, "col_offset": 46, "nodeName": "self", "type": "RNN"}, {"lineNumber": 184, "col_offset": 55, "nodeName": "idx", "type": "int"}, {"lineNumber": 187, "col_offset": 46, "nodeName": "self", "type": "RNN"}, {"lineNumber": 187, "col_offset": 55, "nodeName": "idx", "type": "int"}, {"lineNumber": 197, "col_offset": 47, "nodeName": "self", "type": "RNN"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "self", "type": "RNN"}, {"lineNumber": 241, "col_offset": 64, "nodeName": "max_norm", "type": "float"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 244, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "hidden_norms", "type": "Any"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "max_norm", "type": "float"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "self", "type": "RNN"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "output", "type": "Any"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "w_xh", "type": "Any"}, {"lineNumber": 277, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 277, "col_offset": 41, "nodeName": "linear", "type": "Any"}, {"lineNumber": 277, "col_offset": 50, "nodeName": "h_prev", "type": "Any"}, {"lineNumber": 277, "col_offset": 58, "nodeName": "w_hh", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "self", "type": "RNN"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "leaf_node_ids", "type": "List[Any]"}, {"lineNumber": 307, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "self", "type": "RNN"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "self", "type": "RNN"}, {"lineNumber": 312, "col_offset": 31, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 315, "col_offset": 43, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 316, "col_offset": 30, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 317, "col_offset": 47, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 372, "col_offset": 30, "nodeName": "self", "type": "RNN"}, {"lineNumber": 373, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 373, "col_offset": 31, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 376, "col_offset": 22, "nodeName": "self", "type": "RNN"}, {"lineNumber": 376, "col_offset": 31, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 377, "col_offset": 22, "nodeName": "self", "type": "RNN"}, {"lineNumber": 377, "col_offset": 31, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 379, "col_offset": 23, "nodeName": "models", "type": "module"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "models", "type": "module"}, {"lineNumber": 384, "col_offset": 29, "nodeName": "self", "type": "RNN"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 241, "col_offset": 40, "nodeName": "max", "type": "Any"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "self", "type": "RNN"}, {"lineNumber": 277, "col_offset": 41, "nodeName": "F", "type": "Any"}, {"lineNumber": 277, "col_offset": 58, "nodeName": "self", "type": "RNN"}, {"lineNumber": 315, "col_offset": 45, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 316, "col_offset": 32, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 316, "col_offset": 41, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 316, "col_offset": 52, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 317, "col_offset": 35, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 317, "col_offset": 49, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "self", "type": "RNN"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 241, "col_offset": 40, "nodeName": "hidden_norms", "type": "Any"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "hidden_norms", "type": "Any"}, {"lineNumber": 242, "col_offset": 45, "nodeName": "max_norm", "type": "float"}, {"lineNumber": 316, "col_offset": 43, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 316, "col_offset": 56, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 317, "col_offset": 37, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 316, "col_offset": 58, "nodeName": "node_id", "type": "Any"}]