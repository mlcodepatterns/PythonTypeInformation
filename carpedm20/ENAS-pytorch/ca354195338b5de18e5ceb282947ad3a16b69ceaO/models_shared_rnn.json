[{"lineNumber": 17, "col_offset": 0, "nodeName": "isnan", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 21, "col_offset": 23, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "Module", "type": "Any"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "SharedModel", "type": "Type[models.shared_base.SharedModel]"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "get_logger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 21, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "shared_base", "type": "module"}, {"lineNumber": 21, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "padding_idx", "type": "Union[Any, int]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "training", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "dropout", "type": "Union[int, Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "models", "type": "module"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "lockdrop", "type": "LockedDropout"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "tie_weights", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "static_init_hidden", "type": "utils.keydefaultdict"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "time_steps", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "is_train", "type": "Union[Any, bool]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "embed", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "logits", "type": "List[Any]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "step", "type": "int"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "leaf_node_ids", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "leaf_nodes", "type": "List[Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "num", "type": "int"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "num", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "init_range", "type": "float"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "num_embeddings", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "norm_type", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "scale_grad_by_freq", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 62, "col_offset": 42, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "dropout", "type": "int"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "masked_weight", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "masked_weight", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "weight", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "scale", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "masked_weight", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "masked_weight", "type": "Any"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "padding_idx", "type": "Union[Any, int]"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "norm_type", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "scale_grad_by_freq", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "bernoulli_", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "expand_as", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[models.shared_base.SharedModel], None]"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "self", "type": "RNN"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "EmbeddingDropout", "type": "Type[EmbeddingDropout]"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "num_tokens", "type": "Any"}, {"lineNumber": 117, "col_offset": 40, "nodeName": "shared_embed", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "num_tokens", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "LockedDropout", "type": "Type[LockedDropout]"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 131, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "jdx", "type": "int"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "mode", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "batch_norm", "type": "None"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "reset_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "keydefaultdict", "type": "Type[utils.keydefaultdict]"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "init_hidden", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "is_train", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "encoder", "type": "EmbeddingDropout"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "shared_dropouti", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "time_steps", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "x_t", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "stack", "type": "Any"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "logits", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "shared_dropout", "type": "Any"}, {"lineNumber": 189, "col_offset": 18, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 190, "col_offset": 78, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "get_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 244, "col_offset": 40, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "get_variable", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "lower", "type": "Any"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "relu", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "size", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 39, "nodeName": "w_xc", "type": "Any"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "size", "type": "Callable[[Any], Any]"}, {"lineNumber": 263, "col_offset": 39, "nodeName": "w_xh", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "new", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "bernoulli_", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "expand_as", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "weight", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "masked_weight", "type": "Any"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "scale", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "F", "type": "Any"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "training", "type": "Any"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 102, "col_offset": 63, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "m", "type": "Any"}, {"lineNumber": 103, "col_offset": 55, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "SharedModel", "type": "Type[models.shared_base.SharedModel]"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 117, "col_offset": 40, "nodeName": "args", "type": "Any"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "shared_dropoute", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "encoder", "type": "EmbeddingDropout"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "shared_embed", "type": "Any"}, {"lineNumber": 125, "col_offset": 50, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "shared_embed", "type": "Any"}, {"lineNumber": 127, "col_offset": 50, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "collections", "type": "module"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "collections", "type": "module"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "self", "type": "RNN"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "BatchNorm1d", "type": "Any"}, {"lineNumber": 150, "col_offset": 45, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "self", "type": "RNN"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "self", "type": "RNN"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "static_init_hidden", "type": "utils.keydefaultdict"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "mode", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "self", "type": "RNN"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "lockdrop", "type": "LockedDropout"}, {"lineNumber": 175, "col_offset": 34, "nodeName": "embed", "type": "Any"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "embed", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "logit", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "cell", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 181, "col_offset": 38, "nodeName": "x_t", "type": "Any"}, {"lineNumber": 181, "col_offset": 43, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 181, "col_offset": 51, "nodeName": "dag", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "logit", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "lockdrop", "type": "LockedDropout"}, {"lineNumber": 186, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 189, "col_offset": 18, "nodeName": "self", "type": "RNN"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "view", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "view", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "self", "type": "RNN"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "F", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "w_xc", "type": "Any"}, {"lineNumber": 199, "col_offset": 81, "nodeName": "h_prev", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "collections", "type": "module"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "dag", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "id", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "w_c", "type": "Any"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 234, "col_offset": 37, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 234, "col_offset": 48, "nodeName": "leaf_node_ids", "type": "List[Any]"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 235, "col_offset": 28, "nodeName": "stack", "type": "Any"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "leaf_nodes", "type": "List[Any]"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 239, "col_offset": 37, "nodeName": "output", "type": "Any"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 244, "col_offset": 40, "nodeName": "args", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "shared_base", "type": "module"}, {"lineNumber": 262, "col_offset": 39, "nodeName": "self", "type": "RNN"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "shared_base", "type": "module"}, {"lineNumber": 263, "col_offset": 39, "nodeName": "self", "type": "RNN"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "collections", "type": "module"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 272, "col_offset": 22, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "dag", "type": "Any"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "id", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "w_c", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "num", "type": "Any"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "num", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 294, "col_offset": 30, "nodeName": "mode", "type": "Any"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "self", "type": "RNN"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "uniform_", "type": "Any"}, {"lineNumber": 296, "col_offset": 45, "nodeName": "init_range", "type": "float"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "size", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "dropout", "type": "Union[int, Any]"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "dropout", "type": "Union[int, Any]"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "mask", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "self", "type": "LockedDropout"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "new", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "shared_base", "type": "module"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "args", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "self", "type": "RNN"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "self", "type": "RNN"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 125, "col_offset": 50, "nodeName": "args", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 127, "col_offset": 50, "nodeName": "args", "type": "Any"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "idx", "type": "int"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "args", "type": "Any"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 143, "col_offset": 39, "nodeName": "idx", "type": "int"}, {"lineNumber": 143, "col_offset": 46, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "jdx", "type": "Any"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "idx", "type": "int"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 147, "col_offset": 39, "nodeName": "jdx", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 150, "col_offset": 45, "nodeName": "args", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "self", "type": "RNN"}, {"lineNumber": 168, "col_offset": 45, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "self", "type": "RNN"}, {"lineNumber": 176, "col_offset": 63, "nodeName": "is_train", "type": "Union[Any, bool]"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "shared_dropouti", "type": "Any"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "step", "type": "int"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "self", "type": "RNN"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "logits", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "self", "type": "RNN"}, {"lineNumber": 187, "col_offset": 63, "nodeName": "is_train", "type": "Union[Any, bool]"}, {"lineNumber": 187, "col_offset": 35, "nodeName": "shared_dropout", "type": "Any"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "output", "type": "Any"}, {"lineNumber": 189, "col_offset": 74, "nodeName": "size", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 190, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 190, "col_offset": 60, "nodeName": "size", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "self", "type": "RNN"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "cat", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "get_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 225, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 235, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "self", "type": "RNN"}, {"lineNumber": 244, "col_offset": 40, "nodeName": "self", "type": "RNN"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "self", "type": "RNN"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "models", "type": "module"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "models", "type": "module"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 272, "col_offset": 22, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 277, "col_offset": 19, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 277, "col_offset": 30, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "size", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 47, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "size", "type": "Callable[[Any], Any]"}, {"lineNumber": 285, "col_offset": 47, "nodeName": "w_c", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 294, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 296, "col_offset": 33, "nodeName": "init_range", "type": "float"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "weight", "type": "Any"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "weight", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "size", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "models", "type": "module"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 143, "col_offset": 46, "nodeName": "self", "type": "RNN"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "self", "type": "RNN"}, {"lineNumber": 147, "col_offset": 46, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "num_parameters", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "self", "type": "RNN"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 187, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 189, "col_offset": 43, "nodeName": "size", "type": "Any"}, {"lineNumber": 189, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 189, "col_offset": 74, "nodeName": "output", "type": "Any"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 190, "col_offset": 44, "nodeName": "output", "type": "Any"}, {"lineNumber": 190, "col_offset": 60, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "dag", "type": "Any"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 198, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 49, "nodeName": "h_prev", "type": "Any"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "w_xh", "type": "Any"}, {"lineNumber": 199, "col_offset": 73, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 217, "col_offset": 41, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 222, "col_offset": 40, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 223, "col_offset": 40, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "self", "type": "RNN"}, {"lineNumber": 225, "col_offset": 40, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "F", "type": "Any"}, {"lineNumber": 226, "col_offset": 39, "nodeName": "w_c", "type": "Any"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 277, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 281, "col_offset": 40, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 282, "col_offset": 40, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "shared_base", "type": "module"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "shared_base", "type": "module"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 289, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 289, "col_offset": 29, "nodeName": "num_parameters", "type": "Any"}, {"lineNumber": 294, "col_offset": 30, "nodeName": "self", "type": "RNN"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "self", "type": "EmbeddingDropout"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "self", "type": "RNN"}, {"lineNumber": 144, "col_offset": 55, "nodeName": "idx", "type": "int"}, {"lineNumber": 147, "col_offset": 46, "nodeName": "self", "type": "RNN"}, {"lineNumber": 147, "col_offset": 55, "nodeName": "idx", "type": "int"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "self", "type": "RNN"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "self", "type": "RNN"}, {"lineNumber": 187, "col_offset": 35, "nodeName": "self", "type": "RNN"}, {"lineNumber": 189, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 189, "col_offset": 58, "nodeName": "output", "type": "Any"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "self", "type": "RNN"}, {"lineNumber": 199, "col_offset": 37, "nodeName": "cat", "type": "Any"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "self", "type": "RNN"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "leaf_node_ids", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "self", "type": "RNN"}, {"lineNumber": 222, "col_offset": 31, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "self", "type": "RNN"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 226, "col_offset": 43, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 227, "col_offset": 91, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 277, "col_offset": 30, "nodeName": "self", "type": "RNN"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 278, "col_offset": 31, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "self", "type": "RNN"}, {"lineNumber": 281, "col_offset": 31, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "self", "type": "RNN"}, {"lineNumber": 282, "col_offset": 31, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "models", "type": "module"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "models", "type": "module"}, {"lineNumber": 289, "col_offset": 29, "nodeName": "self", "type": "RNN"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 199, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 199, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 199, "col_offset": 51, "nodeName": "h_prev", "type": "Any"}, {"lineNumber": 226, "col_offset": 45, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 227, "col_offset": 42, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 227, "col_offset": 53, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 227, "col_offset": 77, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 227, "col_offset": 93, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "self", "type": "RNN"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 227, "col_offset": 44, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 227, "col_offset": 57, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 227, "col_offset": 79, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 227, "col_offset": 59, "nodeName": "node_id", "type": "Any"}]