[{"lineNumber": 15, "col_offset": 0, "nodeName": "embedded_dropout", "type": "Callable[..., Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "Module", "type": "Any"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "SharedModel", "type": "Type[models.shared_base.SharedModel]"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "get_logger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 17, "col_offset": 7, "nodeName": "dropout", "type": "Union[int, Any]"}, {"lineNumber": 25, "col_offset": 7, "nodeName": "scale", "type": "None"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "X", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "masked_embed_weight", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "masked_embed_weight", "type": "Any"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "weight", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "masked_embed_weight", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "embed", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "padding_idx", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "apply", "type": "Any"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "words", "type": "Any"}, {"lineNumber": 31, "col_offset": 46, "nodeName": "masked_embed_weight", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "norm_type", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "scale_grad_by_freq", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "lockdrop", "type": "LockedDropout"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "tie_weights", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "w_xh", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "w_xc", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "static_init_hidden", "type": "utils.keydefaultdict"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "time_steps", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "logits", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "step", "type": "int"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "leaf_node_ids", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "leaf_nodes", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "num", "type": "int"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "num", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "init_range", "type": "float"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "mask", "type": "Any"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "weight", "type": "Any"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "embed", "type": "Any"}, {"lineNumber": 26, "col_offset": 69, "nodeName": "masked_embed_weight", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "embed", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "embed", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "embed", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "embed", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "bernoulli_", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "expand_as", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "num_tokens", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "shared_embed", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "num_tokens", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "LockedDropout", "type": "Type[LockedDropout]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 67, "col_offset": 67, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 68, "col_offset": 67, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "jdx", "type": "int"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "mode", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "batch_norm", "type": "None"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "reset_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "keydefaultdict", "type": "Type[utils.keydefaultdict]"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "init_hidden", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "embedded_dropout", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "shared_dropouti", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "embed", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "time_steps", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "x_t", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "stack", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "logits", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "shared_dropout", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 120, "col_offset": 78, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "outputs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "get_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "get_variable", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "lower", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "relu", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "size", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "w_xc", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "size", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "w_xh", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 19, "col_offset": 51, "nodeName": "weight", "type": "Any"}, {"lineNumber": 19, "col_offset": 72, "nodeName": "dropout", "type": "Union[int, Any]"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "embed", "type": "Any"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "expand_as", "type": "Any"}, {"lineNumber": 26, "col_offset": 46, "nodeName": "masked_embed_weight", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "_backend", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "training", "type": "Any"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 46, "col_offset": 63, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "m", "type": "Any"}, {"lineNumber": 47, "col_offset": 55, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "shared_embed", "type": "Any"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 67, "col_offset": 67, "nodeName": "args", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "shared_embed", "type": "Any"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 68, "col_offset": 67, "nodeName": "args", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "self", "type": "RNN"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 70, "col_offset": 60, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "RNN"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "BatchNorm1d", "type": "Any"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "RNN"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "self", "type": "RNN"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "static_init_hidden", "type": "utils.keydefaultdict"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "self", "type": "RNN"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "lockdrop", "type": "LockedDropout"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "embed", "type": "Any"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "shared_dropouti", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "embed", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "logit", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "cell", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "x_t", "type": "Any"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 112, "col_offset": 51, "nodeName": "dag", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "logit", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "t", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "lockdrop", "type": "LockedDropout"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "shared_dropout", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "self", "type": "RNN"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "view", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "view", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "self", "type": "RNN"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "F", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "w_xc", "type": "Any"}, {"lineNumber": 127, "col_offset": 77, "nodeName": "h_prev", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "dag", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "id", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "w_c", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 157, "col_offset": 48, "nodeName": "leaf_node_ids", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "t", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "stack", "type": "Any"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "leaf_nodes", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 162, "col_offset": 37, "nodeName": "output", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "args", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "self", "type": "RNN"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "self", "type": "RNN"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "dag", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "id", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "w_c", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "num", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "num", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "mode", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "self", "type": "RNN"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "uniform_", "type": "Any"}, {"lineNumber": 218, "col_offset": 45, "nodeName": "init_range", "type": "float"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 19, "col_offset": 51, "nodeName": "embed", "type": "Any"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "embed", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "self", "type": "LockedDropout"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "new", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "RNN", "type": "Type[RNN]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "self", "type": "RNN"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "RNN"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "self", "type": "RNN"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "args", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "args", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "idx", "type": "int"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "args", "type": "Any"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "shared_hid", "type": "Any"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "idx", "type": "int"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "jdx", "type": "Any"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "idx", "type": "int"}, {"lineNumber": 82, "col_offset": 47, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 82, "col_offset": 60, "nodeName": "jdx", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "args", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "self", "type": "RNN"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "self", "type": "RNN"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "step", "type": "int"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "self", "type": "RNN"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "logits", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "self", "type": "RNN"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "args", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "output", "type": "Any"}, {"lineNumber": 119, "col_offset": 74, "nodeName": "size", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 120, "col_offset": 60, "nodeName": "size", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "self", "type": "RNN"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "cat", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "get_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "t", "type": "Any"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "self", "type": "RNN"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "self", "type": "RNN"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "self", "type": "RNN"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "size", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "size", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "w_c", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "init_range", "type": "float"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "bernoulli_", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "size", "type": "Any"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "args", "type": "Any"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "args", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "jdx", "type": "Any"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "self", "type": "RNN"}, {"lineNumber": 80, "col_offset": 67, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "jdx", "type": "Any"}, {"lineNumber": 82, "col_offset": 47, "nodeName": "self", "type": "RNN"}, {"lineNumber": 82, "col_offset": 67, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "num_parameters", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "mode", "type": "Any"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "self", "type": "RNN"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "self", "type": "RNN"}, {"lineNumber": 119, "col_offset": 43, "nodeName": "size", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 119, "col_offset": 74, "nodeName": "output", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "output", "type": "Any"}, {"lineNumber": 120, "col_offset": 60, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "dag", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "t", "type": "Any"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "h_prev", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "w_xh", "type": "Any"}, {"lineNumber": 127, "col_offset": 69, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "self", "type": "RNN"}, {"lineNumber": 150, "col_offset": 40, "nodeName": "next_node", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "F", "type": "Any"}, {"lineNumber": 151, "col_offset": 39, "nodeName": "w_c", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "w_h", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "w_c", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 205, "col_offset": 40, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "q", "type": "collections.deque[Any]"}, {"lineNumber": 212, "col_offset": 46, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 212, "col_offset": 53, "nodeName": "num_parameters", "type": "Any"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "self", "type": "RNN"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "dropout", "type": "Union[int, Any]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "self", "type": "RNN"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "idx", "type": "int"}, {"lineNumber": 80, "col_offset": 67, "nodeName": "self", "type": "RNN"}, {"lineNumber": 80, "col_offset": 76, "nodeName": "idx", "type": "int"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "self", "type": "RNN"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "idx", "type": "int"}, {"lineNumber": 82, "col_offset": 67, "nodeName": "self", "type": "RNN"}, {"lineNumber": 82, "col_offset": 76, "nodeName": "idx", "type": "int"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "self", "type": "RNN"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 119, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "output", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "self", "type": "RNN"}, {"lineNumber": 127, "col_offset": 37, "nodeName": "cat", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "self", "type": "RNN"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "leaf_node_ids", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "self", "type": "RNN"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "self", "type": "RNN"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 151, "col_offset": 43, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 152, "col_offset": 85, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "self", "type": "RNN"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "self", "type": "RNN"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "self", "type": "RNN"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 212, "col_offset": 53, "nodeName": "self", "type": "RNN"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "resize_", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "self", "type": "RNN"}, {"lineNumber": 127, "col_offset": 37, "nodeName": "t", "type": "Any"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 47, "nodeName": "h_prev", "type": "Any"}, {"lineNumber": 151, "col_offset": 45, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "f", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 152, "col_offset": 77, "nodeName": "c", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 152, "col_offset": 87, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "self", "type": "RNN"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "next_id", "type": "Any"}, {"lineNumber": 152, "col_offset": 57, "nodeName": "h", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "new", "type": "Any"}, {"lineNumber": 18, "col_offset": 48, "nodeName": "size", "type": "Any"}, {"lineNumber": 152, "col_offset": 59, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 18, "col_offset": 48, "nodeName": "weight", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 18, "col_offset": 48, "nodeName": "embed", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "embed", "type": "Any"}]