[{"lineNumber": 15, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "test_cleaner", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_utils", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "test_get_feature_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_understand_estimator", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 114, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "suite", "type": "unittest.TestSuite"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "remove", "type": "Tuple[str, str, str]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "target", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "raw_text", "type": "str"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "expected_result", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "result", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "test_df", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "test_dict", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "loadTestsFromTestCase", "type": "Callable[[Type[unittest.TestCase]], unittest.TestSuite]"}, {"lineNumber": 115, "col_offset": 56, "nodeName": "TestTextInterpreter", "type": "Type[TestTextInterpreter]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "run", "type": "Callable[[unittest.Testable], unittest.TestResult]"}, {"lineNumber": 116, "col_offset": 45, "nodeName": "suite", "type": "unittest.TestSuite"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "fetch_20newsgroups", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "data_train", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "data_train", "type": "Any"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "fetch_20newsgroups", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "data_test", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "data_test", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "cleaner", "type": "Callable[..., str]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "raw_text", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "result", "type": "str"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "expected_result", "type": "str"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "convert_dataframe_to_dict", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 82, "nodeName": "test_df", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "vectorize_as_tf_idf", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "X_train", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "get_feature_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "vectorize_as_tf_idf", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "X_train", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "get_feature_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 58, "nodeName": "auto_feature_selection", "type": "Callable[..., Tuple[Any, Any, List[Any]]]"}, {"lineNumber": 77, "col_offset": 81, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 77, "col_offset": 90, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "SGDClassifier", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "X_new_train", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "query_top_features_by_class", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 59, "nodeName": "X_new_train", "type": "Any"}, {"lineNumber": 84, "col_offset": 72, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 84, "col_offset": 86, "nodeName": "selected_feature", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "understand_estimator", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 88, "col_offset": 63, "nodeName": "clf", "type": "Any"}, {"lineNumber": 88, "col_offset": 71, "nodeName": "features_to_consider", "type": "Any"}, {"lineNumber": 88, "col_offset": 93, "nodeName": "selected_feature", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "features", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "features", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "understand_estimator", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 99, "col_offset": 63, "nodeName": "clf", "type": "Any"}, {"lineNumber": 99, "col_offset": 71, "nodeName": "features_to_consider", "type": "Any"}, {"lineNumber": 99, "col_offset": 93, "nodeName": "selected_feature", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "features", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "features", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 42, "nodeName": "understand_estimator", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 108, "col_offset": 63, "nodeName": "clf", "type": "Any"}, {"lineNumber": 108, "col_offset": 71, "nodeName": "features_to_consider", "type": "Any"}, {"lineNumber": 108, "col_offset": 93, "nodeName": "selected_feature", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 51, "nodeName": "categories", "type": "List[str]"}, {"lineNumber": 28, "col_offset": 100, "nodeName": "remove", "type": "Tuple[str, str, str]"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "preprocessor", "type": "Callable[[Any], str]"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "t", "type": "Any"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "t", "type": "Any"}, {"lineNumber": 31, "col_offset": 49, "nodeName": "X_train", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 65, "nodeName": "categories", "type": "List[str]"}, {"lineNumber": 36, "col_offset": 46, "nodeName": "remove", "type": "Tuple[str, str, str]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "pd", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "test_dict", "type": "Any"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 68, "col_offset": 66, "nodeName": "param_dict_vectorizer", "type": "Dict[str, Union[bool, float, str, Tuple[int, int]]]"}, {"lineNumber": 69, "col_offset": 58, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 74, "col_offset": 66, "nodeName": "param_dict_vectorizer", "type": "Dict[str, Union[bool, float, str, Tuple[int, int]]]"}, {"lineNumber": 75, "col_offset": 58, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 77, "col_offset": 90, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 78, "col_offset": 95, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "selected_feature", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 84, "col_offset": 72, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "columns", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "row", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "coef_scores_wts", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "relevance_wts", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "columns", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "row", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "relevance_wts", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "TestLoader", "type": "Type[unittest.TestLoader]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "TextTestRunner", "type": "Type[unittest.TextTestRunner]"}, {"lineNumber": 31, "col_offset": 49, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 56, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 77, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 66, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 74, "col_offset": 66, "nodeName": "self", "type": "TestTextInterpreter"}, {"lineNumber": 85, "col_offset": 73, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 77, "nodeName": "selected_feature", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 69, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 89, "col_offset": 73, "nodeName": "features_to_consider", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "relevance_df", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "itertuples", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 69, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 73, "nodeName": "features_to_consider", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "relevance_df", "type": "Any"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "itertuples", "type": "Any"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 69, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 73, "nodeName": "features_to_consider", "type": "Any"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "values", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "unittest", "type": "module"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "coef_scores_wts", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "head", "type": "Any"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "head", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "relevance_df", "type": "Any"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "relevance_df", "type": "Any"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "relevance_df", "type": "Any"}, {"lineNumber": 110, "col_offset": 55, "nodeName": "relevance_df", "type": "Any"}]