[{"lineNumber": 13, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "learn", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "estimator", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "estimator_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "get_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "decisions_as_txt", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "plot_local_decisions", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "build_logger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 13, "col_offset": 22, "nodeName": "_INFO", "type": "int"}, {"lineNumber": 13, "col_offset": 29, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 87, "nodeName": "_WARNING", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "impurity_threshold", "type": "Any"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "impurity_threshold", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "splitter_types", "type": "List[str]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "splitter", "type": "Union[Any, str]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "seed", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "y_hat_surrogate", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "model_inst", "type": "skater.model.base.ModelType"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "scorer", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "metric_score", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "surrogate_metric_score", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "fidelity_score", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "fidelity_score", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "predict_values", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "predict_prob_values", "type": "None"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "f_name", "type": "Union[str, Any]"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "show_img", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "graph_inst", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "build_logger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "log_level", "type": "Any"}, {"lineNumber": 25, "col_offset": 46, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "estimator_type", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "estimator_type", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "cv", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "search_space", "type": "Union[Any, Dict[str, Union[List[str], List[int]]]]"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "best_estimator_", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "ModelType", "type": "Type[skater.model.base.ModelType]"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "get_scorer_function", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "scorer", "type": "Any"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "oracle_y", "type": "Any"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "Y", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "scorer", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "Y", "type": "Any"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "y_hat_surrogate", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "fidelity_score", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "impurity_threshold", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "predict", "type": "Any"}, {"lineNumber": 116, "col_offset": 46, "nodeName": "X", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "predict_values", "type": "Any"}, {"lineNumber": 118, "col_offset": 66, "nodeName": "predict_prob_values", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "plot_tree", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 68, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "write_png", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "f_name", "type": "Union[Any, str]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "fig_size", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "img", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "tree_to_text", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 35, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 151, "col_offset": 74, "nodeName": "scope", "type": "Any"}, {"lineNumber": 151, "col_offset": 81, "nodeName": "X", "type": "Any"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "DecisionTreeClassifier", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "estimator_type", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "estimator_type", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "Y", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "param_grid", "type": "Any"}, {"lineNumber": 76, "col_offset": 69, "nodeName": "default_grid", "type": "Dict[str, Union[List[str], List[int]]]"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "RandomizedSearchCV", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "Y", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "random_search_estimator", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "scorers", "type": "skater.model.scorer.ScorerFactory"}, {"lineNumber": 93, "col_offset": 68, "nodeName": "scorer_type", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "surrogate_metric_score", "type": "Any"}, {"lineNumber": 98, "col_offset": 57, "nodeName": "metric_score", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 55, "nodeName": "prob_score", "type": "bool"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 117, "col_offset": 49, "nodeName": "X", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "predict_prob_values", "type": "None"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 127, "col_offset": 45, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 127, "col_offset": 78, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 127, "col_offset": 109, "nodeName": "colors", "type": "Any"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 128, "col_offset": 76, "nodeName": "enable_node_id", "type": "Any"}, {"lineNumber": 128, "col_offset": 97, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "graph_inst", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "rcParams", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "imread", "type": "Any"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "f_name", "type": "Union[Any, str]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "cax", "type": "Any"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 151, "col_offset": 35, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 151, "col_offset": 55, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 42, "col_offset": 59, "nodeName": "splitter", "type": "Union[Any, str]"}, {"lineNumber": 42, "col_offset": 84, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 43, "col_offset": 68, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 44, "col_offset": 67, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 45, "col_offset": 75, "nodeName": "min_weight_fraction_leaf", "type": "Any"}, {"lineNumber": 46, "col_offset": 63, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 46, "col_offset": 90, "nodeName": "seed", "type": "Any"}, {"lineNumber": 47, "col_offset": 65, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 48, "col_offset": 72, "nodeName": "min_impurity_decrease", "type": "Any"}, {"lineNumber": 49, "col_offset": 69, "nodeName": "min_impurity_split", "type": "Any"}, {"lineNumber": 50, "col_offset": 63, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 50, "col_offset": 85, "nodeName": "presort", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "DecisionTreeRegressor", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "ModelError", "type": "Type[skater.util.exceptions.ModelError]"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "param_grid", "type": "Any"}, {"lineNumber": 83, "col_offset": 101, "nodeName": "search_space", "type": "Union[Dict[str, Union[List[str], List[int]]], Any]"}, {"lineNumber": 84, "col_offset": 64, "nodeName": "n_iter_search", "type": "Any"}, {"lineNumber": 84, "col_offset": 86, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 84, "col_offset": 107, "nodeName": "seed", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "random_search_estimator", "type": "Any"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "model_inst", "type": "skater.model.base.ModelType"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "fidelity_score", "type": "Any"}, {"lineNumber": 101, "col_offset": 55, "nodeName": "impurity_threshold", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 127, "col_offset": 78, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "MatplotlibUnavailableError", "type": "Type[skater.util.exceptions.MatplotlibUnavailableError]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "MatplotlibDisplayError", "type": "Type[skater.util.exceptions.MatplotlibDisplayError]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "plt", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "imshow", "type": "Any"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "img", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "colorbar", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "cax", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "imshow", "type": "Any"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "img", "type": "Any"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 36, "col_offset": 52, "nodeName": "item", "type": "str"}, {"lineNumber": 36, "col_offset": 61, "nodeName": "item", "type": "str"}, {"lineNumber": 36, "col_offset": 69, "nodeName": "splitter_types", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 58, "nodeName": "splitter", "type": "Union[Any, str]"}, {"lineNumber": 54, "col_offset": 67, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 55, "col_offset": 66, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 56, "col_offset": 74, "nodeName": "min_weight_fraction_leaf", "type": "Any"}, {"lineNumber": 57, "col_offset": 62, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 58, "col_offset": 62, "nodeName": "seed", "type": "Any"}, {"lineNumber": 58, "col_offset": 83, "nodeName": "max_leaf_nodes", "type": "Any"}, {"lineNumber": 59, "col_offset": 71, "nodeName": "min_impurity_decrease", "type": "Any"}, {"lineNumber": 60, "col_offset": 68, "nodeName": "min_impurity_split", "type": "Any"}, {"lineNumber": 60, "col_offset": 96, "nodeName": "presort", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "exceptions", "type": "module"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "criterion_types", "type": "Dict[str, Dict[str, List[str]]]"}, {"lineNumber": 83, "col_offset": 67, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 84, "col_offset": 107, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 101, "col_offset": 55, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "exceptions", "type": "module"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "exceptions", "type": "module"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "plt", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "plt", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "plt", "type": "Any"}, {"lineNumber": 36, "col_offset": 69, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 143, "col_offset": 43, "nodeName": "get_cmap", "type": "Any"}, {"lineNumber": 71, "col_offset": 50, "nodeName": "self", "type": "TreeSurrogate"}, {"lineNumber": 143, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 143, "col_offset": 59, "nodeName": "get_colorscheme", "type": "Any"}, {"lineNumber": 143, "col_offset": 43, "nodeName": "plt", "type": "Any"}, {"lineNumber": 143, "col_offset": 59, "nodeName": "graph_inst", "type": "Any"}]