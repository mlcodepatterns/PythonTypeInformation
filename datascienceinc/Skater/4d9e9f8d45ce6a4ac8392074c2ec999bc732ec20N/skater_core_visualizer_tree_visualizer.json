[{"lineNumber": 41, "col_offset": 0, "nodeName": "_get_colors", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "_set_node_properites", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "_global_decisions_as_txt", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "_local_decisions_as_txt", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "tree_to_text", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "color_schemes", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "TREE_LEAF", "type": "int"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "TREE_UNDEFINED", "type": "int"}, {"lineNumber": 10, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "color_index", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "colors", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "colors", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "dot_data", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "c_n", "type": "Optional[Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "graph", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "value", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "graph_instance", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "edges", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "ed", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "edges", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "graph", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "other_str_pattern", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "greater_or_less", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "node_indexes", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "indices", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "leaf_id", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "depth", "type": "int"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "node_index", "type": "Any"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "node_indexes", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "label_value_color", "type": "str"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "split_criteria_color", "type": "str"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "if_else_quotes_color", "type": "str"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "left_nodes", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "children_left", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "right_nodes", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "children_right", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "criterias", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "feature_names", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "value", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "randint", "type": "Any"}, {"lineNumber": 43, "col_offset": 59, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "classes", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "export_graphviz", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "est", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "graph_from_dot_data", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "get_node_list", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "estimator_type", "type": "Any"}, {"lineNumber": 94, "col_offset": 55, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 94, "col_offset": 68, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 94, "col_offset": 83, "nodeName": "enable_node_id", "type": "Any"}, {"lineNumber": 94, "col_offset": 99, "nodeName": "coverage", "type": "Any"}, {"lineNumber": 96, "col_offset": 7, "nodeName": "estimator_type", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "colors", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "default_color", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "colors", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "colormap_reg", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "default_color", "type": "None"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "_set_node_properites", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "estimator_type", "type": "Any"}, {"lineNumber": 105, "col_offset": 60, "nodeName": "graph", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "offset", "type": "str"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "_recurse_tree", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 18, "nodeName": "l_nodes", "type": "Any"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "r_nodes", "type": "Any"}, {"lineNumber": 139, "col_offset": 36, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "decision_path", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "apply", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "offset", "type": "str"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 180, "col_offset": 7, "nodeName": "scope", "type": "Any"}, {"lineNumber": 11, "col_offset": 11, "nodeName": "MatplotlibUnavailableError", "type": "Type[skater.util.exceptions.MatplotlibUnavailableError]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "color_schemes", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "color_schemes", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "color_index", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "est_type", "type": "Any"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "dot_data", "type": "Any"}, {"lineNumber": 54, "col_offset": 59, "nodeName": "features", "type": "Any"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "c_n", "type": "Optional[Any]"}, {"lineNumber": 55, "col_offset": 46, "nodeName": "enable_node_id", "type": "Any"}, {"lineNumber": 55, "col_offset": 73, "nodeName": "coverage", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "pydotplus", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "graph_instance", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "color_list", "type": "Any"}, {"lineNumber": 105, "col_offset": 79, "nodeName": "colors", "type": "Any"}, {"lineNumber": 105, "col_offset": 101, "nodeName": "default_color", "type": "Optional[str]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "set_color", "type": "Any"}, {"lineNumber": 115, "col_offset": 7, "nodeName": "estimator_type", "type": "Any"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 124, "col_offset": 74, "nodeName": "str_type", "type": "str"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "depth", "type": "int"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "TREE_UNDEFINED", "type": "int"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "est", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "est", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "depth", "type": "int"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "leaf_id", "type": "Any"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "node_index", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "feature_value", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "depth", "type": "int"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "tree", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "tree", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "tree", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "i", "type": "Any"}, {"lineNumber": 177, "col_offset": 47, "nodeName": "feature", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "tree", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "_global_decisions_as_txt", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "estimator_type", "type": "Any"}, {"lineNumber": 181, "col_offset": 56, "nodeName": "label_value_color", "type": "str"}, {"lineNumber": 181, "col_offset": 75, "nodeName": "split_criteria_color", "type": "str"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "if_else_quotes_color", "type": "str"}, {"lineNumber": 182, "col_offset": 62, "nodeName": "values", "type": "Any"}, {"lineNumber": 182, "col_offset": 70, "nodeName": "feature_names", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 85, "nodeName": "criterias", "type": "Any"}, {"lineNumber": 182, "col_offset": 96, "nodeName": "left_nodes", "type": "Any"}, {"lineNumber": 182, "col_offset": 108, "nodeName": "right_nodes", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "_local_decisions_as_txt", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 39, "nodeName": "tree", "type": "Any"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "estimator_type", "type": "Any"}, {"lineNumber": 184, "col_offset": 61, "nodeName": "label_value_color", "type": "str"}, {"lineNumber": 184, "col_offset": 80, "nodeName": "split_criteria_color", "type": "str"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "if_else_quotes_color", "type": "str"}, {"lineNumber": 185, "col_offset": 61, "nodeName": "values", "type": "Any"}, {"lineNumber": 185, "col_offset": 69, "nodeName": "feature_names", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 84, "nodeName": "criterias", "type": "Any"}, {"lineNumber": 185, "col_offset": 95, "nodeName": "X", "type": "Any"}, {"lineNumber": 11, "col_offset": 11, "nodeName": "exceptions", "type": "module"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "dot_data", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "estimator_type", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "percent", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "hex_code", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "color_list", "type": "Any"}, {"lineNumber": 99, "col_offset": 59, "nodeName": "_get_colors", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 89, "nodeName": "seed", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "ed", "type": "Any"}, {"lineNumber": 115, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 115, "col_offset": 66, "nodeName": "v", "type": "Any"}, {"lineNumber": 122, "col_offset": 51, "nodeName": "if_else_color", "type": "Any"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "offset", "type": "str"}, {"lineNumber": 124, "col_offset": 58, "nodeName": "if_else_color", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "TREE_LEAF", "type": "int"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "offset", "type": "str"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "label_color", "type": "Any"}, {"lineNumber": 144, "col_offset": 47, "nodeName": "f_v", "type": "Any"}, {"lineNumber": 144, "col_offset": 54, "nodeName": "s_c", "type": "Any"}, {"lineNumber": 148, "col_offset": 58, "nodeName": "if_else_color", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "input_X", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "offset", "type": "str"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "label_color", "type": "Any"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "i", "type": "Any"}, {"lineNumber": 177, "col_offset": 47, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 80, "col_offset": 52, "nodeName": "percent", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "rgb2hex", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "set_fillcolor", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "hex_code", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "set_colorscheme", "type": "Any"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "color_names", "type": "Any"}, {"lineNumber": 99, "col_offset": 71, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 75, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "node", "type": "int"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "if_str_pattern", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "offset", "type": "str"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "node", "type": "int"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "left_node", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "_recurse_tree", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "left_node", "type": "Any"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "right_node", "type": "Any"}, {"lineNumber": 131, "col_offset": 53, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 39, "nodeName": "TREE_LEAF", "type": "int"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "_return_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 53, "nodeName": "est_type", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "input_X", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "input_X", "type": "Any"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "as_str_pattern", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "offset", "type": "str"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "node_index", "type": "Any"}, {"lineNumber": 158, "col_offset": 53, "nodeName": "feature_value", "type": "Any"}, {"lineNumber": 162, "col_offset": 39, "nodeName": "_return_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 53, "nodeName": "est_type", "type": "Any"}, {"lineNumber": 177, "col_offset": 47, "nodeName": "tree", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 72, "col_offset": 83, "nodeName": "TREE_UNDEFINED", "type": "int"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "set_fillcolor", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "set_fillcolor", "type": "Any"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "default_color", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "n_node_samples", "type": "Any"}, {"lineNumber": 79, "col_offset": 81, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "get_cmap", "type": "Any"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "color_names", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "graph_instance", "type": "Any"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "node", "type": "int"}, {"lineNumber": 131, "col_offset": 64, "nodeName": "left_node", "type": "Any"}, {"lineNumber": 131, "col_offset": 81, "nodeName": "depth", "type": "int"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "other_str_pattern", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "offset", "type": "str"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "right_node", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "_recurse_tree", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "left_node", "type": "Any"}, {"lineNumber": 134, "col_offset": 45, "nodeName": "right_node", "type": "Any"}, {"lineNumber": 134, "col_offset": 57, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "other_str_pattern", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "offset", "type": "str"}, {"lineNumber": 137, "col_offset": 63, "nodeName": "values", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "sign", "type": "str"}, {"lineNumber": 157, "col_offset": 36, "nodeName": "features", "type": "Any"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "greater_or_less", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 49, "nodeName": "feature_value", "type": "Any"}, {"lineNumber": 162, "col_offset": 63, "nodeName": "values", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "max", "type": "Callable"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "value", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "value", "type": "Any"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "node", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "color_names", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "node", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 79, "col_offset": 87, "nodeName": "n_node_samples", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "cm", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 74, "nodeName": "node", "type": "int"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "node", "type": "int"}, {"lineNumber": 134, "col_offset": 68, "nodeName": "right_node", "type": "Any"}, {"lineNumber": 134, "col_offset": 86, "nodeName": "depth", "type": "int"}, {"lineNumber": 137, "col_offset": 70, "nodeName": "node", "type": "int"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 157, "col_offset": 45, "nodeName": "node_index", "type": "Any"}, {"lineNumber": 159, "col_offset": 64, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 162, "col_offset": 70, "nodeName": "node_index", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 79, "col_offset": 57, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 79, "col_offset": 87, "nodeName": "tree_", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "plt", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 134, "col_offset": 79, "nodeName": "node", "type": "int"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 159, "col_offset": 75, "nodeName": "node_index", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 72, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 73, "col_offset": 61, "nodeName": "value", "type": "Any"}, {"lineNumber": 79, "col_offset": 61, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 79, "col_offset": 87, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "node", "type": "int"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "node_id", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "node", "type": "Any"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 61, "nodeName": "node", "type": "Any"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "node", "type": "Any"}]