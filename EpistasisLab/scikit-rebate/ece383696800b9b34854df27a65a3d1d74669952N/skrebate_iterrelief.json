[{"lineNumber": 22, "col_offset": 17, "nodeName": "BaseEstimator", "type": "Any"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "TransformerMixin", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "core_algorithm", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "core_algorithm", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "n_features_to_select", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "n_features_to_select", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "n_neighbors", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "n_neighbors", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "discrete_threshold", "type": "Any"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "discrete_threshold", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "weight_flag", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "weight_flag", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "X_mat", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "_y", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "total_num_features", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "distance_weights", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "iteration", "type": "int"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "weight_history", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "feature_importances_", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "history", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "weight_history", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "top_features_", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "ones", "type": "Any"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "total_num_features", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "iteration", "type": "int"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "core_fit", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "distance_weights", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "feature_weights", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "feature_importances_", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "no_diff", "type": "bool"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "no_diff", "type": "bool"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "distance_weights", "type": "Any"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "feature_weights", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "iteration", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 170, "col_offset": 36, "nodeName": "weight_history", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "fit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "X", "type": "Any"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "y", "type": "Any"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "lower", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "MultiSURF", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "fit", "type": "Any"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "X_mat", "type": "Any"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "_y", "type": "Any"}, {"lineNumber": 124, "col_offset": 53, "nodeName": "distance_weights", "type": "Any"}, {"lineNumber": 124, "col_offset": 71, "nodeName": "weight_flag", "type": "Any"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "total_num_features", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "core_fit", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "iteration", "type": "int"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "no_diff", "type": "bool"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "max", "type": "Callable"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "feature_weights", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "feature_weights", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "feature_importances_", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "core_algorithm", "type": "Any"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "n_features_to_select", "type": "Any"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "discrete_threshold", "type": "Any"}, {"lineNumber": 93, "col_offset": 81, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 93, "col_offset": 102, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "lower", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "MultiSURFstar", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "core", "type": "Any"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 124, "col_offset": 71, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "weight_history", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "feature_weights", "type": "Any"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 93, "col_offset": 81, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 93, "col_offset": 102, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "core_algorithm", "type": "Any"}, {"lineNumber": 96, "col_offset": 54, "nodeName": "n_features_to_select", "type": "Any"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "discrete_threshold", "type": "Any"}, {"lineNumber": 97, "col_offset": 85, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 97, "col_offset": 106, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "lower", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "SURF", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "w", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "w", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "feature_importances_", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "feature_weights", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "feature_weights", "type": "Any"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "feature_weights", "type": "Any"}, {"lineNumber": 164, "col_offset": 62, "nodeName": "mx", "type": "Any"}, {"lineNumber": 170, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 55, "nodeName": "weight_history", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "top_features_", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 96, "col_offset": 54, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 97, "col_offset": 85, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 97, "col_offset": 106, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "core_algorithm", "type": "Any"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "n_features_to_select", "type": "Any"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "discrete_threshold", "type": "Any"}, {"lineNumber": 101, "col_offset": 76, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 101, "col_offset": 97, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "lower", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "SURFstar", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "core_fit", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "feature_weights", "type": "Any"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "n_features_to_select", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 101, "col_offset": 76, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 101, "col_offset": 97, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "core_algorithm", "type": "Any"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "n_features_to_select", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "discrete_threshold", "type": "Any"}, {"lineNumber": 105, "col_offset": 80, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 105, "col_offset": 101, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "lower", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "ReliefF", "type": "Any"}, {"lineNumber": 164, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 105, "col_offset": 80, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 105, "col_offset": 101, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "core_algorithm", "type": "Any"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "n_features_to_select", "type": "Any"}, {"lineNumber": 108, "col_offset": 87, "nodeName": "n_neighbors", "type": "Any"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "discrete_threshold", "type": "Any"}, {"lineNumber": 109, "col_offset": 79, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 109, "col_offset": 100, "nodeName": "n_jobs", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 108, "col_offset": 87, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 109, "col_offset": 79, "nodeName": "self", "type": "IterRelief"}, {"lineNumber": 109, "col_offset": 100, "nodeName": "self", "type": "IterRelief"}]