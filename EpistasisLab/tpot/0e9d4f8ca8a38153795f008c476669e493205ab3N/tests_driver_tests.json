[{"lineNumber": 38, "col_offset": 0, "nodeName": "captured_output", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "test_scoring_function_argument", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "test_driver", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "test_driver_2", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "test_driver_3", "type": "Callable[[], Any]"}, {"lineNumber": 139, "col_offset": 0, "nodeName": "test_driver_4", "type": "Callable[[], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "test_driver_5", "type": "Callable[[], Any]"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "test_read_data_file", "type": "Callable[[], Any]"}, {"lineNumber": 313, "col_offset": 0, "nodeName": "_sort_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 317, "col_offset": 0, "nodeName": "test_positive_integer", "type": "Callable[[], Any]"}, {"lineNumber": 322, "col_offset": 0, "nodeName": "test_positive_integer_2", "type": "Callable[[], Any]"}, {"lineNumber": 327, "col_offset": 0, "nodeName": "test_positive_integer_3", "type": "Callable[[], Any]"}, {"lineNumber": 332, "col_offset": 0, "nodeName": "test_float_range", "type": "Callable[[], Any]"}, {"lineNumber": 337, "col_offset": 0, "nodeName": "test_float_range_2", "type": "Callable[[], Any]"}, {"lineNumber": 342, "col_offset": 0, "nodeName": "test_float_range_3", "type": "Callable[[], Any]"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "test_default_param", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "test_print_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "test_print_args_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "batcmd", "type": "str"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "ret_stdout", "type": "str"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "new_out", "type": "Union[_io.StringIO, StringIO.StringIO[nothing]]"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "new_err", "type": "Union[_io.StringIO, StringIO.StringIO[nothing]]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "old_out", "type": "IO[str]"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "old_err", "type": "IO[str]"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "assert_in", "type": "Any"}, {"lineNumber": 65, "col_offset": 58, "nodeName": "out", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assert_in", "type": "Any"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "assert_in", "type": "Any"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "out", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "assert_in", "type": "Any"}, {"lineNumber": 68, "col_offset": 83, "nodeName": "out", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "assert_in", "type": "Any"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "out", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "err", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "check_output", "type": "Callable[..., str]"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "batcmd", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 105, "col_offset": 54, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 131, "col_offset": 54, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 158, "col_offset": 50, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 180, "col_offset": 40, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "isfile", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "_read_data_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 207, "col_offset": 40, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "_read_data_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 33, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "recarray", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 319, "col_offset": 29, "nodeName": "positive_integer", "type": "Callable[[Any], int]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 329, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "positive_integer", "type": "Callable[[Any], int]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 339, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "float_range", "type": "Callable[[Any], float]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 344, "col_offset": 29, "nodeName": "float_range", "type": "Callable[[Any], float]"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "StringIO", "type": "Union[Type[_io.StringIO], Type[StringIO.StringIO[Any]]]"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "StringIO", "type": "Union[Type[_io.StringIO], Type[StringIO.StringIO[Any]]]"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "sys", "type": "module"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "sys", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "stdout", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "stderr", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "new_out", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "new_err", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "old_out", "type": "IO[str]"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "old_err", "type": "IO[str]"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "captured_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "err", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "load_scoring_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 58, "col_offset": 100, "nodeName": "__name__", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "err", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "captured_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "err", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "tpot_driver", "type": "Callable[[Any], None]"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "out", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "captured_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "err", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "tpot_driver", "type": "Callable[[Any], None]"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "out", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "captured_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "err", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "tpot_driver", "type": "Callable[[Any], None]"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "out", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 181, "col_offset": 9, "nodeName": "captured_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 181, "col_offset": 36, "nodeName": "err", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "tpot_driver", "type": "Callable[[Any], None]"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "out", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 199, "col_offset": 52, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "_get_arg_parser", "type": "Callable[[], argparse.ArgumentParser]"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "CROSSOVER_RATE", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "DISABLE_UPDATE_CHECK", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "GENERATIONS", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "INPUT_FILE", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "INPUT_SEPARATOR", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "MAX_EVAL_MINS", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "MUTATION_RATE", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "NUM_CV_FOLDS", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "NUM_JOBS", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "OFFSPRING_SIZE", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "OUTPUT_FILE", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "POPULATION_SIZE", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "RANDOM_STATE", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "SUBSAMPLE", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "SCORING_FN", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "TARGET_NAME", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "TPOT_MODE", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "VERBOSITY", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 281, "col_offset": 38, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "positive_integer", "type": "Callable[[Any], int]"}, {"lineNumber": 334, "col_offset": 18, "nodeName": "float_range", "type": "Callable[[Any], float]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "sys", "type": "module"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "sys", "type": "module"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "load_scoring_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 100, "nodeName": "test_scoring_function_argument", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "_get_arg_parser", "type": "Callable[[], argparse.ArgumentParser]"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "_get_arg_parser", "type": "Callable[[], argparse.ArgumentParser]"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "_get_arg_parser", "type": "Callable[[], argparse.ArgumentParser]"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "_get_arg_parser", "type": "Callable[[], argparse.ArgumentParser]"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "_get_arg_parser", "type": "Callable[[], argparse.ArgumentParser]"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "_get_arg_parser", "type": "Callable[[], argparse.ArgumentParser]"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "captured_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 244, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 244, "col_offset": 40, "nodeName": "err", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "_print_args", "type": "Callable[[Any], None]"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "out", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "_sort_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 37, "nodeName": "expected_output", "type": "str"}, {"lineNumber": 272, "col_offset": 55, "nodeName": "_sort_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 67, "nodeName": "output", "type": "Any"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "captured_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 282, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 282, "col_offset": 40, "nodeName": "err", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "_print_args", "type": "Callable[[Any], None]"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "out", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "_sort_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 37, "nodeName": "expected_output", "type": "str"}, {"lineNumber": 310, "col_offset": 55, "nodeName": "_sort_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 67, "nodeName": "output", "type": "Any"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "sys", "type": "module"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "sys", "type": "module"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "load_scoring_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "load_scoring_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "out", "type": "Any"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "err", "type": "Any"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "text", "type": "str"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "decode", "type": "Callable[..., unicode]"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "ret_stdout", "type": "str"}]