[{"lineNumber": 34, "col_offset": 0, "nodeName": "_pre_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "NUM_TESTS", "type": "int"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "check_pipeline", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "bad_pipeline", "type": "bool"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "num_test", "type": "int"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "expr", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "bad_pipeline", "type": "bool"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "num_test", "type": "int"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "NUM_TESTS", "type": "int"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "BaseException", "type": "Type[BaseException]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "num_test", "type": "int"}, {"lineNumber": 59, "col_offset": 89, "nodeName": "arg", "type": "Any"}, {"lineNumber": 59, "col_offset": 97, "nodeName": "arg", "type": "Any"}, {"lineNumber": 59, "col_offset": 104, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "expr", "type": "List[nothing]"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "num_test_expr", "type": "int"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "expr_tuple", "type": "Union[Any, List[nothing], Tuple[Union[Any, List[nothing]]]]"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "expr_test", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "expr_tuple", "type": "Union[Any, List[nothing], Tuple[Union[Any, List[nothing]]]]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "message", "type": "str"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 59, "col_offset": 59, "nodeName": "arg", "type": "Any"}, {"lineNumber": 59, "col_offset": 64, "nodeName": "Individual", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "arg", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "expr", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "pipeline_code", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "sklearn_pipeline", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "bad_pipeline", "type": "bool"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "_update_pbar", "type": "Any"}, {"lineNumber": 59, "col_offset": 64, "nodeName": "creator", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "_toolbox", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "warnings", "type": "module"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "warnings", "type": "module"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "expr", "type": "List[nothing]"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "num_test_expr", "type": "int"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 74, "col_offset": 52, "nodeName": "expr", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 74, "col_offset": 58, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 74, "col_offset": 71, "nodeName": "expr", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "generate_pipeline_code", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "operators", "type": "Any"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "pipeline_code", "type": "Any"}, {"lineNumber": 81, "col_offset": 63, "nodeName": "operators_context", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "fit", "type": "Any"}, {"lineNumber": 83, "col_offset": 45, "nodeName": "pretest_X", "type": "Any"}, {"lineNumber": 83, "col_offset": 61, "nodeName": "pretest_y", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "num_test", "type": "int"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "e", "type": "BaseException"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "message", "type": "str"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "NUM_TESTS", "type": "int"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "func", "type": "Any"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "num_test_expr", "type": "int"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "expr_to_tree", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "expr_test", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "_pset", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "sklearn_pipeline", "type": "Any"}, {"lineNumber": 83, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "func", "type": "Any"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "self", "type": "Any"}]