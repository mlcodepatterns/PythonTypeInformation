[{"lineNumber": 26, "col_offset": 29, "nodeName": "Classifier", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "import_hash", "type": "Dict[str, List[str]]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "sklearn_class", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "arg_types", "type": "Tuple[Type[float], Type[int]]"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "C", "type": "Union[float, Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "penalty_values", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "penalty_selection", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "dual", "type": "bool"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "min", "type": "Callable"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "penalty_values", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "penalty_selection", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "solver", "type": "str"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "solver", "type": "str"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "C", "type": "Union[float, Any]"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "penalty_selection", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "dual", "type": "bool"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "solver", "type": "str"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "max", "type": "Callable"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "C", "type": "Any"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 54, "col_offset": 53, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 57, "nodeName": "penalty_values", "type": "List[str]"}]