[{"lineNumber": 47, "col_offset": 0, "nodeName": "captured_output", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "test_scoring_function_argument", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "test_driver", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "test_driver_2", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "test_driver_3", "type": "Callable[[], Any]"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "test_driver_4", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 0, "nodeName": "test_driver_5", "type": "Callable[[], Any]"}, {"lineNumber": 204, "col_offset": 0, "nodeName": "test_read_data_file", "type": "Callable[[], Any]"}, {"lineNumber": 344, "col_offset": 0, "nodeName": "_sort_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 348, "col_offset": 0, "nodeName": "test_positive_integer", "type": "Callable[[], Any]"}, {"lineNumber": 353, "col_offset": 0, "nodeName": "test_positive_integer_2", "type": "Callable[[], Any]"}, {"lineNumber": 358, "col_offset": 0, "nodeName": "test_positive_integer_3", "type": "Callable[[], Any]"}, {"lineNumber": 363, "col_offset": 0, "nodeName": "test_float_range", "type": "Callable[[], Any]"}, {"lineNumber": 368, "col_offset": 0, "nodeName": "test_float_range_2", "type": "Callable[[], Any]"}, {"lineNumber": 373, "col_offset": 0, "nodeName": "test_float_range_3", "type": "Callable[[], Any]"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "test_default_param", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "test_print_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "test_print_args_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "batcmd", "type": "str"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "ret_stdout", "type": "str"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "new_out", "type": "Union[_io.StringIO, StringIO.StringIO[nothing]]"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "new_err", "type": "Union[_io.StringIO, StringIO.StringIO[nothing]]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "old_out", "type": "IO[str]"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "old_err", "type": "IO[str]"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assert_in", "type": "Any"}, {"lineNumber": 74, "col_offset": 58, "nodeName": "out", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assert_in", "type": "Any"}, {"lineNumber": 75, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assert_in", "type": "Any"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "out", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assert_in", "type": "Any"}, {"lineNumber": 77, "col_offset": 83, "nodeName": "out", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "assert_in", "type": "Any"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "out", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "err", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "check_output", "type": "Callable[..., str]"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "batcmd", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 113, "col_offset": 54, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 139, "col_offset": 54, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 166, "col_offset": 50, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 194, "col_offset": 40, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "isfile", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 212, "col_offset": 40, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 213, "col_offset": 30, "nodeName": "_read_data_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "_read_data_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 222, "col_offset": 33, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 345, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 350, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 350, "col_offset": 29, "nodeName": "positive_integer", "type": "Callable[[Any], int]"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 360, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 360, "col_offset": 29, "nodeName": "positive_integer", "type": "Callable[[Any], int]"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 370, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "float_range", "type": "Callable[[Any], float]"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 375, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 375, "col_offset": 29, "nodeName": "float_range", "type": "Callable[[Any], float]"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "StringIO", "type": "Union[Type[_io.StringIO], Type[StringIO.StringIO[Any]]]"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "StringIO", "type": "Union[Type[_io.StringIO], Type[StringIO.StringIO[Any]]]"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "sys", "type": "module"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "sys", "type": "module"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "stdout", "type": "Union[_io.StringIO, StringIO.StringIO[nothing]]"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "stderr", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "new_out", "type": "Union[_io.StringIO, StringIO.StringIO[nothing]]"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "new_err", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "old_out", "type": "IO[str]"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "old_err", "type": "IO[str]"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "captured_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "err", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "load_scoring_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 67, "col_offset": 100, "nodeName": "__name__", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "err", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 108, "col_offset": 9, "nodeName": "captured_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "err", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "tpot_driver", "type": "Callable[[Any], None]"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "out", "type": "Any"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 135, "col_offset": 9, "nodeName": "captured_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 135, "col_offset": 36, "nodeName": "err", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "tpot_driver", "type": "Callable[[Any], None]"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "out", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 161, "col_offset": 9, "nodeName": "captured_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 161, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 161, "col_offset": 36, "nodeName": "err", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "tpot_driver", "type": "Callable[[Any], None]"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "out", "type": "Any"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "ret_val", "type": "float"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "SkipTest", "type": "Any"}, {"lineNumber": 195, "col_offset": 9, "nodeName": "captured_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 195, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "err", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "tpot_driver", "type": "Callable[[Any], None]"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "out", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 213, "col_offset": 52, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "pd", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "_get_arg_parser", "type": "Callable[[], argparse.ArgumentParser]"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "CONFIG_FILE", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "CROSSOVER_RATE", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "EARLY_STOP", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "DISABLE_UPDATE_CHECK", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "GENERATIONS", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "INPUT_FILE", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "INPUT_SEPARATOR", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "MAX_EVAL_MINS", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "MAX_TIME_MINS", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "MEMORY", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "MUTATION_RATE", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "NUM_CV_FOLDS", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "NUM_JOBS", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "OFFSPRING_SIZE", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "OUTPUT_FILE", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "POPULATION_SIZE", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "RANDOM_STATE", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "SUBSAMPLE", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "SCORING_FN", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "TARGET_NAME", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "TEMPLATE", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "TPOT_MODE", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "VERBOSITY", "type": "Any"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 266, "col_offset": 38, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 309, "col_offset": 38, "nodeName": "args_list", "type": "List[str]"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "positive_integer", "type": "Callable[[Any], int]"}, {"lineNumber": 365, "col_offset": 18, "nodeName": "float_range", "type": "Callable[[Any], float]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "sys", "type": "module"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "sys", "type": "module"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "load_scoring_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 100, "nodeName": "test_scoring_function_argument", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "_get_arg_parser", "type": "Callable[[], argparse.ArgumentParser]"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "_get_arg_parser", "type": "Callable[[], argparse.ArgumentParser]"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "_get_arg_parser", "type": "Callable[[], argparse.ArgumentParser]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "LooseVersion", "type": "Type[distutils.version.LooseVersion]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "LooseVersion", "type": "Type[distutils.version.LooseVersion]"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "nose", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "_get_arg_parser", "type": "Callable[[], argparse.ArgumentParser]"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "_get_arg_parser", "type": "Callable[[], argparse.ArgumentParser]"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "_get_arg_parser", "type": "Callable[[], argparse.ArgumentParser]"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "captured_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 267, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 267, "col_offset": 40, "nodeName": "err", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "_print_args", "type": "Callable[[Any], None]"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "out", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "_sort_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 37, "nodeName": "expected_output", "type": "str"}, {"lineNumber": 299, "col_offset": 55, "nodeName": "_sort_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 67, "nodeName": "output", "type": "Any"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 310, "col_offset": 13, "nodeName": "captured_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 310, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 310, "col_offset": 40, "nodeName": "err", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "_print_args", "type": "Callable[[Any], None]"}, {"lineNumber": 311, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "out", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "_sort_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 341, "col_offset": 37, "nodeName": "expected_output", "type": "str"}, {"lineNumber": 341, "col_offset": 55, "nodeName": "_sort_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 341, "col_offset": 67, "nodeName": "output", "type": "Any"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "sys", "type": "module"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "sys", "type": "module"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "load_scoring_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "load_scoring_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "out", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "err", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "self", "type": "ParserTest"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "text", "type": "str"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "ret_stdout", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "decode", "type": "Callable[..., unicode]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "ret_stdout", "type": "str"}]