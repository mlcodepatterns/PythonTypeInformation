[{"lineNumber": 382, "col_offset": 0, "nodeName": "_assert_series_equal", "type": "Callable[..., Any]"}, {"lineNumber": 414, "col_offset": 0, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 483, "col_offset": 0, "nodeName": "assert_data_frame_almost_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "callers_filename", "type": "str"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "data_path", "type": "str"}, {"lineNumber": 315, "col_offset": 11, "nodeName": "data_path", "type": "str"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "max_idx", "type": "Any"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "max_arr1", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "max_arr2", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "sign_arr1", "type": "Any"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "sign_arr2", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "wrn", "type": "Any"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "differences", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "special_cases", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "md", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "md", "type": "Optional[Dict[nothing, nothing]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "metadata", "type": "Dict[str, str]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "metadata", "type": "Dict[nothing, nothing]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "metadata", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "_filename", "type": "Any"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "filename", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "_test_dir", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "argv", "type": "List[Union[Any, str]]"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "PY3", "type": "Any"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 313, "col_offset": 11, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "path", "type": "str"}, {"lineNumber": 314, "col_offset": 35, "nodeName": "subfolder", "type": "Any"}, {"lineNumber": 314, "col_offset": 46, "nodeName": "fn", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 351, "col_offset": 11, "nodeName": "ignore_method_names", "type": "Any"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "_assert_frame_equal", "type": "Callable[..., Any]"}, {"lineNumber": 355, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 355, "col_offset": 38, "nodeName": "samples", "type": "Any"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "_assert_frame_equal", "type": "Callable[..., Any]"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "features", "type": "Any"}, {"lineNumber": 360, "col_offset": 39, "nodeName": "features", "type": "Any"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "_assert_frame_equal", "type": "Callable[..., Any]"}, {"lineNumber": 365, "col_offset": 24, "nodeName": "biplot_scores", "type": "Any"}, {"lineNumber": 365, "col_offset": 44, "nodeName": "biplot_scores", "type": "Any"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "ignore_biplot_scores_labels", "type": "Any"}, {"lineNumber": 367, "col_offset": 24, "nodeName": "ignore_biplot_scores_labels", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "_assert_frame_equal", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "sample_constraints", "type": "Any"}, {"lineNumber": 370, "col_offset": 49, "nodeName": "sample_constraints", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "_assert_series_equal", "type": "Callable[..., Any]"}, {"lineNumber": 374, "col_offset": 25, "nodeName": "eigvals", "type": "Any"}, {"lineNumber": 374, "col_offset": 39, "nodeName": "eigvals", "type": "Any"}, {"lineNumber": 374, "col_offset": 54, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "_assert_series_equal", "type": "Callable[..., Any]"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "proportion_explained", "type": "Any"}, {"lineNumber": 377, "col_offset": 52, "nodeName": "proportion_explained", "type": "Any"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "left_values", "type": "Any"}, {"lineNumber": 400, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "right_values", "type": "Any"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "values", "type": "Any"}, {"lineNumber": 403, "col_offset": 11, "nodeName": "ignore_directionality", "type": "Any"}, {"lineNumber": 446, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 446, "col_offset": 22, "nodeName": "arr1", "type": "Any"}, {"lineNumber": 447, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 447, "col_offset": 22, "nodeName": "arr2", "type": "Any"}, {"lineNumber": 449, "col_offset": 7, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 449, "col_offset": 21, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 457, "col_offset": 14, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "sign", "type": "Any"}, {"lineNumber": 461, "col_offset": 24, "nodeName": "max_arr1", "type": "Any"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "sign", "type": "Any"}, {"lineNumber": 462, "col_offset": 24, "nodeName": "max_arr2", "type": "Any"}, {"lineNumber": 466, "col_offset": 10, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 467, "col_offset": 18, "nodeName": "sign_arr1", "type": "Any"}, {"lineNumber": 467, "col_offset": 30, "nodeName": "sign_arr2", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "differences", "type": "Any"}, {"lineNumber": 480, "col_offset": 31, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 520, "col_offset": 27, "nodeName": "left", "type": "Any"}, {"lineNumber": 520, "col_offset": 33, "nodeName": "right", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "assert_index_equal", "type": "Any"}, {"lineNumber": 532, "col_offset": 27, "nodeName": "index", "type": "Any"}, {"lineNumber": 532, "col_offset": 39, "nodeName": "index", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "PY3", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "PY3", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertReallyEqual", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertReallyEqual", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertReallyEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertReallyEqual", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertReallyEqual", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertReallyEqual", "type": "Any"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertReallyNotEqual", "type": "Any"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertReallyNotEqual", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 145, "col_offset": 44, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 188, "col_offset": 14, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 203, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 208, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 211, "col_offset": 14, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 254, "col_offset": 41, "nodeName": "filename", "type": "Any"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "_filename", "type": "Any"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 313, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 313, "col_offset": 27, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 313, "col_offset": 43, "nodeName": "callers_filename", "type": "str"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "short_method_name", "type": "Any"}, {"lineNumber": 352, "col_offset": 49, "nodeName": "short_method_name", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "long_method_name", "type": "Any"}, {"lineNumber": 353, "col_offset": 48, "nodeName": "long_method_name", "type": "Any"}, {"lineNumber": 355, "col_offset": 24, "nodeName": "left", "type": "Any"}, {"lineNumber": 355, "col_offset": 38, "nodeName": "right", "type": "Any"}, {"lineNumber": 356, "col_offset": 39, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 357, "col_offset": 46, "nodeName": "ignore_directionality", "type": "Any"}, {"lineNumber": 358, "col_offset": 32, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "left", "type": "Any"}, {"lineNumber": 360, "col_offset": 39, "nodeName": "right", "type": "Any"}, {"lineNumber": 361, "col_offset": 39, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 362, "col_offset": 46, "nodeName": "ignore_directionality", "type": "Any"}, {"lineNumber": 363, "col_offset": 32, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 365, "col_offset": 24, "nodeName": "left", "type": "Any"}, {"lineNumber": 365, "col_offset": 44, "nodeName": "right", "type": "Any"}, {"lineNumber": 368, "col_offset": 32, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "left", "type": "Any"}, {"lineNumber": 370, "col_offset": 49, "nodeName": "right", "type": "Any"}, {"lineNumber": 371, "col_offset": 39, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 372, "col_offset": 32, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 374, "col_offset": 25, "nodeName": "left", "type": "Any"}, {"lineNumber": 374, "col_offset": 39, "nodeName": "right", "type": "Any"}, {"lineNumber": 375, "col_offset": 33, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "left", "type": "Any"}, {"lineNumber": 377, "col_offset": 52, "nodeName": "right", "type": "Any"}, {"lineNumber": 379, "col_offset": 33, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 384, "col_offset": 7, "nodeName": "left_s", "type": "Any"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "right_s", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 387, "col_offset": 32, "nodeName": "values", "type": "Any"}, {"lineNumber": 387, "col_offset": 47, "nodeName": "values", "type": "Any"}, {"lineNumber": 389, "col_offset": 15, "nodeName": "ignore_index", "type": "Any"}, {"lineNumber": 397, "col_offset": 7, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 397, "col_offset": 26, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 400, "col_offset": 22, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 406, "col_offset": 32, "nodeName": "left_values", "type": "Any"}, {"lineNumber": 406, "col_offset": 45, "nodeName": "right_values", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 408, "col_offset": 15, "nodeName": "ignore_index", "type": "Any"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "ignore_columns", "type": "Any"}, {"lineNumber": 446, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 446, "col_offset": 34, "nodeName": "float64", "type": "Any"}, {"lineNumber": 447, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 447, "col_offset": 34, "nodeName": "float64", "type": "Any"}, {"lineNumber": 449, "col_offset": 7, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 449, "col_offset": 21, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 450, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 466, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 472, "col_offset": 16, "nodeName": "wrn", "type": "Any"}, {"lineNumber": 475, "col_offset": 51, "nodeName": "differences", "type": "Any"}, {"lineNumber": 478, "col_offset": 16, "nodeName": "special_cases", "type": "Any"}, {"lineNumber": 480, "col_offset": 11, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 480, "col_offset": 18, "nodeName": "differences", "type": "Any"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "pdt", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "pdt", "type": "Any"}, {"lineNumber": 532, "col_offset": 27, "nodeName": "left", "type": "Any"}, {"lineNumber": 532, "col_offset": 39, "nodeName": "right", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 58, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 117, "col_offset": 51, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "obj", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "obj", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "obj", "type": "Any"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 188, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 190, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 194, "col_offset": 31, "nodeName": "md", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 203, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 208, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 211, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "core", "type": "Any"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "argv", "type": "List[Union[Any, str]]"}, {"lineNumber": 277, "col_offset": 47, "nodeName": "_test_dir", "type": "Any"}, {"lineNumber": 312, "col_offset": 23, "nodeName": "getouterframes", "type": "Callable[..., List[inspect.FrameInfo]]"}, {"lineNumber": 313, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 313, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 349, "col_offset": 21, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 349, "col_offset": 26, "nodeName": "left", "type": "Any"}, {"lineNumber": 349, "col_offset": 35, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 349, "col_offset": 40, "nodeName": "right", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "npt", "type": "module"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "left", "type": "Any"}, {"lineNumber": 352, "col_offset": 49, "nodeName": "right", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "npt", "type": "module"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "left", "type": "Any"}, {"lineNumber": 353, "col_offset": 48, "nodeName": "right", "type": "Any"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "left_s", "type": "Any"}, {"lineNumber": 385, "col_offset": 34, "nodeName": "right_s", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "npt", "type": "module"}, {"lineNumber": 387, "col_offset": 32, "nodeName": "left_s", "type": "Any"}, {"lineNumber": 387, "col_offset": 47, "nodeName": "right_s", "type": "Any"}, {"lineNumber": 388, "col_offset": 40, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "assert_index_equal", "type": "Any"}, {"lineNumber": 390, "col_offset": 31, "nodeName": "index", "type": "Any"}, {"lineNumber": 390, "col_offset": 45, "nodeName": "index", "type": "Any"}, {"lineNumber": 398, "col_offset": 15, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 398, "col_offset": 35, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "left_values", "type": "Any"}, {"lineNumber": 404, "col_offset": 25, "nodeName": "right_values", "type": "numpy.ndarray"}, {"lineNumber": 404, "col_offset": 40, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 404, "col_offset": 57, "nodeName": "left_values", "type": "Any"}, {"lineNumber": 405, "col_offset": 57, "nodeName": "right_values", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "npt", "type": "module"}, {"lineNumber": 406, "col_offset": 67, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "assert_index_equal", "type": "Any"}, {"lineNumber": 409, "col_offset": 31, "nodeName": "index", "type": "Any"}, {"lineNumber": 409, "col_offset": 46, "nodeName": "index", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "assert_index_equal", "type": "Any"}, {"lineNumber": 411, "col_offset": 31, "nodeName": "columns", "type": "Any"}, {"lineNumber": 411, "col_offset": 48, "nodeName": "columns", "type": "Any"}, {"lineNumber": 446, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 447, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 451, "col_offset": 67, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 452, "col_offset": 67, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 457, "col_offset": 14, "nodeName": "abs", "type": "Any"}, {"lineNumber": 457, "col_offset": 21, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 458, "col_offset": 20, "nodeName": "max_idx", "type": "Any"}, {"lineNumber": 459, "col_offset": 20, "nodeName": "max_idx", "type": "Any"}, {"lineNumber": 475, "col_offset": 22, "nodeName": "isfinite", "type": "Any"}, {"lineNumber": 475, "col_offset": 34, "nodeName": "differences", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "cmp", "type": "Callable[[Any, Any], int]"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "cmp", "type": "Callable[[Any, Any], int]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "b", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "cmp", "type": "Callable[[Any, Any], int]"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "cmp", "type": "Callable[[Any, Any], int]"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "a", "type": "Any"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 58, "nodeName": "pd", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "md", "type": "Optional[Dict[nothing, nothing]]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "obj", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 117, "col_offset": 51, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "obj", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 190, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "pd", "type": "Any"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 192, "col_offset": 45, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "obj", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "obj", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "argv", "type": "List[Union[Any, str]]"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "argv", "type": "List[Union[Any, str]]"}, {"lineNumber": 277, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 23, "nodeName": "inspect", "type": "module"}, {"lineNumber": 312, "col_offset": 46, "nodeName": "currentframe", "type": "Callable[[], Optional[types.FrameType]]"}, {"lineNumber": 313, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 390, "col_offset": 31, "nodeName": "left_s", "type": "Any"}, {"lineNumber": 390, "col_offset": 45, "nodeName": "right_s", "type": "Any"}, {"lineNumber": 409, "col_offset": 31, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 409, "col_offset": 46, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 411, "col_offset": 31, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 411, "col_offset": 48, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 451, "col_offset": 67, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 452, "col_offset": 67, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 457, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 458, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 459, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 475, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "md", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "obj", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 312, "col_offset": 46, "nodeName": "inspect", "type": "module"}, {"lineNumber": 458, "col_offset": 35, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 459, "col_offset": 35, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 458, "col_offset": 35, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 459, "col_offset": 35, "nodeName": "arr2", "type": "numpy.ndarray"}]