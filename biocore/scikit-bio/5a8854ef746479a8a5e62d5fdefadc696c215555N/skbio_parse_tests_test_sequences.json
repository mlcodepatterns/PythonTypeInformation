[{"lineNumber": 24, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "GenericFastaTest", "type": "Type[GenericFastaTest]"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 602, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "oneseq", "type": "List[str]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "multiline", "type": "List[str]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "oneX", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "nolabels", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "empty", "type": "List[nothing]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "oneseq_w_gt", "type": "List[str]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "FASTQ_EXAMPLE", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "FASTQ_EXAMPLE_2", "type": "List[str]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "_fake_headers", "type": "List[str]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "temp", "type": "List[str]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "temp", "type": "List[str]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "single_family", "type": "List[str]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "headers", "type": "List[str]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "structure", "type": "str"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "out_sequences", "type": "Dict[Any, str]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "fake_record", "type": "List[str]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "num_records", "type": "int"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "s_in", "type": "str"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "s_out", "type": "str"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "s_in", "type": "str"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "s_out", "type": "str"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "s_in", "type": "str"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "s_out", "type": "str"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "GenericFastaTest"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "GenericFastaTest"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "GenericFastaTest"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "GenericFastaTest"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "GenericFastaTest"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "GenericFastaTest"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "RecordError", "type": "Type[skbio.core.exception.RecordError]"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "RecordError", "type": "Type[skbio.core.exception.RecordError]"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "line1", "type": "None"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "infile", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "c", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "RecordError", "type": "Type[skbio.core.exception.RecordError]"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "ParseFastqTests"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "ParseFastqTests"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "label", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "seq", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "qual", "type": "Any"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "parse_fastq", "type": "Any"}, {"lineNumber": 123, "col_offset": 44, "nodeName": "FASTQ_EXAMPLE", "type": "List[str]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "RecordError", "type": "Type[skbio.core.exception.RecordError]"}, {"lineNumber": 234, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 237, "col_offset": 26, "nodeName": "RecordError", "type": "Type[skbio.core.exception.RecordError]"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "RecordError", "type": "Type[skbio.core.exception.RecordError]"}, {"lineNumber": 254, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "MinimalRfamParser", "type": "Any"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "_fake_record_bad_sequence_1", "type": "List[str]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 269, "col_offset": 26, "nodeName": "RecordError", "type": "Type[skbio.core.exception.RecordError]"}, {"lineNumber": 269, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "MinimalRfamParser", "type": "Any"}, {"lineNumber": 297, "col_offset": 35, "nodeName": "_fake_two_records", "type": "List[str]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 303, "col_offset": 37, "nodeName": "headers", "type": "List[str]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 304, "col_offset": 25, "nodeName": "out_sequences", "type": "Dict[Any, str]"}, {"lineNumber": 304, "col_offset": 40, "nodeName": "sequences", "type": "Dict[str, str]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 37, "nodeName": "structure", "type": "str"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 318, "col_offset": 17, "nodeName": "RfamFinder", "type": "Any"}, {"lineNumber": 318, "col_offset": 28, "nodeName": "fake_record", "type": "List[str]"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "num_records", "type": "int"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "num_records", "type": "int"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 332, "col_offset": 19, "nodeName": "ChangedSequence", "type": "Any"}, {"lineNumber": 332, "col_offset": 35, "nodeName": "s_in", "type": "str"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 25, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 334, "col_offset": 35, "nodeName": "s_out", "type": "str"}, {"lineNumber": 340, "col_offset": 19, "nodeName": "ChangedSequence", "type": "Any"}, {"lineNumber": 340, "col_offset": 35, "nodeName": "s_in", "type": "str"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 25, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 342, "col_offset": 35, "nodeName": "s_out", "type": "str"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "ChangedSequence", "type": "Any"}, {"lineNumber": 347, "col_offset": 35, "nodeName": "s_in", "type": "str"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 349, "col_offset": 35, "nodeName": "s_out", "type": "str"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "parse_fasta", "type": "Any"}, {"lineNumber": 50, "col_offset": 57, "nodeName": "nolabels", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "parse_fasta", "type": "Any"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "parse_fasta", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "oneseq", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "parse_fasta", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "multiline", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "parse_fasta", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "oneseq_w_gt", "type": "List[str]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "parse_fasta", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "threeseq", "type": "List[str]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 108, "col_offset": 45, "nodeName": "parse_fasta", "type": "Any"}, {"lineNumber": 108, "col_offset": 57, "nodeName": "twogood", "type": "List[str]"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "parse_fasta", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "twogood", "type": "List[str]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "f", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "FASTQ_EXAMPLE", "type": "str"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "FASTQ_EXAMPLE_2", "type": "str"}, {"lineNumber": 123, "col_offset": 44, "nodeName": "self", "type": "ParseFastqTests"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "seq", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "qual", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "FastqParseError", "type": "Type[skbio.core.exception.FastqParseError]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "single_family", "type": "str"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "is_empty_or_html", "type": "Any"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "line", "type": "str"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "is_empty_or_html", "type": "Any"}, {"lineNumber": 181, "col_offset": 42, "nodeName": "line", "type": "str"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "is_empty_or_html", "type": "Any"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "line", "type": "str"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "is_empty_or_html", "type": "Any"}, {"lineNumber": 185, "col_offset": 42, "nodeName": "line", "type": "str"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "is_empty_or_html", "type": "Any"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "line", "type": "str"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "is_rfam_header_line", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "is_rfam_header_line", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "is_rfam_header_line", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "is_rfam_header_line", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "is_rfam_header_line", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "is_rfam_header_line", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "is_rfam_header_line", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "is_rfam_header_line", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "is_rfam_seq_line", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "is_rfam_seq_line", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "is_rfam_seq_line", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "is_rfam_seq_line", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "is_rfam_seq_line", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "is_rfam_seq_line", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "is_rfam_structure_line", "type": "Any"}, {"lineNumber": 218, "col_offset": 48, "nodeName": "s", "type": "str"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "is_rfam_structure_line", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "is_rfam_structure_line", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "is_rfam_structure_line", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "is_rfam_structure_line", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "is_rfam_structure_line", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "is_rfam_structure_line", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "is_rfam_structure_line", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "is_rfam_structure_line", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "is_rfam_structure_line", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "MinimalRfamParser", "type": "Any"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "_fake_record_no_sequences", "type": "List[str]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "MinimalRfamParser", "type": "Any"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "_fake_record_no_structure", "type": "List[str]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "MinimalRfamParser", "type": "Any"}, {"lineNumber": 255, "col_offset": 30, "nodeName": "_fake_record_bad_sequence_1", "type": "List[str]"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "sequence_count", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "MinimalRfamParser", "type": "Any"}, {"lineNumber": 270, "col_offset": 30, "nodeName": "_fake_record_bad_structure_1", "type": "List[str]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "join", "type": "Callable"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "join", "type": "Callable"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "join", "type": "Callable"}, {"lineNumber": 297, "col_offset": 35, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "r", "type": "Any"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "e", "type": "Any"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 301, "col_offset": 45, "nodeName": "e", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 306, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 306, "col_offset": 47, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.Alignment]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 311, "col_offset": 29, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 319, "col_offset": 24, "nodeName": "r", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 547, "col_offset": 14, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "parse_fasta", "type": "Any"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "empty", "type": "List[nothing]"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "parse_fasta", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "nolabels", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 57, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "parse_fasta", "type": "Any"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "line1", "type": "None"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "line1", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "line", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "get_two_line_records", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 108, "col_offset": 57, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "self", "type": "ParseFastqTests"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "label", "type": "Any"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "DATA", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "ParseFastqTests"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "self", "type": "ParseFastqTests"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "self", "type": "ParseFastqTests"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "parse_fastq", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "FASTQ_EXAMPLE_2", "type": "List[str]"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "fake_headers", "type": "str"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "_fake_headers", "type": "List[str]"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "fake_record_no_headers", "type": "str"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "fake_record_no_sequences", "type": "str"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "fake_record_no_structure", "type": "str"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "fake_two_records", "type": "str"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "fake_record", "type": "str"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "fake_record_bad_header_1", "type": "str"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "fake_record_bad_header_2", "type": "str"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "fake_record_bad_sequence_1", "type": "str"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "fake_record_bad_structure_1", "type": "str"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "fake_record_bad_structure_2", "type": "str"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "MinimalRfamParser", "type": "Any"}, {"lineNumber": 242, "col_offset": 48, "nodeName": "_fake_record_no_headers", "type": "List[str]"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "MinimalRfamParser", "type": "Any"}, {"lineNumber": 245, "col_offset": 48, "nodeName": "_fake_record_no_sequences", "type": "List[str]"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "MinimalRfamParser", "type": "Any"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "_fake_record_no_structure", "type": "List[str]"}, {"lineNumber": 255, "col_offset": 30, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 270, "col_offset": 30, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 301, "col_offset": 35, "nodeName": "e", "type": "Any"}, {"lineNumber": 301, "col_offset": 50, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 305, "col_offset": 25, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "self", "type": "ParseFastaTests"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "DATA", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "DATA", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "self", "type": "ParseFastqTests"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "line", "type": "str"}, {"lineNumber": 242, "col_offset": 48, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 245, "col_offset": 48, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 306, "col_offset": 35, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "label", "type": "Any"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "label", "type": "Any"}, {"lineNumber": 273, "col_offset": 30, "nodeName": "MinimalRfamParser", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "_fake_record_bad_structure_1", "type": "List[str]"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "self", "type": "RfamParserTests"}, {"lineNumber": 301, "col_offset": 50, "nodeName": "data", "type": "List[Any]"}]