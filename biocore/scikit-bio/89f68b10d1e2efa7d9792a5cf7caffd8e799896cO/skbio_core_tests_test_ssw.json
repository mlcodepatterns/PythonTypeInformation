[{"lineNumber": 24, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 340, "col_offset": 40, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 363, "col_offset": 29, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 416, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "attribute", "type": "str"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "align_attributes", "type": "List[str]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "expected_alignments", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 316, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, Union[str, int]], bool]]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "align1", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "align1", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "accessible", "type": "str"}, {"lineNumber": 369, "col_offset": 26, "nodeName": "align_attributes", "type": "List[str]"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, str], bool]]"}, {"lineNumber": 409, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, str], bool]]"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "result", "type": "nothing"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 220, "col_offset": 32, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 220, "col_offset": 36, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 220, "col_offset": 45, "nodeName": "expected_alignments", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 253, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 337, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 337, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 344, "col_offset": 37, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 345, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 345, "col_offset": 23, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 346, "col_offset": 17, "nodeName": "striped_smith_waterman_alignment", "type": "Any"}, {"lineNumber": 346, "col_offset": 50, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 347, "col_offset": 50, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 348, "col_offset": 30, "nodeName": "align2", "type": "Any"}, {"lineNumber": 348, "col_offset": 38, "nodeName": "align1", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 356, "col_offset": 37, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 357, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 358, "col_offset": 17, "nodeName": "striped_smith_waterman_alignment", "type": "Any"}, {"lineNumber": 358, "col_offset": 50, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 359, "col_offset": 50, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 360, "col_offset": 30, "nodeName": "align2", "type": "Any"}, {"lineNumber": 360, "col_offset": 38, "nodeName": "align1", "type": "Any"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 367, "col_offset": 37, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 368, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 369, "col_offset": 26, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 388, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 409, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 211, "col_offset": 35, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 221, "col_offset": 34, "nodeName": "result", "type": "nothing"}, {"lineNumber": 221, "col_offset": 42, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 236, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 317, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 319, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 320, "col_offset": 34, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 320, "col_offset": 45, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 335, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 336, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWatermanAlignment"}, {"lineNumber": 356, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 359, "col_offset": 69, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWatermanAlignment"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 391, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 392, "col_offset": 29, "nodeName": "z", "type": "bool"}, {"lineNumber": 410, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 412, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "set_zero_based", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 317, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 318, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 319, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 370, "col_offset": 48, "nodeName": "accessible", "type": "str"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 389, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 390, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 391, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 392, "col_offset": 32, "nodeName": "is_zero_based", "type": "Any"}, {"lineNumber": 410, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 411, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 412, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 413, "col_offset": 41, "nodeName": "z", "type": "bool"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 414, "col_offset": 33, "nodeName": "z", "type": "bool"}, {"lineNumber": 414, "col_offset": 36, "nodeName": "is_zero_based", "type": "Any"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 371, "col_offset": 39, "nodeName": "accessible", "type": "str"}, {"lineNumber": 392, "col_offset": 32, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 414, "col_offset": 36, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "attribute", "type": "str"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "attribute", "type": "str"}]