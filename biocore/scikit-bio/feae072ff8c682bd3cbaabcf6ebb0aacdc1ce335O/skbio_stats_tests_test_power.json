[{"lineNumber": 24, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_get_subsampled_power_paired_error_meta_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test_get_subsampled_power_paired_error_cat_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_get_subsampled_power_paired_error_ctrl_cats_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "test_get_subsampled_power_sig_error_no_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "test_get_subsampled_power_all_error_no_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "test_get_subsampled_power_bad_mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "test_get_subsampled_power_min_counts_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "test_get_subsampled_power_interval_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "test_get_subsampled_power_paired", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "test_get_subsampled_power_all_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "test_get_get_subsampled_power_significant_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "test__check_strs_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "test__check_strs_num", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "test__check_str_nan", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "test__check_str_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "test_confidence_bound_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "test_confidence_bound_df", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "test_confidence_bound_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "test_confidence_bound_nan", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "test_confidence_bound_axis_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "test__calculate_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "test__compare_distributions_count_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "test__compare_distributions", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "test__calculate_power_curve_ratio_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "test__calculate_power_curve_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "test__calculate_power_curve_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "test__calculate_power_curve_ratio", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "test_bootstrap_power_curve", "type": "Callable[[Any], Any]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "test_get_significant_subsample_no_tests", "type": "Callable[[Any], Any]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "test_get_significant_subsample_no_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "test_get_signfigiant_subsample_no_iteration", "type": "Callable[[Any], Any]"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "test_get_significant_subsample_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "test_get_paired_subsamples_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "test_get_paired_subsamples_break", "type": "Callable[[Any], Any]"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "test_get_paired_subsample_fewer", "type": "Callable[[Any], Any]"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "test_get_paired_subsamples_not_strict", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "test_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "test_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 438, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "meta", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "known_c", "type": "numpy.ndarray"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "crit", "type": "float"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "known", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "known_array1", "type": "numpy.ndarray"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "known_array2", "type": "Set[str]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "round", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "arange", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "meta", "type": "Dict[str, Union[Dict[str, Any], Dict[str, Union[str, float]]]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 151, "col_offset": 56, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "known_c", "type": "numpy.ndarray"}, {"lineNumber": 161, "col_offset": 36, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 165, "col_offset": 53, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 169, "col_offset": 46, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 173, "col_offset": 53, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 176, "col_offset": 47, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "s1", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "test", "type": "Any"}, {"lineNumber": 200, "col_offset": 34, "nodeName": "known", "type": "float"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "s1", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "s1", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 212, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 217, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 240, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 240, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "_calculate_power", "type": "Any"}, {"lineNumber": 249, "col_offset": 32, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 249, "col_offset": 44, "nodeName": "crit", "type": "float"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 251, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 251, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "_compare_distributions", "type": "Any"}, {"lineNumber": 262, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 46, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "known", "type": "Any"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "test", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 272, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 272, "col_offset": 38, "nodeName": "_calculate_power_curve", "type": "Any"}, {"lineNumber": 272, "col_offset": 62, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 273, "col_offset": 36, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "_calculate_power_curve", "type": "Any"}, {"lineNumber": 284, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 285, "col_offset": 38, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 286, "col_offset": 38, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 289, "col_offset": 30, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "_calculate_power_curve", "type": "Any"}, {"lineNumber": 298, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 38, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 300, "col_offset": 38, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "_calculate_power_curve", "type": "Any"}, {"lineNumber": 314, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 315, "col_offset": 38, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 316, "col_offset": 38, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 321, "col_offset": 30, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 326, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 328, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 331, "col_offset": 32, "nodeName": "bootstrap_power_curve", "type": "Any"}, {"lineNumber": 331, "col_offset": 54, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 332, "col_offset": 54, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 333, "col_offset": 54, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "test_mean", "type": "Any"}, {"lineNumber": 336, "col_offset": 35, "nodeName": "known_mean", "type": "numpy.ndarray"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "test_bound", "type": "Any"}, {"lineNumber": 337, "col_offset": 36, "nodeName": "known_bound", "type": "numpy.ndarray"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 379, "col_offset": 19, "nodeName": "get_significant_subsample", "type": "Any"}, {"lineNumber": 379, "col_offset": 55, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 21, "nodeName": "get_paired_subsamples", "type": "Any"}, {"lineNumber": 393, "col_offset": 43, "nodeName": "meta", "type": "Any"}, {"lineNumber": 393, "col_offset": 54, "nodeName": "cat", "type": "str"}, {"lineNumber": 393, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 394, "col_offset": 24, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 395, "col_offset": 24, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 396, "col_offset": 27, "nodeName": "known_array", "type": "List[List[str]]"}, {"lineNumber": 396, "col_offset": 40, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "get_paired_subsamples", "type": "Any"}, {"lineNumber": 406, "col_offset": 43, "nodeName": "meta", "type": "Any"}, {"lineNumber": 406, "col_offset": 54, "nodeName": "cat", "type": "str"}, {"lineNumber": 406, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 407, "col_offset": 27, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 407, "col_offset": 40, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 412, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 418, "col_offset": 21, "nodeName": "get_paired_subsamples", "type": "Any"}, {"lineNumber": 418, "col_offset": 43, "nodeName": "meta", "type": "Any"}, {"lineNumber": 418, "col_offset": 54, "nodeName": "cat", "type": "str"}, {"lineNumber": 418, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 420, "col_offset": 27, "nodeName": "known_array1", "type": "numpy.ndarray"}, {"lineNumber": 421, "col_offset": 17, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 432, "col_offset": 21, "nodeName": "get_paired_subsamples", "type": "Any"}, {"lineNumber": 432, "col_offset": 43, "nodeName": "meta", "type": "Any"}, {"lineNumber": 432, "col_offset": 54, "nodeName": "cat", "type": "str"}, {"lineNumber": 432, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 434, "col_offset": 24, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 435, "col_offset": 24, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 436, "col_offset": 27, "nodeName": "known_array", "type": "List[List[str]]"}, {"lineNumber": 436, "col_offset": 40, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "arange", "type": "Any"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "nan", "type": "Any"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "nan", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "meta", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 56, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 152, "col_offset": 51, "nodeName": "meta", "type": "Any"}, {"lineNumber": 153, "col_offset": 50, "nodeName": "cat", "type": "str"}, {"lineNumber": 154, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 165, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 165, "col_offset": 69, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "arange", "type": "Any"}, {"lineNumber": 173, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 173, "col_offset": 69, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "arange", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 188, "col_offset": 37, "nodeName": "nan", "type": "Any"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 249, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 255, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "_compare_distributions", "type": "Any"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 43, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 262, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 262, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 272, "col_offset": 62, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 273, "col_offset": 36, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 284, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 285, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 286, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 298, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 299, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 300, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 314, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 315, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 316, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 331, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 332, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 333, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 342, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "get_significant_subsample", "type": "Any"}, {"lineNumber": 343, "col_offset": 46, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 355, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "get_significant_subsample", "type": "Any"}, {"lineNumber": 356, "col_offset": 48, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 369, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 369, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "get_significant_subsample", "type": "Any"}, {"lineNumber": 370, "col_offset": 48, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 375, "col_offset": 33, "nodeName": "arange", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 377, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 379, "col_offset": 46, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 381, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 381, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 387, "col_offset": 23, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 393, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 394, "col_offset": 31, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 395, "col_offset": 31, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 402, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 402, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 406, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 418, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 419, "col_offset": 49, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 420, "col_offset": 41, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 426, "col_offset": 23, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 432, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 434, "col_offset": 31, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 435, "col_offset": 31, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "loc", "type": "Any"}, {"lineNumber": 31, "col_offset": 42, "nodeName": "id_", "type": "Any"}, {"lineNumber": 31, "col_offset": 49, "nodeName": "ids", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "power", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 101, "col_offset": 63, "nodeName": "cat", "type": "str"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 107, "col_offset": 64, "nodeName": "meta", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 113, "col_offset": 64, "nodeName": "meta", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "cat", "type": "str"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 152, "col_offset": 51, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 165, "col_offset": 69, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 173, "col_offset": 69, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "nan", "type": "Any"}, {"lineNumber": 235, "col_offset": 29, "nodeName": "nan", "type": "Any"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 256, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 274, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 317, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 343, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 355, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 356, "col_offset": 39, "nodeName": "test_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 356, "col_offset": 48, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 369, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 370, "col_offset": 39, "nodeName": "test_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 48, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 377, "col_offset": 32, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 377, "col_offset": 45, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 379, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 381, "col_offset": 29, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 381, "col_offset": 47, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 382, "col_offset": 24, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 382, "col_offset": 31, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 422, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 422, "col_offset": 33, "nodeName": "known_array2", "type": "Set[str]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 63, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 107, "col_offset": 64, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 113, "col_offset": 64, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 364, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 382, "col_offset": 24, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "id_", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "div", "type": "Any"}, {"lineNumber": 135, "col_offset": 57, "nodeName": "ones", "type": "Any"}, {"lineNumber": 135, "col_offset": 68, "nodeName": "ones", "type": "Any"}, {"lineNumber": 141, "col_offset": 57, "nodeName": "ones", "type": "Any"}, {"lineNumber": 141, "col_offset": 68, "nodeName": "ones", "type": "Any"}]