[{"lineNumber": 21, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 218, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "values", "type": "List[int]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "exp", "type": "Dict[int, List[int]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "exp_keys", "type": "Set[str]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "empty_trie", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "trie", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "data", "type": "List[Tuple[str, str]]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "_CompressedNode", "type": "Any"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "key", "type": "str"}, {"lineNumber": 28, "col_offset": 46, "nodeName": "values", "type": "List[int]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "_CompressedNode", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "key", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "key", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "key", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "_CompressedNode", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "key", "type": "str"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "values", "type": "List[int]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "values", "type": "List[int]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "key", "type": "Any"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "key", "type": "str"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "_CompressedNode", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "prefix_map", "type": "Any"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "exp", "type": "Dict[int, List[int]]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "_CompressedNode", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "key", "type": "str"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "values", "type": "List[int]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "insert", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "key", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "exp_keys", "type": "Set[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "key", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "key", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "_CompressedNode", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "key", "type": "str"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "values", "type": "List[int]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "insert", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "CompressedTrie", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "CompressedTrie", "type": "Any"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "data", "type": "List[Tuple[str, str]]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "CompressedTrie", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "key", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "CompressedTrie", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "data", "type": "List[Tuple[str, str]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "key", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "empty_trie", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "trie", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "CompressedTrie", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "data", "type": "List[Tuple[str, str]]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "insert", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "value", "type": "str"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "exp", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "zip", "type": "Any"}, {"lineNumber": 215, "col_offset": 58, "nodeName": "exp", "type": "List[Tuple[str, str]]"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 28, "col_offset": 46, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "find", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "find", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "find", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "find", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "find", "type": "Any"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "_root", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "_root", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "_root", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "_root", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "_root", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 129, "col_offset": 55, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "empty_trie", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "trie", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "empty_trie", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "trie", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "prefix_map", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "prefix_map", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "find", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "find", "type": "Any"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "fasta_to_pairlist", "type": "Any"}, {"lineNumber": 215, "col_offset": 46, "nodeName": "seqs", "type": "List[Tuple[str, str]]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "obs", "type": "Any"}, {"lineNumber": 216, "col_offset": 34, "nodeName": "exp", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "keys", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "keys", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "trie", "type": "Any"}, {"lineNumber": 156, "col_offset": 49, "nodeName": "exp1", "type": "Dict[str, Union[List[nothing], List[str]]]"}, {"lineNumber": 156, "col_offset": 55, "nodeName": "exp2", "type": "Dict[str, Union[List[nothing], List[str]]]"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "find", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "t", "type": "Any"}, {"lineNumber": 179, "col_offset": 41, "nodeName": "exp1", "type": "Dict[str, Union[List[nothing], List[str]]]"}, {"lineNumber": 179, "col_offset": 47, "nodeName": "exp2", "type": "Dict[str, Union[List[nothing], List[str]]]"}, {"lineNumber": 179, "col_offset": 53, "nodeName": "exp3", "type": "Dict[str, Union[List[str], List[nothing]]]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "value", "type": "str"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "trie", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "trie", "type": "Any"}, {"lineNumber": 215, "col_offset": 46, "nodeName": "self", "type": "FastaToPairlistTests"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "self", "type": "FastaToPairlistTests"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "children", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "self", "type": "CompressedNodeTests"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "children", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "t", "type": "Any"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "find", "type": "Any"}, {"lineNumber": 184, "col_offset": 52, "nodeName": "key", "type": "str"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "self", "type": "CompressedTrieTests"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "n", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "_root", "type": "Any"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "trie", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "self", "type": "CompressedTrieTests"}]