[{"lineNumber": 25, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 558, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "seq1", "type": "str"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "seq2", "type": "str"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "aln1", "type": "str"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "aln2", "type": "str"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "aln1", "type": "str"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "aln2", "type": "str"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "alt_sub", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "score_m", "type": "numpy.ndarray"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "tback_m", "type": "numpy.ndarray"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 62, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 62, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "aln1", "type": "str"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "aln2", "type": "str"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "aln1", "type": "str"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "aln2", "type": "str"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 323, "col_offset": 18, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 363, "col_offset": 41, "nodeName": "_init_matrices_sw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 365, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 365, "col_offset": 54, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 366, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 366, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 379, "col_offset": 41, "nodeName": "_init_matrices_nw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 381, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 381, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 382, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 382, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 386, "col_offset": 17, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 17, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 418, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 420, "col_offset": 44, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 421, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 421, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 422, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 422, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 437, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 439, "col_offset": 44, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 440, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 440, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 441, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 441, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 456, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 458, "col_offset": 69, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 459, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 459, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 460, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 460, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 466, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 466, "col_offset": 38, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 468, "col_offset": 58, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 476, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 476, "col_offset": 27, "nodeName": "score_m", "type": "List[List[int]]"}, {"lineNumber": 482, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 482, "col_offset": 27, "nodeName": "tback_m", "type": "List[List[int]]"}, {"lineNumber": 486, "col_offset": 17, "nodeName": "_traceback", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 28, "nodeName": "tback_m", "type": "numpy.ndarray"}, {"lineNumber": 486, "col_offset": 37, "nodeName": "score_m", "type": "numpy.ndarray"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 101, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 130, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 143, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "seq1", "type": "str"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "seq2", "type": "str"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "seq1", "type": "str"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "seq2", "type": "str"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 177, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 188, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 191, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 199, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 200, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 201, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 203, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 21, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 212, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 213, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 214, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 224, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 233, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 234, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 235, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 245, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 246, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 249, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 259, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 260, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 261, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 281, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 282, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 283, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 285, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 288, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 293, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 294, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 295, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 297, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 307, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 308, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 309, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 320, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 331, "col_offset": 29, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 335, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 336, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 336, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 338, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 344, "col_offset": 28, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 347, "col_offset": 29, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 351, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 352, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 352, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 353, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 354, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 364, "col_offset": 37, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 380, "col_offset": 37, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 388, "col_offset": 54, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 390, "col_offset": 59, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 392, "col_offset": 59, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 394, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 396, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 398, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 403, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 467, "col_offset": 26, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 468, "col_offset": 26, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 476, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 486, "col_offset": 46, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 534, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 535, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 536, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 539, "col_offset": 25, "nodeName": "_get_seq_ids", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 540, "col_offset": 25, "nodeName": "_get_seq_ids", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 541, "col_offset": 25, "nodeName": "_get_seq_ids", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 546, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 546, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 548, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 548, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 550, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 550, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 553, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 553, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 210, "col_offset": 45, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 222, "col_offset": 39, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 245, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 256, "col_offset": 48, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 260, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 269, "col_offset": 42, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 288, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 293, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 294, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 304, "col_offset": 48, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 308, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 317, "col_offset": 42, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 334, "col_offset": 36, "nodeName": "alt_sub", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 335, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 335, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 336, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 336, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 338, "col_offset": 28, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 350, "col_offset": 36, "nodeName": "alt_sub", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 351, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 351, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 352, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 352, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 353, "col_offset": 28, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 354, "col_offset": 28, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 484, "col_offset": 21, "nodeName": "BiologicalSequence", "type": "Type[skbio.core.sequence.BiologicalSequence]"}, {"lineNumber": 485, "col_offset": 21, "nodeName": "BiologicalSequence", "type": "Type[skbio.core.sequence.BiologicalSequence]"}, {"lineNumber": 535, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 536, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 540, "col_offset": 38, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 540, "col_offset": 50, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 541, "col_offset": 38, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 541, "col_offset": 56, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 364, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 364, "col_offset": 48, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 380, "col_offset": 48, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 419, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 420, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 438, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 439, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 457, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 457, "col_offset": 41, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 458, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 458, "col_offset": 42, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 467, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 468, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 486, "col_offset": 57, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 487, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}]