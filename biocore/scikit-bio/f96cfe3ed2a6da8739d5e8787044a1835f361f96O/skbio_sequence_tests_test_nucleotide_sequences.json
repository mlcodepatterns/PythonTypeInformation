[{"lineNumber": 23, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_instantiation_with_no_implementation", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "test_nondegenerate_chars", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "test_degenerate_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "test_complement_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "test_complement_without_reverse_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "test_complement_without_reverse_non_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "test_complement_with_reverse_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "test_complement_with_reverse_non_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "test_reverse_complement", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "test_is_reverse_complement_varied_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "test_is_reverse_complement_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "test_is_reverse_complement_metadata_ignored", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "test_is_reverse_complement_non_reverse_complements", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "test_is_reverse_complement_type_mismatch", "type": "Callable[[Any], Any]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "test_motif_purine_run", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "test_motif_pyrimidine_run", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 319, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "dna_str", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "dna_comp_str", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "dna_rev_comp_str", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "rna_str", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "rna_comp_str", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "rna_rev_comp_str", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "qual", "type": "Tuple[int, ...]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "dna", "type": "Tuple[Any, str]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "rna", "type": "Tuple[Any, str]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "dna_comp", "type": "Tuple[Any, ...]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "rna_comp", "type": "Tuple[Any, ...]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "dna_comp_qual", "type": "Union[Tuple[Any, ...], Tuple[Union[str, Tuple[int, ...]], ...]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "rna_comp_qual", "type": "Union[Tuple[Any, ...], Tuple[Union[str, Tuple[int, ...]], ...]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "all_combos_comp_qual", "type": "Tuple[Union[Tuple[Any, ...], Tuple[Union[str, Tuple[int, ...]], ...]], Union[Tuple[Any, ...], Tuple[Union[str, Tuple[int, ...]], ...]]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "dna_rev_comp", "type": "Tuple[Any, ...]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "rna_rev_comp", "type": "Tuple[Any, ...]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "all_combos_rev_comp", "type": "Tuple[Tuple[Any, ...], Tuple[Any, ...]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "dna_rev_comp_qual", "type": "Union[Tuple[Any, ...], Tuple[Union[str, Tuple[int, ...]], ...]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "rna_rev_comp_qual", "type": "Union[Tuple[Any, ...], Tuple[Union[str, Tuple[int, ...]], ...]]"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "NucleotideMixin", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "dna", "type": "Tuple[Any, str]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "rna", "type": "Tuple[Any, str]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "all_combos_comp_qual", "type": "Tuple[Union[Tuple[Any, ...], Tuple[Union[str, Tuple[int, ...]], ...]], Union[Tuple[Any, ...], Tuple[Union[str, Tuple[int, ...]], ...]]]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "all_combos_rev_comp_qual", "type": "Tuple[Union[Tuple[Union[str, Tuple[int, ...]], ...], Tuple[Any, ...]], Union[Tuple[Union[str, Tuple[int, ...]], ...], Tuple[Any, ...]]]"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "all_combos_rev_comp_qual", "type": "Tuple[Union[Tuple[Union[str, Tuple[int, ...]], ...], Tuple[Any, ...]], Union[Tuple[Union[str, Tuple[int, ...]], ...], Tuple[Any, ...]]]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "tested", "type": "int"}, {"lineNumber": 209, "col_offset": 50, "nodeName": "all_combos_rev_comp", "type": "Tuple[Tuple[Any, ...], Tuple[Any, ...]]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "all_combos_rev_comp_qual", "type": "Tuple[Union[Tuple[Union[str, Tuple[int, ...]], ...], Tuple[Any, ...]], Union[Tuple[Union[str, Tuple[int, ...]], ...], Tuple[Any, ...]]]"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "Class", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "dna", "type": "Tuple[Any, str, str]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "rna", "type": "Tuple[Any, str, str]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "all_sets", "type": "Tuple[Tuple[Any, str, str], Tuple[Any, str, str]]"}, {"lineNumber": 287, "col_offset": 39, "nodeName": "all_sets", "type": "Tuple[Tuple[Any, str, str], Tuple[Any, str, str]]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "dna", "type": "Tuple[Any, str, str]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "rna", "type": "Tuple[Any, str, str]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "all_sets", "type": "Tuple[Tuple[Any, str, str], Tuple[Any, str, str]]"}, {"lineNumber": 305, "col_offset": 39, "nodeName": "all_sets", "type": "Tuple[Tuple[Any, str, str], Tuple[Any, str, str]]"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "dna_str", "type": "str"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "rna_str", "type": "str"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "dna", "type": "Tuple[Any, str]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "rna", "type": "Tuple[Any, str]"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "dna_comp", "type": "Tuple[Any, ...]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "rna_comp", "type": "Tuple[Any, ...]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "dna_comp_qual", "type": "Union[Tuple[Any, ...], Tuple[Union[str, Tuple[int, ...]], ...]]"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "rna_comp_qual", "type": "Union[Tuple[Any, ...], Tuple[Union[str, Tuple[int, ...]], ...]]"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "dna", "type": "Tuple[Any, str]"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "rna", "type": "Tuple[Any, str]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "dna_rev_comp", "type": "Tuple[Any, ...]"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "rna_rev_comp", "type": "Tuple[Any, ...]"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "dna_rev_comp", "type": "Tuple[Any, ...]"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "rna_rev_comp", "type": "Tuple[Any, ...]"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "dna_rev_comp_qual", "type": "Union[Tuple[Union[str, Tuple[int, ...]], ...], Tuple[Any, ...]]"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "rna_rev_comp_qual", "type": "Union[Tuple[Union[str, Tuple[int, ...]], ...], Tuple[Any, ...]]"}, {"lineNumber": 61, "col_offset": 45, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "nondegenerate", "type": "str"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "dna", "type": "Tuple[Any, str]"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "rna", "type": "Tuple[Any, str]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "exp", "type": "Set[str]"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "degenerate", "type": "Dict[str, Set[str]]"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "dna_exp", "type": "Tuple[Any, Dict[str, Set[str]]]"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "rna_exp", "type": "Tuple[Any, Dict[str, Set[str]]]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "comp_map", "type": "Dict[str, str]"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "dna_exp", "type": "Tuple[Any, Dict[str, str]]"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "rna_exp", "type": "Tuple[Any, Dict[str, str]]"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "comp", "type": "Any"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "qual", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "comp", "type": "Any"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "rc", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "qual", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "rc", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "qual", "type": "Any"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 209, "col_offset": 34, "nodeName": "rev_comp_str", "type": "Any"}, {"lineNumber": 209, "col_offset": 50, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "seq_kinds", "type": "FrozenSet[Any]"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "seq_kinds", "type": "FrozenSet[Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "tested", "type": "int"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 221, "col_offset": 33, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "qual", "type": "Any"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 251, "col_offset": 28, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 273, "col_offset": 22, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 273, "col_offset": 27, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 274, "col_offset": 27, "nodeName": "Class", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "dna", "type": "Tuple[Any, str, str]"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "rna", "type": "Tuple[Any, str, str]"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "run1", "type": "str"}, {"lineNumber": 287, "col_offset": 31, "nodeName": "run2", "type": "str"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "seq", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "seq", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "seq", "type": "Any"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "dna", "type": "Tuple[Any, str, str]"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "rna", "type": "Tuple[Any, str, str]"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 305, "col_offset": 25, "nodeName": "run1", "type": "str"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "run2", "type": "str"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "seq", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "seq", "type": "Any"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "seq", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "dna_comp_str", "type": "str"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "rna_comp_str", "type": "str"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "qual", "type": "Tuple[int, ...]"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "qual", "type": "Tuple[int, ...]"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "dna_rev_comp_str", "type": "str"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "rna_rev_comp_str", "type": "str"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "qual", "type": "Tuple[int, ...]"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "qual", "type": "Tuple[int, ...]"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "NucleotideSequenceSubclassNoImplementation", "type": "Type[Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "exception", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "exception", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "nondegenerate", "type": "str"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 72, "col_offset": 66, "nodeName": "exp", "type": "Set[str]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 73, "col_offset": 62, "nodeName": "exp", "type": "Set[str]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 93, "col_offset": 61, "nodeName": "degenerate", "type": "Dict[str, Set[str]]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 94, "col_offset": 57, "nodeName": "degenerate", "type": "Dict[str, Set[str]]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 110, "col_offset": 61, "nodeName": "comp_map", "type": "Dict[str, str]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 111, "col_offset": 57, "nodeName": "comp_map", "type": "Dict[str, str]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 116, "col_offset": 57, "nodeName": "comp_map", "type": "Dict[str, str]"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "complement_map", "type": "Dict[str, str]"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "complement", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "comp", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "comp", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "complement", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "comp", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "comp", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "complement", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "rc", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "rc", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "complement", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "rc", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "rc", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "rc", "type": "Any"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "union", "type": "Callable[..., FrozenSet[Any]]"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "tested", "type": "int"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "rev_comp_str", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 254, "col_offset": 19, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 19, "nodeName": "Class", "type": "Any"}, {"lineNumber": 277, "col_offset": 19, "nodeName": "Subclass", "type": "Type[Any]"}, {"lineNumber": 288, "col_offset": 18, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 291, "col_offset": 30, "nodeName": "run1", "type": "str"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "run2", "type": "str"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 306, "col_offset": 18, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 18, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 309, "col_offset": 30, "nodeName": "run1", "type": "str"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 18, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "run2", "type": "str"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "dna_str", "type": "str"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 80, "col_offset": 61, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 88, "col_offset": 61, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 142, "col_offset": 47, "nodeName": "comp_str", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "comp_str", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 175, "col_offset": 45, "nodeName": "rev_comp_str", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "rev_comp_str", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "rev_comp_str", "type": "Any"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "sequence_kinds", "type": "FrozenSet[Union[Type[str], Callable[[Any], Any]]]"}, {"lineNumber": 210, "col_offset": 50, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "rev_comp_str", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 223, "col_offset": 55, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 231, "col_offset": 28, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 231, "col_offset": 55, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 232, "col_offset": 55, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 233, "col_offset": 55, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 244, "col_offset": 56, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 245, "col_offset": 29, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 245, "col_offset": 56, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 247, "col_offset": 55, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 248, "col_offset": 55, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 256, "col_offset": 56, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 257, "col_offset": 29, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 257, "col_offset": 56, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 259, "col_offset": 56, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 260, "col_offset": 29, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 260, "col_offset": 56, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 266, "col_offset": 56, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 267, "col_offset": 56, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 269, "col_offset": 56, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 270, "col_offset": 56, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 279, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 280, "col_offset": 43, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 289, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 292, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 296, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "s", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "s", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 210, "col_offset": 61, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 216, "col_offset": 32, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 216, "col_offset": 59, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 231, "col_offset": 28, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 242, "col_offset": 48, "nodeName": "qual", "type": "Any"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 245, "col_offset": 29, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 257, "col_offset": 29, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 260, "col_offset": 29, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 289, "col_offset": 34, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 292, "col_offset": 34, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 293, "col_offset": 43, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 296, "col_offset": 34, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 298, "col_offset": 30, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 307, "col_offset": 34, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 310, "col_offset": 34, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 311, "col_offset": 30, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 311, "col_offset": 43, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 314, "col_offset": 34, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 317, "col_offset": 30, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 45, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 153, "col_offset": 52, "nodeName": "qual", "type": "Any"}, {"lineNumber": 216, "col_offset": 32, "nodeName": "seq1", "type": "Any"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 289, "col_offset": 34, "nodeName": "seq", "type": "Any"}, {"lineNumber": 292, "col_offset": 34, "nodeName": "seq", "type": "Any"}, {"lineNumber": 296, "col_offset": 34, "nodeName": "seq", "type": "Any"}, {"lineNumber": 307, "col_offset": 34, "nodeName": "seq", "type": "Any"}, {"lineNumber": 310, "col_offset": 34, "nodeName": "seq", "type": "Any"}, {"lineNumber": 314, "col_offset": 34, "nodeName": "seq", "type": "Any"}, {"lineNumber": 28, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 48, "nodeName": "qual", "type": "Any"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "qual", "type": "Any"}, {"lineNumber": 199, "col_offset": 48, "nodeName": "qual", "type": "Any"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 56, "nodeName": "int64", "type": "Any"}, {"lineNumber": 297, "col_offset": 57, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 316, "col_offset": 57, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 188, "col_offset": 41, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 188, "col_offset": 46, "nodeName": "qual", "type": "Any"}, {"lineNumber": 205, "col_offset": 52, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 205, "col_offset": 57, "nodeName": "qual", "type": "Any"}, {"lineNumber": 230, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 297, "col_offset": 57, "nodeName": "seq", "type": "Any"}, {"lineNumber": 316, "col_offset": 57, "nodeName": "seq", "type": "Any"}]