[{"lineNumber": 19, "col_offset": 15, "nodeName": "PyTestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "_suite_pvalue", "type": "None"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "_suite_pvalue", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "pvalue", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "_suite_pvalue", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "_suite_pvalue", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "obs_ravel", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "exp_ravel", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "obs_ravel", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "exp_ravel", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "obs_items", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "exp_items", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestCase"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "self", "type": "TestCase"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "pvalue", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "_suite_pvalue", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "observed", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "size", "type": "int"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "pvalue", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "self", "type": "TestCase"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "pvalue", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "_suite_pvalue", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "G", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "_", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "chi2_contingency", "type": "Any"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "m", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "pvalue", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "failureException", "type": "Type[BaseException]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "observed", "type": "Any"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "observed", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "observed", "type": "Any"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "observed", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "expected", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "self", "type": "TestCase"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "observed", "type": "Any"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 56, "nodeName": "expected", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "observed", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "ttest_1samp", "type": "Any"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "observed", "type": "numpy.ndarray"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "size", "type": "int"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "self", "type": "TestCase"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "observed", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "failureException", "type": "Type[BaseException]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "observed", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "self", "type": "TestCase"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "msg", "type": "Any"}, {"lineNumber": 119, "col_offset": 49, "nodeName": "eps", "type": "Any"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "eps", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "obs_items", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "exp_items", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "failureException", "type": "Type[BaseException]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "obs_items", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "exp_items", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "obs", "type": "nothing"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "exp", "type": "nothing"}, {"lineNumber": 144, "col_offset": 43, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 144, "col_offset": 47, "nodeName": "obs_items", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "exp_items", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "obs", "type": "nothing"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "exp", "type": "nothing"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "assertEqualItems", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "observed", "type": "Any"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 153, "col_offset": 54, "nodeName": "msg", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "failureException", "type": "Type[BaseException]"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "ttest_1samp", "type": "Any"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "observed", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "p", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "observed", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "expected", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "failureException", "type": "Type[BaseException]"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "obs_ravel", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "self", "type": "TestCase"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "msg", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 107, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "self", "type": "TestCase"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "msg", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "failureException", "type": "Type[BaseException]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "TestCase"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "self", "type": "TestCase"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "msg", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "size", "type": "int"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "size", "type": "int"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "ttest_1samp", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "observed", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "ttest_ind", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "observed", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "isfinite", "type": "Any"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "observed", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "observed", "type": "Any"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "self", "type": "TestCase"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "msg", "type": "Any"}, {"lineNumber": 92, "col_offset": 51, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 92, "col_offset": 56, "nodeName": "observed", "type": "Any"}, {"lineNumber": 107, "col_offset": 60, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "self", "type": "TestCase"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "msg", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "observed", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "observed", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 64, "nodeName": "log10", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 107, "col_offset": 70, "nodeName": "eps", "type": "Any"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "pvalue", "type": "Any"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 79, "col_offset": 60, "nodeName": "p", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "observed", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "observed", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "obs_items", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "exp_items", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "obs", "type": "nothing"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "exp", "type": "nothing"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "index", "type": "int"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "observed", "type": "Any"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "pvalue", "type": "Any"}, {"lineNumber": 59, "col_offset": 55, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 59, "col_offset": 60, "nodeName": "p", "type": "Any"}]