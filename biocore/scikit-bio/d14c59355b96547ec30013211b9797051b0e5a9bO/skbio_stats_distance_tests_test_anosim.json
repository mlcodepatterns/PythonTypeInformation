[{"lineNumber": 24, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "test_ties", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "test_no_ties", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_no_permutations", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test_unequal_group_sizes", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "test_call_ties", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "test_call_no_ties", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "test_call_no_permutations", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "test_call_unequal_group_sizes", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "dm_ids", "type": "List[str]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "grouping_equal", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "grouping_unequal_relabeled", "type": "List[Union[str, int]]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "dm_ids", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "grouping_equal", "type": "List[str]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "anosim_ties", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "anosim_no_ties", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "anosim_ties_df", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "anosim_unequal", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "inst", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "DistanceMatrix", "type": "Any"}, {"lineNumber": 39, "col_offset": 54, "nodeName": "dm_ids", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "DistanceMatrix", "type": "Any"}, {"lineNumber": 44, "col_offset": 57, "nodeName": "dm_ids", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "DistanceMatrix", "type": "Any"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "assert_series_equal", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "Series", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "Series", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "anosim", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "dm_no_ties", "type": "Any"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "grouping_equal", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assert_series_equal", "type": "functools.partial[nothing]"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "obs", "type": "Any"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "exp", "type": "Any"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "Series", "type": "Any"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "anosim", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "dm_no_ties", "type": "Any"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "grouping_equal", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assert_series_equal", "type": "functools.partial[nothing]"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "obs", "type": "Any"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "exp", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "Series", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "anosim", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "dm_unequal", "type": "Any"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "grouping_unequal", "type": "List[str]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assert_series_equal", "type": "functools.partial[nothing]"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "obs", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "exp", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "anosim", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "dm_unequal", "type": "Any"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "grouping_unequal_relabeled", "type": "List[Union[str, int]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assert_series_equal", "type": "functools.partial[nothing]"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "obs", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "exp", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "DistanceMatrix", "type": "Any"}, {"lineNumber": 132, "col_offset": 54, "nodeName": "dm_ids", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "DistanceMatrix", "type": "Any"}, {"lineNumber": 137, "col_offset": 57, "nodeName": "dm_ids", "type": "List[str]"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "DistanceMatrix", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "ANOSIM", "type": "Any"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "dm_ties", "type": "Any"}, {"lineNumber": 153, "col_offset": 48, "nodeName": "grouping_equal", "type": "List[str]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "ANOSIM", "type": "Any"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "dm_no_ties", "type": "Any"}, {"lineNumber": 154, "col_offset": 54, "nodeName": "grouping_equal", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "ANOSIM", "type": "Any"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "dm_ties", "type": "Any"}, {"lineNumber": 155, "col_offset": 51, "nodeName": "df", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "ANOSIM", "type": "Any"}, {"lineNumber": 156, "col_offset": 37, "nodeName": "dm_unequal", "type": "Any"}, {"lineNumber": 156, "col_offset": 54, "nodeName": "grouping_unequal", "type": "List[str]"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "anosim_ties", "type": "Any"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "anosim_ties_df", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "trial", "type": "int"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "anosim_no_ties", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "groups", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "statistic", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "permutations", "type": "Any"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "anosim_no_ties", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "groups", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "statistic", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "permutations", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "anosim_unequal", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 194, "col_offset": 31, "nodeName": "groups", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "statistic", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "permutations", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "pd", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "pd", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "exp_index", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "anosim", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "dm_ties", "type": "Any"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "grouping_equal", "type": "List[str]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assert_series_equal", "type": "functools.partial[nothing]"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "obs", "type": "Any"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "exp", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "anosim", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "dm_ties", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "df", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "assert_series_equal", "type": "functools.partial[nothing]"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "obs", "type": "Any"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "exp", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "pd", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "exp_index", "type": "List[str]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "pd", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "exp_index", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "pd", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "exp_index", "type": "List[str]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 156, "col_offset": 37, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "obs", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 194, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 100, "col_offset": 58, "nodeName": "nan", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "self", "type": "TestANOSIM"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "seed", "type": "Any"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "inst", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "groups", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "statistic", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "permutations", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "obs", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "npt", "type": "Any"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "obs", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "obs", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "obs", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "self", "type": "TestANOSIMClass"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "obs", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "np", "type": "module"}]