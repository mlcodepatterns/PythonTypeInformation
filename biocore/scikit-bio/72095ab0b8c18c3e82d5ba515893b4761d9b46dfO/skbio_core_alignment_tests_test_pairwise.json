[{"lineNumber": 18, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}]