[{"lineNumber": 19, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 82, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "rev_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "rotate_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "complex_tree", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "obs_g", "type": "Generator[nothing, Any, nothing]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "obs", "type": "List[nothing]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "obs_g", "type": "Generator[nothing, Any, nothing]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "obs", "type": "List[nothing]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "obs", "type": "List[nothing]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "shuffle", "type": "Callable[..., Generator[Any, Any, Any]]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "exp", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "shuffle", "type": "Callable[..., Generator[Any, Any, Any]]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 55, "nodeName": "exp", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "shuffle", "type": "Callable[..., Generator[Any, Any, Any]]"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "complex_tree", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "e", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "o", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "zip", "type": "Any"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "exp", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "obs_g", "type": "Generator[nothing, Any, nothing]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "shuffle", "type": "Callable[..., Generator[Any, Any, Any]]"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 55, "nodeName": "exp", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "items", "type": "Any"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 34, "col_offset": 57, "nodeName": "rev_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "obs_g", "type": "Generator[nothing, Any, nothing]"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 43, "col_offset": 52, "nodeName": "rev_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "obs_g", "type": "Generator[nothing, Any, nothing]"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 53, "col_offset": 53, "nodeName": "rev_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "e", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "rotate_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "obs_g", "type": "Generator[nothing, Any, nothing]"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "next", "type": "Callable"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "next", "type": "Callable"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "next", "type": "Callable"}, {"lineNumber": 23, "col_offset": 52, "nodeName": "items", "type": "Any"}, {"lineNumber": 34, "col_offset": 57, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "to_newick", "type": "nothing"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "o", "type": "nothing"}, {"lineNumber": 36, "col_offset": 49, "nodeName": "obs", "type": "List[nothing]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 43, "col_offset": 52, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "to_newick", "type": "nothing"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "o", "type": "nothing"}, {"lineNumber": 45, "col_offset": 49, "nodeName": "obs", "type": "List[nothing]"}, {"lineNumber": 53, "col_offset": 53, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "to_newick", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "o", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "complex_tree", "type": "Any"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "to_newick", "type": "nothing"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "o", "type": "nothing"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "obs", "type": "List[nothing]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "shuffle", "type": "Callable[..., Generator[Any, Any, Any]]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "shuffle", "type": "Callable[..., Generator[Any, Any, Any]]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "shuffle", "type": "Callable[..., Generator[Any, Any, Any]]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "items", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "o", "type": "nothing"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 37, "col_offset": 53, "nodeName": "o", "type": "nothing"}, {"lineNumber": 37, "col_offset": 60, "nodeName": "o", "type": "nothing"}, {"lineNumber": 37, "col_offset": 65, "nodeName": "obs", "type": "List[nothing]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "o", "type": "nothing"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "o", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "o", "type": "nothing"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "self", "type": "UtilTests"}]