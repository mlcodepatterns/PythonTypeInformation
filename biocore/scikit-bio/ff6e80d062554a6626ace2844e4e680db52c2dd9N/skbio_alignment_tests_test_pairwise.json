[{"lineNumber": 27, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 636, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "seq1", "type": "str"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "seq2", "type": "str"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "aln1", "type": "str"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "aln2", "type": "str"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "aln1", "type": "str"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "aln2", "type": "str"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "alt_sub", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "score_m", "type": "numpy.ndarray"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "tback_m", "type": "numpy.ndarray"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 67, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 67, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "aln1", "type": "str"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "aln2", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "aln1", "type": "str"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "aln2", "type": "str"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 403, "col_offset": 18, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 437, "col_offset": 27, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 443, "col_offset": 41, "nodeName": "_init_matrices_sw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 445, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 445, "col_offset": 54, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 446, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 446, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 459, "col_offset": 41, "nodeName": "_init_matrices_nw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 461, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 461, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 462, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 462, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 466, "col_offset": 17, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 483, "col_offset": 17, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 501, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 503, "col_offset": 44, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 504, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 504, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 505, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 505, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 520, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 522, "col_offset": 44, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 523, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 523, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 524, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 524, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 539, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 541, "col_offset": 69, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 542, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 542, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 543, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 543, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 548, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 549, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 549, "col_offset": 38, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 551, "col_offset": 58, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 559, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 559, "col_offset": 27, "nodeName": "score_m", "type": "List[List[int]]"}, {"lineNumber": 565, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 565, "col_offset": 27, "nodeName": "tback_m", "type": "List[List[int]]"}, {"lineNumber": 569, "col_offset": 17, "nodeName": "_traceback", "type": "Callable[..., Any]"}, {"lineNumber": 569, "col_offset": 28, "nodeName": "tback_m", "type": "numpy.ndarray"}, {"lineNumber": 569, "col_offset": 37, "nodeName": "score_m", "type": "numpy.ndarray"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 123, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 124, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "seq1", "type": "str"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "seq2", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "seq1", "type": "str"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "seq2", "type": "str"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 188, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 190, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 199, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 200, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 201, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 203, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 212, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 213, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 215, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 225, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 226, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 233, "col_offset": 41, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 237, "col_offset": 41, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 248, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 253, "col_offset": 41, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 255, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 255, "col_offset": 41, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 269, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 277, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 278, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 279, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 281, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 285, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 291, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 292, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 293, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 308, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 309, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 310, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 311, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 322, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 327, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 327, "col_offset": 41, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 329, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 329, "col_offset": 41, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 21, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 339, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 339, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 340, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 340, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 341, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 342, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 343, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 346, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 348, "col_offset": 21, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 351, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 352, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 353, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 354, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 355, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 365, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 365, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 366, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 367, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 367, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 372, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 374, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 374, "col_offset": 41, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 379, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 379, "col_offset": 41, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 392, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 392, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 395, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 397, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 397, "col_offset": 41, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 399, "col_offset": 41, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 408, "col_offset": 28, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 411, "col_offset": 29, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 415, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 415, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 416, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 416, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 417, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 418, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 422, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 424, "col_offset": 28, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 427, "col_offset": 29, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 431, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 431, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 432, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 432, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 433, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 434, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 437, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 444, "col_offset": 37, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 460, "col_offset": 37, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 468, "col_offset": 54, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 470, "col_offset": 59, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 472, "col_offset": 59, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 474, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 477, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 480, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 485, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 540, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 550, "col_offset": 26, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 551, "col_offset": 26, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 559, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 565, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 569, "col_offset": 46, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 570, "col_offset": 28, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 618, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 619, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 620, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 624, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 624, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 626, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 626, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 628, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 628, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 631, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 631, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 89, "col_offset": 45, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 222, "col_offset": 45, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 239, "col_offset": 30, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 243, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 246, "col_offset": 39, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 278, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 285, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 288, "col_offset": 48, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 292, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 308, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 309, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 319, "col_offset": 42, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 340, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 342, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 346, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 351, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 352, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 354, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 362, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 362, "col_offset": 48, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 365, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 366, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 367, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 372, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 375, "col_offset": 30, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 376, "col_offset": 30, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 380, "col_offset": 30, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 381, "col_offset": 30, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 389, "col_offset": 42, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 392, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 395, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 414, "col_offset": 36, "nodeName": "alt_sub", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 415, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 415, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 416, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 416, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 417, "col_offset": 28, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 418, "col_offset": 28, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 422, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "alt_sub", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 431, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 431, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 432, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 432, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 433, "col_offset": 28, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 434, "col_offset": 28, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 567, "col_offset": 21, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence.BiologicalSequence]"}, {"lineNumber": 568, "col_offset": 21, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence.BiologicalSequence]"}, {"lineNumber": 619, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 620, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 444, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 444, "col_offset": 48, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 460, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 460, "col_offset": 48, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 502, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 503, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 521, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 522, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 540, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 540, "col_offset": 41, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 541, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 541, "col_offset": 42, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 550, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 551, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 569, "col_offset": 57, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 570, "col_offset": 39, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 234, "col_offset": 41, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 239, "col_offset": 41, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 303, "col_offset": 27, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 304, "col_offset": 27, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 375, "col_offset": 41, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 381, "col_offset": 41, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}]