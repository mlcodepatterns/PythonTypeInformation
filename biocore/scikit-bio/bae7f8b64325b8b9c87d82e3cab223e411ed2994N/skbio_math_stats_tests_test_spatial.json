[{"lineNumber": 20, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 131, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "data1", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "data2", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "data3", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "shiftangle", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "disp", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "disp2", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "d1", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "d3", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "disp3", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "disp4", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "centered_mtx", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "column_means", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "col_mean", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "column_means", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "norm_mtx", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "pi", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "disparity", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "procrustes", "type": "Callable[[Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "data1", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "data2", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "a", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "disparity", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "m4", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "m5", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "disp45", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "procrustes", "type": "Callable[[Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "data4", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "data5", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "m4", "type": "Any"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "data4", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "m1", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "m3", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "disp13", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "procrustes", "type": "Callable[[Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "data1", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "data3", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "m1", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "m3", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "disp13", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "procrustes", "type": "Callable[[Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "data1", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "data3", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "m3_2", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "m1_2", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "disp31", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "procrustes", "type": "Callable[[Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "data3", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "data1", "type": "numpy.ndarray"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "disp13", "type": "Any"}, {"lineNumber": 76, "col_offset": 47, "nodeName": "disp31", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "res1", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "res3", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "disp13", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "procrustes", "type": "Callable[[Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "rand1", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "rand3", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "res3_2", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "res1_2", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "disp31", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "procrustes", "type": "Callable[[Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "rand3", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "rand1", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "disp13", "type": "Any"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "disp31", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "_get_disparity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "data1", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "data3", "type": "numpy.ndarray"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "_get_disparity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "data3", "type": "numpy.ndarray"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "data1", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "disp", "type": "Any"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "disp2", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "disp", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "append", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "data1", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "data1", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "append", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "data3", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "data3", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "_get_disparity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "d1", "type": "Any"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "d3", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "_get_disparity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "d3", "type": "Any"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "d1", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "disp3", "type": "Any"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "disp4", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "disp3", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "_center", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "data1", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "mean", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "_normalize", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "data1", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "disp13", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 114, "col_offset": 44, "nodeName": "disp", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "centered_mtx", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "col_mean", "type": "Any"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "self", "type": "ProcrustesTests"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "trace", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 41, "nodeName": "dot", "type": "Any"}, {"lineNumber": 124, "col_offset": 48, "nodeName": "norm_mtx", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 48, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 125, "col_offset": 61, "nodeName": "norm_mtx", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "cos", "type": "Any"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "shiftangle", "type": "Any"}, {"lineNumber": 44, "col_offset": 52, "nodeName": "sin", "type": "Any"}, {"lineNumber": 44, "col_offset": 59, "nodeName": "shiftangle", "type": "Any"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "cos", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "sin", "type": "Any"}, {"lineNumber": 125, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 50, "nodeName": "shiftangle", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 50, "nodeName": "shiftangle", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "cos", "type": "Any"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "shiftangle", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "sin", "type": "Any"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "shiftangle", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "cos", "type": "Any"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "sin", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "pi", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "pi", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "shiftangle", "type": "Any"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "shiftangle", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "pi", "type": "Any"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "pi", "type": "Any"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "np", "type": "module"}]