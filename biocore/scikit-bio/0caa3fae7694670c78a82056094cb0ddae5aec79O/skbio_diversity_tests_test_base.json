[{"lineNumber": 19, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 73, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "_validate_counts_vector", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "_validate_counts_vector", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "_validate_counts_vector", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "_validate_counts_vector", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "_validate_counts_vector", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "_validate_counts_vector", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "obs", "type": "Any"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "_validate_counts_vector", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "_validate_counts_vector", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "_validate_counts_vector", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "_validate_counts_vector", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "self", "type": "BaseTests"}]