[{"lineNumber": 25, "col_offset": 25, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "SkbioObject", "type": "Type[skbio._base.SkbioObject]"}, {"lineNumber": 1506, "col_offset": 25, "nodeName": "BiologicalSequence", "type": "Type[BiologicalSequence]"}, {"lineNumber": 1760, "col_offset": 18, "nodeName": "NucleotideSequence", "type": "Type[NucleotideSequence]"}, {"lineNumber": 1838, "col_offset": 0, "nodeName": "DNA", "type": "Type[DNASequence]"}, {"lineNumber": 1838, "col_offset": 6, "nodeName": "DNASequence", "type": "Type[DNASequence]"}, {"lineNumber": 1841, "col_offset": 18, "nodeName": "NucleotideSequence", "type": "Type[NucleotideSequence]"}, {"lineNumber": 1913, "col_offset": 0, "nodeName": "RNA", "type": "Type[RNASequence]"}, {"lineNumber": 1913, "col_offset": 6, "nodeName": "RNASequence", "type": "Type[RNASequence]"}, {"lineNumber": 1916, "col_offset": 22, "nodeName": "BiologicalSequence", "type": "Type[BiologicalSequence]"}, {"lineNumber": 1971, "col_offset": 0, "nodeName": "Protein", "type": "Type[ProteinSequence]"}, {"lineNumber": 1971, "col_offset": 10, "nodeName": "ProteinSequence", "type": "Type[ProteinSequence]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "default_write_format", "type": "str"}, {"lineNumber": 1701, "col_offset": 4, "nodeName": "rc", "type": "Callable[[Any], Any]"}, {"lineNumber": 1701, "col_offset": 9, "nodeName": "reverse_complement", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "_id", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "id", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "_description", "type": "Any"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "description", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "first_ten", "type": "Union[Any, str]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "cn", "type": "Any"}, {"lineNumber": 478, "col_offset": 13, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "length", "type": "int"}, {"lineNumber": 538, "col_offset": 15, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "_sequence", "type": "Any"}, {"lineNumber": 564, "col_offset": 15, "nodeName": "_id", "type": "Any"}, {"lineNumber": 577, "col_offset": 15, "nodeName": "_description", "type": "Any"}, {"lineNumber": 594, "col_offset": 15, "nodeName": "_quality", "type": "Any"}, {"lineNumber": 843, "col_offset": 8, "nodeName": "gaps", "type": "Set[str]"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 1021, "col_offset": 8, "nodeName": "degapped_to_gapped", "type": "List[int]"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "gapped_to_degapped", "type": "List[Optional[int]]"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "non_gap_count", "type": "int"}, {"lineNumber": 1098, "col_offset": 8, "nodeName": "all_supported", "type": "Any"}, {"lineNumber": 1099, "col_offset": 12, "nodeName": "e", "type": "Any"}, {"lineNumber": 1099, "col_offset": 17, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1181, "col_offset": 12, "nodeName": "e", "type": "Union[Any, str]"}, {"lineNumber": 1181, "col_offset": 17, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1237, "col_offset": 8, "nodeName": "sequence_length", "type": "int"}, {"lineNumber": 1239, "col_offset": 11, "nodeName": "overlapping", "type": "Any"}, {"lineNumber": 1244, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 1272, "col_offset": 8, "nodeName": "k_words", "type": "Generator[Any, Any, None]"}, {"lineNumber": 1300, "col_offset": 8, "nodeName": "result", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 1301, "col_offset": 11, "nodeName": "overlapping", "type": "Any"}, {"lineNumber": 1309, "col_offset": 8, "nodeName": "count", "type": "Union[Any, float]"}, {"lineNumber": 1310, "col_offset": 12, "nodeName": "word", "type": "Any"}, {"lineNumber": 1312, "col_offset": 15, "nodeName": "result", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 1360, "col_offset": 8, "nodeName": "degen_chars", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1364, "col_offset": 8, "nodeName": "expansions", "type": "List[Union[Any, str]]"}, {"lineNumber": 1365, "col_offset": 12, "nodeName": "char", "type": "Union[Any, str]"}, {"lineNumber": 1365, "col_offset": 20, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1378, "col_offset": 8, "nodeName": "result", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 1425, "col_offset": 11, "nodeName": "_description", "type": "Any"}, {"lineNumber": 1477, "col_offset": 8, "nodeName": "_quality", "type": "Any"}, {"lineNumber": 1477, "col_offset": 24, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1499, "col_offset": 8, "nodeName": "start", "type": "int"}, {"lineNumber": 1501, "col_offset": 12, "nodeName": "match", "type": "Any"}, {"lineNumber": 1572, "col_offset": 12, "nodeName": "degen_char", "type": "str"}, {"lineNumber": 1577, "col_offset": 15, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1605, "col_offset": 8, "nodeName": "result", "type": "List[nothing]"}, {"lineNumber": 1606, "col_offset": 8, "nodeName": "complement_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1607, "col_offset": 8, "nodeName": "seq_iterator", "type": "Union[reversed[nothing], NucleotideSequence]"}, {"lineNumber": 1608, "col_offset": 12, "nodeName": "base", "type": "Union[str, Any]"}, {"lineNumber": 1608, "col_offset": 20, "nodeName": "seq_iterator", "type": "Union[reversed[nothing], NucleotideSequence]"}, {"lineNumber": 1616, "col_offset": 8, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1616, "col_offset": 18, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1737, "col_offset": 8, "nodeName": "gaps", "type": "str"}, {"lineNumber": 1738, "col_offset": 8, "nodeName": "acceptable", "type": "str"}, {"lineNumber": 1747, "col_offset": 8, "nodeName": "pat", "type": "Pattern[str]"}, {"lineNumber": 1749, "col_offset": 12, "nodeName": "hits", "type": "Tuple[int, int, str]"}, {"lineNumber": 1798, "col_offset": 15, "nodeName": "comp_map", "type": "Dict[str, str]"}, {"lineNumber": 1829, "col_offset": 12, "nodeName": "degen_char", "type": "str"}, {"lineNumber": 1834, "col_offset": 15, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1874, "col_offset": 15, "nodeName": "comp_map", "type": "Dict[str, str]"}, {"lineNumber": 1905, "col_offset": 12, "nodeName": "degen_char", "type": "str"}, {"lineNumber": 1910, "col_offset": 15, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1960, "col_offset": 8, "nodeName": "degen_map_lower", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1961, "col_offset": 12, "nodeName": "degen_char", "type": "str"}, {"lineNumber": 1961, "col_offset": 26, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1968, "col_offset": 15, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "iupac_characters", "type": "Callable[[], Any]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "sequence", "type": "str"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "_set_quality", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "quality", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "validate", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "unsupported_chars", "type": "Set[nothing]"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "other", "type": "Any"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "equals", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "copy", "type": "Callable[..., Any]"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 382, "col_offset": 15, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 382, "col_offset": 20, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 477, "col_offset": 20, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 478, "col_offset": 13, "nodeName": "__class__", "type": "Type[BiologicalSequence]"}, {"lineNumber": 479, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 479, "col_offset": 21, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 480, "col_offset": 11, "nodeName": "length", "type": "int"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "ellipses", "type": "str"}, {"lineNumber": 483, "col_offset": 12, "nodeName": "ellipses", "type": "str"}, {"lineNumber": 507, "col_offset": 15, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 507, "col_offset": 24, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 538, "col_offset": 15, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 564, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 577, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 594, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "quality", "type": "Any"}, {"lineNumber": 686, "col_offset": 24, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 687, "col_offset": 18, "nodeName": "id", "type": "Any"}, {"lineNumber": 688, "col_offset": 27, "nodeName": "description", "type": "Any"}, {"lineNumber": 689, "col_offset": 23, "nodeName": "quality", "type": "Any"}, {"lineNumber": 691, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 691, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 692, "col_offset": 15, "nodeName": "__class__", "type": "Type[BiologicalSequence]"}, {"lineNumber": 766, "col_offset": 11, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 767, "col_offset": 12, "nodeName": "ignore", "type": "Dict[nothing, nothing]"}, {"lineNumber": 812, "col_offset": 15, "nodeName": "count", "type": "Union[Any, Callable[..., int]]"}, {"lineNumber": 812, "col_offset": 36, "nodeName": "subsequence", "type": "Any"}, {"lineNumber": 843, "col_offset": 15, "nodeName": "gap_alphabet", "type": "Callable[[], Any]"}, {"lineNumber": 844, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 845, "col_offset": 15, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 889, "col_offset": 11, "nodeName": "distance_fn", "type": "Any"}, {"lineNumber": 890, "col_offset": 12, "nodeName": "distance_fn", "type": "Any"}, {"lineNumber": 890, "col_offset": 26, "nodeName": "hamming", "type": "Any"}, {"lineNumber": 895, "col_offset": 15, "nodeName": "distance_fn", "type": "Any"}, {"lineNumber": 895, "col_offset": 27, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 895, "col_offset": 33, "nodeName": "other", "type": "Any"}, {"lineNumber": 939, "col_offset": 15, "nodeName": "distance", "type": "Callable[..., Any]"}, {"lineNumber": 939, "col_offset": 29, "nodeName": "other", "type": "Any"}, {"lineNumber": 1024, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 1024, "col_offset": 15, "nodeName": "e", "type": "nothing"}, {"lineNumber": 1024, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1024, "col_offset": 30, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1031, "col_offset": 15, "nodeName": "degapped_to_gapped", "type": "List[int]"}, {"lineNumber": 1031, "col_offset": 35, "nodeName": "gapped_to_degapped", "type": "List[Optional[int]]"}, {"lineNumber": 1159, "col_offset": 15, "nodeName": "char", "type": "nothing"}, {"lineNumber": 1234, "col_offset": 11, "nodeName": "k", "type": "Any"}, {"lineNumber": 1237, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1237, "col_offset": 30, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1240, "col_offset": 12, "nodeName": "step", "type": "int"}, {"lineNumber": 1242, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 1242, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 1244, "col_offset": 17, "nodeName": "range", "type": "Any"}, {"lineNumber": 1244, "col_offset": 51, "nodeName": "step", "type": "Union[Any, int]"}, {"lineNumber": 1272, "col_offset": 18, "nodeName": "k_words", "type": "Callable[..., Any]"}, {"lineNumber": 1272, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 1272, "col_offset": 34, "nodeName": "overlapping", "type": "Any"}, {"lineNumber": 1273, "col_offset": 15, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 1300, "col_offset": 17, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 1300, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1302, "col_offset": 12, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 1304, "col_offset": 12, "nodeName": "num_words", "type": "int"}, {"lineNumber": 1306, "col_offset": 11, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 1307, "col_offset": 19, "nodeName": "result", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 1309, "col_offset": 21, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 1310, "col_offset": 20, "nodeName": "k_words", "type": "Callable[..., Any]"}, {"lineNumber": 1310, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 1310, "col_offset": 36, "nodeName": "overlapping", "type": "Any"}, {"lineNumber": 1311, "col_offset": 33, "nodeName": "count", "type": "Union[Any, float]"}, {"lineNumber": 1324, "col_offset": 15, "nodeName": "copy", "type": "Callable[..., Any]"}, {"lineNumber": 1360, "col_offset": 22, "nodeName": "iupac_degeneracies", "type": "Callable[[], Any]"}, {"lineNumber": 1361, "col_offset": 29, "nodeName": "union", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 1378, "col_offset": 17, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1420, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 1423, "col_offset": 41, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 1425, "col_offset": 11, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1429, "col_offset": 12, "nodeName": "header_line", "type": "Any"}, {"lineNumber": 1429, "col_offset": 26, "nodeName": "_id", "type": "Any"}, {"lineNumber": 1444, "col_offset": 15, "nodeName": "copy", "type": "Callable[..., Any]"}, {"lineNumber": 1447, "col_offset": 11, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1448, "col_offset": 12, "nodeName": "quality", "type": "numpy.ndarray"}, {"lineNumber": 1461, "col_offset": 12, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1462, "col_offset": 12, "nodeName": "writeable", "type": "bool"}, {"lineNumber": 1477, "col_offset": 8, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1499, "col_offset": 21, "nodeName": "retrieve_group_0", "type": "Any"}, {"lineNumber": 1501, "col_offset": 21, "nodeName": "finditer", "type": "Any"}, {"lineNumber": 1501, "col_offset": 36, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 1502, "col_offset": 16, "nodeName": "g", "type": "Any"}, {"lineNumber": 1552, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1572, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1573, "col_offset": 12, "nodeName": "nondegen_chars", "type": "Set[str]"}, {"lineNumber": 1606, "col_offset": 25, "nodeName": "complement_map", "type": "Callable[[], Any]"}, {"lineNumber": 1607, "col_offset": 41, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 1607, "col_offset": 54, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1616, "col_offset": 18, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1617, "col_offset": 34, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 1618, "col_offset": 12, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1620, "col_offset": 15, "nodeName": "copy", "type": "Callable[..., Any]"}, {"lineNumber": 1648, "col_offset": 15, "nodeName": "_complement", "type": "Callable[..., Any]"}, {"lineNumber": 1670, "col_offset": 15, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1700, "col_offset": 15, "nodeName": "_complement", "type": "Callable[..., Any]"}, {"lineNumber": 1737, "col_offset": 15, "nodeName": "escape", "type": "Callable"}, {"lineNumber": 1738, "col_offset": 29, "nodeName": "allow_gaps", "type": "Any"}, {"lineNumber": 1738, "col_offset": 21, "nodeName": "gaps", "type": "str"}, {"lineNumber": 1740, "col_offset": 11, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 1741, "col_offset": 12, "nodeName": "pat_str", "type": "str"}, {"lineNumber": 1747, "col_offset": 14, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 1747, "col_offset": 25, "nodeName": "pat_str", "type": "str"}, {"lineNumber": 1749, "col_offset": 20, "nodeName": "regex_iter", "type": "Callable[..., Any]"}, {"lineNumber": 1749, "col_offset": 36, "nodeName": "pat", "type": "Pattern[str]"}, {"lineNumber": 1750, "col_offset": 15, "nodeName": "allow_gaps", "type": "Any"}, {"lineNumber": 1797, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1810, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1829, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1830, "col_offset": 12, "nodeName": "nondegen_chars", "type": "Set[str]"}, {"lineNumber": 1873, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1886, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1905, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1906, "col_offset": 12, "nodeName": "nondegen_chars", "type": "Set[str]"}, {"lineNumber": 1942, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1962, "col_offset": 12, "nodeName": "nondegen_chars", "type": "Set[str]"}, {"lineNumber": 1966, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1966, "col_offset": 25, "nodeName": "degen_map_lower", "type": "Dict[str, Set[str]]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "cls", "type": "Type[BiologicalSequence]"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "iupac_degeneracies", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "iupac_standard_characters", "type": "Callable[[], Any]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "iupac_degenerate_characters", "type": "Callable[[], Any]"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 184, "col_offset": 36, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "unsupported_characters", "type": "Callable[[], Any]"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "BiologicalSequenceError", "type": "Type[skbio.sequence._exception.BiologicalSequenceError]"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "seq", "type": "Union[Any, str]"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "qual", "type": "Any"}, {"lineNumber": 328, "col_offset": 19, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 339, "col_offset": 34, "nodeName": "seq", "type": "Union[List[Union[str, Any]], Any, str]"}, {"lineNumber": 339, "col_offset": 47, "nodeName": "qual", "type": "Any"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 382, "col_offset": 20, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 445, "col_offset": 20, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 445, "col_offset": 28, "nodeName": "other", "type": "Any"}, {"lineNumber": 477, "col_offset": 20, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 478, "col_offset": 13, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 484, "col_offset": 44, "nodeName": "cn", "type": "Any"}, {"lineNumber": 484, "col_offset": 48, "nodeName": "first_ten", "type": "Union[str, Any]"}, {"lineNumber": 484, "col_offset": 59, "nodeName": "ellipses", "type": "str"}, {"lineNumber": 484, "col_offset": 69, "nodeName": "length", "type": "int"}, {"lineNumber": 507, "col_offset": 24, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 686, "col_offset": 24, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 687, "col_offset": 18, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 688, "col_offset": 27, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 689, "col_offset": 23, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 691, "col_offset": 8, "nodeName": "defaults", "type": "Dict[str, Any]"}, {"lineNumber": 692, "col_offset": 15, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 692, "col_offset": 32, "nodeName": "defaults", "type": "Dict[str, Any]"}, {"lineNumber": 770, "col_offset": 25, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 770, "col_offset": 36, "nodeName": "__class__", "type": "Type[BiologicalSequence]"}, {"lineNumber": 770, "col_offset": 54, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 773, "col_offset": 23, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 773, "col_offset": 34, "nodeName": "id", "type": "Any"}, {"lineNumber": 773, "col_offset": 45, "nodeName": "id", "type": "Any"}, {"lineNumber": 776, "col_offset": 32, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 777, "col_offset": 16, "nodeName": "description", "type": "Any"}, {"lineNumber": 777, "col_offset": 36, "nodeName": "description", "type": "Any"}, {"lineNumber": 782, "col_offset": 28, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 786, "col_offset": 29, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 786, "col_offset": 40, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 786, "col_offset": 57, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 812, "col_offset": 15, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 843, "col_offset": 15, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 845, "col_offset": 20, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 939, "col_offset": 15, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 939, "col_offset": 48, "nodeName": "hamming", "type": "Any"}, {"lineNumber": 975, "col_offset": 20, "nodeName": "fraction_diff", "type": "Callable[[Any], Any]"}, {"lineNumber": 975, "col_offset": 39, "nodeName": "other", "type": "Any"}, {"lineNumber": 1025, "col_offset": 15, "nodeName": "is_gap", "type": "Callable[[Any], Any]"}, {"lineNumber": 1025, "col_offset": 27, "nodeName": "e", "type": "nothing"}, {"lineNumber": 1030, "col_offset": 16, "nodeName": "non_gap_count", "type": "int"}, {"lineNumber": 1056, "col_offset": 16, "nodeName": "is_gap", "type": "Callable[[Any], Any]"}, {"lineNumber": 1056, "col_offset": 28, "nodeName": "c", "type": "Union[Any, str]"}, {"lineNumber": 1056, "col_offset": 35, "nodeName": "c", "type": "Union[str, Any]"}, {"lineNumber": 1056, "col_offset": 40, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 1077, "col_offset": 45, "nodeName": "gap_alphabet", "type": "Callable[[], Any]"}, {"lineNumber": 1098, "col_offset": 24, "nodeName": "alphabet", "type": "Callable[[], Any]"}, {"lineNumber": 1098, "col_offset": 42, "nodeName": "gap_alphabet", "type": "Callable[[], Any]"}, {"lineNumber": 1100, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 1100, "col_offset": 24, "nodeName": "all_supported", "type": "Any"}, {"lineNumber": 1122, "col_offset": 19, "nodeName": "index", "type": "Union[Any, Callable[..., int]]"}, {"lineNumber": 1122, "col_offset": 40, "nodeName": "subsequence", "type": "Any"}, {"lineNumber": 1159, "col_offset": 23, "nodeName": "gap_alphabet", "type": "Callable[[], Any]"}, {"lineNumber": 1182, "col_offset": 15, "nodeName": "is_gap", "type": "Callable[[Any], Any]"}, {"lineNumber": 1182, "col_offset": 27, "nodeName": "e", "type": "Union[str, Any]"}, {"lineNumber": 1200, "col_offset": 19, "nodeName": "has_unsupported_characters", "type": "Callable[[], Any]"}, {"lineNumber": 1235, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1272, "col_offset": 18, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1304, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 1310, "col_offset": 20, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1311, "col_offset": 12, "nodeName": "result", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 1324, "col_offset": 15, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1360, "col_offset": 22, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1362, "col_offset": 12, "nodeName": "gap_alphabet", "type": "Callable[[], Any]"}, {"lineNumber": 1366, "col_offset": 15, "nodeName": "char", "type": "Union[Any, str]"}, {"lineNumber": 1366, "col_offset": 23, "nodeName": "nonexpansion_chars", "type": "Set[Any]"}, {"lineNumber": 1378, "col_offset": 26, "nodeName": "expansions", "type": "List[Union[Any, str]]"}, {"lineNumber": 1379, "col_offset": 16, "nodeName": "copy", "type": "Callable[..., Any]"}, {"lineNumber": 1379, "col_offset": 53, "nodeName": "nondegen_seq", "type": "Tuple[Any, ...]"}, {"lineNumber": 1379, "col_offset": 69, "nodeName": "result", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 1420, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 1429, "col_offset": 26, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1432, "col_offset": 12, "nodeName": "header_line", "type": "Union[Any, str]"}, {"lineNumber": 1432, "col_offset": 25, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 1432, "col_offset": 40, "nodeName": "terminal_character", "type": "Any"}, {"lineNumber": 1444, "col_offset": 15, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1448, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1448, "col_offset": 33, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1450, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 1453, "col_offset": 16, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1455, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1457, "col_offset": 16, "nodeName": "cast_type", "type": "str"}, {"lineNumber": 1459, "col_offset": 16, "nodeName": "cast_type", "type": "str"}, {"lineNumber": 1461, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 1461, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 1462, "col_offset": 12, "nodeName": "flags", "type": "Any"}, {"lineNumber": 1464, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 1472, "col_offset": 16, "nodeName": "any", "type": "Any"}, {"lineNumber": 1501, "col_offset": 21, "nodeName": "regex", "type": "Any"}, {"lineNumber": 1501, "col_offset": 36, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1502, "col_offset": 21, "nodeName": "range", "type": "Any"}, {"lineNumber": 1502, "col_offset": 27, "nodeName": "start", "type": "int"}, {"lineNumber": 1566, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1566, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1566, "col_offset": 50, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1566, "col_offset": 66, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1567, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1567, "col_offset": 34, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1567, "col_offset": 50, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1568, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1568, "col_offset": 35, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1568, "col_offset": 53, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1569, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1572, "col_offset": 31, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 1573, "col_offset": 29, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1574, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1606, "col_offset": 25, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1607, "col_offset": 23, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 1607, "col_offset": 32, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1611, "col_offset": 19, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 1617, "col_offset": 11, "nodeName": "has_quality", "type": "Callable[[], Any]"}, {"lineNumber": 1618, "col_offset": 22, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1620, "col_offset": 15, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1620, "col_offset": 34, "nodeName": "result", "type": "List[nothing]"}, {"lineNumber": 1620, "col_offset": 50, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1648, "col_offset": 15, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1670, "col_offset": 23, "nodeName": "reverse_complement", "type": "Any"}, {"lineNumber": 1700, "col_offset": 15, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1737, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 1737, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1742, "col_offset": 13, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 1743, "col_offset": 12, "nodeName": "pat_str", "type": "str"}, {"lineNumber": 1747, "col_offset": 14, "nodeName": "re", "type": "module"}, {"lineNumber": 1749, "col_offset": 20, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1751, "col_offset": 16, "nodeName": "degapped", "type": "str"}, {"lineNumber": 1752, "col_offset": 20, "nodeName": "gap_char", "type": "str"}, {"lineNumber": 1797, "col_offset": 8, "nodeName": "comp_map", "type": "Dict[str, str]"}, {"lineNumber": 1797, "col_offset": 25, "nodeName": "c", "type": "str"}, {"lineNumber": 1797, "col_offset": 28, "nodeName": "c", "type": "str"}, {"lineNumber": 1824, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1824, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1824, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1824, "col_offset": 65, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1825, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1825, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1825, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1825, "col_offset": 66, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1826, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1826, "col_offset": 34, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1826, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1829, "col_offset": 31, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 1830, "col_offset": 29, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1831, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1873, "col_offset": 8, "nodeName": "comp_map", "type": "Dict[str, str]"}, {"lineNumber": 1873, "col_offset": 25, "nodeName": "c", "type": "str"}, {"lineNumber": 1873, "col_offset": 28, "nodeName": "c", "type": "str"}, {"lineNumber": 1900, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1900, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1900, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1900, "col_offset": 65, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1901, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1901, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1901, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1901, "col_offset": 66, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1902, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1902, "col_offset": 34, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1902, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1905, "col_offset": 31, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 1906, "col_offset": 29, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1907, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1956, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1956, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1957, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1962, "col_offset": 29, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1963, "col_offset": 50, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1966, "col_offset": 8, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "cls", "type": "Type[BiologicalSequence]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "cls", "type": "Type[BiologicalSequence]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "cls", "type": "Type[BiologicalSequence]"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "is_valid", "type": "Callable[[], Any]"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "seq", "type": "List[Union[str, Any]]"}, {"lineNumber": 336, "col_offset": 18, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 770, "col_offset": 36, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 770, "col_offset": 54, "nodeName": "other", "type": "Any"}, {"lineNumber": 773, "col_offset": 34, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 773, "col_offset": 45, "nodeName": "other", "type": "Any"}, {"lineNumber": 777, "col_offset": 16, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 777, "col_offset": 36, "nodeName": "other", "type": "Any"}, {"lineNumber": 782, "col_offset": 43, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 782, "col_offset": 58, "nodeName": "quality", "type": "Any"}, {"lineNumber": 783, "col_offset": 58, "nodeName": "quality", "type": "Any"}, {"lineNumber": 786, "col_offset": 40, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 786, "col_offset": 57, "nodeName": "other", "type": "Any"}, {"lineNumber": 812, "col_offset": 15, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 844, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 844, "col_offset": 28, "nodeName": "e", "type": "nothing"}, {"lineNumber": 844, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 844, "col_offset": 43, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 844, "col_offset": 52, "nodeName": "e", "type": "nothing"}, {"lineNumber": 844, "col_offset": 61, "nodeName": "gaps", "type": "Set[str]"}, {"lineNumber": 891, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 891, "col_offset": 19, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 891, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 891, "col_offset": 32, "nodeName": "other", "type": "Any"}, {"lineNumber": 892, "col_offset": 22, "nodeName": "BiologicalSequenceError", "type": "Type[skbio.sequence._exception.BiologicalSequenceError]"}, {"lineNumber": 975, "col_offset": 20, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1025, "col_offset": 15, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1026, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1028, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1028, "col_offset": 42, "nodeName": "non_gap_count", "type": "int"}, {"lineNumber": 1029, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1029, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 1056, "col_offset": 16, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1056, "col_offset": 40, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1077, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1077, "col_offset": 19, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1077, "col_offset": 27, "nodeName": "alphabet", "type": "Callable[[], Any]"}, {"lineNumber": 1077, "col_offset": 45, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1098, "col_offset": 24, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1098, "col_offset": 42, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1122, "col_offset": 19, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 1159, "col_offset": 23, "nodeName": "cls", "type": "Type[BiologicalSequence]"}, {"lineNumber": 1182, "col_offset": 15, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1200, "col_offset": 19, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1244, "col_offset": 26, "nodeName": "sequence_length", "type": "int"}, {"lineNumber": 1244, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 1245, "col_offset": 18, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1273, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1273, "col_offset": 28, "nodeName": "seq", "type": "Any"}, {"lineNumber": 1273, "col_offset": 37, "nodeName": "seq", "type": "Any"}, {"lineNumber": 1273, "col_offset": 44, "nodeName": "k_words", "type": "Generator[Any, Any, None]"}, {"lineNumber": 1302, "col_offset": 36, "nodeName": "k", "type": "Any"}, {"lineNumber": 1304, "col_offset": 40, "nodeName": "k", "type": "Any"}, {"lineNumber": 1324, "col_offset": 34, "nodeName": "lower", "type": "Union[Any, Callable[[], str]]"}, {"lineNumber": 1361, "col_offset": 29, "nodeName": "iupac_standard_characters", "type": "Callable[[], Any]"}, {"lineNumber": 1362, "col_offset": 12, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1367, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1367, "col_offset": 34, "nodeName": "char", "type": "Union[Any, str]"}, {"lineNumber": 1374, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 1379, "col_offset": 16, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1379, "col_offset": 35, "nodeName": "nondegen_seq", "type": "Tuple[Any, ...]"}, {"lineNumber": 1426, "col_offset": 38, "nodeName": "_id", "type": "Any"}, {"lineNumber": 1426, "col_offset": 48, "nodeName": "field_delimiter", "type": "Any"}, {"lineNumber": 1427, "col_offset": 38, "nodeName": "_description", "type": "Any"}, {"lineNumber": 1432, "col_offset": 25, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1444, "col_offset": 34, "nodeName": "upper", "type": "Union[Any, Callable[[], str]]"}, {"lineNumber": 1448, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1450, "col_offset": 15, "nodeName": "quality", "type": "numpy.ndarray"}, {"lineNumber": 1453, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1453, "col_offset": 37, "nodeName": "quality", "type": "numpy.ndarray"}, {"lineNumber": 1455, "col_offset": 15, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1461, "col_offset": 22, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1461, "col_offset": 50, "nodeName": "cast_type", "type": "str"}, {"lineNumber": 1462, "col_offset": 12, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1464, "col_offset": 15, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1465, "col_offset": 22, "nodeName": "BiologicalSequenceError", "type": "Type[skbio.sequence._exception.BiologicalSequenceError]"}, {"lineNumber": 1467, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1467, "col_offset": 19, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1467, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1467, "col_offset": 35, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1468, "col_offset": 22, "nodeName": "BiologicalSequenceError", "type": "Type[skbio.sequence._exception.BiologicalSequenceError]"}, {"lineNumber": 1473, "col_offset": 22, "nodeName": "BiologicalSequenceError", "type": "Type[skbio.sequence._exception.BiologicalSequenceError]"}, {"lineNumber": 1572, "col_offset": 31, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1573, "col_offset": 39, "nodeName": "degen_char", "type": "str"}, {"lineNumber": 1575, "col_offset": 16, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 1610, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1617, "col_offset": 11, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1618, "col_offset": 22, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1670, "col_offset": 23, "nodeName": "other", "type": "Any"}, {"lineNumber": 1737, "col_offset": 33, "nodeName": "gap_alphabet", "type": "Callable[[], Any]"}, {"lineNumber": 1741, "col_offset": 43, "nodeName": "acceptable", "type": "str"}, {"lineNumber": 1741, "col_offset": 55, "nodeName": "min_length", "type": "Any"}, {"lineNumber": 1745, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1751, "col_offset": 27, "nodeName": "hits", "type": "Tuple[int, int, str]"}, {"lineNumber": 1752, "col_offset": 32, "nodeName": "gap_alphabet", "type": "Callable[[], Any]"}, {"lineNumber": 1753, "col_offset": 20, "nodeName": "degapped", "type": "str"}, {"lineNumber": 1754, "col_offset": 36, "nodeName": "min_length", "type": "Any"}, {"lineNumber": 1757, "col_offset": 22, "nodeName": "hits", "type": "Tuple[int, int, str]"}, {"lineNumber": 1797, "col_offset": 34, "nodeName": "c", "type": "str"}, {"lineNumber": 1829, "col_offset": 31, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1830, "col_offset": 39, "nodeName": "degen_char", "type": "str"}, {"lineNumber": 1832, "col_offset": 16, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 1873, "col_offset": 34, "nodeName": "c", "type": "str"}, {"lineNumber": 1905, "col_offset": 31, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1906, "col_offset": 39, "nodeName": "degen_char", "type": "str"}, {"lineNumber": 1908, "col_offset": 16, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 1962, "col_offset": 39, "nodeName": "degen_char", "type": "str"}, {"lineNumber": 1964, "col_offset": 16, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "unsupported_chars", "type": "Set[nothing]"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 326, "col_offset": 36, "nodeName": "i", "type": "Any"}, {"lineNumber": 327, "col_offset": 42, "nodeName": "has_quality", "type": "Callable[[], Any]"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "quality", "type": "Any"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "has_quality", "type": "Callable[[], Any]"}, {"lineNumber": 332, "col_offset": 20, "nodeName": "qual", "type": "List[Any]"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "qual", "type": "None"}, {"lineNumber": 782, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 782, "col_offset": 58, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 783, "col_offset": 58, "nodeName": "other", "type": "Any"}, {"lineNumber": 1026, "col_offset": 16, "nodeName": "gapped_to_degapped", "type": "List[Optional[int]]"}, {"lineNumber": 1028, "col_offset": 16, "nodeName": "gapped_to_degapped", "type": "List[Optional[int]]"}, {"lineNumber": 1029, "col_offset": 16, "nodeName": "degapped_to_gapped", "type": "List[int]"}, {"lineNumber": 1077, "col_offset": 27, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1122, "col_offset": 19, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1245, "col_offset": 23, "nodeName": "i", "type": "Any"}, {"lineNumber": 1302, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1302, "col_offset": 28, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1304, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1304, "col_offset": 32, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1311, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1311, "col_offset": 23, "nodeName": "word", "type": "Any"}, {"lineNumber": 1324, "col_offset": 34, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 1361, "col_offset": 29, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1367, "col_offset": 16, "nodeName": "expansions", "type": "List[Union[Any, str]]"}, {"lineNumber": 1373, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1426, "col_offset": 38, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1427, "col_offset": 38, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1444, "col_offset": 34, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 1453, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1472, "col_offset": 16, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1502, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1610, "col_offset": 16, "nodeName": "result", "type": "List[nothing]"}, {"lineNumber": 1610, "col_offset": 30, "nodeName": "complement_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1612, "col_offset": 22, "nodeName": "BiologicalSequenceError", "type": "Type[skbio.sequence._exception.BiologicalSequenceError]"}, {"lineNumber": 1737, "col_offset": 33, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1743, "col_offset": 45, "nodeName": "acceptable", "type": "str"}, {"lineNumber": 1743, "col_offset": 57, "nodeName": "min_length", "type": "Any"}, {"lineNumber": 1745, "col_offset": 58, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 1752, "col_offset": 32, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1753, "col_offset": 31, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 1753, "col_offset": 48, "nodeName": "gap_char", "type": "str"}, {"lineNumber": 1754, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1754, "col_offset": 23, "nodeName": "degapped", "type": "str"}, {"lineNumber": 1755, "col_offset": 26, "nodeName": "hits", "type": "Tuple[int, int, str]"}, {"lineNumber": 1797, "col_offset": 39, "nodeName": "gap_alphabet", "type": "Callable[[], Any]"}, {"lineNumber": 1873, "col_offset": 39, "nodeName": "gap_alphabet", "type": "Callable[[], Any]"}, {"lineNumber": 327, "col_offset": 42, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 327, "col_offset": 36, "nodeName": "i", "type": "Any"}, {"lineNumber": 329, "col_offset": 23, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 329, "col_offset": 46, "nodeName": "idx", "type": "Any"}, {"lineNumber": 329, "col_offset": 53, "nodeName": "i", "type": "Any"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 337, "col_offset": 57, "nodeName": "i", "type": "Any"}, {"lineNumber": 337, "col_offset": 60, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1245, "col_offset": 25, "nodeName": "i", "type": "Any"}, {"lineNumber": 1245, "col_offset": 27, "nodeName": "k", "type": "Any"}, {"lineNumber": 1324, "col_offset": 34, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1373, "col_offset": 20, "nodeName": "expansions", "type": "List[Union[Any, str]]"}, {"lineNumber": 1373, "col_offset": 38, "nodeName": "degen_chars", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1375, "col_offset": 26, "nodeName": "BiologicalSequenceError", "type": "Type[skbio.sequence._exception.BiologicalSequenceError]"}, {"lineNumber": 1444, "col_offset": 34, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1502, "col_offset": 38, "nodeName": "groups", "type": "Any"}, {"lineNumber": 1503, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 1503, "col_offset": 35, "nodeName": "g", "type": "Any"}, {"lineNumber": 1503, "col_offset": 39, "nodeName": "end", "type": "Any"}, {"lineNumber": 1503, "col_offset": 49, "nodeName": "g", "type": "Any"}, {"lineNumber": 1503, "col_offset": 53, "nodeName": "group", "type": "Any"}, {"lineNumber": 1503, "col_offset": 65, "nodeName": "g", "type": "Any"}, {"lineNumber": 1575, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1575, "col_offset": 24, "nodeName": "nondegen_chars", "type": "Set[str]"}, {"lineNumber": 1610, "col_offset": 45, "nodeName": "base", "type": "Union[Any, str]"}, {"lineNumber": 1753, "col_offset": 31, "nodeName": "degapped", "type": "str"}, {"lineNumber": 1797, "col_offset": 39, "nodeName": "cls", "type": "Type[DNASequence]"}, {"lineNumber": 1832, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1832, "col_offset": 24, "nodeName": "nondegen_chars", "type": "Set[str]"}, {"lineNumber": 1873, "col_offset": 39, "nodeName": "cls", "type": "Type[RNASequence]"}, {"lineNumber": 1908, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1908, "col_offset": 24, "nodeName": "nondegen_chars", "type": "Set[str]"}, {"lineNumber": 1964, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1964, "col_offset": 24, "nodeName": "nondegen_chars", "type": "Set[str]"}, {"lineNumber": 329, "col_offset": 23, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 329, "col_offset": 37, "nodeName": "idx", "type": "Any"}, {"lineNumber": 332, "col_offset": 28, "nodeName": "quality", "type": "Any"}, {"lineNumber": 332, "col_offset": 50, "nodeName": "idx", "type": "Any"}, {"lineNumber": 332, "col_offset": 57, "nodeName": "i", "type": "Any"}, {"lineNumber": 1373, "col_offset": 50, "nodeName": "char", "type": "Union[Any, str]"}, {"lineNumber": 1376, "col_offset": 71, "nodeName": "char", "type": "Union[Any, str]"}, {"lineNumber": 1471, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1471, "col_offset": 25, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1471, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1471, "col_offset": 39, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 1502, "col_offset": 38, "nodeName": "match", "type": "Any"}, {"lineNumber": 1503, "col_offset": 23, "nodeName": "match", "type": "Any"}, {"lineNumber": 1503, "col_offset": 39, "nodeName": "match", "type": "Any"}, {"lineNumber": 1503, "col_offset": 53, "nodeName": "match", "type": "Any"}, {"lineNumber": 1614, "col_offset": 44, "nodeName": "base", "type": "Union[Any, str]"}, {"lineNumber": 1614, "col_offset": 50, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 332, "col_offset": 28, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 332, "col_offset": 41, "nodeName": "idx", "type": "Any"}, {"lineNumber": 1471, "col_offset": 39, "nodeName": "self", "type": "BiologicalSequence"}, {"lineNumber": 1614, "col_offset": 50, "nodeName": "__class__", "type": "Type[NucleotideSequence]"}, {"lineNumber": 1614, "col_offset": 50, "nodeName": "self", "type": "NucleotideSequence"}]