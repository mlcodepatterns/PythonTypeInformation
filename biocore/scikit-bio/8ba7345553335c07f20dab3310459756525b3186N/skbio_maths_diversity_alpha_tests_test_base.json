[{"lineNumber": 38, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 476, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "no_singles", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "no_doubles", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "gini_data", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "result", "type": "List[Union[int, Any]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "j", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "exp", "type": "float"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "exp", "type": "float"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "counts", "type": "List[int]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "den", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "freq_arr", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "D", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "D", "type": "float"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "exp", "type": "float"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "exp", "type": "float"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "exp", "type": "float"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "r", "type": "int"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "seq", "type": "str"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "reps", "type": "int"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "sum", "type": "int"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "urn_1", "type": "str"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "seq", "type": "str"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "observations", "type": "List[Any]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "reps", "type": "int"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "tps", "type": "Iterator[Any]"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "f", "type": "int"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "r", "type": "int"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "r", "type": "int"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "r", "type": "int"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "ci_type", "type": "str"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "ci_type", "type": "str"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "ci_type", "type": "str"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "r", "type": "int"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "start", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "start", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "step", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "step", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "result", "type": "List[Union[int, Any]]"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "_validate", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "_validate", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "_validate", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "chao1_confidence", "type": "Any"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "obs", "type": "Any"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "chao1_confidence", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "obs", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "chao1_confidence", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "no_singles", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "obs", "type": "Any"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "chao1_confidence", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "no_singles", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "obs", "type": "Any"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "chao1_confidence", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "no_doubles", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "obs", "type": "Any"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "chao1_confidence", "type": "Any"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "no_doubles", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "obs", "type": "Any"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "_chao1_var", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "obs", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "_chao1_var", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "obs", "type": "Any"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "_chao1_var", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "no_singles", "type": "numpy.ndarray"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 161, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "_chao1_var", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "no_singles", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "_chao1_var", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "no_doubles", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "_chao1_var", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "no_doubles", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 189, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 193, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 206, "col_offset": 43, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 216, "col_offset": 38, "nodeName": "observed_upper", "type": "Any"}, {"lineNumber": 216, "col_offset": 54, "nodeName": "expected_upper", "type": "numpy.ndarray"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "observed_lower", "type": "Any"}, {"lineNumber": 217, "col_offset": 54, "nodeName": "expected_lower", "type": "numpy.ndarray"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "fisher_alpha", "type": "Any"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 222, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 226, "col_offset": 14, "nodeName": "gini_index", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "gini_data", "type": "numpy.ndarray"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 227, "col_offset": 36, "nodeName": "exp", "type": "float"}, {"lineNumber": 230, "col_offset": 14, "nodeName": "gini_index", "type": "Any"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "gini_data", "type": "numpy.ndarray"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 231, "col_offset": 36, "nodeName": "exp", "type": "float"}, {"lineNumber": 235, "col_offset": 14, "nodeName": "goods_coverage", "type": "Any"}, {"lineNumber": 235, "col_offset": 29, "nodeName": "counts", "type": "List[int]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 236, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 239, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "shannon", "type": "Any"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 249, "col_offset": 54, "nodeName": "exp", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 253, "col_offset": 54, "nodeName": "exp", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 263, "col_offset": 14, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 264, "col_offset": 14, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 265, "col_offset": 14, "nodeName": "num", "type": "Any"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "den", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 61, "nodeName": "exp", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 273, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 275, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 281, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 282, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 285, "col_offset": 14, "nodeName": "observed_species", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 288, "col_offset": 14, "nodeName": "observed_species", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 291, "col_offset": 14, "nodeName": "observed_species", "type": "Any"}, {"lineNumber": 291, "col_offset": 31, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 314, "col_offset": 19, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 315, "col_offset": 13, "nodeName": "sum", "type": "Any"}, {"lineNumber": 317, "col_offset": 14, "nodeName": "simpson_e", "type": "Any"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 318, "col_offset": 30, "nodeName": "exp", "type": "Any"}, {"lineNumber": 323, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 326, "col_offset": 41, "nodeName": "exp", "type": "float"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 337, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 338, "col_offset": 14, "nodeName": "_indices_to_counts", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 339, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 339, "col_offset": 36, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 341, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 342, "col_offset": 14, "nodeName": "_indices_to_counts", "type": "Any"}, {"lineNumber": 342, "col_offset": 57, "nodeName": "obs", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 343, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 343, "col_offset": 36, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "gini_lorenz_curve_points", "type": "List[Tuple[float, float]]"}, {"lineNumber": 355, "col_offset": 14, "nodeName": "_lorenz_curve_integrator", "type": "Any"}, {"lineNumber": 355, "col_offset": 39, "nodeName": "gini_lorenz_curve_points", "type": "List[Tuple[float, float]]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 357, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 357, "col_offset": 36, "nodeName": "exp", "type": "float"}, {"lineNumber": 360, "col_offset": 14, "nodeName": "_lorenz_curve_integrator", "type": "Any"}, {"lineNumber": 360, "col_offset": 39, "nodeName": "gini_lorenz_curve_points", "type": "List[Tuple[float, float]]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 362, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 362, "col_offset": 36, "nodeName": "exp", "type": "float"}, {"lineNumber": 369, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 378, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 388, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "reps", "type": "int"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 390, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 398, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 398, "col_offset": 20, "nodeName": "izip", "type": "Any"}, {"lineNumber": 398, "col_offset": 63, "nodeName": "expected", "type": "List[Tuple[int, Set[int], int, int]]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 409, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 417, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 417, "col_offset": 23, "nodeName": "reps", "type": "int"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 420, "col_offset": 14, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 420, "col_offset": 64, "nodeName": "observations", "type": "List[Any]"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 427, "col_offset": 17, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 427, "col_offset": 28, "nodeName": "lladser_ci_from_r", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 428, "col_offset": 31, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 429, "col_offset": 31, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 433, "col_offset": 17, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 433, "col_offset": 28, "nodeName": "lladser_ci_from_r", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 434, "col_offset": 31, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 435, "col_offset": 31, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 439, "col_offset": 17, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 439, "col_offset": 28, "nodeName": "lladser_ci_from_r", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 440, "col_offset": 31, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 441, "col_offset": 31, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 445, "col_offset": 17, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 445, "col_offset": 28, "nodeName": "lladser_ci_from_r", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 446, "col_offset": 31, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 447, "col_offset": 31, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 451, "col_offset": 28, "nodeName": "lladser_ci_from_r", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 453, "col_offset": 31, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 454, "col_offset": 31, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 459, "col_offset": 28, "nodeName": "lladser_ci_from_r", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 461, "col_offset": 31, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 462, "col_offset": 31, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 465, "col_offset": 28, "nodeName": "lladser_ci_from_r", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 467, "col_offset": 31, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 468, "col_offset": 31, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 472, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 472, "col_offset": 38, "nodeName": "lladser_ci_from_r", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "_indices_to_counts", "type": "Any"}, {"lineNumber": 70, "col_offset": 53, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "curr", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "curr", "type": "Union[Any, int]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "obs", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "_validate", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "_validate", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "_validate", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Any"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "brillouin_d", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "chao1", "type": "Any"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "chao1", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "chao1", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "no_singles", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "chao1", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "no_singles", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "chao1", "type": "Any"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "no_doubles", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "chao1", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "no_doubles", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "dominance", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "dominance", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "doubles", "type": "Any"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "doubles", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "doubles", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "enspie", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "enspie", "type": "Any"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "enspie", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "dominance", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "enspie", "type": "Any"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "simpson_reciprocal", "type": "Any"}, {"lineNumber": 197, "col_offset": 50, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "equitability", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "equitability", "type": "Any"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 239, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "e", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "exp", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "heip_e", "type": "Any"}, {"lineNumber": 242, "col_offset": 32, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "log", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "kempton_taylor_q", "type": "Any"}, {"lineNumber": 249, "col_offset": 48, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "kempton_taylor_q", "type": "Any"}, {"lineNumber": 253, "col_offset": 48, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "margalef", "type": "Any"}, {"lineNumber": 256, "col_offset": 34, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 259, "col_offset": 31, "nodeName": "mcintosh_d", "type": "Any"}, {"lineNumber": 263, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 264, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "mcintosh_e", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "menhinick", "type": "Any"}, {"lineNumber": 269, "col_offset": 35, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 285, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 288, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 291, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "osd", "type": "Any"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "robbins", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "shannon", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "shannon", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "shannon", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "simpson", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "simpson", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "simpson_e", "type": "Any"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 316, "col_offset": 19, "nodeName": "D", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 323, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 325, "col_offset": 19, "nodeName": "D", "type": "float"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 326, "col_offset": 25, "nodeName": "simpson_e", "type": "Any"}, {"lineNumber": 326, "col_offset": 35, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 329, "col_offset": 25, "nodeName": "singles", "type": "Any"}, {"lineNumber": 329, "col_offset": 33, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "singles", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "singles", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 334, "col_offset": 31, "nodeName": "strong", "type": "Any"}, {"lineNumber": 337, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 338, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 341, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 342, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 346, "col_offset": 25, "nodeName": "_lorenz_curve", "type": "Any"}, {"lineNumber": 346, "col_offset": 39, "nodeName": "gini_data", "type": "numpy.ndarray"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "_lorenz_curve", "type": "Any"}, {"lineNumber": 355, "col_offset": 39, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 360, "col_offset": 39, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "_lorenz_curve_integrator", "type": "Any"}, {"lineNumber": 366, "col_offset": 37, "nodeName": "gini_lorenz_curve_points", "type": "List[Tuple[float, float]]"}, {"lineNumber": 369, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 370, "col_offset": 31, "nodeName": "_expand_counts", "type": "Any"}, {"lineNumber": 370, "col_offset": 46, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 370, "col_offset": 52, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 375, "col_offset": 24, "nodeName": "lladser_point_estimates", "type": "Any"}, {"lineNumber": 375, "col_offset": 48, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 375, "col_offset": 51, "nodeName": "r", "type": "int"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 376, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 376, "col_offset": 29, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 389, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 389, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 398, "col_offset": 25, "nodeName": "get_interval_for_r_new_species", "type": "Any"}, {"lineNumber": 398, "col_offset": 56, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 399, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 399, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 409, "col_offset": 23, "nodeName": "lladser_ci_series", "type": "Any"}, {"lineNumber": 409, "col_offset": 41, "nodeName": "urn_1", "type": "str"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 419, "col_offset": 32, "nodeName": "obs", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 427, "col_offset": 48, "nodeName": "r", "type": "int"}, {"lineNumber": 427, "col_offset": 53, "nodeName": "t", "type": "int"}, {"lineNumber": 427, "col_offset": 58, "nodeName": "f", "type": "int"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 433, "col_offset": 48, "nodeName": "r", "type": "int"}, {"lineNumber": 433, "col_offset": 53, "nodeName": "t", "type": "int"}, {"lineNumber": 433, "col_offset": 58, "nodeName": "f", "type": "int"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 439, "col_offset": 48, "nodeName": "r", "type": "int"}, {"lineNumber": 439, "col_offset": 53, "nodeName": "t", "type": "int"}, {"lineNumber": 439, "col_offset": 58, "nodeName": "f", "type": "int"}, {"lineNumber": 439, "col_offset": 67, "nodeName": "alpha", "type": "float"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 445, "col_offset": 48, "nodeName": "r", "type": "int"}, {"lineNumber": 445, "col_offset": 53, "nodeName": "t", "type": "int"}, {"lineNumber": 445, "col_offset": 58, "nodeName": "f", "type": "int"}, {"lineNumber": 445, "col_offset": 67, "nodeName": "alpha", "type": "float"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 452, "col_offset": 14, "nodeName": "r", "type": "int"}, {"lineNumber": 452, "col_offset": 19, "nodeName": "t", "type": "int"}, {"lineNumber": 452, "col_offset": 24, "nodeName": "f", "type": "int"}, {"lineNumber": 452, "col_offset": 33, "nodeName": "alpha", "type": "float"}, {"lineNumber": 452, "col_offset": 48, "nodeName": "ci_type", "type": "str"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 460, "col_offset": 14, "nodeName": "r", "type": "int"}, {"lineNumber": 460, "col_offset": 19, "nodeName": "t", "type": "int"}, {"lineNumber": 460, "col_offset": 24, "nodeName": "f", "type": "int"}, {"lineNumber": 460, "col_offset": 33, "nodeName": "alpha", "type": "float"}, {"lineNumber": 460, "col_offset": 48, "nodeName": "ci_type", "type": "str"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 466, "col_offset": 14, "nodeName": "r", "type": "int"}, {"lineNumber": 466, "col_offset": 19, "nodeName": "t", "type": "int"}, {"lineNumber": 466, "col_offset": 24, "nodeName": "f", "type": "int"}, {"lineNumber": 466, "col_offset": 33, "nodeName": "alpha", "type": "float"}, {"lineNumber": 466, "col_offset": 48, "nodeName": "ci_type", "type": "str"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 472, "col_offset": 59, "nodeName": "r", "type": "int"}, {"lineNumber": 472, "col_offset": 64, "nodeName": "t", "type": "int"}, {"lineNumber": 472, "col_offset": 69, "nodeName": "f", "type": "int"}, {"lineNumber": 473, "col_offset": 32, "nodeName": "alpha", "type": "float"}, {"lineNumber": 473, "col_offset": 47, "nodeName": "ci_type", "type": "str"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "max", "type": "Callable"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "indices", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "indices", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "indices", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "f", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "ZeroDivisionError", "type": "Type[ZeroDivisionError]"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "FloatingPointError", "type": "Type[FloatingPointError]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "curr", "type": "int"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "result", "type": "List[Union[int, Any]]"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 113, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 183, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 184, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 197, "col_offset": 60, "nodeName": "dominance", "type": "Any"}, {"lineNumber": 197, "col_offset": 70, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 201, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "diversity", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 207, "col_offset": 34, "nodeName": "esty_ci", "type": "Any"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "h", "type": "Any"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 34, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 256, "col_offset": 52, "nodeName": "log", "type": "Any"}, {"lineNumber": 259, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 266, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 269, "col_offset": 35, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 269, "col_offset": 53, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 285, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 288, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 302, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 303, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 306, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 307, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 311, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 315, "col_offset": 13, "nodeName": "freq_arr", "type": "Any"}, {"lineNumber": 329, "col_offset": 33, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 330, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 331, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 334, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 338, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 342, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 39, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 366, "col_offset": 37, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 370, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 379, "col_offset": 25, "nodeName": "k", "type": "int"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 381, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 381, "col_offset": 45, "nodeName": "t", "type": "Any"}, {"lineNumber": 389, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 395, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 396, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 397, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 403, "col_offset": 30, "nodeName": "get_interval_for_r_new_species", "type": "Any"}, {"lineNumber": 403, "col_offset": 61, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 418, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "observations", "type": "List[Any]"}, {"lineNumber": 421, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 421, "col_offset": 28, "nodeName": "tps", "type": "Iterator[Any]"}, {"lineNumber": 421, "col_offset": 36, "nodeName": "alpha", "type": "float"}, {"lineNumber": 421, "col_offset": 44, "nodeName": "reps", "type": "int"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "j", "type": "int"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 256, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 302, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 303, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 311, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 331, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 334, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 381, "col_offset": 36, "nodeName": "r", "type": "int"}, {"lineNumber": 389, "col_offset": 27, "nodeName": "lladser_point_estimates", "type": "Any"}, {"lineNumber": 389, "col_offset": 51, "nodeName": "seq", "type": "str"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "sum", "type": "Union[int, Any]"}, {"lineNumber": 391, "col_offset": 37, "nodeName": "reps", "type": "int"}, {"lineNumber": 391, "col_offset": 46, "nodeName": "sum", "type": "Union[int, Any]"}, {"lineNumber": 391, "col_offset": 52, "nodeName": "reps", "type": "int"}, {"lineNumber": 418, "col_offset": 23, "nodeName": "lladser_ci_series", "type": "Any"}, {"lineNumber": 418, "col_offset": 41, "nodeName": "seq", "type": "str"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 418, "col_offset": 57, "nodeName": "alpha", "type": "float"}, {"lineNumber": 420, "col_offset": 33, "nodeName": "a_b", "type": "Any"}, {"lineNumber": 420, "col_offset": 56, "nodeName": "a_b", "type": "Any"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "arr", "type": "numpy.ndarray"}]