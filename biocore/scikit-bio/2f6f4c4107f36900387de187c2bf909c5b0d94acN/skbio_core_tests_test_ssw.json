[{"lineNumber": 25, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 360, "col_offset": 40, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 512, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "attribute", "type": "str"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "align_attributes", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "expected_alignments", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, Union[str, int]], bool]]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "align1", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "align1", "type": "Any"}, {"lineNumber": 386, "col_offset": 37, "nodeName": "AlignmentStructure", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "accessible", "type": "str"}, {"lineNumber": 396, "col_offset": 26, "nodeName": "align_attributes", "type": "List[str]"}, {"lineNumber": 415, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, str], bool]]"}, {"lineNumber": 436, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, str], bool]]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "generic_sequence", "type": "str"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}, {"lineNumber": 494, "col_offset": 20, "nodeName": "tests", "type": "List[Dict[str, Union[str, int, List[Tuple[int, str]]]]]"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "result", "type": "nothing"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 221, "col_offset": 36, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 45, "nodeName": "expected_alignments", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 254, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 276, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 276, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 356, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 357, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 357, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 364, "col_offset": 37, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 365, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 366, "col_offset": 17, "nodeName": "striped_smith_waterman_alignment", "type": "Any"}, {"lineNumber": 366, "col_offset": 50, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 367, "col_offset": 50, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 368, "col_offset": 30, "nodeName": "align2", "type": "Any"}, {"lineNumber": 368, "col_offset": 38, "nodeName": "align1", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 376, "col_offset": 37, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 377, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 377, "col_offset": 23, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "striped_smith_waterman_alignment", "type": "Any"}, {"lineNumber": 378, "col_offset": 50, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 379, "col_offset": 50, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 380, "col_offset": 30, "nodeName": "align2", "type": "Any"}, {"lineNumber": 380, "col_offset": 38, "nodeName": "align1", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "MockAlignmentStructure", "type": "Type[Any]"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 394, "col_offset": 37, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 396, "col_offset": 26, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 415, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 436, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "mock_object", "type": "Any"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 506, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 212, "col_offset": 35, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 219, "col_offset": 27, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 34, "nodeName": "result", "type": "nothing"}, {"lineNumber": 222, "col_offset": 42, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 237, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 253, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 272, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 274, "col_offset": 57, "nodeName": "blosum50", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 275, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 339, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 340, "col_offset": 34, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 340, "col_offset": 45, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 355, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 356, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWatermanAlignment"}, {"lineNumber": 376, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 379, "col_offset": 69, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWatermanAlignment"}, {"lineNumber": 388, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 416, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 418, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 29, "nodeName": "z", "type": "bool"}, {"lineNumber": 437, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 439, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "set_zero_based", "type": "Any"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 495, "col_offset": 26, "nodeName": "mock_object_factory", "type": "Callable[[Any], Any]"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 507, "col_offset": 25, "nodeName": "get_aligned_target_sequence", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 509, "col_offset": 25, "nodeName": "get_aligned_query_sequence", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 274, "col_offset": 57, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 337, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 338, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 339, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 397, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 397, "col_offset": 37, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 397, "col_offset": 48, "nodeName": "accessible", "type": "str"}, {"lineNumber": 398, "col_offset": 29, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 416, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 417, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 418, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 419, "col_offset": 32, "nodeName": "is_zero_based", "type": "Any"}, {"lineNumber": 437, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 438, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 439, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 440, "col_offset": 41, "nodeName": "z", "type": "bool"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 441, "col_offset": 33, "nodeName": "z", "type": "bool"}, {"lineNumber": 441, "col_offset": 36, "nodeName": "is_zero_based", "type": "Any"}, {"lineNumber": 495, "col_offset": 26, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 497, "col_offset": 16, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 498, "col_offset": 30, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}, {"lineNumber": 499, "col_offset": 30, "nodeName": "_get_aligned_sequence", "type": "Any"}, {"lineNumber": 500, "col_offset": 34, "nodeName": "mock_object", "type": "Any"}, {"lineNumber": 500, "col_offset": 47, "nodeName": "generic_sequence", "type": "str"}, {"lineNumber": 502, "col_offset": 34, "nodeName": "end", "type": "int"}, {"lineNumber": 507, "col_offset": 25, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 509, "col_offset": 25, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 389, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 389, "col_offset": 34, "nodeName": "key", "type": "Any"}, {"lineNumber": 398, "col_offset": 39, "nodeName": "accessible", "type": "str"}, {"lineNumber": 419, "col_offset": 32, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 441, "col_offset": 36, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 496, "col_offset": 48, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}, {"lineNumber": 499, "col_offset": 30, "nodeName": "AlignmentStructure", "type": "Any"}, {"lineNumber": 501, "col_offset": 34, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}, {"lineNumber": 501, "col_offset": 56, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}, {"lineNumber": 502, "col_offset": 39, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "attribute", "type": "str"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "attribute", "type": "str"}, {"lineNumber": 389, "col_offset": 39, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 496, "col_offset": 18, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}, {"lineNumber": 497, "col_offset": 21, "nodeName": "le", "type": "int"}, {"lineNumber": 389, "col_offset": 50, "nodeName": "key", "type": "Any"}, {"lineNumber": 497, "col_offset": 27, "nodeName": "t", "type": "str"}, {"lineNumber": 497, "col_offset": 47, "nodeName": "le", "type": "int"}, {"lineNumber": 497, "col_offset": 51, "nodeName": "t", "type": "str"}, {"lineNumber": 497, "col_offset": 56, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}]