[{"lineNumber": 29, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "test_init_fail", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "test_init_validate", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_contains", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "test_eq", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "test_getitem", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "test_iter", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "test_len", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "test_ne", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "test_repr", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "test_reversed", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "test_k_word_frequencies", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "test_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "test_distances", "type": "Callable[[Any], Any]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "test_distribution_stats", "type": "Callable[[Any], Any]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "test_degap", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "test_get_seq", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "test_ids", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "_assert_sequence_collections_equal", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "test_update_ids_default_behavior", "type": "Callable[[Any], Any]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "test_update_ids_prefix", "type": "Callable[[Any], Any]"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "test_update_ids_fn_parameter", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "test_update_ids_ids_parameter", "type": "Callable[[Any], Any]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "test_update_ids_sequence_attributes_propagated", "type": "Callable[[Any], Any]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "test_update_ids_invalid_parameter_combos", "type": "Callable[[Any], Any]"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "test_update_ids_invalid_ids", "type": "Callable[[Any], Any]"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "test_int_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "test_is_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "test_is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "test_iteritems", "type": "Callable[[Any], Any]"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "test_lower", "type": "Callable[[Any], Any]"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "test_sequence_count", "type": "Callable[[Any], Any]"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "test_sequence_lengths", "type": "Callable[[Any], Any]"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "test_to_fasta", "type": "Callable[[Any], Any]"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "test_toFasta", "type": "Callable[[Any], Any]"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "test_upper", "type": "Callable[[Any], Any]"}, {"lineNumber": 460, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "test_degap", "type": "Callable[[Any], Any]"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "test_distances", "type": "Callable[[Any], Any]"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "test_score", "type": "Callable[[Any], Any]"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "test_start_end_positions", "type": "Callable[[Any], Any]"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "test_subalignment", "type": "Callable[[Any], Any]"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "test_subalignment_filter_out_everything", "type": "Callable[[Any], Any]"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "test_init_not_equal_lengths", "type": "Callable[[Any], Any]"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "test_init_equal_lengths", "type": "Callable[[Any], Any]"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "test_init_validate", "type": "Callable[[Any], Any]"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "test_iter_positions", "type": "Callable[[Any], Any]"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "test_majority_consensus", "type": "Callable[[Any], Any]"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "test_majority_consensus_constructor", "type": "Callable[[Any], Any]"}, {"lineNumber": 659, "col_offset": 4, "nodeName": "test_omit_gap_positions", "type": "Callable[[Any], Any]"}, {"lineNumber": 687, "col_offset": 4, "nodeName": "test_omit_gap_sequences", "type": "Callable[[Any], Any]"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "test_position_counters", "type": "Callable[[Any], Any]"}, {"lineNumber": 717, "col_offset": 4, "nodeName": "test_position_frequencies", "type": "Callable[[Any], Any]"}, {"lineNumber": 729, "col_offset": 4, "nodeName": "test_position_frequencies_floating_point_precision", "type": "Callable[[Any], Any]"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "test_position_entropies", "type": "Callable[[Any], Any]"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "test_k_word_frequencies", "type": "Callable[[Any], Any]"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "test_sequence_length", "type": "Callable[[Any], Any]"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "test_to_phylip", "type": "Callable[[Any], Any]"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "test_to_phylip_map_labels", "type": "Callable[[Any], Any]"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "test_to_phylip_no_sequences", "type": "Callable[[Any], Any]"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "test_to_phylip_no_positions", "type": "Callable[[Any], Any]"}, {"lineNumber": 826, "col_offset": 4, "nodeName": "test_validate_lengths", "type": "Callable[[Any], Any]"}, {"lineNumber": 835, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 858, "col_offset": 4, "nodeName": "test_retrieve_metadata", "type": "Callable[[Any], Any]"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "test_from_file_alignment", "type": "Callable[[Any], Any]"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "test_from_file_GF", "type": "Callable[[Any], Any]"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "test_from_file_GC", "type": "Callable[[Any], Any]"}, {"lineNumber": 898, "col_offset": 4, "nodeName": "test_from_file_GS", "type": "Callable[[Any], Any]"}, {"lineNumber": 906, "col_offset": 4, "nodeName": "test_from_file_GR", "type": "Callable[[Any], Any]"}, {"lineNumber": 916, "col_offset": 4, "nodeName": "test_from_file_multi", "type": "Callable[[Any], Any]"}, {"lineNumber": 936, "col_offset": 4, "nodeName": "test_parse_gf_multiline_nh", "type": "Callable[[Any], Any]"}, {"lineNumber": 945, "col_offset": 4, "nodeName": "test_parse_gf_multiline_cc", "type": "Callable[[Any], Any]"}, {"lineNumber": 950, "col_offset": 4, "nodeName": "test_parse_gf_info_nongf", "type": "Callable[[Any], Any]"}, {"lineNumber": 955, "col_offset": 4, "nodeName": "test_parse_gf_info_malformed", "type": "Callable[[Any], Any]"}, {"lineNumber": 961, "col_offset": 4, "nodeName": "test_parse_gc_info_nongf", "type": "Callable[[Any], Any]"}, {"lineNumber": 966, "col_offset": 4, "nodeName": "test_parse_gc_info_strict_len", "type": "Callable[[Any], Any]"}, {"lineNumber": 971, "col_offset": 4, "nodeName": "test_parse_gc_info_strict_duplicate", "type": "Callable[[Any], Any]"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "test_parse_gc_info_malformed", "type": "Callable[[Any], Any]"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "test_parse_gs_gr_info_mixed", "type": "Callable[[Any], Any]"}, {"lineNumber": 987, "col_offset": 4, "nodeName": "test_parse_gs_gr_info_malformed", "type": "Callable[[Any], Any]"}, {"lineNumber": 993, "col_offset": 4, "nodeName": "test_parse_gs_gr_info_strict", "type": "Callable[[Any], Any]"}, {"lineNumber": 998, "col_offset": 4, "nodeName": "test_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 1026, "col_offset": 4, "nodeName": "test_to_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 1059, "col_offset": 4, "nodeName": "test_str_gc", "type": "Callable[[Any], Any]"}, {"lineNumber": 1068, "col_offset": 4, "nodeName": "test_str_gf", "type": "Callable[[Any], Any]"}, {"lineNumber": 1091, "col_offset": 4, "nodeName": "test_str_gs", "type": "Callable[[Any], Any]"}, {"lineNumber": 1102, "col_offset": 4, "nodeName": "test_str_gr", "type": "Callable[[Any], Any]"}, {"lineNumber": 1111, "col_offset": 4, "nodeName": "test_str_trees", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "dumb_distance", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "append_42", "type": "Callable[[Any], Any]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "dumb_distance", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1124, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "d1", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "d2", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "d3", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "d1_lower", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "d2_lower", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "d3_lower", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "r1", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "r2", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "r3", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "i1", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "seqs1", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "seqs1_lower", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "seqs2", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "seqs3", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "seqs4", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "seqs1_t", "type": "List[Tuple[str, str]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "seqs3_t", "type": "List[Tuple[str, str]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "s1_lower", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "s2", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "s3", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "s4", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "empty", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "invalid_s1", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "s1", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 37, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "s1_iter", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "count", "type": "int"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "s1_iter", "type": "reversed[Any]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "count", "type": "int"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "expected1", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "expected2", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "expected1", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "expected2", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "exp1", "type": "str"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "exp2", "type": "str"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "exp4", "type": "str"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "actual1", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "actual2", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "actual3", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "actual4", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "exp_id_map", "type": "Dict[str, str]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "exp_id_map", "type": "Dict[str, str]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "exp_id_map", "type": "Dict[str, str]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "exp_id_map", "type": "Dict[str, str]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "exp_id_map", "type": "Dict[str, str]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "exp_id_map", "type": "Dict[str, str]"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "expected1", "type": "Dict[str, Any]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "expected2", "type": "Dict[str, str]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "expected1", "type": "Dict[str, Any]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "expected2", "type": "Dict[str, str]"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "exp1", "type": "str"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "exp2", "type": "str"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "d1", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "d2", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "d3", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "r1", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "r2", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "seqs1", "type": "List[Any]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "seqs2", "type": "List[Any]"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "seqs2_t", "type": "List[Tuple[str, str]]"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "a1", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "a2", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "empty", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "no_positions", "type": "Any"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "d1", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "d2", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "d3", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "d1", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "d2", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "d3", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "d1", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "d3", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "d2", "type": "Any"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "actual", "type": "List[Any]"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "seqs2_t", "type": "List[Tuple[str, str]]"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "actual", "type": "List[Any]"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "seqs2_t", "type": "List[Tuple[str, str]]"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "d1", "type": "Any"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "d2", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "d3", "type": "Any"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "a1", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "d1", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "d2", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "a1", "type": "Any"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "d1", "type": "Any"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "d2", "type": "Any"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "d3", "type": "Any"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "a1", "type": "Any"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 660, "col_offset": 19, "nodeName": "a2", "type": "Any"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "r1", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "r2", "type": "Any"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "r1", "type": "Any"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "r2", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 681, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "aln", "type": "Any"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 688, "col_offset": 19, "nodeName": "a2", "type": "Any"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "aln", "type": "Any"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "aln", "type": "Any"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "d1", "type": "Any"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "d2", "type": "Any"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "d3", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "d1", "type": "Any"}, {"lineNumber": 798, "col_offset": 8, "nodeName": "d2", "type": "Any"}, {"lineNumber": 799, "col_offset": 8, "nodeName": "d3", "type": "Any"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 819, "col_offset": 8, "nodeName": "d1", "type": "Any"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "d2", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 851, "col_offset": 8, "nodeName": "GS", "type": "Dict[str, collections.OrderedDict[str, str]]"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "GC", "type": "Dict[str, str]"}, {"lineNumber": 867, "col_offset": 8, "nodeName": "sto", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 872, "col_offset": 8, "nodeName": "obs_sto", "type": "Any"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "exp_sto", "type": "Any"}, {"lineNumber": 879, "col_offset": 8, "nodeName": "sto", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "obs_sto", "type": "Any"}, {"lineNumber": 887, "col_offset": 8, "nodeName": "exp_sto", "type": "Any"}, {"lineNumber": 891, "col_offset": 8, "nodeName": "sto", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 894, "col_offset": 8, "nodeName": "obs_sto", "type": "Any"}, {"lineNumber": 895, "col_offset": 8, "nodeName": "exp_sto", "type": "Any"}, {"lineNumber": 899, "col_offset": 8, "nodeName": "sto", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "obs_sto", "type": "Any"}, {"lineNumber": 903, "col_offset": 8, "nodeName": "exp_sto", "type": "Any"}, {"lineNumber": 907, "col_offset": 8, "nodeName": "sto", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "obs_sto", "type": "Any"}, {"lineNumber": 913, "col_offset": 8, "nodeName": "exp_sto", "type": "Any"}, {"lineNumber": 917, "col_offset": 8, "nodeName": "sto", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 923, "col_offset": 8, "nodeName": "obs_sto", "type": "Any"}, {"lineNumber": 924, "col_offset": 8, "nodeName": "count", "type": "int"}, {"lineNumber": 925, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 925, "col_offset": 19, "nodeName": "obs_sto", "type": "Any"}, {"lineNumber": 946, "col_offset": 8, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 947, "col_offset": 8, "nodeName": "exp", "type": "Dict[str, str]"}, {"lineNumber": 951, "col_offset": 8, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 957, "col_offset": 8, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 962, "col_offset": 8, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 967, "col_offset": 8, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 978, "col_offset": 8, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 983, "col_offset": 8, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 989, "col_offset": 8, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 994, "col_offset": 8, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 1001, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 1002, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 1062, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 1063, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 1072, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 1094, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 1095, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 1105, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 1106, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 1116, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 1117, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 1125, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "d1", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "d2", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "d1_lower", "type": "Any"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "d2_lower", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "r1", "type": "Any"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "r2", "type": "Any"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "r3", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "seqs1", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "seqs2", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "d1", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "d3", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "seqs1_t", "type": "List[Tuple[str, str]]"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "seqs2_t", "type": "List[Tuple[str, str]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "seqs1", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "seqs1_lower", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "seqs2", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "seqs3", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "seqs4", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "seqs1", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "seqs2", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "seqs3", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "d1", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "d1", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "SequenceCollectionError", "type": "Any"}, {"lineNumber": 72, "col_offset": 51, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 72, "col_offset": 71, "nodeName": "s1", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "seqs1", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "seqs1", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "SequenceCollectionError", "type": "Any"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "invalid_s1", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "d1", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "d2", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "r1", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "r2", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "__getitem__", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "__getitem__", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "s1", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "actual", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "expected", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "s1_iter", "type": "Any"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "seqs1", "type": "List[Any]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "count", "type": "int"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "count", "type": "int"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "s1", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "actual", "type": "nothing"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "s1_iter", "type": "reversed[Any]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "count", "type": "int"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "count", "type": "int"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "expected1", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "expected1", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "expected1", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "expected1", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "expected2", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "expected2", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "expected1", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "expected1", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 185, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "expected2", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 39, "nodeName": "exp1", "type": "str"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "exp2", "type": "str"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "exp4", "type": "str"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "DistanceMatrix", "type": "Any"}, {"lineNumber": 212, "col_offset": 34, "nodeName": "expected", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "distances", "type": "Any"}, {"lineNumber": 213, "col_offset": 30, "nodeName": "hamming", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "DistanceMatrix", "type": "Any"}, {"lineNumber": 221, "col_offset": 34, "nodeName": "expected", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "distances", "type": "Any"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "dumb_distance", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 223, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "distribution_stats", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "distribution_stats", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "distribution_stats", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 241, "col_offset": 18, "nodeName": "distribution_stats", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "degap", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 48, "nodeName": "d1", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 48, "nodeName": "d2", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "observed", "type": "Any"}, {"lineNumber": 270, "col_offset": 35, "nodeName": "expected", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "obs_seq", "type": "Any"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "exp_seq", "type": "Any"}, {"lineNumber": 271, "col_offset": 32, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 271, "col_offset": 36, "nodeName": "observed", "type": "Any"}, {"lineNumber": 271, "col_offset": 46, "nodeName": "expected", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "_assert_sequence_collections_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 283, "col_offset": 48, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 283, "col_offset": 56, "nodeName": "exp_sc", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "exp_id_map", "type": "Dict[str, str]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 287, "col_offset": 29, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "_assert_sequence_collections_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 288, "col_offset": 48, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 288, "col_offset": 56, "nodeName": "empty", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 299, "col_offset": 29, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "_assert_sequence_collections_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 300, "col_offset": 48, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 300, "col_offset": 56, "nodeName": "exp_sc", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 301, "col_offset": 37, "nodeName": "exp_id_map", "type": "Dict[str, str]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "_assert_sequence_collections_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 305, "col_offset": 48, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 305, "col_offset": 56, "nodeName": "empty", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 313, "col_offset": 17, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 319, "col_offset": 29, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "_assert_sequence_collections_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 320, "col_offset": 48, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 320, "col_offset": 56, "nodeName": "exp_sc", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 321, "col_offset": 37, "nodeName": "exp_id_map", "type": "Dict[str, str]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "_assert_sequence_collections_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 325, "col_offset": 48, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 325, "col_offset": 56, "nodeName": "empty", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 326, "col_offset": 25, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 336, "col_offset": 29, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "_assert_sequence_collections_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 337, "col_offset": 48, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 337, "col_offset": 56, "nodeName": "exp_sc", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 338, "col_offset": 25, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 338, "col_offset": 37, "nodeName": "exp_id_map", "type": "Dict[str, str]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 341, "col_offset": 29, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "_assert_sequence_collections_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 342, "col_offset": 48, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 342, "col_offset": 56, "nodeName": "empty", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 347, "col_offset": 17, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 352, "col_offset": 14, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 356, "col_offset": 29, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "_assert_sequence_collections_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 357, "col_offset": 48, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 357, "col_offset": 56, "nodeName": "exp_sc", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 358, "col_offset": 37, "nodeName": "exp_id_map", "type": "Dict[str, str]"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 367, "col_offset": 14, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 372, "col_offset": 29, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "_assert_sequence_collections_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 373, "col_offset": 48, "nodeName": "obs_sc", "type": "Any"}, {"lineNumber": 373, "col_offset": 56, "nodeName": "exp_sc", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 374, "col_offset": 25, "nodeName": "obs_id_map", "type": "Any"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "exp_id_map", "type": "Dict[str, str]"}, {"lineNumber": 400, "col_offset": 26, "nodeName": "d1", "type": "Any"}, {"lineNumber": 400, "col_offset": 40, "nodeName": "d2", "type": "Any"}, {"lineNumber": 402, "col_offset": 14, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 402, "col_offset": 31, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 402, "col_offset": 51, "nodeName": "int_map", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 405, "col_offset": 28, "nodeName": "d1", "type": "Any"}, {"lineNumber": 405, "col_offset": 44, "nodeName": "d2", "type": "Any"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 407, "col_offset": 31, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 407, "col_offset": 51, "nodeName": "int_map", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 409, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 431, "col_offset": 42, "nodeName": "s1_lower", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 447, "col_offset": 45, "nodeName": "exp1", "type": "str"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 449, "col_offset": 45, "nodeName": "exp2", "type": "str"}, {"lineNumber": 453, "col_offset": 14, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 453, "col_offset": 31, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 453, "col_offset": 51, "nodeName": "toFasta", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 454, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 457, "col_offset": 48, "nodeName": "s1", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 463, "col_offset": 18, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 464, "col_offset": 18, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 467, "col_offset": 18, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 468, "col_offset": 18, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "d1", "type": "Any"}, {"lineNumber": 470, "col_offset": 31, "nodeName": "d2", "type": "Any"}, {"lineNumber": 470, "col_offset": 40, "nodeName": "d3", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 471, "col_offset": 22, "nodeName": "r1", "type": "Any"}, {"lineNumber": 471, "col_offset": 31, "nodeName": "r2", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 477, "col_offset": 18, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 477, "col_offset": 28, "nodeName": "seqs1", "type": "List[Any]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 478, "col_offset": 28, "nodeName": "seqs2", "type": "List[Any]"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 479, "col_offset": 18, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 479, "col_offset": 28, "nodeName": "seqs2", "type": "List[Any]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 481, "col_offset": 18, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 481, "col_offset": 28, "nodeName": "seqs2", "type": "List[Any]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 485, "col_offset": 21, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 488, "col_offset": 28, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 491, "col_offset": 19, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 495, "col_offset": 17, "nodeName": "degap", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 496, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 496, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 498, "col_offset": 19, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 501, "col_offset": 17, "nodeName": "degap", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 502, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 502, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 508, "col_offset": 19, "nodeName": "DistanceMatrix", "type": "Any"}, {"lineNumber": 508, "col_offset": 34, "nodeName": "expected", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 509, "col_offset": 17, "nodeName": "distances", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 510, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 510, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 518, "col_offset": 19, "nodeName": "DistanceMatrix", "type": "Any"}, {"lineNumber": 518, "col_offset": 34, "nodeName": "expected", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "distances", "type": "Any"}, {"lineNumber": 519, "col_offset": 35, "nodeName": "dumb_distance", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 520, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 520, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 532, "col_offset": 17, "nodeName": "subalignment", "type": "Any"}, {"lineNumber": 533, "col_offset": 19, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 534, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 534, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 537, "col_offset": 17, "nodeName": "subalignment", "type": "Any"}, {"lineNumber": 538, "col_offset": 19, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 539, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 539, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 542, "col_offset": 17, "nodeName": "subalignment", "type": "Any"}, {"lineNumber": 544, "col_offset": 19, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 545, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 545, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 548, "col_offset": 17, "nodeName": "subalignment", "type": "Any"}, {"lineNumber": 550, "col_offset": 19, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 551, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 551, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 554, "col_offset": 17, "nodeName": "subalignment", "type": "Any"}, {"lineNumber": 555, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 556, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 557, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 558, "col_offset": 19, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 559, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 559, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 562, "col_offset": 17, "nodeName": "subalignment", "type": "Any"}, {"lineNumber": 564, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 565, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 566, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 567, "col_offset": 19, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 568, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 568, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "subalignment", "type": "Any"}, {"lineNumber": 573, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 574, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 575, "col_offset": 19, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 576, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 576, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 579, "col_offset": 17, "nodeName": "subalignment", "type": "Any"}, {"lineNumber": 583, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 584, "col_offset": 19, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 585, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 585, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 588, "col_offset": 14, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 591, "col_offset": 14, "nodeName": "subalignment", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 592, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 592, "col_offset": 30, "nodeName": "exp", "type": "Any"}, {"lineNumber": 595, "col_offset": 14, "nodeName": "subalignment", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 597, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 597, "col_offset": 30, "nodeName": "exp", "type": "Any"}, {"lineNumber": 600, "col_offset": 24, "nodeName": "d1", "type": "Any"}, {"lineNumber": 600, "col_offset": 33, "nodeName": "d2", "type": "Any"}, {"lineNumber": 600, "col_offset": 42, "nodeName": "d3", "type": "Any"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 602, "col_offset": 26, "nodeName": "AlignmentError", "type": "Any"}, {"lineNumber": 602, "col_offset": 42, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 603, "col_offset": 26, "nodeName": "invalid_seqs", "type": "List[Any]"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "d1", "type": "Any"}, {"lineNumber": 606, "col_offset": 25, "nodeName": "d2", "type": "Any"}, {"lineNumber": 606, "col_offset": 34, "nodeName": "d3", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 607, "col_offset": 18, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 610, "col_offset": 18, "nodeName": "seqs1", "type": "List[Any]"}, {"lineNumber": 613, "col_offset": 25, "nodeName": "d1", "type": "Any"}, {"lineNumber": 613, "col_offset": 34, "nodeName": "d2", "type": "Any"}, {"lineNumber": 613, "col_offset": 43, "nodeName": "d3", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 615, "col_offset": 26, "nodeName": "SequenceCollectionError", "type": "Any"}, {"lineNumber": 615, "col_offset": 51, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 616, "col_offset": 26, "nodeName": "invalid_seqs1", "type": "List[Any]"}, {"lineNumber": 619, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 623, "col_offset": 25, "nodeName": "actual", "type": "List[Any]"}, {"lineNumber": 623, "col_offset": 33, "nodeName": "expected", "type": "List[List[Any]]"}, {"lineNumber": 625, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 632, "col_offset": 25, "nodeName": "actual", "type": "List[Any]"}, {"lineNumber": 632, "col_offset": 33, "nodeName": "expected", "type": "List[List[str]]"}, {"lineNumber": 635, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 636, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 637, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 638, "col_offset": 13, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 641, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 642, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 643, "col_offset": 13, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 650, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 651, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 652, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 653, "col_offset": 13, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 655, "col_offset": 14, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 655, "col_offset": 31, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 655, "col_offset": 51, "nodeName": "majority_consensus", "type": "Any"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 657, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 660, "col_offset": 19, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 661, "col_offset": 58, "nodeName": "expected", "type": "Any"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 662, "col_offset": 59, "nodeName": "expected", "type": "Any"}, {"lineNumber": 664, "col_offset": 13, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 665, "col_offset": 13, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 666, "col_offset": 19, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 667, "col_offset": 59, "nodeName": "expected", "type": "Any"}, {"lineNumber": 669, "col_offset": 13, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 670, "col_offset": 13, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 671, "col_offset": 19, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 672, "col_offset": 58, "nodeName": "expected", "type": "Any"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 674, "col_offset": 61, "nodeName": "empty", "type": "Any"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 675, "col_offset": 62, "nodeName": "empty", "type": "Any"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 676, "col_offset": 61, "nodeName": "empty", "type": "Any"}, {"lineNumber": 681, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 683, "col_offset": 14, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 683, "col_offset": 24, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 688, "col_offset": 19, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 689, "col_offset": 58, "nodeName": "expected", "type": "Any"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 690, "col_offset": 59, "nodeName": "expected", "type": "Any"}, {"lineNumber": 692, "col_offset": 19, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 693, "col_offset": 59, "nodeName": "expected", "type": "Any"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 695, "col_offset": 61, "nodeName": "empty", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 696, "col_offset": 61, "nodeName": "empty", "type": "Any"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 697, "col_offset": 61, "nodeName": "empty", "type": "Any"}, {"lineNumber": 701, "col_offset": 14, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 715, "col_offset": 54, "nodeName": "expected", "type": "List[Counter[nothing]]"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 727, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 727, "col_offset": 57, "nodeName": "expected", "type": "List[collections.defaultdict[str, float]]"}, {"lineNumber": 744, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 746, "col_offset": 14, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 746, "col_offset": 24, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 753, "col_offset": 52, "nodeName": "nan", "type": "Any"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 755, "col_offset": 39, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 757, "col_offset": 40, "nodeName": "nan", "type": "Any"}, {"lineNumber": 758, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 759, "col_offset": 39, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 768, "col_offset": 17, "nodeName": "k_word_frequencies", "type": "Any"}, {"lineNumber": 769, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 769, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 769, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 769, "col_offset": 24, "nodeName": "actual", "type": "Any"}, {"lineNumber": 769, "col_offset": 32, "nodeName": "expected", "type": "List[collections.defaultdict[str, float]]"}, {"lineNumber": 775, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 777, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 780, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 781, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 782, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 783, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 785, "col_offset": 29, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 785, "col_offset": 46, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 785, "col_offset": 66, "nodeName": "to_phylip", "type": "Any"}, {"lineNumber": 787, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 787, "col_offset": 25, "nodeName": "id_map", "type": "Any"}, {"lineNumber": 790, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 794, "col_offset": 25, "nodeName": "phylip_str", "type": "Any"}, {"lineNumber": 794, "col_offset": 37, "nodeName": "expected", "type": "str"}, {"lineNumber": 797, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 798, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 799, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 800, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 802, "col_offset": 29, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 802, "col_offset": 46, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 802, "col_offset": 66, "nodeName": "to_phylip", "type": "Any"}, {"lineNumber": 805, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 805, "col_offset": 25, "nodeName": "id_map", "type": "Any"}, {"lineNumber": 808, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 812, "col_offset": 25, "nodeName": "phylip_str", "type": "Any"}, {"lineNumber": 812, "col_offset": 37, "nodeName": "expected", "type": "str"}, {"lineNumber": 819, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 820, "col_offset": 13, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 821, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 827, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 829, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 831, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 839, "col_offset": 18, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 851, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 855, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 855, "col_offset": 18, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 855, "col_offset": 37, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 859, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 859, "col_offset": 25, "nodeName": "gc", "type": "Any"}, {"lineNumber": 859, "col_offset": 37, "nodeName": "GC", "type": "Dict[str, str]"}, {"lineNumber": 860, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 860, "col_offset": 25, "nodeName": "gf", "type": "Any"}, {"lineNumber": 860, "col_offset": 37, "nodeName": "GF", "type": "collections.OrderedDict[str, Union[List[str], str]]"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 861, "col_offset": 25, "nodeName": "gs", "type": "Any"}, {"lineNumber": 861, "col_offset": 37, "nodeName": "GS", "type": "Dict[str, collections.OrderedDict[str, str]]"}, {"lineNumber": 862, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 862, "col_offset": 25, "nodeName": "gr", "type": "Any"}, {"lineNumber": 862, "col_offset": 37, "nodeName": "GR", "type": "Dict[str, collections.OrderedDict[str, str]]"}, {"lineNumber": 867, "col_offset": 14, "nodeName": "StringIO", "type": "Union[Type[StringIO.StringIO[Any]], Type[_io.StringIO]]"}, {"lineNumber": 872, "col_offset": 18, "nodeName": "next", "type": "Callable"}, {"lineNumber": 873, "col_offset": 18, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 873, "col_offset": 37, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 874, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 874, "col_offset": 25, "nodeName": "obs_sto", "type": "Any"}, {"lineNumber": 874, "col_offset": 34, "nodeName": "exp_sto", "type": "Any"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 879, "col_offset": 14, "nodeName": "StringIO", "type": "Union[Type[StringIO.StringIO[Any]], Type[_io.StringIO]]"}, {"lineNumber": 886, "col_offset": 18, "nodeName": "next", "type": "Callable"}, {"lineNumber": 887, "col_offset": 18, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 887, "col_offset": 37, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 887, "col_offset": 48, "nodeName": "GF", "type": "collections.OrderedDict[str, Union[List[str], str]]"}, {"lineNumber": 888, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 888, "col_offset": 25, "nodeName": "obs_sto", "type": "Any"}, {"lineNumber": 888, "col_offset": 34, "nodeName": "exp_sto", "type": "Any"}, {"lineNumber": 891, "col_offset": 14, "nodeName": "StringIO", "type": "Union[Type[StringIO.StringIO[Any]], Type[_io.StringIO]]"}, {"lineNumber": 894, "col_offset": 18, "nodeName": "next", "type": "Callable"}, {"lineNumber": 895, "col_offset": 18, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 895, "col_offset": 37, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 895, "col_offset": 60, "nodeName": "GC", "type": "Dict[str, str]"}, {"lineNumber": 896, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 896, "col_offset": 25, "nodeName": "obs_sto", "type": "Any"}, {"lineNumber": 896, "col_offset": 34, "nodeName": "exp_sto", "type": "Any"}, {"lineNumber": 899, "col_offset": 14, "nodeName": "StringIO", "type": "Union[Type[StringIO.StringIO[Any]], Type[_io.StringIO]]"}, {"lineNumber": 902, "col_offset": 18, "nodeName": "next", "type": "Callable"}, {"lineNumber": 903, "col_offset": 18, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 903, "col_offset": 37, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 903, "col_offset": 52, "nodeName": "GS", "type": "Dict[str, collections.OrderedDict[str, str]]"}, {"lineNumber": 904, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 904, "col_offset": 25, "nodeName": "obs_sto", "type": "Any"}, {"lineNumber": 904, "col_offset": 34, "nodeName": "exp_sto", "type": "Any"}, {"lineNumber": 907, "col_offset": 14, "nodeName": "StringIO", "type": "Union[Type[StringIO.StringIO[Any]], Type[_io.StringIO]]"}, {"lineNumber": 912, "col_offset": 18, "nodeName": "next", "type": "Callable"}, {"lineNumber": 913, "col_offset": 18, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 913, "col_offset": 37, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 913, "col_offset": 56, "nodeName": "GR", "type": "Dict[str, collections.OrderedDict[str, str]]"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 914, "col_offset": 25, "nodeName": "obs_sto", "type": "Any"}, {"lineNumber": 914, "col_offset": 34, "nodeName": "exp_sto", "type": "Any"}, {"lineNumber": 917, "col_offset": 14, "nodeName": "StringIO", "type": "Union[Type[StringIO.StringIO[Any]], Type[_io.StringIO]]"}, {"lineNumber": 923, "col_offset": 18, "nodeName": "from_file", "type": "Any"}, {"lineNumber": 923, "col_offset": 47, "nodeName": "sto", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 923, "col_offset": 52, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 934, "col_offset": 12, "nodeName": "count", "type": "int"}, {"lineNumber": 943, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 943, "col_offset": 54, "nodeName": "exp", "type": "Dict[str, str]"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 948, "col_offset": 54, "nodeName": "exp", "type": "Dict[str, str]"}, {"lineNumber": 999, "col_offset": 13, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 999, "col_offset": 32, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 1001, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1001, "col_offset": 18, "nodeName": "st", "type": "Any"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1024, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 1024, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 1027, "col_offset": 13, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 1027, "col_offset": 32, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 1030, "col_offset": 50, "nodeName": "temp_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 1034, "col_offset": 12, "nodeName": "obs", "type": "str"}, {"lineNumber": 1035, "col_offset": 12, "nodeName": "exp", "type": "str"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1057, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 1057, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 1060, "col_offset": 13, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 1060, "col_offset": 32, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 1062, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1062, "col_offset": 18, "nodeName": "st", "type": "Any"}, {"lineNumber": 1066, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1066, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 1066, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 1069, "col_offset": 13, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 1069, "col_offset": 32, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 1071, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1071, "col_offset": 18, "nodeName": "st", "type": "Any"}, {"lineNumber": 1089, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1089, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 1089, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 1092, "col_offset": 13, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 1092, "col_offset": 32, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 1094, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1094, "col_offset": 18, "nodeName": "st", "type": "Any"}, {"lineNumber": 1100, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1100, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 1100, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 1103, "col_offset": 13, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 1103, "col_offset": 32, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 1105, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1105, "col_offset": 18, "nodeName": "st", "type": "Any"}, {"lineNumber": 1109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1109, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 1109, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 1112, "col_offset": 13, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 1114, "col_offset": 13, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 1114, "col_offset": 32, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 1116, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1116, "col_offset": 18, "nodeName": "st", "type": "Any"}, {"lineNumber": 1121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1121, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 1121, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "i1", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "s1", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "s2", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "s1", "type": "Any"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "s1", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "s2", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "s1", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 92, "col_offset": 66, "nodeName": "s1", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "s4", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "s4", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "s2", "type": "Any"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "s2", "type": "Any"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "empty", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "empty", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "expected", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "seqs1", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "s1", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "s3", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "empty", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "s1", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "s1", "type": "Any"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "s2", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "s1", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "s4", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "s4", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "s1", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "s1", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "s2", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "s3", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "empty", "type": "Any"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 164, "col_offset": 45, "nodeName": "seqs1", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "actual", "type": "nothing"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "seqs1", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "k_word_frequencies", "type": "Any"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "expected1", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "expected2", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "k_word_frequencies", "type": "Any"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "expected1", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 188, "col_offset": 37, "nodeName": "expected2", "type": "collections.defaultdict[str, float]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "k_word_frequencies", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "k_word_frequencies", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "s1", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "empty", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "s1", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "s1", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "s1", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "actual1", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "actual1", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 229, "col_offset": 31, "nodeName": "actual1", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "s2", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "actual2", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "actual2", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "actual2", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "s3", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "actual3", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "actual3", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 239, "col_offset": 31, "nodeName": "actual3", "type": "Any"}, {"lineNumber": 241, "col_offset": 18, "nodeName": "empty", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "actual4", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "actual4", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "actual4", "type": "Any"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "s2", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "get_seq", "type": "Any"}, {"lineNumber": 255, "col_offset": 48, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "get_seq", "type": "Any"}, {"lineNumber": 256, "col_offset": 48, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 287, "col_offset": 29, "nodeName": "empty", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 288, "col_offset": 56, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 299, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "empty", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 305, "col_offset": 56, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 319, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 319, "col_offset": 51, "nodeName": "append_42", "type": "Callable[[Any], Any]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "empty", "type": "Any"}, {"lineNumber": 324, "col_offset": 54, "nodeName": "append_42", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 325, "col_offset": 56, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 336, "col_offset": 29, "nodeName": "s2", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 341, "col_offset": 29, "nodeName": "empty", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 342, "col_offset": 56, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 356, "col_offset": 29, "nodeName": "obj", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 372, "col_offset": 29, "nodeName": "obj", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 377, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 377, "col_offset": 37, "nodeName": "SequenceCollectionError", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 380, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 380, "col_offset": 37, "nodeName": "SequenceCollectionError", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 383, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 383, "col_offset": 37, "nodeName": "SequenceCollectionError", "type": "Any"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 388, "col_offset": 37, "nodeName": "SequenceCollectionError", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 390, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 390, "col_offset": 37, "nodeName": "SequenceCollectionError", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 394, "col_offset": 37, "nodeName": "SequenceCollectionError", "type": "Any"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 396, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 396, "col_offset": 37, "nodeName": "SequenceCollectionError", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "update_ids", "type": "Any"}, {"lineNumber": 400, "col_offset": 26, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 400, "col_offset": 40, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 402, "col_offset": 14, "nodeName": "npt", "type": "Any"}, {"lineNumber": 402, "col_offset": 51, "nodeName": "s1", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 403, "col_offset": 31, "nodeName": "expected1", "type": "Dict[str, Any]"}, {"lineNumber": 403, "col_offset": 42, "nodeName": "expected2", "type": "Dict[str, str]"}, {"lineNumber": 405, "col_offset": 28, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 405, "col_offset": 44, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "npt", "type": "Any"}, {"lineNumber": 407, "col_offset": 51, "nodeName": "s1", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 409, "col_offset": 31, "nodeName": "expected1", "type": "Dict[str, Any]"}, {"lineNumber": 409, "col_offset": 42, "nodeName": "expected2", "type": "Dict[str, str]"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 412, "col_offset": 25, "nodeName": "is_empty", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 413, "col_offset": 25, "nodeName": "is_empty", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 414, "col_offset": 25, "nodeName": "is_empty", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "is_empty", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 419, "col_offset": 24, "nodeName": "is_valid", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 420, "col_offset": 24, "nodeName": "is_valid", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 421, "col_offset": 24, "nodeName": "is_valid", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 422, "col_offset": 24, "nodeName": "is_valid", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 424, "col_offset": 25, "nodeName": "is_valid", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 427, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "lower", "type": "Any"}, {"lineNumber": 431, "col_offset": 42, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 434, "col_offset": 25, "nodeName": "sequence_count", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "sequence_count", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 436, "col_offset": 25, "nodeName": "sequence_count", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "sequence_count", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 441, "col_offset": 25, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 443, "col_offset": 25, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "to_fasta", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 449, "col_offset": 25, "nodeName": "to_fasta", "type": "Any"}, {"lineNumber": 453, "col_offset": 14, "nodeName": "npt", "type": "Any"}, {"lineNumber": 453, "col_offset": 51, "nodeName": "s1", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 457, "col_offset": 25, "nodeName": "upper", "type": "Any"}, {"lineNumber": 457, "col_offset": 48, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 470, "col_offset": 31, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 470, "col_offset": 40, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 471, "col_offset": 22, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 471, "col_offset": 31, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 477, "col_offset": 28, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 478, "col_offset": 28, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 479, "col_offset": 28, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 481, "col_offset": 28, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 495, "col_offset": 17, "nodeName": "a1", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 501, "col_offset": 17, "nodeName": "a2", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 509, "col_offset": 17, "nodeName": "a1", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "a1", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 523, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 524, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 527, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 528, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 532, "col_offset": 17, "nodeName": "a1", "type": "Any"}, {"lineNumber": 533, "col_offset": 30, "nodeName": "d1", "type": "Any"}, {"lineNumber": 533, "col_offset": 39, "nodeName": "d3", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 537, "col_offset": 17, "nodeName": "a1", "type": "Any"}, {"lineNumber": 538, "col_offset": 30, "nodeName": "d1", "type": "Any"}, {"lineNumber": 538, "col_offset": 39, "nodeName": "d3", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 542, "col_offset": 17, "nodeName": "a1", "type": "Any"}, {"lineNumber": 544, "col_offset": 30, "nodeName": "d2", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 548, "col_offset": 17, "nodeName": "a1", "type": "Any"}, {"lineNumber": 550, "col_offset": 30, "nodeName": "d2", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 554, "col_offset": 17, "nodeName": "a1", "type": "Any"}, {"lineNumber": 558, "col_offset": 30, "nodeName": "d1", "type": "Any"}, {"lineNumber": 558, "col_offset": 34, "nodeName": "d2", "type": "Any"}, {"lineNumber": 558, "col_offset": 38, "nodeName": "d3", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 562, "col_offset": 17, "nodeName": "a1", "type": "Any"}, {"lineNumber": 567, "col_offset": 30, "nodeName": "d1", "type": "Any"}, {"lineNumber": 567, "col_offset": 34, "nodeName": "d2", "type": "Any"}, {"lineNumber": 567, "col_offset": 38, "nodeName": "d3", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "a1", "type": "Any"}, {"lineNumber": 575, "col_offset": 30, "nodeName": "d1", "type": "Any"}, {"lineNumber": 575, "col_offset": 34, "nodeName": "d3", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 579, "col_offset": 17, "nodeName": "a1", "type": "Any"}, {"lineNumber": 584, "col_offset": 30, "nodeName": "d2", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 591, "col_offset": 14, "nodeName": "a1", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 595, "col_offset": 14, "nodeName": "a1", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 600, "col_offset": 24, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 600, "col_offset": 33, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 600, "col_offset": 42, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 601, "col_offset": 24, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 606, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 606, "col_offset": 34, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 610, "col_offset": 18, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 613, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 613, "col_offset": 34, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 613, "col_offset": 43, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 614, "col_offset": 25, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 619, "col_offset": 22, "nodeName": "iter_positions", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 625, "col_offset": 22, "nodeName": "iter_positions", "type": "Any"}, {"lineNumber": 626, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 627, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 628, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 629, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 630, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 638, "col_offset": 24, "nodeName": "d1", "type": "Any"}, {"lineNumber": 638, "col_offset": 28, "nodeName": "d2", "type": "Any"}, {"lineNumber": 638, "col_offset": 32, "nodeName": "d3", "type": "Any"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 639, "col_offset": 24, "nodeName": "equals", "type": "Any"}, {"lineNumber": 643, "col_offset": 24, "nodeName": "d1", "type": "Any"}, {"lineNumber": 643, "col_offset": 28, "nodeName": "d2", "type": "Any"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 647, "col_offset": 25, "nodeName": "majority_consensus", "type": "Any"}, {"lineNumber": 653, "col_offset": 24, "nodeName": "d1", "type": "Any"}, {"lineNumber": 653, "col_offset": 28, "nodeName": "d2", "type": "Any"}, {"lineNumber": 653, "col_offset": 32, "nodeName": "d3", "type": "Any"}, {"lineNumber": 655, "col_offset": 14, "nodeName": "npt", "type": "Any"}, {"lineNumber": 655, "col_offset": 51, "nodeName": "a1", "type": "Any"}, {"lineNumber": 656, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 661, "col_offset": 25, "nodeName": "omit_gap_positions", "type": "Any"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 662, "col_offset": 25, "nodeName": "omit_gap_positions", "type": "Any"}, {"lineNumber": 666, "col_offset": 30, "nodeName": "r1", "type": "Any"}, {"lineNumber": 666, "col_offset": 34, "nodeName": "r2", "type": "Any"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 667, "col_offset": 25, "nodeName": "omit_gap_positions", "type": "Any"}, {"lineNumber": 671, "col_offset": 30, "nodeName": "r1", "type": "Any"}, {"lineNumber": 671, "col_offset": 34, "nodeName": "r2", "type": "Any"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 672, "col_offset": 25, "nodeName": "omit_gap_positions", "type": "Any"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 674, "col_offset": 25, "nodeName": "omit_gap_positions", "type": "Any"}, {"lineNumber": 674, "col_offset": 61, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 675, "col_offset": 25, "nodeName": "omit_gap_positions", "type": "Any"}, {"lineNumber": 675, "col_offset": 62, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 676, "col_offset": 25, "nodeName": "omit_gap_positions", "type": "Any"}, {"lineNumber": 676, "col_offset": 61, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 682, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 684, "col_offset": 25, "nodeName": "omit_gap_positions", "type": "Any"}, {"lineNumber": 685, "col_offset": 25, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 689, "col_offset": 25, "nodeName": "omit_gap_sequences", "type": "Any"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 690, "col_offset": 25, "nodeName": "omit_gap_sequences", "type": "Any"}, {"lineNumber": 692, "col_offset": 30, "nodeName": "r2", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 693, "col_offset": 25, "nodeName": "omit_gap_sequences", "type": "Any"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "omit_gap_sequences", "type": "Any"}, {"lineNumber": 695, "col_offset": 61, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 696, "col_offset": 25, "nodeName": "omit_gap_sequences", "type": "Any"}, {"lineNumber": 696, "col_offset": 61, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 697, "col_offset": 25, "nodeName": "omit_gap_sequences", "type": "Any"}, {"lineNumber": 697, "col_offset": 61, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 702, "col_offset": 25, "nodeName": "omit_gap_sequences", "type": "Any"}, {"lineNumber": 703, "col_offset": 25, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 706, "col_offset": 25, "nodeName": "position_counters", "type": "Any"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 708, "col_offset": 25, "nodeName": "position_counters", "type": "Any"}, {"lineNumber": 710, "col_offset": 20, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 711, "col_offset": 20, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 712, "col_offset": 20, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 713, "col_offset": 20, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 714, "col_offset": 20, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 715, "col_offset": 25, "nodeName": "position_counters", "type": "Any"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 718, "col_offset": 25, "nodeName": "position_frequencies", "type": "Any"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 720, "col_offset": 25, "nodeName": "position_frequencies", "type": "Any"}, {"lineNumber": 722, "col_offset": 20, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 722, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 723, "col_offset": 20, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 723, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 724, "col_offset": 20, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 724, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 725, "col_offset": 20, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 725, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 726, "col_offset": 20, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 726, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 727, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 727, "col_offset": 25, "nodeName": "position_frequencies", "type": "Any"}, {"lineNumber": 745, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 747, "col_offset": 25, "nodeName": "position_frequencies", "type": "Any"}, {"lineNumber": 753, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 754, "col_offset": 39, "nodeName": "position_entropies", "type": "Any"}, {"lineNumber": 757, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 758, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 758, "col_offset": 39, "nodeName": "position_entropies", "type": "Any"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 761, "col_offset": 39, "nodeName": "position_entropies", "type": "Any"}, {"lineNumber": 765, "col_offset": 20, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 765, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 766, "col_offset": 20, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 766, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 768, "col_offset": 17, "nodeName": "a2", "type": "Any"}, {"lineNumber": 770, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 775, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 775, "col_offset": 25, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 776, "col_offset": 25, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 777, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 777, "col_offset": 25, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 783, "col_offset": 23, "nodeName": "d1", "type": "Any"}, {"lineNumber": 783, "col_offset": 27, "nodeName": "d2", "type": "Any"}, {"lineNumber": 783, "col_offset": 31, "nodeName": "d3", "type": "Any"}, {"lineNumber": 785, "col_offset": 29, "nodeName": "npt", "type": "Any"}, {"lineNumber": 785, "col_offset": 66, "nodeName": "a", "type": "Any"}, {"lineNumber": 787, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 800, "col_offset": 23, "nodeName": "d1", "type": "Any"}, {"lineNumber": 800, "col_offset": 27, "nodeName": "d2", "type": "Any"}, {"lineNumber": 800, "col_offset": 31, "nodeName": "d3", "type": "Any"}, {"lineNumber": 802, "col_offset": 29, "nodeName": "npt", "type": "Any"}, {"lineNumber": 802, "col_offset": 66, "nodeName": "a", "type": "Any"}, {"lineNumber": 805, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 815, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 815, "col_offset": 31, "nodeName": "SequenceCollectionError", "type": "Any"}, {"lineNumber": 816, "col_offset": 12, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 816, "col_offset": 29, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 816, "col_offset": 49, "nodeName": "to_phylip", "type": "Any"}, {"lineNumber": 821, "col_offset": 23, "nodeName": "d1", "type": "Any"}, {"lineNumber": 821, "col_offset": 27, "nodeName": "d2", "type": "Any"}, {"lineNumber": 823, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 823, "col_offset": 31, "nodeName": "SequenceCollectionError", "type": "Any"}, {"lineNumber": 824, "col_offset": 12, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 824, "col_offset": 29, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 824, "col_offset": 49, "nodeName": "to_phylip", "type": "Any"}, {"lineNumber": 827, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 827, "col_offset": 24, "nodeName": "_validate_lengths", "type": "Any"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 828, "col_offset": 24, "nodeName": "_validate_lengths", "type": "Any"}, {"lineNumber": 829, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 829, "col_offset": 24, "nodeName": "_validate_lengths", "type": "Any"}, {"lineNumber": 831, "col_offset": 8, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 837, "col_offset": 21, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 838, "col_offset": 21, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 851, "col_offset": 25, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 852, "col_offset": 25, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 855, "col_offset": 37, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 855, "col_offset": 51, "nodeName": "GC", "type": "Dict[str, str]"}, {"lineNumber": 855, "col_offset": 63, "nodeName": "GF", "type": "collections.OrderedDict[str, Union[List[str], str]]"}, {"lineNumber": 856, "col_offset": 40, "nodeName": "GS", "type": "Dict[str, collections.OrderedDict[str, str]]"}, {"lineNumber": 856, "col_offset": 52, "nodeName": "GR", "type": "Dict[str, collections.OrderedDict[str, str]]"}, {"lineNumber": 859, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 859, "col_offset": 25, "nodeName": "st", "type": "Any"}, {"lineNumber": 859, "col_offset": 37, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 860, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 860, "col_offset": 25, "nodeName": "st", "type": "Any"}, {"lineNumber": 860, "col_offset": 37, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 861, "col_offset": 25, "nodeName": "st", "type": "Any"}, {"lineNumber": 861, "col_offset": 37, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 862, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 862, "col_offset": 25, "nodeName": "st", "type": "Any"}, {"lineNumber": 862, "col_offset": 37, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 872, "col_offset": 23, "nodeName": "from_file", "type": "Any"}, {"lineNumber": 872, "col_offset": 52, "nodeName": "sto", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 872, "col_offset": 57, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 873, "col_offset": 37, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 874, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "GF", "type": "collections.OrderedDict[str, Union[List[str], str]]"}, {"lineNumber": 886, "col_offset": 23, "nodeName": "from_file", "type": "Any"}, {"lineNumber": 886, "col_offset": 52, "nodeName": "sto", "type": "Union[_io.StringIO, StringIO.StringIO[nothing]]"}, {"lineNumber": 886, "col_offset": 57, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 887, "col_offset": 37, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 887, "col_offset": 48, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 888, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 894, "col_offset": 23, "nodeName": "from_file", "type": "Any"}, {"lineNumber": 894, "col_offset": 52, "nodeName": "sto", "type": "Union[_io.StringIO, StringIO.StringIO[nothing]]"}, {"lineNumber": 894, "col_offset": 57, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 895, "col_offset": 37, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 895, "col_offset": 60, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 896, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 902, "col_offset": 23, "nodeName": "from_file", "type": "Any"}, {"lineNumber": 902, "col_offset": 52, "nodeName": "sto", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 902, "col_offset": 57, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 903, "col_offset": 37, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 903, "col_offset": 52, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 904, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 912, "col_offset": 23, "nodeName": "from_file", "type": "Any"}, {"lineNumber": 912, "col_offset": 52, "nodeName": "sto", "type": "Union[StringIO.StringIO[nothing], _io.StringIO]"}, {"lineNumber": 912, "col_offset": 57, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 913, "col_offset": 37, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 913, "col_offset": 56, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 923, "col_offset": 18, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 926, "col_offset": 15, "nodeName": "count", "type": "int"}, {"lineNumber": 927, "col_offset": 16, "nodeName": "exp_sto", "type": "Any"}, {"lineNumber": 943, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 943, "col_offset": 25, "nodeName": "_parse_gf_info", "type": "Any"}, {"lineNumber": 943, "col_offset": 48, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 948, "col_offset": 25, "nodeName": "_parse_gf_info", "type": "Any"}, {"lineNumber": 948, "col_offset": 48, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 952, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 952, "col_offset": 31, "nodeName": "StockholmParseError", "type": "Any"}, {"lineNumber": 953, "col_offset": 12, "nodeName": "_parse_gf_info", "type": "Any"}, {"lineNumber": 953, "col_offset": 35, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 958, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 958, "col_offset": 31, "nodeName": "StockholmParseError", "type": "Any"}, {"lineNumber": 959, "col_offset": 12, "nodeName": "_parse_gf_info", "type": "Any"}, {"lineNumber": 959, "col_offset": 35, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 963, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 963, "col_offset": 31, "nodeName": "StockholmParseError", "type": "Any"}, {"lineNumber": 964, "col_offset": 12, "nodeName": "_parse_gf_info", "type": "Any"}, {"lineNumber": 964, "col_offset": 35, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 968, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 968, "col_offset": 31, "nodeName": "StockholmParseError", "type": "Any"}, {"lineNumber": 969, "col_offset": 12, "nodeName": "_parse_gc_info", "type": "Any"}, {"lineNumber": 969, "col_offset": 35, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 973, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 973, "col_offset": 31, "nodeName": "StockholmParseError", "type": "Any"}, {"lineNumber": 974, "col_offset": 12, "nodeName": "_parse_gc_info", "type": "Any"}, {"lineNumber": 974, "col_offset": 35, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 979, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 979, "col_offset": 31, "nodeName": "StockholmParseError", "type": "Any"}, {"lineNumber": 980, "col_offset": 12, "nodeName": "_parse_gc_info", "type": "Any"}, {"lineNumber": 980, "col_offset": 35, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 984, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 984, "col_offset": 31, "nodeName": "StockholmParseError", "type": "Any"}, {"lineNumber": 985, "col_offset": 12, "nodeName": "_parse_gs_gr_info", "type": "Any"}, {"lineNumber": 985, "col_offset": 38, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 990, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 990, "col_offset": 31, "nodeName": "StockholmParseError", "type": "Any"}, {"lineNumber": 991, "col_offset": 12, "nodeName": "_parse_gs_gr_info", "type": "Any"}, {"lineNumber": 991, "col_offset": 38, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 995, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 995, "col_offset": 31, "nodeName": "StockholmParseError", "type": "Any"}, {"lineNumber": 996, "col_offset": 12, "nodeName": "_parse_gs_gr_info", "type": "Any"}, {"lineNumber": 996, "col_offset": 38, "nodeName": "sto", "type": "List[str]"}, {"lineNumber": 999, "col_offset": 32, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 999, "col_offset": 46, "nodeName": "GC", "type": "Dict[str, str]"}, {"lineNumber": 999, "col_offset": 58, "nodeName": "GF", "type": "collections.OrderedDict[str, Union[List[str], str]]"}, {"lineNumber": 999, "col_offset": 70, "nodeName": "GS", "type": "Dict[str, collections.OrderedDict[str, str]]"}, {"lineNumber": 1000, "col_offset": 35, "nodeName": "GR", "type": "Dict[str, collections.OrderedDict[str, str]]"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1027, "col_offset": 32, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1027, "col_offset": 46, "nodeName": "GC", "type": "Dict[str, str]"}, {"lineNumber": 1027, "col_offset": 58, "nodeName": "GF", "type": "collections.OrderedDict[str, Union[List[str], str]]"}, {"lineNumber": 1027, "col_offset": 70, "nodeName": "GS", "type": "Dict[str, collections.OrderedDict[str, str]]"}, {"lineNumber": 1028, "col_offset": 35, "nodeName": "GR", "type": "Dict[str, collections.OrderedDict[str, str]]"}, {"lineNumber": 1030, "col_offset": 13, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 1031, "col_offset": 12, "nodeName": "to_file", "type": "Any"}, {"lineNumber": 1031, "col_offset": 23, "nodeName": "temp_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 1032, "col_offset": 12, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 1033, "col_offset": 12, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 1034, "col_offset": 18, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1060, "col_offset": 32, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1060, "col_offset": 46, "nodeName": "GC", "type": "Dict[str, str]"}, {"lineNumber": 1066, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1069, "col_offset": 32, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1069, "col_offset": 55, "nodeName": "GF", "type": "collections.OrderedDict[str, Union[List[str], str]]"}, {"lineNumber": 1089, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1092, "col_offset": 32, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1092, "col_offset": 64, "nodeName": "GS", "type": "Dict[str, collections.OrderedDict[str, str]]"}, {"lineNumber": 1100, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1103, "col_offset": 32, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1104, "col_offset": 35, "nodeName": "GR", "type": "Dict[str, collections.OrderedDict[str, str]]"}, {"lineNumber": 1109, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1114, "col_offset": 32, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1114, "col_offset": 55, "nodeName": "GF", "type": "collections.OrderedDict[str, List[str]]"}, {"lineNumber": 1121, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 92, "col_offset": 66, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "FakeSequenceCollection", "type": "Type[Any]"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 104, "col_offset": 36, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 122, "col_offset": 49, "nodeName": "next", "type": "Callable"}, {"lineNumber": 122, "col_offset": 54, "nodeName": "s1_iter", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "FakeSequenceCollection", "type": "Type[Any]"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 164, "col_offset": 45, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 168, "col_offset": 49, "nodeName": "next", "type": "Callable"}, {"lineNumber": 168, "col_offset": 54, "nodeName": "s1_iter", "type": "reversed[Any]"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "empty", "type": "Any"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "sc", "type": "Any"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 209, "col_offset": 33, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 209, "col_offset": 52, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 241, "col_offset": 18, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "s2", "type": "Any"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "s3", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "empty", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 272, "col_offset": 28, "nodeName": "equals", "type": "Any"}, {"lineNumber": 272, "col_offset": 43, "nodeName": "exp_seq", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 287, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 299, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 310, "col_offset": 20, "nodeName": "id_", "type": "Any"}, {"lineNumber": 310, "col_offset": 36, "nodeName": "id_", "type": "Any"}, {"lineNumber": 310, "col_offset": 43, "nodeName": "ids", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 319, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 336, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 341, "col_offset": 29, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 377, "col_offset": 13, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "s1", "type": "Any"}, {"lineNumber": 380, "col_offset": 13, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "s1", "type": "Any"}, {"lineNumber": 383, "col_offset": 13, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "s1", "type": "Any"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "s1", "type": "Any"}, {"lineNumber": 390, "col_offset": 13, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "s1", "type": "Any"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 396, "col_offset": 13, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 402, "col_offset": 51, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 407, "col_offset": 51, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 412, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 413, "col_offset": 25, "nodeName": "s2", "type": "Any"}, {"lineNumber": 414, "col_offset": 25, "nodeName": "s3", "type": "Any"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "empty", "type": "Any"}, {"lineNumber": 419, "col_offset": 24, "nodeName": "s1", "type": "Any"}, {"lineNumber": 420, "col_offset": 24, "nodeName": "s2", "type": "Any"}, {"lineNumber": 421, "col_offset": 24, "nodeName": "s3", "type": "Any"}, {"lineNumber": 422, "col_offset": 24, "nodeName": "empty", "type": "Any"}, {"lineNumber": 424, "col_offset": 25, "nodeName": "invalid_s1", "type": "Any"}, {"lineNumber": 427, "col_offset": 30, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 428, "col_offset": 27, "nodeName": "id", "type": "Any"}, {"lineNumber": 428, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 428, "col_offset": 40, "nodeName": "s", "type": "Any"}, {"lineNumber": 428, "col_offset": 45, "nodeName": "s1", "type": "Any"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 434, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "s2", "type": "Any"}, {"lineNumber": 436, "col_offset": 25, "nodeName": "s3", "type": "Any"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "empty", "type": "Any"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 441, "col_offset": 25, "nodeName": "s2", "type": "Any"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "s3", "type": "Any"}, {"lineNumber": 443, "col_offset": 25, "nodeName": "empty", "type": "Any"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 449, "col_offset": 25, "nodeName": "s2", "type": "Any"}, {"lineNumber": 453, "col_offset": 51, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 457, "col_offset": 25, "nodeName": "s1_lower", "type": "Any"}, {"lineNumber": 488, "col_offset": 39, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 488, "col_offset": 56, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 495, "col_offset": 17, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 501, "col_offset": 17, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 509, "col_offset": 17, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 523, "col_offset": 25, "nodeName": "a3", "type": "Any"}, {"lineNumber": 524, "col_offset": 25, "nodeName": "a4", "type": "Any"}, {"lineNumber": 527, "col_offset": 25, "nodeName": "a3", "type": "Any"}, {"lineNumber": 528, "col_offset": 25, "nodeName": "a4", "type": "Any"}, {"lineNumber": 532, "col_offset": 17, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 533, "col_offset": 30, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 533, "col_offset": 39, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 537, "col_offset": 17, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 538, "col_offset": 30, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 538, "col_offset": 39, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 542, "col_offset": 17, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 544, "col_offset": 30, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 548, "col_offset": 17, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 550, "col_offset": 30, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 554, "col_offset": 17, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 562, "col_offset": 17, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 579, "col_offset": 17, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 591, "col_offset": 14, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 595, "col_offset": 14, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 619, "col_offset": 22, "nodeName": "a2", "type": "Any"}, {"lineNumber": 625, "col_offset": 22, "nodeName": "a2", "type": "Any"}, {"lineNumber": 625, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 639, "col_offset": 55, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 644, "col_offset": 24, "nodeName": "majority_consensus", "type": "Any"}, {"lineNumber": 647, "col_offset": 25, "nodeName": "empty", "type": "Any"}, {"lineNumber": 661, "col_offset": 25, "nodeName": "a2", "type": "Any"}, {"lineNumber": 662, "col_offset": 25, "nodeName": "a2", "type": "Any"}, {"lineNumber": 667, "col_offset": 25, "nodeName": "a2", "type": "Any"}, {"lineNumber": 672, "col_offset": 25, "nodeName": "a2", "type": "Any"}, {"lineNumber": 674, "col_offset": 25, "nodeName": "empty", "type": "Any"}, {"lineNumber": 675, "col_offset": 25, "nodeName": "empty", "type": "Any"}, {"lineNumber": 676, "col_offset": 25, "nodeName": "empty", "type": "Any"}, {"lineNumber": 682, "col_offset": 12, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 682, "col_offset": 24, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 684, "col_offset": 25, "nodeName": "aln", "type": "Any"}, {"lineNumber": 684, "col_offset": 52, "nodeName": "eps", "type": "Any"}, {"lineNumber": 689, "col_offset": 25, "nodeName": "a2", "type": "Any"}, {"lineNumber": 690, "col_offset": 25, "nodeName": "a2", "type": "Any"}, {"lineNumber": 692, "col_offset": 30, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 693, "col_offset": 25, "nodeName": "a2", "type": "Any"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "empty", "type": "Any"}, {"lineNumber": 696, "col_offset": 25, "nodeName": "empty", "type": "Any"}, {"lineNumber": 697, "col_offset": 25, "nodeName": "empty", "type": "Any"}, {"lineNumber": 701, "col_offset": 25, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 701, "col_offset": 50, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 702, "col_offset": 25, "nodeName": "aln", "type": "Any"}, {"lineNumber": 702, "col_offset": 52, "nodeName": "eps", "type": "Any"}, {"lineNumber": 706, "col_offset": 25, "nodeName": "empty", "type": "Any"}, {"lineNumber": 708, "col_offset": 25, "nodeName": "no_positions", "type": "Any"}, {"lineNumber": 715, "col_offset": 25, "nodeName": "a2", "type": "Any"}, {"lineNumber": 718, "col_offset": 25, "nodeName": "empty", "type": "Any"}, {"lineNumber": 720, "col_offset": 25, "nodeName": "no_positions", "type": "Any"}, {"lineNumber": 727, "col_offset": 25, "nodeName": "a2", "type": "Any"}, {"lineNumber": 745, "col_offset": 12, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 745, "col_offset": 24, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 747, "col_offset": 25, "nodeName": "aln", "type": "Any"}, {"lineNumber": 748, "col_offset": 26, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 748, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 754, "col_offset": 39, "nodeName": "a2", "type": "Any"}, {"lineNumber": 758, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 758, "col_offset": 39, "nodeName": "a2", "type": "Any"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 761, "col_offset": 39, "nodeName": "empty", "type": "Any"}, {"lineNumber": 768, "col_offset": 17, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 770, "col_offset": 12, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 770, "col_offset": 29, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 770, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 770, "col_offset": 40, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 770, "col_offset": 47, "nodeName": "e", "type": "Any"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 771, "col_offset": 43, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 772, "col_offset": 43, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 775, "col_offset": 25, "nodeName": "a1", "type": "Any"}, {"lineNumber": 776, "col_offset": 25, "nodeName": "a2", "type": "Any"}, {"lineNumber": 777, "col_offset": 25, "nodeName": "empty", "type": "Any"}, {"lineNumber": 815, "col_offset": 13, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 816, "col_offset": 12, "nodeName": "npt", "type": "Any"}, {"lineNumber": 823, "col_offset": 13, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 824, "col_offset": 12, "nodeName": "npt", "type": "Any"}, {"lineNumber": 824, "col_offset": 49, "nodeName": "a", "type": "Any"}, {"lineNumber": 827, "col_offset": 24, "nodeName": "a1", "type": "Any"}, {"lineNumber": 828, "col_offset": 24, "nodeName": "a2", "type": "Any"}, {"lineNumber": 829, "col_offset": 24, "nodeName": "empty", "type": "Any"}, {"lineNumber": 855, "col_offset": 51, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 855, "col_offset": 63, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 856, "col_offset": 40, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 856, "col_offset": 52, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 859, "col_offset": 25, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 860, "col_offset": 25, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 861, "col_offset": 25, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 862, "col_offset": 25, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 872, "col_offset": 23, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 886, "col_offset": 23, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 894, "col_offset": 23, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 902, "col_offset": 23, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 912, "col_offset": 23, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 927, "col_offset": 26, "nodeName": "StockholmAlignment", "type": "Any"}, {"lineNumber": 927, "col_offset": 45, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 927, "col_offset": 60, "nodeName": "GS", "type": "Dict[str, collections.OrderedDict[str, str]]"}, {"lineNumber": 928, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 928, "col_offset": 33, "nodeName": "obs", "type": "Any"}, {"lineNumber": 928, "col_offset": 38, "nodeName": "exp_sto", "type": "Any"}, {"lineNumber": 943, "col_offset": 25, "nodeName": "st", "type": "Any"}, {"lineNumber": 948, "col_offset": 25, "nodeName": "st", "type": "Any"}, {"lineNumber": 952, "col_offset": 13, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 953, "col_offset": 12, "nodeName": "st", "type": "Any"}, {"lineNumber": 958, "col_offset": 13, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 959, "col_offset": 12, "nodeName": "st", "type": "Any"}, {"lineNumber": 963, "col_offset": 13, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 964, "col_offset": 12, "nodeName": "st", "type": "Any"}, {"lineNumber": 968, "col_offset": 13, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 969, "col_offset": 12, "nodeName": "st", "type": "Any"}, {"lineNumber": 973, "col_offset": 13, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 974, "col_offset": 12, "nodeName": "st", "type": "Any"}, {"lineNumber": 979, "col_offset": 13, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 980, "col_offset": 12, "nodeName": "st", "type": "Any"}, {"lineNumber": 984, "col_offset": 13, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 985, "col_offset": 12, "nodeName": "st", "type": "Any"}, {"lineNumber": 990, "col_offset": 13, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 991, "col_offset": 12, "nodeName": "st", "type": "Any"}, {"lineNumber": 995, "col_offset": 13, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 996, "col_offset": 12, "nodeName": "st", "type": "Any"}, {"lineNumber": 999, "col_offset": 46, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 999, "col_offset": 58, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 999, "col_offset": 70, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1000, "col_offset": 35, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1027, "col_offset": 46, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1027, "col_offset": 58, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1027, "col_offset": 70, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1028, "col_offset": 35, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1030, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 1031, "col_offset": 12, "nodeName": "st", "type": "Any"}, {"lineNumber": 1032, "col_offset": 12, "nodeName": "temp_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 1033, "col_offset": 12, "nodeName": "temp_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 1034, "col_offset": 18, "nodeName": "temp_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 1060, "col_offset": 46, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1069, "col_offset": 55, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1092, "col_offset": 64, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 1104, "col_offset": 35, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 91, "col_offset": 55, "nodeName": "d1", "type": "Any"}, {"lineNumber": 91, "col_offset": 64, "nodeName": "d2", "type": "Any"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "d1", "type": "Any"}, {"lineNumber": 92, "col_offset": 53, "nodeName": "d2", "type": "Any"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "d1", "type": "Any"}, {"lineNumber": 100, "col_offset": 60, "nodeName": "d1", "type": "Any"}, {"lineNumber": 100, "col_offset": 69, "nodeName": "d3", "type": "Any"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "d1", "type": "Any"}, {"lineNumber": 101, "col_offset": 56, "nodeName": "d3", "type": "Any"}, {"lineNumber": 104, "col_offset": 56, "nodeName": "d1", "type": "Any"}, {"lineNumber": 104, "col_offset": 65, "nodeName": "r1", "type": "Any"}, {"lineNumber": 135, "col_offset": 55, "nodeName": "d1", "type": "Any"}, {"lineNumber": 140, "col_offset": 59, "nodeName": "d1", "type": "Any"}, {"lineNumber": 140, "col_offset": 68, "nodeName": "d3", "type": "Any"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "d1", "type": "Any"}, {"lineNumber": 141, "col_offset": 55, "nodeName": "d3", "type": "Any"}, {"lineNumber": 145, "col_offset": 44, "nodeName": "d1", "type": "Any"}, {"lineNumber": 145, "col_offset": 53, "nodeName": "r1", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 272, "col_offset": 28, "nodeName": "obs_seq", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 378, "col_offset": 44, "nodeName": "e", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 384, "col_offset": 44, "nodeName": "e", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 412, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 413, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 414, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 419, "col_offset": 24, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 420, "col_offset": 24, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 421, "col_offset": 24, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 422, "col_offset": 24, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 424, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 427, "col_offset": 30, "nodeName": "s1", "type": "Any"}, {"lineNumber": 428, "col_offset": 27, "nodeName": "s", "type": "Any"}, {"lineNumber": 428, "col_offset": 45, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 434, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 436, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 441, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 443, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 449, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 457, "col_offset": 25, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 523, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 524, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 527, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 528, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 619, "col_offset": 22, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 625, "col_offset": 22, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 639, "col_offset": 24, "nodeName": "majority_consensus", "type": "Any"}, {"lineNumber": 644, "col_offset": 24, "nodeName": "a1", "type": "Any"}, {"lineNumber": 645, "col_offset": 25, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 645, "col_offset": 43, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 647, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 661, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 662, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 667, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 672, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 674, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 675, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 676, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 685, "col_offset": 36, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 685, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 689, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 690, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 693, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 696, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 697, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 706, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 708, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 715, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 718, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 720, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 727, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 754, "col_offset": 39, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 758, "col_offset": 39, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 761, "col_offset": 39, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 771, "col_offset": 50, "nodeName": "values", "type": "Any"}, {"lineNumber": 772, "col_offset": 50, "nodeName": "values", "type": "Any"}, {"lineNumber": 775, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 776, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 777, "col_offset": 25, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 816, "col_offset": 49, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 827, "col_offset": 24, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 828, "col_offset": 24, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 829, "col_offset": 24, "nodeName": "self", "type": "AlignmentTests"}, {"lineNumber": 831, "col_offset": 24, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 927, "col_offset": 45, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 927, "col_offset": 60, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 928, "col_offset": 16, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 943, "col_offset": 25, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 948, "col_offset": 25, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 953, "col_offset": 12, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 959, "col_offset": 12, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 964, "col_offset": 12, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 969, "col_offset": 12, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 974, "col_offset": 12, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 980, "col_offset": 12, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 985, "col_offset": 12, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 991, "col_offset": 12, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 996, "col_offset": 12, "nodeName": "self", "type": "StockholmAlignmentTests"}, {"lineNumber": 91, "col_offset": 55, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 91, "col_offset": 64, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 92, "col_offset": 53, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 100, "col_offset": 60, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 100, "col_offset": 69, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 101, "col_offset": 56, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 104, "col_offset": 56, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 104, "col_offset": 65, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 135, "col_offset": 55, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 140, "col_offset": 59, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 140, "col_offset": 68, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 141, "col_offset": 55, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 145, "col_offset": 44, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 145, "col_offset": 53, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 348, "col_offset": 62, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 353, "col_offset": 63, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 362, "col_offset": 63, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 427, "col_offset": 30, "nodeName": "self", "type": "SequenceCollectionTests"}, {"lineNumber": 639, "col_offset": 24, "nodeName": "a1", "type": "Any"}, {"lineNumber": 682, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 682, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 684, "col_offset": 52, "nodeName": "finfo", "type": "Any"}, {"lineNumber": 684, "col_offset": 61, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 685, "col_offset": 64, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 702, "col_offset": 52, "nodeName": "finfo", "type": "Any"}, {"lineNumber": 702, "col_offset": 61, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 745, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 745, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 771, "col_offset": 50, "nodeName": "a", "type": "Any"}, {"lineNumber": 772, "col_offset": 50, "nodeName": "e", "type": "Any"}, {"lineNumber": 363, "col_offset": 63, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 684, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 685, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 685, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 702, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 832, "col_offset": 12, "nodeName": "DNASequence", "type": "Any"}]