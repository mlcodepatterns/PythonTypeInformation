[{"lineNumber": 29, "col_offset": 16, "nodeName": "_build_ext", "type": "Any"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "_version_re", "type": "Pattern[str]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "classes", "type": "str"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "classifiers", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "description", "type": "str"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "USE_CYTHON", "type": "Union[str, bool]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "ext", "type": "str"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "ssw_extra_compile_args", "type": "List[str]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "extensions", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 3, "nodeName": "USE_CYTHON", "type": "Union[str, bool]"}, {"lineNumber": 21, "col_offset": 3, "nodeName": "major", "type": "int"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "hit", "type": "str"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "version", "type": "str"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "long_description", "type": "str"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "get", "type": "Callable"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "USE_CYTHON", "type": "Union[str, bool]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "extensions", "type": "Any"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "setup", "type": "Any"}, {"lineNumber": 21, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "__NUMPY_SETUP__", "type": "bool"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "re", "type": "module"}, {"lineNumber": 41, "col_offset": 5, "nodeName": "open", "type": "Callable"}, {"lineNumber": 42, "col_offset": 10, "nodeName": "group", "type": "Callable"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "s", "type": "str"}, {"lineNumber": 59, "col_offset": 57, "nodeName": "s", "type": "str"}, {"lineNumber": 64, "col_offset": 5, "nodeName": "open", "type": "Callable"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "read", "type": "Callable"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 81, "col_offset": 3, "nodeName": "machine", "type": "Callable[[], str]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "Extension", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "Extension", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "Extension", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "cythonize", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "extensions", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "version", "type": "str"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "description", "type": "str"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "long_description", "type": "str"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "extensions", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "classifiers", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "finalize_options", "type": "Any"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "self", "type": "build_ext"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "__builtins__", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "literal_eval", "type": "Callable[[Union[str, _ast.AST]], Any]"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "hit", "type": "str"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "s", "type": "str"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 81, "col_offset": 3, "nodeName": "platform", "type": "module"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "ssw_extra_compile_args", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "ssw_extra_compile_args", "type": "List[str]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "find_packages", "type": "Any"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "build_ext", "type": "Type[build_ext]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "_build_ext", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "include_dirs", "type": "Any"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "get_include", "type": "Any"}, {"lineNumber": 42, "col_offset": 10, "nodeName": "search", "type": "Callable"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "ast", "type": "module"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "classes", "type": "str"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "ext", "type": "str"}, {"lineNumber": 88, "col_offset": 48, "nodeName": "ext", "type": "str"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "ext", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "build_ext"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 42, "col_offset": 10, "nodeName": "_version_re", "type": "Pattern[str]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "read", "type": "Callable"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "f", "type": "BinaryIO"}]