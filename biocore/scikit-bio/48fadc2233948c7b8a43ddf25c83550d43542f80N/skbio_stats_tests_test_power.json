[{"lineNumber": 35, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "test_subsample_power_defaults", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "test_subsample_power_counts", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "test_subsample_power_matches", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "test_subsample_power_multi_p", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "test_subsample_paired_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "test_subsample_paired_power_multi_p", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "test_check_nans_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "test_check_nans_num", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "test__check_nans_nan", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "test__check_nans_clean_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "test__check_nans_list_nan", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "test__check_str_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "test__get_min_size_strict", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "test__get_min_size_relaxed", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "test_confidence_bound_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "test_confidence_bound_df", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "test_confidence_bound_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "test_confidence_bound_nan", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "test_confidence_bound_axis_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "test__calculate_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "test__calculate_power_n", "type": "Callable[[Any], Any]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "test__compare_distributions_sample_counts_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "test__compare_distributions_all_mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "test__compare_distributions_matched_mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "test__compare_distributions_multiple_returns", "type": "Callable[[Any], Any]"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "test_check_subsample_power_inputs_matched_mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "test_check_subsample_power_inputs_counts", "type": "Callable[[Any], Any]"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "test_check_subsample_power_inputs_ratio", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "test_check_subsample_power_inputs_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "test_check_sample_power_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "test__calculate_power_curve_ratio_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "test__calculate_power_curve_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "test__calculate_power_curve_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "test__calculate_power_curve_ratio", "type": "Callable[[Any], Any]"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "test_bootstrap_power_curve", "type": "Callable[[Any], Any]"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "test_paired_subsamples_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "test_paired_subsamples_break", "type": "Callable[[Any], Any]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "test_paired_subsample_undefined", "type": "Callable[[Any], Any]"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "test_paired_subsample_fewer", "type": "Callable[[Any], Any]"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "test_paired_subsamples_not_strict", "type": "Callable[[Any], Any]"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "test__identify_sample_groups", "type": "Callable[[Any], Any]"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "test__identify_sample_groups_not_strict", "type": "Callable[[Any], Any]"}, {"lineNumber": 509, "col_offset": 4, "nodeName": "test__draw_paired_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "test", "type": "Callable[[Any], Any]"}, {"lineNumber": 522, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "meta", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "known_c", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "known", "type": "int"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "known", "type": "int"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "crit", "type": "float"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "crit", "type": "float"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "known", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "known_mean", "type": "float"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "known_std", "type": "float"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "known_shape", "type": "Tuple[int]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "known_num_p", "type": "int"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "known_ratio", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "known_counts", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "known_array", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "known_array", "type": "Set[str]"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "num_samps", "type": "int"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "test_samps", "type": "Any"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "round", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "arange", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "meta", "type": "Dict[str, Union[Dict[str, Any], Dict[str, Union[str, float]]]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "subsample_power", "type": "Any"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 49, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 59, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "subsample_power", "type": "Any"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 132, "col_offset": 53, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "subsample_power", "type": "Any"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 141, "col_offset": 59, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "subsample_power", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 149, "col_offset": 59, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "subsample_paired_power", "type": "Any"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "known_c", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 40, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "subsample_paired_power", "type": "Any"}, {"lineNumber": 175, "col_offset": 48, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "_get_min_size", "type": "Any"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "meta", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "test", "type": "Any"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "known", "type": "int"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "_get_min_size", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "meta", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "known", "type": "int"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "s1", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 219, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 219, "col_offset": 38, "nodeName": "known", "type": "float"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 223, "col_offset": 32, "nodeName": "s1", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "known", "type": "float"}, {"lineNumber": 224, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "s1", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "known", "type": "float"}, {"lineNumber": 229, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 233, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 242, "col_offset": 32, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 254, "col_offset": 32, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 255, "col_offset": 32, "nodeName": "known", "type": "float"}, {"lineNumber": 255, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "_calculate_power", "type": "Any"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 263, "col_offset": 44, "nodeName": "crit", "type": "float"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 265, "col_offset": 32, "nodeName": "known", "type": "float"}, {"lineNumber": 265, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "_calculate_power", "type": "Any"}, {"lineNumber": 271, "col_offset": 32, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 271, "col_offset": 39, "nodeName": "crit", "type": "float"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 272, "col_offset": 32, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "_compare_distributions", "type": "Any"}, {"lineNumber": 281, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 281, "col_offset": 46, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 282, "col_offset": 28, "nodeName": "known", "type": "Any"}, {"lineNumber": 282, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "_compare_distributions", "type": "Any"}, {"lineNumber": 290, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 46, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 292, "col_offset": 28, "nodeName": "known_mean", "type": "float"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "known_std", "type": "float"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "known_shape", "type": "Tuple[int]"}, {"lineNumber": 294, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "_compare_distributions", "type": "Any"}, {"lineNumber": 302, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 302, "col_offset": 41, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 304, "col_offset": 38, "nodeName": "test", "type": "Any"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 337, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "_check_subsample_power_inputs", "type": "Any"}, {"lineNumber": 340, "col_offset": 42, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 341, "col_offset": 42, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "known_num_p", "type": "int"}, {"lineNumber": 345, "col_offset": 38, "nodeName": "test_num_p", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 346, "col_offset": 31, "nodeName": "known_ratio", "type": "Any"}, {"lineNumber": 346, "col_offset": 44, "nodeName": "test_ratio", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 347, "col_offset": 31, "nodeName": "known_counts", "type": "Any"}, {"lineNumber": 347, "col_offset": 45, "nodeName": "test_counts", "type": "Any"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "_calculate_power_curve", "type": "Any"}, {"lineNumber": 360, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 361, "col_offset": 38, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 362, "col_offset": 38, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 365, "col_offset": 28, "nodeName": "test", "type": "Any"}, {"lineNumber": 365, "col_offset": 34, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "_calculate_power_curve", "type": "Any"}, {"lineNumber": 373, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 374, "col_offset": 38, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 375, "col_offset": 38, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 380, "col_offset": 28, "nodeName": "test", "type": "Any"}, {"lineNumber": 380, "col_offset": 34, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "_calculate_power_curve", "type": "Any"}, {"lineNumber": 388, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 389, "col_offset": 38, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 390, "col_offset": 38, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 395, "col_offset": 28, "nodeName": "test", "type": "Any"}, {"lineNumber": 395, "col_offset": 34, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 399, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 401, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 405, "col_offset": 32, "nodeName": "bootstrap_power_curve", "type": "Any"}, {"lineNumber": 405, "col_offset": 54, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 406, "col_offset": 54, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 407, "col_offset": 54, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 411, "col_offset": 28, "nodeName": "test_mean", "type": "Any"}, {"lineNumber": 411, "col_offset": 39, "nodeName": "known_mean", "type": "numpy.ndarray"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 412, "col_offset": 28, "nodeName": "test_bound", "type": "Any"}, {"lineNumber": 412, "col_offset": 40, "nodeName": "known_bound", "type": "numpy.ndarray"}, {"lineNumber": 422, "col_offset": 21, "nodeName": "paired_subsamples", "type": "Any"}, {"lineNumber": 422, "col_offset": 39, "nodeName": "meta", "type": "Any"}, {"lineNumber": 422, "col_offset": 50, "nodeName": "cat", "type": "str"}, {"lineNumber": 422, "col_offset": 55, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 432, "col_offset": 21, "nodeName": "paired_subsamples", "type": "Any"}, {"lineNumber": 432, "col_offset": 39, "nodeName": "meta", "type": "Any"}, {"lineNumber": 432, "col_offset": 50, "nodeName": "cat", "type": "str"}, {"lineNumber": 432, "col_offset": 55, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 433, "col_offset": 31, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 433, "col_offset": 44, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 436, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "paired_subsamples", "type": "Any"}, {"lineNumber": 440, "col_offset": 39, "nodeName": "meta", "type": "Any"}, {"lineNumber": 440, "col_offset": 50, "nodeName": "cat", "type": "str"}, {"lineNumber": 440, "col_offset": 55, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 442, "col_offset": 31, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 442, "col_offset": 43, "nodeName": "known_array", "type": "Any"}, {"lineNumber": 451, "col_offset": 21, "nodeName": "paired_subsamples", "type": "Any"}, {"lineNumber": 451, "col_offset": 39, "nodeName": "meta", "type": "Any"}, {"lineNumber": 451, "col_offset": 50, "nodeName": "cat", "type": "str"}, {"lineNumber": 451, "col_offset": 55, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 453, "col_offset": 17, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 455, "col_offset": 17, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 465, "col_offset": 21, "nodeName": "paired_subsamples", "type": "Any"}, {"lineNumber": 465, "col_offset": 39, "nodeName": "meta", "type": "Any"}, {"lineNumber": 465, "col_offset": 50, "nodeName": "cat", "type": "str"}, {"lineNumber": 465, "col_offset": 55, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 480, "col_offset": 33, "nodeName": "_identify_sample_groups", "type": "Any"}, {"lineNumber": 480, "col_offset": 57, "nodeName": "meta", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 485, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 485, "col_offset": 20, "nodeName": "viewitems", "type": "Any"}, {"lineNumber": 485, "col_offset": 30, "nodeName": "known_pairs", "type": "Dict[int, List[List[str]]]"}, {"lineNumber": 488, "col_offset": 19, "nodeName": "xrange", "type": "Type[xrange]"}, {"lineNumber": 498, "col_offset": 33, "nodeName": "_identify_sample_groups", "type": "Any"}, {"lineNumber": 498, "col_offset": 57, "nodeName": "meta", "type": "Any"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 503, "col_offset": 20, "nodeName": "viewitems", "type": "Any"}, {"lineNumber": 503, "col_offset": 30, "nodeName": "known_pairs", "type": "Dict[int, List[List[str]]]"}, {"lineNumber": 506, "col_offset": 19, "nodeName": "xrange", "type": "Type[xrange]"}, {"lineNumber": 517, "col_offset": 21, "nodeName": "_draw_paired_samples", "type": "Any"}, {"lineNumber": 517, "col_offset": 42, "nodeName": "meta_pairs", "type": "Dict[int, List[List[str]]]"}, {"lineNumber": 517, "col_offset": 54, "nodeName": "index", "type": "List[numpy.ndarray]"}, {"lineNumber": 517, "col_offset": 61, "nodeName": "num_samps", "type": "int"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 518, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 518, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 518, "col_offset": 30, "nodeName": "test_samps", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "meta", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "ones", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "arange", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "nan", "type": "Any"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "nan", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 120, "col_offset": 49, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "arange", "type": "Any"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 136, "col_offset": 49, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "meta", "type": "Any"}, {"lineNumber": 160, "col_offset": 52, "nodeName": "cat", "type": "str"}, {"lineNumber": 161, "col_offset": 61, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 176, "col_offset": 53, "nodeName": "meta", "type": "Any"}, {"lineNumber": 177, "col_offset": 52, "nodeName": "cat", "type": "str"}, {"lineNumber": 178, "col_offset": 61, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "_check_nans", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "_check_nans", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "_check_nans", "type": "Any"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "nan", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "_check_nans", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "_check_nans", "type": "Any"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "_check_nans", "type": "Any"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 223, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 233, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 27, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "_compare_distributions", "type": "Any"}, {"lineNumber": 276, "col_offset": 35, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 281, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 281, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 290, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 290, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 292, "col_offset": 40, "nodeName": "mean", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 293, "col_offset": 39, "nodeName": "std", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 294, "col_offset": 38, "nodeName": "test", "type": "Any"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 302, "col_offset": 41, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 307, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "_check_subsample_power_inputs", "type": "Any"}, {"lineNumber": 308, "col_offset": 42, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 313, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 313, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "_check_subsample_power_inputs", "type": "Any"}, {"lineNumber": 314, "col_offset": 42, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 321, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 321, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "_check_subsample_power_inputs", "type": "Any"}, {"lineNumber": 322, "col_offset": 42, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 42, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 330, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 330, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "_check_subsample_power_inputs", "type": "Any"}, {"lineNumber": 331, "col_offset": 42, "nodeName": "test", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 48, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 340, "col_offset": 42, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 341, "col_offset": 42, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "_calculate_power_curve", "type": "Any"}, {"lineNumber": 351, "col_offset": 35, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 351, "col_offset": 43, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 351, "col_offset": 53, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 361, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 362, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 373, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 374, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 375, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 388, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 389, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 390, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 399, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 401, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 405, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 406, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 407, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 422, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 423, "col_offset": 25, "nodeName": "known_array", "type": "List[Set[str]]"}, {"lineNumber": 423, "col_offset": 41, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 424, "col_offset": 25, "nodeName": "known_array", "type": "List[Set[str]]"}, {"lineNumber": 424, "col_offset": 41, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 428, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 432, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 436, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 440, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 441, "col_offset": 45, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 451, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 452, "col_offset": 45, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 465, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 467, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 467, "col_offset": 45, "nodeName": "known_array", "type": "List[Set[str]]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 468, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 468, "col_offset": 45, "nodeName": "known_array", "type": "List[Set[str]]"}, {"lineNumber": 478, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 479, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 480, "col_offset": 57, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 487, "col_offset": 27, "nodeName": "v", "type": "Any"}, {"lineNumber": 488, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 488, "col_offset": 30, "nodeName": "test_index", "type": "Any"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 496, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 497, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 498, "col_offset": 57, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 505, "col_offset": 27, "nodeName": "v", "type": "Any"}, {"lineNumber": 506, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 506, "col_offset": 30, "nodeName": "test_index", "type": "Any"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 512, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 513, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "loc", "type": "Any"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "id_", "type": "Any"}, {"lineNumber": 42, "col_offset": 49, "nodeName": "ids", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "power", "type": "Any"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "pd", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 49, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 51, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 45, "nodeName": "nan", "type": "Any"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "nan", "type": "Any"}, {"lineNumber": 250, "col_offset": 32, "nodeName": "nan", "type": "Any"}, {"lineNumber": 270, "col_offset": 27, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 276, "col_offset": 35, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 40, "nodeName": "test", "type": "Any"}, {"lineNumber": 293, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 308, "col_offset": 42, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 313, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 314, "col_offset": 42, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 321, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 322, "col_offset": 42, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 323, "col_offset": 42, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 330, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 331, "col_offset": 48, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 351, "col_offset": 35, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 351, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 351, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 391, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 423, "col_offset": 45, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 424, "col_offset": 45, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 428, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 454, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 454, "col_offset": 33, "nodeName": "known_array", "type": "Set[str]"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 456, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 456, "col_offset": 33, "nodeName": "known_array", "type": "Set[str]"}, {"lineNumber": 467, "col_offset": 29, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 468, "col_offset": 29, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 478, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 479, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 486, "col_offset": 26, "nodeName": "k", "type": "Any"}, {"lineNumber": 486, "col_offset": 31, "nodeName": "test_pairs", "type": "Any"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 487, "col_offset": 30, "nodeName": "test_pairs", "type": "Any"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "npt", "type": "Any"}, {"lineNumber": 489, "col_offset": 35, "nodeName": "known_index", "type": "List[numpy.ndarray]"}, {"lineNumber": 489, "col_offset": 53, "nodeName": "test_index", "type": "Any"}, {"lineNumber": 496, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 504, "col_offset": 26, "nodeName": "k", "type": "Any"}, {"lineNumber": 504, "col_offset": 31, "nodeName": "test_pairs", "type": "Any"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 505, "col_offset": 30, "nodeName": "test_pairs", "type": "Any"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "npt", "type": "Any"}, {"lineNumber": 507, "col_offset": 35, "nodeName": "known_index", "type": "List[numpy.ndarray]"}, {"lineNumber": 507, "col_offset": 53, "nodeName": "test_index", "type": "Any"}, {"lineNumber": 512, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 513, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 519, "col_offset": 28, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 144, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 61, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 324, "col_offset": 48, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 352, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 391, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 487, "col_offset": 41, "nodeName": "k", "type": "Any"}, {"lineNumber": 489, "col_offset": 47, "nodeName": "idx", "type": "int"}, {"lineNumber": 489, "col_offset": 64, "nodeName": "idx", "type": "int"}, {"lineNumber": 505, "col_offset": 41, "nodeName": "k", "type": "Any"}, {"lineNumber": 507, "col_offset": 47, "nodeName": "idx", "type": "int"}, {"lineNumber": 507, "col_offset": 64, "nodeName": "idx", "type": "int"}, {"lineNumber": 519, "col_offset": 44, "nodeName": "known_sets", "type": "List[Set[str]]"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "id_", "type": "Any"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "div", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 44, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 276, "col_offset": 61, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 309, "col_offset": 51, "nodeName": "ones", "type": "Any"}, {"lineNumber": 309, "col_offset": 65, "nodeName": "ones", "type": "Any"}, {"lineNumber": 315, "col_offset": 51, "nodeName": "ones", "type": "Any"}, {"lineNumber": 315, "col_offset": 65, "nodeName": "ones", "type": "Any"}, {"lineNumber": 324, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 519, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 519, "col_offset": 32, "nodeName": "t", "type": "Any"}, {"lineNumber": 519, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 276, "col_offset": 44, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 309, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 309, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 65, "nodeName": "np", "type": "module"}]