[{"lineNumber": 27, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 600, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "seq1", "type": "str"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "seq2", "type": "str"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "aln1", "type": "str"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "aln2", "type": "str"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "aln1", "type": "str"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "aln2", "type": "str"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "alt_sub", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "score_m", "type": "numpy.ndarray"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "tback_m", "type": "numpy.ndarray"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 601, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "resetwarnings", "type": "Callable[[], None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 67, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 67, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "aln1", "type": "str"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "aln2", "type": "str"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "seq1", "type": "str"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "seq2", "type": "str"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "aln1", "type": "str"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "aln2", "type": "str"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "seq1", "type": "str"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "seq2", "type": "str"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 221, "col_offset": 37, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 234, "col_offset": 37, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 236, "col_offset": 37, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 297, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 297, "col_offset": 37, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 299, "col_offset": 37, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 314, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 325, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 337, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 337, "col_offset": 37, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 343, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 343, "col_offset": 37, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 358, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 358, "col_offset": 37, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 360, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 367, "col_offset": 24, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 25, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 381, "col_offset": 24, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 27, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 400, "col_offset": 41, "nodeName": "_init_matrices_sw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 402, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 402, "col_offset": 54, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 403, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 403, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 416, "col_offset": 41, "nodeName": "_init_matrices_nw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 418, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 418, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 419, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 419, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 423, "col_offset": 17, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 440, "col_offset": 17, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 458, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 460, "col_offset": 44, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 461, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 461, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 462, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 462, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 477, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 479, "col_offset": 44, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 480, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 480, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 481, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 481, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 496, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 500, "col_offset": 66, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 501, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 501, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 502, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 502, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 508, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 508, "col_offset": 38, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 510, "col_offset": 58, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 518, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 518, "col_offset": 27, "nodeName": "score_m", "type": "List[List[int]]"}, {"lineNumber": 524, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 524, "col_offset": 27, "nodeName": "tback_m", "type": "List[List[int]]"}, {"lineNumber": 528, "col_offset": 17, "nodeName": "_traceback", "type": "Callable[..., Any]"}, {"lineNumber": 528, "col_offset": 28, "nodeName": "tback_m", "type": "numpy.ndarray"}, {"lineNumber": 528, "col_offset": 37, "nodeName": "score_m", "type": "numpy.ndarray"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 123, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 177, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 179, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 188, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 197, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 198, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 208, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 209, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 210, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 229, "col_offset": 35, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 231, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 244, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 245, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 246, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 248, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 254, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 255, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 256, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 258, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 268, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 269, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 282, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 283, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 284, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 285, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 294, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 307, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 308, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 309, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 311, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 317, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 318, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 319, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 321, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 330, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 331, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 332, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 334, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 338, "col_offset": 26, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 340, "col_offset": 26, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 344, "col_offset": 26, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 345, "col_offset": 26, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 352, "col_offset": 38, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 355, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 373, "col_offset": 32, "nodeName": "alt_sub", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 374, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 374, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 375, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 375, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 376, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 387, "col_offset": 32, "nodeName": "alt_sub", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 388, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 389, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 389, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 390, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 394, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 401, "col_offset": 37, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 417, "col_offset": 37, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 425, "col_offset": 54, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 427, "col_offset": 59, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 429, "col_offset": 59, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 431, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 434, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 437, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 442, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 509, "col_offset": 26, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 510, "col_offset": 26, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 518, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 524, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 528, "col_offset": 46, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 529, "col_offset": 28, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 581, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 582, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 583, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 588, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 588, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 590, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 590, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 592, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 592, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 595, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 595, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 245, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 283, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 308, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 331, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 334, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 374, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 374, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 375, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 375, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 376, "col_offset": 28, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 388, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 388, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 389, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 389, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 390, "col_offset": 28, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 526, "col_offset": 21, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 527, "col_offset": 21, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 582, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 583, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 216, "col_offset": 37, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 223, "col_offset": 37, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 338, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 345, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 401, "col_offset": 48, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 417, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 417, "col_offset": 48, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 459, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 460, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 478, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 479, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 497, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 498, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 499, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 500, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 509, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 510, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 528, "col_offset": 57, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 529, "col_offset": 39, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}]