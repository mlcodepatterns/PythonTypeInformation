[{"lineNumber": 27, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "test_subsample_power_matched_relationship_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "test_subsample_power_min_observations_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "test_subsample_power_interval_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "test_subsample_power_p_values_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "test_subsample_power_ratio_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "test_subsample_power_defaults", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "test_subsample_power_counts", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "test_subsample_power_matches", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "test_subsample_power_multi_p", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "test_subsample_paired_power_min_observations_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "test_subsample_paired_power_ratio_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "test_subsample_paired_power_p_values_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "test_subsample_paired_power_interval_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "test_subsample_paired_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "test_subsample_paired_power_multi", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "test__check_strs_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "test__check_strs_num", "type": "Callable[[Any], Any]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "test__check_str_nan", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "test__check_str_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "test_confidence_bound_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "test_confidence_bound_df", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "test_confidence_bound_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "test_confidence_bound_nan", "type": "Callable[[Any], Any]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "test_confidence_bound_axis_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "test__calculate_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "test__calculate_power_n", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "test__compare_distributions_mode_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "test__compare_distributions_count_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "test__compare_distributions_matched_length_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "test__compare_distributions_sample_counts_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "test__compare_distributions_all_mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "test__compare_distributions_matched_mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "test__compare_distributions_multiple_returns", "type": "Callable[[Any], Any]"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "test_paired_subsamples_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "test_paired_subsamples_break", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "test_paired_subsample_undefined", "type": "Callable[[Any], Any]"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "test_paired_subsample_fewer", "type": "Callable[[Any], Any]"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "test_paired_subsamples_not_strict", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 408, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "meta", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "known_c", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "crit", "type": "float"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "crit", "type": "float"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "known", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "known_mean", "type": "float"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "known_std", "type": "float"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "known_shape", "type": "Tuple[int]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "known_array", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "known_array", "type": "Set[str]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "round", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "arange", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "meta", "type": "Dict[str, Union[Dict[str, Any], Dict[str, Union[str, float]]]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "subsample_power", "type": "Any"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 134, "col_offset": 59, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "subsample_power", "type": "Any"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 143, "col_offset": 53, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "subsample_power", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 152, "col_offset": 59, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "subsample_power", "type": "Any"}, {"lineNumber": 156, "col_offset": 41, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 161, "col_offset": 59, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "subsample_paired_power", "type": "Any"}, {"lineNumber": 204, "col_offset": 48, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "known_c", "type": "numpy.ndarray"}, {"lineNumber": 214, "col_offset": 40, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "subsample_paired_power", "type": "Any"}, {"lineNumber": 222, "col_offset": 48, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 248, "col_offset": 32, "nodeName": "s1", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 249, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "known", "type": "float"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 253, "col_offset": 32, "nodeName": "s1", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 254, "col_offset": 32, "nodeName": "known", "type": "float"}, {"lineNumber": 254, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 258, "col_offset": 32, "nodeName": "s1", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 259, "col_offset": 32, "nodeName": "known", "type": "float"}, {"lineNumber": 259, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 263, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 271, "col_offset": 32, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 272, "col_offset": 32, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "confidence_bound", "type": "Any"}, {"lineNumber": 284, "col_offset": 32, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 285, "col_offset": 32, "nodeName": "known", "type": "float"}, {"lineNumber": 285, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "_calculate_power", "type": "Any"}, {"lineNumber": 293, "col_offset": 32, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 293, "col_offset": 44, "nodeName": "crit", "type": "float"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "known", "type": "float"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "_calculate_power", "type": "Any"}, {"lineNumber": 301, "col_offset": 32, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 301, "col_offset": 39, "nodeName": "crit", "type": "float"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 302, "col_offset": 32, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 302, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "_compare_distributions", "type": "Any"}, {"lineNumber": 325, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 46, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 326, "col_offset": 28, "nodeName": "known", "type": "Any"}, {"lineNumber": 326, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "_compare_distributions", "type": "Any"}, {"lineNumber": 334, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 46, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 336, "col_offset": 28, "nodeName": "known_mean", "type": "float"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "known_std", "type": "float"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 338, "col_offset": 25, "nodeName": "known_shape", "type": "Tuple[int]"}, {"lineNumber": 338, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "_compare_distributions", "type": "Any"}, {"lineNumber": 346, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 346, "col_offset": 41, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 348, "col_offset": 31, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 348, "col_offset": 38, "nodeName": "test", "type": "Any"}, {"lineNumber": 358, "col_offset": 21, "nodeName": "paired_subsamples", "type": "Any"}, {"lineNumber": 358, "col_offset": 39, "nodeName": "meta", "type": "Any"}, {"lineNumber": 358, "col_offset": 50, "nodeName": "cat", "type": "str"}, {"lineNumber": 358, "col_offset": 55, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 359, "col_offset": 24, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 361, "col_offset": 31, "nodeName": "known_array", "type": "List[List[str]]"}, {"lineNumber": 361, "col_offset": 44, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "paired_subsamples", "type": "Any"}, {"lineNumber": 369, "col_offset": 39, "nodeName": "meta", "type": "Any"}, {"lineNumber": 369, "col_offset": 50, "nodeName": "cat", "type": "str"}, {"lineNumber": 369, "col_offset": 55, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 370, "col_offset": 31, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 370, "col_offset": 44, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 373, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 377, "col_offset": 21, "nodeName": "paired_subsamples", "type": "Any"}, {"lineNumber": 377, "col_offset": 39, "nodeName": "meta", "type": "Any"}, {"lineNumber": 377, "col_offset": 50, "nodeName": "cat", "type": "str"}, {"lineNumber": 377, "col_offset": 55, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 379, "col_offset": 31, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 379, "col_offset": 43, "nodeName": "known_array", "type": "Any"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "paired_subsamples", "type": "Any"}, {"lineNumber": 388, "col_offset": 39, "nodeName": "meta", "type": "Any"}, {"lineNumber": 388, "col_offset": 50, "nodeName": "cat", "type": "str"}, {"lineNumber": 388, "col_offset": 55, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 390, "col_offset": 17, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 392, "col_offset": 17, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 402, "col_offset": 21, "nodeName": "paired_subsamples", "type": "Any"}, {"lineNumber": 402, "col_offset": 39, "nodeName": "meta", "type": "Any"}, {"lineNumber": 402, "col_offset": 50, "nodeName": "cat", "type": "str"}, {"lineNumber": 402, "col_offset": 55, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 404, "col_offset": 24, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 405, "col_offset": 24, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 406, "col_offset": 31, "nodeName": "known_array", "type": "List[List[str]]"}, {"lineNumber": 406, "col_offset": 44, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "ones", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "arange", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "nan", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "nan", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "meta", "type": "Any"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "subsample_power", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "subsample_power", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "subsample_power", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "subsample_power", "type": "Any"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "subsample_power", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 138, "col_offset": 49, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "arange", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 147, "col_offset": 49, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 157, "col_offset": 49, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 161, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "subsample_paired_power", "type": "Any"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "meta", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "subsample_paired_power", "type": "Any"}, {"lineNumber": 172, "col_offset": 35, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "meta", "type": "Any"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "subsample_paired_power", "type": "Any"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "meta", "type": "Any"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "subsample_paired_power", "type": "Any"}, {"lineNumber": 189, "col_offset": 35, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "meta", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 48, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 205, "col_offset": 53, "nodeName": "meta", "type": "Any"}, {"lineNumber": 206, "col_offset": 52, "nodeName": "cat", "type": "str"}, {"lineNumber": 207, "col_offset": 61, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 223, "col_offset": 53, "nodeName": "meta", "type": "Any"}, {"lineNumber": 224, "col_offset": 52, "nodeName": "cat", "type": "str"}, {"lineNumber": 225, "col_offset": 61, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 239, "col_offset": 37, "nodeName": "nan", "type": "Any"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 242, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 253, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 258, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 263, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 293, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 27, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 300, "col_offset": 39, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "_compare_distributions", "type": "Any"}, {"lineNumber": 306, "col_offset": 35, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 306, "col_offset": 43, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 309, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "_compare_distributions", "type": "Any"}, {"lineNumber": 310, "col_offset": 35, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 43, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 314, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "_compare_distributions", "type": "Any"}, {"lineNumber": 315, "col_offset": 35, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 319, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "_compare_distributions", "type": "Any"}, {"lineNumber": 320, "col_offset": 35, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 325, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 325, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 334, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 334, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 336, "col_offset": 40, "nodeName": "mean", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 337, "col_offset": 39, "nodeName": "std", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 338, "col_offset": 38, "nodeName": "test", "type": "Any"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 344, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 346, "col_offset": 41, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 352, "col_offset": 23, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 353, "col_offset": 23, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 358, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 359, "col_offset": 31, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 365, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 369, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 373, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 377, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 378, "col_offset": 45, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 388, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 389, "col_offset": 45, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 396, "col_offset": 23, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 397, "col_offset": 23, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 402, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 404, "col_offset": 31, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 405, "col_offset": 31, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "loc", "type": "Any"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "id_", "type": "Any"}, {"lineNumber": 33, "col_offset": 49, "nodeName": "ids", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "power", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "pd", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 49, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 49, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 49, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 161, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "cat", "type": "str"}, {"lineNumber": 168, "col_offset": 48, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 172, "col_offset": 35, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 189, "col_offset": 35, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 205, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 239, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 267, "col_offset": 32, "nodeName": "nan", "type": "Any"}, {"lineNumber": 280, "col_offset": 32, "nodeName": "nan", "type": "Any"}, {"lineNumber": 300, "col_offset": 27, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 300, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 306, "col_offset": 35, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 306, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 310, "col_offset": 35, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 310, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 315, "col_offset": 35, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 319, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 320, "col_offset": 35, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 336, "col_offset": 40, "nodeName": "test", "type": "Any"}, {"lineNumber": 337, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 344, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 365, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 391, "col_offset": 33, "nodeName": "known_array", "type": "Set[str]"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 393, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 393, "col_offset": 33, "nodeName": "known_array", "type": "Set[str]"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 168, "col_offset": 48, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 267, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 280, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 44, "nodeName": "ones", "type": "Any"}, {"lineNumber": 315, "col_offset": 58, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 320, "col_offset": 61, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "id_", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "div", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "ones", "type": "Any"}, {"lineNumber": 104, "col_offset": 51, "nodeName": "ones", "type": "Any"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "ones", "type": "Any"}, {"lineNumber": 110, "col_offset": 51, "nodeName": "ones", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "ones", "type": "Any"}, {"lineNumber": 115, "col_offset": 51, "nodeName": "ones", "type": "Any"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 44, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 320, "col_offset": 61, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 44, "nodeName": "self", "type": "PowerAnalysisTest"}]