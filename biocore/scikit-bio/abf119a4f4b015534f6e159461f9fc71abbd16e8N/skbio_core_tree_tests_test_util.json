[{"lineNumber": 20, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 89, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "rev_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "rev_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "rotate_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "rotate_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "complex_tree", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "obs_g", "type": "Generator[Any, Any, nothing]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "obs_g", "type": "Generator[Any, Any, nothing]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "shuffle", "type": "Callable"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "exp", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "shuffle", "type": "Callable"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "exp", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "shuffle", "type": "Callable"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "complex_tree", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "exp", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "shuffle", "type": "Callable"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "exp", "type": "List[str]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "items", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "items", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "items", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "items", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 43, "col_offset": 57, "nodeName": "rev_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "to_newick", "type": "Any"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 52, "col_offset": 52, "nodeName": "rev_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "to_newick", "type": "Any"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 62, "col_offset": 53, "nodeName": "rev_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "to_newick", "type": "Any"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "rotate_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "to_newick", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "next", "type": "Callable"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "next", "type": "Callable"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "MissingNodeError", "type": "Type[skbio.core.exception.MissingNodeError]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "next", "type": "Callable"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "items", "type": "Any"}, {"lineNumber": 43, "col_offset": 57, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 52, "col_offset": 52, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 62, "col_offset": 53, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 64, "col_offset": 48, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "shuffle", "type": "Callable"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "shuffle", "type": "Callable"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "shuffle", "type": "Callable"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "simple_tree", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "obs_g", "type": "Generator[Any, Any, nothing]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "obs_g", "type": "Generator[Any, Any, nothing]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "obs_g", "type": "Generator[Any, Any, nothing]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "obs_g", "type": "Generator[Any, Any, nothing]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "self", "type": "UtilTests"}]