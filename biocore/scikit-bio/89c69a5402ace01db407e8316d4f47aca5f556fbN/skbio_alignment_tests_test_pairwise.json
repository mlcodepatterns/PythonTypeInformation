[{"lineNumber": 27, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 634, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "seq1", "type": "str"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "seq2", "type": "str"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "aln1", "type": "str"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "aln2", "type": "str"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "aln1", "type": "str"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "aln2", "type": "str"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "alt_sub", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "score_m", "type": "numpy.ndarray"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "tback_m", "type": "numpy.ndarray"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 67, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 67, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "aln1", "type": "str"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "aln2", "type": "str"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "aln1", "type": "str"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "aln2", "type": "str"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 18, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 435, "col_offset": 27, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 441, "col_offset": 41, "nodeName": "_init_matrices_sw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 443, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 443, "col_offset": 54, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 444, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 444, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 457, "col_offset": 41, "nodeName": "_init_matrices_nw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 459, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 459, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 460, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 460, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 464, "col_offset": 17, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 481, "col_offset": 17, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 499, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 501, "col_offset": 44, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 502, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 502, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 503, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 503, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 518, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 520, "col_offset": 44, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 521, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 521, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 522, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 522, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 537, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 539, "col_offset": 69, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 540, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 540, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 541, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 541, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 546, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 547, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 547, "col_offset": 38, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 549, "col_offset": 58, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 557, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 557, "col_offset": 27, "nodeName": "score_m", "type": "List[List[int]]"}, {"lineNumber": 563, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 563, "col_offset": 27, "nodeName": "tback_m", "type": "List[List[int]]"}, {"lineNumber": 567, "col_offset": 17, "nodeName": "_traceback", "type": "Callable[..., Any]"}, {"lineNumber": 567, "col_offset": 28, "nodeName": "tback_m", "type": "numpy.ndarray"}, {"lineNumber": 567, "col_offset": 37, "nodeName": "score_m", "type": "numpy.ndarray"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "make_identity_substitution_matrix", "type": "Callable"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 150, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 153, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "seq1", "type": "str"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "seq2", "type": "str"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 172, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 173, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "seq1", "type": "str"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "seq2", "type": "str"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 188, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 21, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 197, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 198, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 199, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 201, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 209, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 210, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 213, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 222, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 223, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 231, "col_offset": 41, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 235, "col_offset": 41, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 246, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 251, "col_offset": 41, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 253, "col_offset": 41, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 258, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 264, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 267, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 275, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 276, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 277, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 279, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 283, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 289, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 291, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 300, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 306, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 307, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 308, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 309, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 320, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 323, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 325, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 325, "col_offset": 41, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 327, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 327, "col_offset": 41, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 332, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 337, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 338, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 338, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 339, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 339, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 340, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 341, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 344, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 21, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 349, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 350, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 350, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 351, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 353, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 357, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 363, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 363, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 364, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 364, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 365, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 365, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 367, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 370, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 372, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 372, "col_offset": 41, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 377, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 377, "col_offset": 41, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 384, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 386, "col_offset": 21, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 390, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 390, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 393, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 395, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 395, "col_offset": 41, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 397, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 397, "col_offset": 41, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 404, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 406, "col_offset": 28, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 409, "col_offset": 29, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 413, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 413, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 414, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 414, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 415, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 416, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 420, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 422, "col_offset": 28, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 429, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 429, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 430, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 430, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 431, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 432, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 435, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 442, "col_offset": 37, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 458, "col_offset": 37, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 466, "col_offset": 54, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 468, "col_offset": 59, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 470, "col_offset": 59, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 472, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 475, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 478, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 483, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 483, "col_offset": 64, "nodeName": "subs_m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 548, "col_offset": 26, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 549, "col_offset": 26, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 557, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 563, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 567, "col_offset": 46, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 568, "col_offset": 28, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 616, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 617, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 618, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 622, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 622, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 624, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 624, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 626, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 626, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 629, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 629, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 130, "col_offset": 39, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 220, "col_offset": 45, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 236, "col_offset": 30, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 244, "col_offset": 39, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 258, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 264, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 276, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 283, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 286, "col_offset": 48, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 289, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 308, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 317, "col_offset": 42, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 323, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 332, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 337, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 338, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 339, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 340, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 344, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 349, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 350, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 357, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 360, "col_offset": 48, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 363, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 364, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 365, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 367, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 370, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 373, "col_offset": 30, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 374, "col_offset": 30, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 378, "col_offset": 30, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 379, "col_offset": 30, "nodeName": "Alignment", "type": "Type[skbio.alignment._alignment.Alignment]"}, {"lineNumber": 384, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 387, "col_offset": 42, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 390, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 393, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 404, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 412, "col_offset": 36, "nodeName": "alt_sub", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 413, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 413, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 414, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 414, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 415, "col_offset": 28, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 416, "col_offset": 28, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 420, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 428, "col_offset": 36, "nodeName": "alt_sub", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 429, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 429, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 430, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 430, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 431, "col_offset": 28, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 432, "col_offset": 28, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 565, "col_offset": 21, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence.BiologicalSequence]"}, {"lineNumber": 566, "col_offset": 21, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence.BiologicalSequence]"}, {"lineNumber": 617, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 618, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 442, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 442, "col_offset": 48, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 458, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 458, "col_offset": 48, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 500, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 501, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 519, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 520, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 538, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 538, "col_offset": 41, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 539, "col_offset": 23, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 539, "col_offset": 42, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 548, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 549, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 567, "col_offset": 57, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 568, "col_offset": 39, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 232, "col_offset": 41, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 237, "col_offset": 41, "nodeName": "Protein", "type": "Type[skbio.sequence.ProteinSequence]"}, {"lineNumber": 301, "col_offset": 27, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 302, "col_offset": 27, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 373, "col_offset": 41, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}, {"lineNumber": 379, "col_offset": 41, "nodeName": "DNA", "type": "Type[skbio.sequence.DNASequence]"}]