[{"lineNumber": 19, "col_offset": 29, "nodeName": "IUPACSequence", "type": "Any"}, {"lineNumber": 19, "col_offset": 44, "nodeName": "NucleotideMixin", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "degenerate_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "nondegenerate_chars", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "complement_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "test_instantiation_with_no_implementation", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_complement_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "test_complement_without_reverse_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "test_complement_without_reverse_non_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "test_complement_with_reverse_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "test_complement_with_reverse_non_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "test_reverse_complement", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "test_is_reverse_complement_varied_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "test_is_reverse_complement_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "test_is_reverse_complement_metadata_ignored", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "test_is_reverse_complement_non_reverse_complements", "type": "Callable[[Any], Any]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "test_is_reverse_complement_type_mismatch", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 230, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "comp_map", "type": "Dict[Union[str, Any], Union[str, Any]]"}, {"lineNumber": 54, "col_offset": 57, "nodeName": "NucleotideMixin", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "comp", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "comp", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "rc", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "rc", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "tested", "type": "int"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "constructor", "type": "Union[Type[str], Callable[[Any], Any], Type[ExampleNucleotideMixin]]"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "sequence_kinds", "type": "FrozenSet[Union[Type[str], Callable[[Any], Any], Type[ExampleNucleotideMixin]]]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "seq2", "type": "ExampleNucleotideMixinSubclass"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 57, "col_offset": 45, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 73, "col_offset": 64, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 77, "col_offset": 64, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "complement_map", "type": "Dict[str, str]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "complement", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "comp", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "comp", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "complement", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "comp", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "comp", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "complement", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "rc", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "rc", "type": "Any"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "complement", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "rc", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "rc", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "rc", "type": "Any"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "tested", "type": "int"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "tested", "type": "int"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "ExampleNucleotideMixinSubclass", "type": "Type[ExampleNucleotideMixinSubclass]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 22, "col_offset": 53, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "comp_map", "type": "Dict[Union[str, Any], Union[str, Any]]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "c", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "NucleotideSequenceSubclassNoImplementation", "type": "Type[Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "exception", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 61, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "exception", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "constructor", "type": "Union[Callable[[Any], Any], Type[ExampleNucleotideMixin], Type[str]]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 184, "col_offset": 51, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 185, "col_offset": 51, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 186, "col_offset": 51, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 195, "col_offset": 52, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 196, "col_offset": 52, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 198, "col_offset": 51, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 199, "col_offset": 51, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 206, "col_offset": 52, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 207, "col_offset": 52, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 209, "col_offset": 52, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 210, "col_offset": 52, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 216, "col_offset": 52, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 217, "col_offset": 52, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 219, "col_offset": 52, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 220, "col_offset": 52, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 226, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 227, "col_offset": 39, "nodeName": "seq2", "type": "ExampleNucleotideMixinSubclass"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "c", "type": "Any"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "ExampleNucleotideMixin", "type": "Type[ExampleNucleotideMixin]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "is_reverse_complement", "type": "Any"}, {"lineNumber": 170, "col_offset": 55, "nodeName": "seq2", "type": "Any"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "seq2", "type": "ExampleNucleotideMixin"}, {"lineNumber": 226, "col_offset": 13, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "cls", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "s", "type": "str"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "s", "type": "str"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "seq1", "type": "ExampleNucleotideMixin"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 193, "col_offset": 44, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 45, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 52, "nodeName": "int64", "type": "Any"}, {"lineNumber": 51, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 44, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 183, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 53, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 161, "col_offset": 53, "nodeName": "range", "type": "Callable[..., List[int]]"}]