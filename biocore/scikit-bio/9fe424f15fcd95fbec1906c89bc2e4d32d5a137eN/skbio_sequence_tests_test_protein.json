[{"lineNumber": 19, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_alphabet", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_nondegenerate_chars", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "test_degenerate_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "test_stop_chars", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "test_stops", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "test_has_stops", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_motif_n_glycosylation", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 101, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "exp", "type": "Set[str]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "seq", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "seq", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "seq", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 46, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 23, "col_offset": 43, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 26, "col_offset": 43, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 27, "col_offset": 47, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "alphabet", "type": "Set[str]"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 34, "col_offset": 58, "nodeName": "exp", "type": "Set[str]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 35, "col_offset": 54, "nodeName": "exp", "type": "Set[str]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 43, "col_offset": 53, "nodeName": "exp", "type": "Dict[str, Set[str]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "exp", "type": "Dict[str, Set[str]]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 48, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "stop_chars", "type": "Any"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "stop_chars", "type": "Any"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "stop_chars", "type": "Any"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "stop_chars", "type": "Set[str]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "stop_chars", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "stop_chars", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "stops", "type": "Any"}, {"lineNumber": 59, "col_offset": 52, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "stops", "type": "Any"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "stops", "type": "Any"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "stops", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "stops", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "stops", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "stops", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "has_stops", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "has_stops", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "has_stops", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "has_stops", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "has_stops", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "has_stops", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "has_stops", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "self", "type": "TestProtein"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 59, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "seq", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "seq", "type": "Any"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "seq", "type": "Any"}, {"lineNumber": 97, "col_offset": 53, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 97, "col_offset": 53, "nodeName": "seq", "type": "Any"}]