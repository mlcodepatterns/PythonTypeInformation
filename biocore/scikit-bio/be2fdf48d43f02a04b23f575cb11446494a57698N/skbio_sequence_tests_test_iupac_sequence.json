[{"lineNumber": 21, "col_offset": 27, "nodeName": "IUPACSequence", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "degenerate_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "nondegenerate_chars", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "_motifs", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_instantiation_with_no_implementation", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "test_init_default_parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "test_init_nondefault_parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "test_init_valid_empty_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "test_init_valid_single_character_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "test_init_valid_multiple_character_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "test_init_validate_parameter_single_character", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "test_init_validate_parameter_multiple_characters", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "test_init_lowercase_all_lowercase", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "test_init_lowercase_mixed_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "test_init_lowercase_no_validation", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "test_init_lowercase_byte_ownership", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "test_init_lowercase_invalid_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "test_degenerate_chars", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "test_nondegenerate_chars", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "test_gap_chars", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "test_alphabet", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "test_degenerate_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "test_gaps", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "test_has_gaps", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "test_degenerates", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "test_has_degenerates", "type": "Callable[[Any], Any]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "test_nondegenerates", "type": "Callable[[Any], Any]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "test_has_nondegenerates", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "test_degap", "type": "Callable[[Any], Any]"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "test_expand_degenerates_no_degens", "type": "Callable[[Any], Any]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "test_expand_degenerates_all_degens", "type": "Callable[[Any], Any]"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "test_expand_degenerates_with_metadata", "type": "Callable[[Any], Any]"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "test_to_regex_no_degens", "type": "Callable[[Any], Any]"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "test_to_regex_with_degens", "type": "Callable[[Any], Any]"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "test_find_motifs_no_motif", "type": "Callable[[Any], Any]"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "test_find_motifs", "type": "Callable[[Any], Any]"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "test_repr", "type": "Callable[[Any], Any]"}, {"lineNumber": 497, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 43, "col_offset": 52, "nodeName": "IUPACSequence", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "validate", "type": "bool"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "validate", "type": "bool"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "validate", "type": "bool"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "seq", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "seq", "type": "str"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "bytes", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "invalid_key", "type": "Union[Tuple[()], List[nothing], int]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "expected", "type": "Dict[str, Set[str]]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "regex", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "regex", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "seq", "type": "ExampleMotifsTester"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "seq", "type": "ExampleMotifsTester"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "lowercase", "type": "bool"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "lowercase", "type": "bool"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "lowercase", "type": "bool"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "seq", "type": "str"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "seq", "type": "str"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "s", "type": "str"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "s", "type": "str"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "s", "type": "str"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "bytes", "type": "numpy.ndarray"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 156, "col_offset": 37, "nodeName": "bytes", "type": "numpy.ndarray"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "bytes", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "invalid_type", "type": "Union[Type[List[Any]], Type[Tuple[()]], Type[int]]"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 67, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 174, "col_offset": 64, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 177, "col_offset": 64, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 179, "col_offset": 68, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "degenerate_chars", "type": "Set[str]"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 186, "col_offset": 67, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 189, "col_offset": 67, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "nondegenerate_chars", "type": "Set[str]"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 60, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 200, "col_offset": 57, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 203, "col_offset": 57, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 205, "col_offset": 61, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "gap_chars", "type": "Set[str]"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 59, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 213, "col_offset": 56, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 216, "col_offset": 56, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 218, "col_offset": 60, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "alphabet", "type": "Set[str]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 225, "col_offset": 62, "nodeName": "expected", "type": "Dict[str, Set[str]]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 227, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 228, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 229, "col_offset": 62, "nodeName": "expected", "type": "Dict[str, Set[str]]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 231, "col_offset": 66, "nodeName": "expected", "type": "Dict[str, Set[str]]"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "degenerate_map", "type": "Dict[str, str]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 61, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 65, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 66, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 68, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 72, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 73, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 22, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 317, "col_offset": 22, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 319, "col_offset": 22, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 382, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 391, "col_offset": 14, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 392, "col_offset": 25, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 392, "col_offset": 30, "nodeName": "exp", "type": "List[ExampleIUPACSequence]"}, {"lineNumber": 408, "col_offset": 14, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 410, "col_offset": 30, "nodeName": "exp", "type": "List[ExampleIUPACSequence]"}, {"lineNumber": 413, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "to_regex", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 418, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "to_regex", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 426, "col_offset": 14, "nodeName": "ExampleMotifsTester", "type": "Type[ExampleMotifsTester]"}, {"lineNumber": 427, "col_offset": 46, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 431, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 432, "col_offset": 46, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 437, "col_offset": 14, "nodeName": "ExampleMotifsTester", "type": "Type[ExampleMotifsTester]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 446, "col_offset": 14, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 449, "col_offset": 35, "nodeName": "obs", "type": "str"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 450, "col_offset": 41, "nodeName": "obs", "type": "str"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 451, "col_offset": 48, "nodeName": "obs", "type": "str"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 452, "col_offset": 52, "nodeName": "obs", "type": "str"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 456, "col_offset": 14, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 459, "col_offset": 35, "nodeName": "obs", "type": "str"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 460, "col_offset": 40, "nodeName": "obs", "type": "str"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 461, "col_offset": 47, "nodeName": "obs", "type": "str"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 462, "col_offset": 51, "nodeName": "obs", "type": "str"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 466, "col_offset": 14, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 475, "col_offset": 36, "nodeName": "obs", "type": "str"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 476, "col_offset": 37, "nodeName": "obs", "type": "str"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 477, "col_offset": 45, "nodeName": "obs", "type": "str"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 478, "col_offset": 49, "nodeName": "obs", "type": "str"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 479, "col_offset": 35, "nodeName": "obs", "type": "str"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 480, "col_offset": 41, "nodeName": "obs", "type": "str"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 481, "col_offset": 48, "nodeName": "obs", "type": "str"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 482, "col_offset": 51, "nodeName": "obs", "type": "str"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 486, "col_offset": 14, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 489, "col_offset": 37, "nodeName": "obs", "type": "str"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 490, "col_offset": 41, "nodeName": "obs", "type": "str"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 491, "col_offset": 48, "nodeName": "obs", "type": "str"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 492, "col_offset": 51, "nodeName": "obs", "type": "str"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 493, "col_offset": 29, "nodeName": "obs", "type": "str"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 24, "col_offset": 53, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "IUPACSequenceSubclassNoImplementation", "type": "Type[Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "exception", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "exception", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 51, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "exception", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "has_positional_metadata", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "has_positional_metadata", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "positional_metadata", "type": "Any"}, {"lineNumber": 69, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "seq", "type": "str"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "seq", "type": "str"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 138, "col_offset": 41, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 45, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "bytes", "type": "numpy.ndarray"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "invalid_key", "type": "Union[List[nothing], Tuple[()], int]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 182, "col_offset": 56, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 194, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 195, "col_offset": 59, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 208, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 221, "col_offset": 48, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 224, "col_offset": 57, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 237, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 238, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 240, "col_offset": 45, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 243, "col_offset": 43, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "has_gaps", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "has_gaps", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "has_gaps", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "has_gaps", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 265, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 267, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "degenerates", "type": "Any"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 270, "col_offset": 45, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "degenerates", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 273, "col_offset": 43, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "degenerates", "type": "Any"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "degenerates", "type": "Any"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "degenerates", "type": "Any"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 285, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "has_degenerates", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "has_degenerates", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 291, "col_offset": 24, "nodeName": "has_degenerates", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "has_degenerates", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 296, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 298, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "nondegenerates", "type": "Any"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 301, "col_offset": 45, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "nondegenerates", "type": "Any"}, {"lineNumber": 304, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 304, "col_offset": 43, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "nondegenerates", "type": "Any"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "nondegenerates", "type": "Any"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "nondegenerates", "type": "Any"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 318, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "has_nondegenerates", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "has_nondegenerates", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "has_nondegenerates", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "has_nondegenerates", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 383, "col_offset": 58, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 386, "col_offset": 44, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 387, "col_offset": 44, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 388, "col_offset": 44, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 389, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 389, "col_offset": 44, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 391, "col_offset": 21, "nodeName": "expand_degenerates", "type": "Any"}, {"lineNumber": 391, "col_offset": 75, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 405, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 406, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 408, "col_offset": 21, "nodeName": "expand_degenerates", "type": "Any"}, {"lineNumber": 409, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "regex", "type": "Any"}, {"lineNumber": 415, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 415, "col_offset": 44, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 420, "col_offset": 25, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 422, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 427, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 427, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 429, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 429, "col_offset": 43, "nodeName": "exception", "type": "Any"}, {"lineNumber": 432, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 432, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 434, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 434, "col_offset": 43, "nodeName": "exception", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 438, "col_offset": 25, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 439, "col_offset": 25, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 446, "col_offset": 19, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "count", "type": "Callable[..., int]"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 448, "col_offset": 24, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 453, "col_offset": 24, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 457, "col_offset": 25, "nodeName": "count", "type": "Callable[..., int]"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 463, "col_offset": 24, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 473, "col_offset": 25, "nodeName": "count", "type": "Callable[..., int]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 486, "col_offset": 19, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 487, "col_offset": 25, "nodeName": "count", "type": "Callable[..., int]"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 494, "col_offset": 24, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 69, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 70, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "six", "type": "module"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "six", "type": "module"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "six", "type": "module"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "six", "type": "module"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "six", "type": "module"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "six", "type": "module"}, {"lineNumber": 147, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "six", "type": "module"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 61, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 165, "col_offset": 45, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 238, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 52, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 55, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 252, "col_offset": 60, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 255, "col_offset": 27, "nodeName": "has_gaps", "type": "Any"}, {"lineNumber": 256, "col_offset": 27, "nodeName": "has_gaps", "type": "Any"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "degenerates", "type": "Any"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "degenerates", "type": "Any"}, {"lineNumber": 267, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 52, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 279, "col_offset": 55, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 60, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 285, "col_offset": 27, "nodeName": "has_degenerates", "type": "Any"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "has_degenerates", "type": "Any"}, {"lineNumber": 295, "col_offset": 27, "nodeName": "nondegenerates", "type": "Any"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "nondegenerates", "type": "Any"}, {"lineNumber": 298, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 52, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 310, "col_offset": 55, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 313, "col_offset": 60, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 316, "col_offset": 27, "nodeName": "has_nondegenerates", "type": "Any"}, {"lineNumber": 318, "col_offset": 27, "nodeName": "has_nondegenerates", "type": "Any"}, {"lineNumber": 339, "col_offset": 35, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 349, "col_offset": 18, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 359, "col_offset": 18, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 369, "col_offset": 18, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 379, "col_offset": 18, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 383, "col_offset": 30, "nodeName": "expand_degenerates", "type": "Any"}, {"lineNumber": 401, "col_offset": 27, "nodeName": "arange", "type": "Any"}, {"lineNumber": 404, "col_offset": 45, "nodeName": "kw", "type": "Dict[str, Union[Dict[str, str], Dict[str, Any]]]"}, {"lineNumber": 405, "col_offset": 45, "nodeName": "kw", "type": "Dict[str, Union[Dict[str, str], Dict[str, Any]]]"}, {"lineNumber": 406, "col_offset": 45, "nodeName": "kw", "type": "Dict[str, Union[Dict[str, str], Dict[str, Any]]]"}, {"lineNumber": 407, "col_offset": 45, "nodeName": "kw", "type": "Dict[str, Union[Dict[str, str], Dict[str, Any]]]"}, {"lineNumber": 427, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "seq", "type": "ExampleMotifsTester"}, {"lineNumber": 429, "col_offset": 43, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 432, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 434, "col_offset": 43, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 438, "col_offset": 25, "nodeName": "seq", "type": "ExampleMotifsTester"}, {"lineNumber": 439, "col_offset": 25, "nodeName": "seq", "type": "ExampleMotifsTester"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 448, "col_offset": 24, "nodeName": "obs", "type": "str"}, {"lineNumber": 453, "col_offset": 24, "nodeName": "obs", "type": "str"}, {"lineNumber": 457, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "obs", "type": "str"}, {"lineNumber": 463, "col_offset": 24, "nodeName": "obs", "type": "str"}, {"lineNumber": 473, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "obs", "type": "str"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "obs", "type": "str"}, {"lineNumber": 487, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "obs", "type": "str"}, {"lineNumber": 494, "col_offset": 24, "nodeName": "obs", "type": "str"}, {"lineNumber": 63, "col_offset": 67, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 78, "col_offset": 56, "nodeName": "validate", "type": "bool"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "lowercase", "type": "bool"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "validate", "type": "bool"}, {"lineNumber": 86, "col_offset": 53, "nodeName": "lowercase", "type": "bool"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 92, "col_offset": 68, "nodeName": "validate", "type": "bool"}, {"lineNumber": 93, "col_offset": 53, "nodeName": "lowercase", "type": "bool"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 160, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "invalid_type", "type": "Union[Type[Tuple[()]], Type[List[Any]], Type[int]]"}, {"lineNumber": 169, "col_offset": 59, "nodeName": "invalid_key", "type": "Union[List[nothing], Tuple[()], int]"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 291, "col_offset": 24, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 304, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 383, "col_offset": 30, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 391, "col_offset": 21, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 401, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 408, "col_offset": 21, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 421, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 423, "col_offset": 32, "nodeName": "s", "type": "str"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 256, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 295, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 316, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 318, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 345, "col_offset": 18, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 348, "col_offset": 45, "nodeName": "arange", "type": "Any"}, {"lineNumber": 355, "col_offset": 18, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 365, "col_offset": 18, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 375, "col_offset": 18, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 378, "col_offset": 48, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 408, "col_offset": 51, "nodeName": "kw", "type": "Dict[str, Union[Dict[str, str], Dict[str, Any]]]"}, {"lineNumber": 421, "col_offset": 38, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 423, "col_offset": 37, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 471, "col_offset": 44, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 348, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 378, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 378, "col_offset": 67, "nodeName": "int64", "type": "Any"}, {"lineNumber": 344, "col_offset": 45, "nodeName": "arange", "type": "Any"}, {"lineNumber": 354, "col_offset": 45, "nodeName": "arange", "type": "Any"}, {"lineNumber": 364, "col_offset": 45, "nodeName": "arange", "type": "Any"}, {"lineNumber": 374, "col_offset": 48, "nodeName": "arange", "type": "Any"}, {"lineNumber": 378, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 344, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 354, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 364, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 374, "col_offset": 48, "nodeName": "np", "type": "module"}]