[{"lineNumber": 30, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "test_positives", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "test_negatives", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "test_fasta_to_generator_valid_files", "type": "Callable[[Any], Any]"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "test_fasta_to_generator_invalid_files", "type": "Callable[[Any], Any]"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "test_fasta_to_any_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "test_fasta_to_sequence_collection_and_alignment", "type": "Callable[[Any], Any]"}, {"lineNumber": 635, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "test_generator_to_fasta_no_qual", "type": "Callable[[Any], Any]"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "test_generator_to_fasta_mixed_qual_scores", "type": "Callable[[Any], Any]"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "test_generator_to_fasta_with_qual", "type": "Callable[[Any], Any]"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "test_generator_to_fasta_invalid_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "test_any_sequence_to_fasta", "type": "Callable[[Any], Any]"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "test_any_sequences_to_fasta", "type": "Callable[[Any], Any]"}, {"lineNumber": 964, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 965, "col_offset": 4, "nodeName": "test_roundtrip_generators", "type": "Callable[[Any], Any]"}, {"lineNumber": 991, "col_offset": 4, "nodeName": "test_roundtrip_sequence_collections_and_alignments", "type": "Callable[[Any], Any]"}, {"lineNumber": 1019, "col_offset": 4, "nodeName": "test_roundtrip_biological_sequences", "type": "Callable[[Any], Any]"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "empty_gen", "type": "Callable[[], Any]"}, {"lineNumber": 1056, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "positive_fps", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "negative_fps", "type": "List[Any]"}, {"lineNumber": 454, "col_offset": 48, "nodeName": "test_cases", "type": "Tuple[Tuple[List[nothing], Dict[nothing, nothing], List[Any], List[Any]], Tuple[List[skbio.sequence._sequence.Sequence], Dict[nothing, nothing], List[Any], List[Any]], Tuple[List[skbio.sequence._sequence.Sequence], Dict[nothing, nothing], List[Any], List[Any]], Tuple[List[Any], Dict[str, functools.partial[nothing]], List[Any], List[Any]], Tuple[List[Any], Dict[str, functools.partial[nothing]], List[Any], List[Any]], Tuple[List[Any], Dict[str, Any], List[Any], List[Any]]]"}, {"lineNumber": 472, "col_offset": 55, "nodeName": "invalid_fps", "type": "List[Any]"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "seq_coll", "type": "Any"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "align", "type": "Any"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "mixed_qual_score_gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 810, "col_offset": 34, "nodeName": "objs_fps", "type": "List[Any]"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "obs", "type": "unicode"}, {"lineNumber": 835, "col_offset": 46, "nodeName": "objs_fps", "type": "List[Any]"}, {"lineNumber": 854, "col_offset": 57, "nodeName": "invalid_objs", "type": "List[Union[Tuple[Generator[Any, Any, None], Dict[nothing, nothing], Type[ValueError], str], Tuple[Generator[Any, Any, None], Dict[str, int], Type[ValueError], str], Tuple[Generator[Any, Any, None], Dict[str, str], Type[ValueError], str], Tuple[Generator[Any, Any, None], Dict[str, _io.StringIO], Type[ValueError], str]]]"}, {"lineNumber": 867, "col_offset": 8, "nodeName": "id_", "type": "str"}, {"lineNumber": 868, "col_offset": 8, "nodeName": "desc", "type": "str"}, {"lineNumber": 899, "col_offset": 28, "nodeName": "test_data", "type": "Tuple[Tuple[functools.partial[nothing], skbio.sequence._sequence.Sequence, Tuple[str, str, str]], Tuple[functools.partial[nothing], Any, Tuple[str, str, str]], Tuple[functools.partial[nothing], Any, Tuple[str, str, str]], Tuple[functools.partial[nothing], Any, Tuple[str, str, str]]]"}, {"lineNumber": 973, "col_offset": 33, "nodeName": "fps", "type": "List[Any]"}, {"lineNumber": 1057, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "self", "type": "SnifferTests"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "self", "type": "SnifferTests"}, {"lineNumber": 295, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 441, "col_offset": 22, "nodeName": "empty", "type": "Tuple[List[nothing], Dict[nothing, nothing], List[Any], List[Any]]"}, {"lineNumber": 441, "col_offset": 34, "nodeName": "single", "type": "Tuple[List[skbio.sequence._sequence.Sequence], Dict[nothing, nothing], List[Any], List[Any]]"}, {"lineNumber": 441, "col_offset": 47, "nodeName": "multi", "type": "Tuple[List[skbio.sequence._sequence.Sequence], Dict[nothing, nothing], List[Any], List[Any]]"}, {"lineNumber": 442, "col_offset": 22, "nodeName": "odd_labels_different_type", "type": "Tuple[List[Any], Dict[str, functools.partial[nothing]], List[Any], List[Any]]"}, {"lineNumber": 443, "col_offset": 22, "nodeName": "sequence_collection_different_type", "type": "Tuple[List[Any], Dict[str, functools.partial[nothing]], List[Any], List[Any]]"}, {"lineNumber": 444, "col_offset": 22, "nodeName": "lowercase_seqs", "type": "Tuple[List[Any], Dict[str, Any], List[Any], List[Any]]"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "exp", "type": "Any"}, {"lineNumber": 454, "col_offset": 17, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "fasta_fps", "type": "Any"}, {"lineNumber": 454, "col_offset": 36, "nodeName": "qual_fps", "type": "Any"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 455, "col_offset": 28, "nodeName": "fasta_fps", "type": "Any"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 472, "col_offset": 16, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 472, "col_offset": 24, "nodeName": "error_type", "type": "Any"}, {"lineNumber": 472, "col_offset": 36, "nodeName": "error_msg_regex", "type": "Any"}, {"lineNumber": 472, "col_offset": 55, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "empty_fp", "type": "Any"}, {"lineNumber": 518, "col_offset": 16, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 518, "col_offset": 28, "nodeName": "fasta_fps", "type": "List[Any]"}, {"lineNumber": 541, "col_offset": 16, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 541, "col_offset": 28, "nodeName": "fasta_fps", "type": "List[Any]"}, {"lineNumber": 608, "col_offset": 22, "nodeName": "empty", "type": "Tuple[List[nothing], Dict[nothing, nothing], List[Any], List[Any]]"}, {"lineNumber": 608, "col_offset": 34, "nodeName": "single", "type": "Tuple[List[skbio.sequence._sequence.Sequence], Dict[nothing, nothing], List[Any], List[Any]]"}, {"lineNumber": 609, "col_offset": 22, "nodeName": "sequence_collection_different_type", "type": "Tuple[List[Any], Dict[str, functools.partial[nothing]], List[Any], List[Any]]"}, {"lineNumber": 610, "col_offset": 22, "nodeName": "lowercase_seqs", "type": "Tuple[List[Any], Dict[str, Any], List[Any], List[Any]]"}, {"lineNumber": 618, "col_offset": 57, "nodeName": "test_cases", "type": "Tuple[Tuple[List[nothing], Dict[nothing, nothing], List[Any], List[Any]], Tuple[List[skbio.sequence._sequence.Sequence], Dict[nothing, nothing], List[Any], List[Any]], Tuple[List[Any], Dict[str, functools.partial[nothing]], List[Any], List[Any]], Tuple[List[Any], Dict[str, Any], List[Any], List[Any]]]"}, {"lineNumber": 637, "col_offset": 24, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 643, "col_offset": 24, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 648, "col_offset": 24, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 653, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 658, "col_offset": 23, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 661, "col_offset": 24, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 685, "col_offset": 24, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 685, "col_offset": 43, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 686, "col_offset": 21, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 686, "col_offset": 31, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 727, "col_offset": 16, "nodeName": "seq", "type": "Any"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 730, "col_offset": 36, "nodeName": "mixed_qual_score_gen", "type": "Callable[[], Any]"}, {"lineNumber": 734, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 787, "col_offset": 16, "nodeName": "seq", "type": "Any"}, {"lineNumber": 810, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 810, "col_offset": 17, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 810, "col_offset": 25, "nodeName": "fp", "type": "Any"}, {"lineNumber": 810, "col_offset": 29, "nodeName": "_", "type": "Any"}, {"lineNumber": 810, "col_offset": 34, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 811, "col_offset": 12, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 813, "col_offset": 12, "nodeName": "obs", "type": "unicode"}, {"lineNumber": 823, "col_offset": 13, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "_generator_to_fasta", "type": "Any"}, {"lineNumber": 824, "col_offset": 28, "nodeName": "mixed_qual_score_gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 824, "col_offset": 55, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 825, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 828, "col_offset": 66, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 829, "col_offset": 12, "nodeName": "exp", "type": "Any"}, {"lineNumber": 831, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 831, "col_offset": 25, "nodeName": "obs", "type": "unicode"}, {"lineNumber": 831, "col_offset": 30, "nodeName": "exp", "type": "Any"}, {"lineNumber": 835, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 835, "col_offset": 17, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 835, "col_offset": 25, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 835, "col_offset": 35, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 835, "col_offset": 46, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 854, "col_offset": 12, "nodeName": "obj", "type": "Generator[Any, Any, None]"}, {"lineNumber": 854, "col_offset": 17, "nodeName": "kwargs", "type": "Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str], Dict[str, _io.StringIO]]"}, {"lineNumber": 854, "col_offset": 25, "nodeName": "error_type", "type": "Type[ValueError]"}, {"lineNumber": 854, "col_offset": 37, "nodeName": "error_msg_regexp", "type": "str"}, {"lineNumber": 854, "col_offset": 57, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 855, "col_offset": 12, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 899, "col_offset": 12, "nodeName": "fn", "type": "Any"}, {"lineNumber": 899, "col_offset": 16, "nodeName": "obj", "type": "Any"}, {"lineNumber": 899, "col_offset": 21, "nodeName": "fps", "type": "Any"}, {"lineNumber": 900, "col_offset": 71, "nodeName": "fps", "type": "Any"}, {"lineNumber": 903, "col_offset": 12, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 905, "col_offset": 12, "nodeName": "obs", "type": "unicode"}, {"lineNumber": 914, "col_offset": 12, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 915, "col_offset": 12, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 918, "col_offset": 12, "nodeName": "obs_fasta", "type": "unicode"}, {"lineNumber": 919, "col_offset": 12, "nodeName": "obs_qual", "type": "unicode"}, {"lineNumber": 935, "col_offset": 12, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 937, "col_offset": 12, "nodeName": "obs", "type": "unicode"}, {"lineNumber": 946, "col_offset": 12, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 947, "col_offset": 12, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 950, "col_offset": 12, "nodeName": "obs_fasta", "type": "unicode"}, {"lineNumber": 951, "col_offset": 12, "nodeName": "obs_qual", "type": "unicode"}, {"lineNumber": 968, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 973, "col_offset": 12, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 973, "col_offset": 22, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 979, "col_offset": 12, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 980, "col_offset": 12, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 983, "col_offset": 12, "nodeName": "obs_fasta", "type": "unicode"}, {"lineNumber": 984, "col_offset": 12, "nodeName": "obs_qual", "type": "unicode"}, {"lineNumber": 992, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1001, "col_offset": 37, "nodeName": "fps", "type": "List[Any]"}, {"lineNumber": 1020, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1037, "col_offset": 37, "nodeName": "fps", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "map", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "map", "type": "Any"}, {"lineNumber": 64, "col_offset": 37, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "map", "type": "Any"}, {"lineNumber": 441, "col_offset": 22, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 441, "col_offset": 34, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 441, "col_offset": 47, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 442, "col_offset": 22, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 443, "col_offset": 22, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 444, "col_offset": 22, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 456, "col_offset": 16, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 463, "col_offset": 20, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 463, "col_offset": 31, "nodeName": "qual_fps", "type": "Any"}, {"lineNumber": 481, "col_offset": 40, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 482, "col_offset": 40, "nodeName": "_fasta_to_sequence", "type": "Any"}, {"lineNumber": 499, "col_offset": 23, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 516, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "obs", "type": "Any"}, {"lineNumber": 532, "col_offset": 20, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 532, "col_offset": 31, "nodeName": "qual_fps", "type": "List[Any]"}, {"lineNumber": 537, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 539, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 547, "col_offset": 16, "nodeName": "obs", "type": "Any"}, {"lineNumber": 554, "col_offset": 20, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 554, "col_offset": 31, "nodeName": "qual_fps", "type": "List[Any]"}, {"lineNumber": 562, "col_offset": 16, "nodeName": "obs", "type": "Any"}, {"lineNumber": 569, "col_offset": 20, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 569, "col_offset": 31, "nodeName": "qual_fps", "type": "List[Any]"}, {"lineNumber": 580, "col_offset": 16, "nodeName": "obs", "type": "Any"}, {"lineNumber": 587, "col_offset": 20, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 587, "col_offset": 31, "nodeName": "qual_fps", "type": "List[Any]"}, {"lineNumber": 594, "col_offset": 20, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 594, "col_offset": 31, "nodeName": "qual_fps", "type": "List[Any]"}, {"lineNumber": 602, "col_offset": 20, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 602, "col_offset": 31, "nodeName": "qual_fps", "type": "List[Any]"}, {"lineNumber": 608, "col_offset": 22, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 608, "col_offset": 34, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 609, "col_offset": 22, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 610, "col_offset": 22, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 612, "col_offset": 40, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 613, "col_offset": 40, "nodeName": "_fasta_to_sequence_collection", "type": "Any"}, {"lineNumber": 614, "col_offset": 40, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 615, "col_offset": 40, "nodeName": "_fasta_to_alignment", "type": "Any"}, {"lineNumber": 618, "col_offset": 16, "nodeName": "exp_list", "type": "Any"}, {"lineNumber": 618, "col_offset": 26, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 618, "col_offset": 34, "nodeName": "fasta_fps", "type": "Any"}, {"lineNumber": 618, "col_offset": 45, "nodeName": "qual_fps", "type": "Any"}, {"lineNumber": 619, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 621, "col_offset": 20, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 621, "col_offset": 32, "nodeName": "fasta_fps", "type": "Any"}, {"lineNumber": 671, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 675, "col_offset": 12, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 679, "col_offset": 12, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 689, "col_offset": 18, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 693, "col_offset": 18, "nodeName": "bio_seq1", "type": "Any"}, {"lineNumber": 698, "col_offset": 18, "nodeName": "prot_seq", "type": "Any"}, {"lineNumber": 707, "col_offset": 18, "nodeName": "bio_seq2", "type": "Any"}, {"lineNumber": 716, "col_offset": 24, "nodeName": "bio_seq1", "type": "Any"}, {"lineNumber": 716, "col_offset": 39, "nodeName": "bio_seq2", "type": "Any"}, {"lineNumber": 716, "col_offset": 54, "nodeName": "bio_seq3", "type": "Any"}, {"lineNumber": 717, "col_offset": 24, "nodeName": "dna_seq", "type": "Any"}, {"lineNumber": 717, "col_offset": 38, "nodeName": "rna_seq", "type": "Any"}, {"lineNumber": 717, "col_offset": 52, "nodeName": "prot_seq", "type": "Any"}, {"lineNumber": 723, "col_offset": 31, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 727, "col_offset": 23, "nodeName": "bio_seq1", "type": "Any"}, {"lineNumber": 727, "col_offset": 38, "nodeName": "missing_qual_seq", "type": "Any"}, {"lineNumber": 734, "col_offset": 29, "nodeName": "map", "type": "Any"}, {"lineNumber": 787, "col_offset": 23, "nodeName": "bio_seq1", "type": "Any"}, {"lineNumber": 794, "col_offset": 34, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 796, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 798, "col_offset": 13, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 800, "col_offset": 13, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 801, "col_offset": 62, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 811, "col_offset": 17, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "_generator_to_fasta", "type": "Any"}, {"lineNumber": 812, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 812, "col_offset": 37, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 813, "col_offset": 18, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 814, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 816, "col_offset": 32, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 817, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 818, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 818, "col_offset": 29, "nodeName": "obs", "type": "unicode"}, {"lineNumber": 818, "col_offset": 34, "nodeName": "exp", "type": "Any"}, {"lineNumber": 823, "col_offset": 13, "nodeName": "io", "type": "module"}, {"lineNumber": 824, "col_offset": 28, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 825, "col_offset": 14, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 828, "col_offset": 13, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 829, "col_offset": 18, "nodeName": "read", "type": "Callable"}, {"lineNumber": 831, "col_offset": 8, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 836, "col_offset": 15, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 837, "col_offset": 16, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 838, "col_offset": 16, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 840, "col_offset": 16, "nodeName": "obs_fasta", "type": "unicode"}, {"lineNumber": 841, "col_offset": 16, "nodeName": "obs_qual", "type": "unicode"}, {"lineNumber": 855, "col_offset": 17, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 858, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 900, "col_offset": 12, "nodeName": "defaults_fp", "type": "Any"}, {"lineNumber": 900, "col_offset": 25, "nodeName": "non_defaults_fasta_fp", "type": "Any"}, {"lineNumber": 900, "col_offset": 48, "nodeName": "non_defaults_qual_fp", "type": "Any"}, {"lineNumber": 903, "col_offset": 17, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 904, "col_offset": 12, "nodeName": "fn", "type": "Any"}, {"lineNumber": 904, "col_offset": 15, "nodeName": "obj", "type": "Any"}, {"lineNumber": 904, "col_offset": 20, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 905, "col_offset": 18, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 906, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 908, "col_offset": 56, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 909, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 911, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 911, "col_offset": 29, "nodeName": "obs", "type": "unicode"}, {"lineNumber": 911, "col_offset": 34, "nodeName": "exp", "type": "Any"}, {"lineNumber": 914, "col_offset": 23, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 915, "col_offset": 22, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 916, "col_offset": 12, "nodeName": "fn", "type": "Any"}, {"lineNumber": 916, "col_offset": 15, "nodeName": "obj", "type": "Any"}, {"lineNumber": 916, "col_offset": 20, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 918, "col_offset": 24, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 919, "col_offset": 23, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 920, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 921, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 923, "col_offset": 66, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 924, "col_offset": 16, "nodeName": "exp_fasta", "type": "Any"}, {"lineNumber": 925, "col_offset": 65, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 926, "col_offset": 16, "nodeName": "exp_qual", "type": "Any"}, {"lineNumber": 928, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 928, "col_offset": 29, "nodeName": "obs_fasta", "type": "unicode"}, {"lineNumber": 928, "col_offset": 40, "nodeName": "exp_fasta", "type": "Any"}, {"lineNumber": 929, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 929, "col_offset": 29, "nodeName": "obs_qual", "type": "unicode"}, {"lineNumber": 929, "col_offset": 39, "nodeName": "exp_qual", "type": "Any"}, {"lineNumber": 932, "col_offset": 25, "nodeName": "_sequence_collection_to_fasta", "type": "Any"}, {"lineNumber": 932, "col_offset": 56, "nodeName": "seq_coll", "type": "Any"}, {"lineNumber": 933, "col_offset": 25, "nodeName": "_alignment_to_fasta", "type": "Any"}, {"lineNumber": 933, "col_offset": 46, "nodeName": "align", "type": "Any"}, {"lineNumber": 935, "col_offset": 17, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 936, "col_offset": 12, "nodeName": "fn", "type": "Any"}, {"lineNumber": 936, "col_offset": 15, "nodeName": "obj", "type": "Any"}, {"lineNumber": 936, "col_offset": 20, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 937, "col_offset": 18, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 938, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 940, "col_offset": 68, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 941, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 943, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 943, "col_offset": 29, "nodeName": "obs", "type": "unicode"}, {"lineNumber": 943, "col_offset": 34, "nodeName": "exp", "type": "Any"}, {"lineNumber": 946, "col_offset": 23, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 947, "col_offset": 22, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 948, "col_offset": 12, "nodeName": "fn", "type": "Any"}, {"lineNumber": 948, "col_offset": 15, "nodeName": "obj", "type": "Any"}, {"lineNumber": 948, "col_offset": 20, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 950, "col_offset": 24, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 951, "col_offset": 23, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 952, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 953, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 955, "col_offset": 72, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 956, "col_offset": 16, "nodeName": "exp_fasta", "type": "Any"}, {"lineNumber": 957, "col_offset": 71, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 958, "col_offset": 16, "nodeName": "exp_qual", "type": "Any"}, {"lineNumber": 960, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 960, "col_offset": 29, "nodeName": "obs_fasta", "type": "unicode"}, {"lineNumber": 960, "col_offset": 40, "nodeName": "exp_fasta", "type": "Any"}, {"lineNumber": 961, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 961, "col_offset": 29, "nodeName": "obs_qual", "type": "unicode"}, {"lineNumber": 961, "col_offset": 39, "nodeName": "exp_qual", "type": "Any"}, {"lineNumber": 968, "col_offset": 19, "nodeName": "map", "type": "Any"}, {"lineNumber": 974, "col_offset": 38, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 975, "col_offset": 16, "nodeName": "exp_fasta", "type": "Any"}, {"lineNumber": 976, "col_offset": 37, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 977, "col_offset": 16, "nodeName": "exp_qual", "type": "Any"}, {"lineNumber": 979, "col_offset": 23, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 980, "col_offset": 22, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 981, "col_offset": 12, "nodeName": "_generator_to_fasta", "type": "Any"}, {"lineNumber": 982, "col_offset": 32, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 983, "col_offset": 24, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 984, "col_offset": 23, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 985, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 986, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 988, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 988, "col_offset": 29, "nodeName": "obs_fasta", "type": "unicode"}, {"lineNumber": 988, "col_offset": 40, "nodeName": "exp_fasta", "type": "Any"}, {"lineNumber": 989, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 989, "col_offset": 29, "nodeName": "obs_qual", "type": "unicode"}, {"lineNumber": 989, "col_offset": 39, "nodeName": "exp_qual", "type": "Any"}, {"lineNumber": 992, "col_offset": 19, "nodeName": "map", "type": "Any"}, {"lineNumber": 997, "col_offset": 32, "nodeName": "_fasta_to_sequence_collection", "type": "Any"}, {"lineNumber": 998, "col_offset": 32, "nodeName": "_sequence_collection_to_fasta", "type": "Any"}, {"lineNumber": 999, "col_offset": 32, "nodeName": "_fasta_to_alignment", "type": "Any"}, {"lineNumber": 1000, "col_offset": 32, "nodeName": "_alignment_to_fasta", "type": "Any"}, {"lineNumber": 1001, "col_offset": 16, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 1001, "col_offset": 26, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 1003, "col_offset": 16, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 1006, "col_offset": 16, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 1007, "col_offset": 16, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 1013, "col_offset": 16, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 1020, "col_offset": 19, "nodeName": "map", "type": "Any"}, {"lineNumber": 1026, "col_offset": 32, "nodeName": "_fasta_to_sequence", "type": "Any"}, {"lineNumber": 1027, "col_offset": 32, "nodeName": "_sequence_to_fasta", "type": "Any"}, {"lineNumber": 1030, "col_offset": 32, "nodeName": "_dna_to_fasta", "type": "Any"}, {"lineNumber": 1033, "col_offset": 32, "nodeName": "_rna_to_fasta", "type": "Any"}, {"lineNumber": 1036, "col_offset": 32, "nodeName": "_protein_to_fasta", "type": "Any"}, {"lineNumber": 1037, "col_offset": 16, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 1037, "col_offset": 26, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 1039, "col_offset": 16, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 1042, "col_offset": 16, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 1043, "col_offset": 16, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 1049, "col_offset": 16, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "self", "type": "SnifferTests"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "_fasta_sniffer", "type": "Any"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "fp", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "SnifferTests"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "_fasta_sniffer", "type": "Any"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "fp", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "map", "type": "Any"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "map", "type": "Any"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "map", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "map", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "map", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "map", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 235, "col_offset": 13, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 240, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "map", "type": "Any"}, {"lineNumber": 241, "col_offset": 21, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "map", "type": "Any"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 265, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 265, "col_offset": 36, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "map", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 268, "col_offset": 17, "nodeName": "map", "type": "Any"}, {"lineNumber": 268, "col_offset": 21, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 273, "col_offset": 13, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "map", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "map", "type": "Any"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 456, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 458, "col_offset": 20, "nodeName": "o", "type": "Any"}, {"lineNumber": 458, "col_offset": 23, "nodeName": "e", "type": "Any"}, {"lineNumber": 458, "col_offset": 28, "nodeName": "zip", "type": "Any"}, {"lineNumber": 458, "col_offset": 32, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 458, "col_offset": 37, "nodeName": "exp", "type": "Any"}, {"lineNumber": 459, "col_offset": 20, "nodeName": "e", "type": "Any"}, {"lineNumber": 473, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 473, "col_offset": 39, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 473, "col_offset": 45, "nodeName": "error_type", "type": "Any"}, {"lineNumber": 473, "col_offset": 57, "nodeName": "error_msg_regex", "type": "Any"}, {"lineNumber": 474, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 483, "col_offset": 40, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 483, "col_offset": 48, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 485, "col_offset": 40, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 485, "col_offset": 48, "nodeName": "_fasta_to_dna", "type": "Any"}, {"lineNumber": 488, "col_offset": 40, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 488, "col_offset": 48, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 490, "col_offset": 40, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 490, "col_offset": 48, "nodeName": "_fasta_to_rna", "type": "Any"}, {"lineNumber": 493, "col_offset": 40, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 493, "col_offset": 48, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 494, "col_offset": 40, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 494, "col_offset": 48, "nodeName": "_fasta_to_protein", "type": "Any"}, {"lineNumber": 500, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 500, "col_offset": 39, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 500, "col_offset": 45, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 501, "col_offset": 16, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 501, "col_offset": 26, "nodeName": "empty_fp", "type": "Any"}, {"lineNumber": 502, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 502, "col_offset": 39, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 502, "col_offset": 45, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 503, "col_offset": 16, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 503, "col_offset": 26, "nodeName": "empty_fp", "type": "Any"}, {"lineNumber": 516, "col_offset": 29, "nodeName": "map", "type": "Any"}, {"lineNumber": 516, "col_offset": 33, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 519, "col_offset": 22, "nodeName": "constructor", "type": "Union[functools.partial[nothing], Type[skbio.sequence._sequence.Sequence]]"}, {"lineNumber": 523, "col_offset": 22, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 523, "col_offset": 32, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 524, "col_offset": 33, "nodeName": "obs", "type": "Any"}, {"lineNumber": 524, "col_offset": 38, "nodeName": "exp", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "insert", "type": "Any"}, {"lineNumber": 530, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 533, "col_offset": 20, "nodeName": "obs", "type": "Any"}, {"lineNumber": 537, "col_offset": 29, "nodeName": "map", "type": "Any"}, {"lineNumber": 537, "col_offset": 33, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 539, "col_offset": 28, "nodeName": "map", "type": "Any"}, {"lineNumber": 539, "col_offset": 32, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 543, "col_offset": 22, "nodeName": "constructor", "type": "Union[functools.partial[nothing], Type[skbio.sequence._sequence.Sequence]]"}, {"lineNumber": 547, "col_offset": 22, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 547, "col_offset": 32, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 548, "col_offset": 33, "nodeName": "obs", "type": "Any"}, {"lineNumber": 548, "col_offset": 38, "nodeName": "exp", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "insert", "type": "Any"}, {"lineNumber": 555, "col_offset": 20, "nodeName": "obs", "type": "Any"}, {"lineNumber": 559, "col_offset": 22, "nodeName": "constructor", "type": "Union[functools.partial[nothing], Type[skbio.sequence._sequence.Sequence]]"}, {"lineNumber": 562, "col_offset": 22, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 562, "col_offset": 32, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 563, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 563, "col_offset": 33, "nodeName": "obs", "type": "Any"}, {"lineNumber": 563, "col_offset": 38, "nodeName": "exp", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 565, "col_offset": 16, "nodeName": "insert", "type": "Any"}, {"lineNumber": 570, "col_offset": 20, "nodeName": "obs", "type": "Any"}, {"lineNumber": 574, "col_offset": 22, "nodeName": "constructor", "type": "Union[functools.partial[nothing], Type[skbio.sequence._sequence.Sequence]]"}, {"lineNumber": 580, "col_offset": 22, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 580, "col_offset": 32, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 581, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 581, "col_offset": 33, "nodeName": "obs", "type": "Any"}, {"lineNumber": 581, "col_offset": 38, "nodeName": "exp", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 583, "col_offset": 16, "nodeName": "insert", "type": "Any"}, {"lineNumber": 588, "col_offset": 20, "nodeName": "obs", "type": "Any"}, {"lineNumber": 619, "col_offset": 22, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 619, "col_offset": 34, "nodeName": "exp_list", "type": "Any"}, {"lineNumber": 622, "col_offset": 20, "nodeName": "obs", "type": "Any"}, {"lineNumber": 630, "col_offset": 24, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 630, "col_offset": 35, "nodeName": "qual_fps", "type": "Any"}, {"lineNumber": 693, "col_offset": 18, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 698, "col_offset": 18, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 699, "col_offset": 18, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 707, "col_offset": 18, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 708, "col_offset": 18, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 716, "col_offset": 24, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 716, "col_offset": 39, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 716, "col_offset": 54, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 717, "col_offset": 24, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 717, "col_offset": 38, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 717, "col_offset": 52, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 718, "col_offset": 22, "nodeName": "seq", "type": "Any"}, {"lineNumber": 727, "col_offset": 23, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 728, "col_offset": 22, "nodeName": "seq", "type": "Any"}, {"lineNumber": 787, "col_offset": 23, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 787, "col_offset": 38, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 788, "col_offset": 22, "nodeName": "seq", "type": "Any"}, {"lineNumber": 794, "col_offset": 13, "nodeName": "blank_seq_gen", "type": "Callable[[], Any]"}, {"lineNumber": 795, "col_offset": 13, "nodeName": "single_seq_gen", "type": "Callable[[], Any]"}, {"lineNumber": 797, "col_offset": 13, "nodeName": "multi_seq_gen", "type": "Callable[[], Any]"}, {"lineNumber": 799, "col_offset": 13, "nodeName": "multi_seq_gen", "type": "Callable[[], Any]"}, {"lineNumber": 801, "col_offset": 13, "nodeName": "mixed_qual_score_gen", "type": "Callable[[], Any]"}, {"lineNumber": 811, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 812, "col_offset": 43, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 813, "col_offset": 18, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 814, "col_offset": 12, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 816, "col_offset": 17, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 816, "col_offset": 25, "nodeName": "fp", "type": "Any"}, {"lineNumber": 817, "col_offset": 22, "nodeName": "read", "type": "Callable"}, {"lineNumber": 818, "col_offset": 12, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 828, "col_offset": 13, "nodeName": "io", "type": "module"}, {"lineNumber": 828, "col_offset": 21, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 829, "col_offset": 18, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 837, "col_offset": 27, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 838, "col_offset": 26, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 839, "col_offset": 16, "nodeName": "_generator_to_fasta", "type": "Any"}, {"lineNumber": 839, "col_offset": 36, "nodeName": "obj", "type": "Any"}, {"lineNumber": 839, "col_offset": 41, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 840, "col_offset": 28, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 841, "col_offset": 27, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 842, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 843, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 845, "col_offset": 42, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 846, "col_offset": 20, "nodeName": "exp_fasta", "type": "Any"}, {"lineNumber": 847, "col_offset": 41, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 848, "col_offset": 20, "nodeName": "exp_qual", "type": "Any"}, {"lineNumber": 850, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 850, "col_offset": 33, "nodeName": "obs_fasta", "type": "unicode"}, {"lineNumber": 850, "col_offset": 44, "nodeName": "exp_fasta", "type": "Any"}, {"lineNumber": 851, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 851, "col_offset": 33, "nodeName": "obs_qual", "type": "unicode"}, {"lineNumber": 851, "col_offset": 43, "nodeName": "exp_qual", "type": "Any"}, {"lineNumber": 855, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 856, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 856, "col_offset": 39, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 856, "col_offset": 45, "nodeName": "error_type", "type": "Type[ValueError]"}, {"lineNumber": 856, "col_offset": 57, "nodeName": "error_msg_regexp", "type": "str"}, {"lineNumber": 857, "col_offset": 16, "nodeName": "_generator_to_fasta", "type": "Any"}, {"lineNumber": 857, "col_offset": 36, "nodeName": "obj", "type": "Generator[Any, Any, None]"}, {"lineNumber": 857, "col_offset": 41, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 858, "col_offset": 12, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 870, "col_offset": 13, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 870, "col_offset": 21, "nodeName": "_sequence_to_fasta", "type": "Any"}, {"lineNumber": 871, "col_offset": 13, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 877, "col_offset": 13, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 877, "col_offset": 21, "nodeName": "_dna_to_fasta", "type": "Any"}, {"lineNumber": 878, "col_offset": 13, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 884, "col_offset": 13, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 884, "col_offset": 21, "nodeName": "_rna_to_fasta", "type": "Any"}, {"lineNumber": 885, "col_offset": 13, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 891, "col_offset": 13, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 891, "col_offset": 21, "nodeName": "_protein_to_fasta", "type": "Any"}, {"lineNumber": 892, "col_offset": 13, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 903, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 905, "col_offset": 18, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 906, "col_offset": 12, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 908, "col_offset": 17, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 909, "col_offset": 22, "nodeName": "read", "type": "Callable"}, {"lineNumber": 911, "col_offset": 12, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 914, "col_offset": 23, "nodeName": "io", "type": "module"}, {"lineNumber": 915, "col_offset": 22, "nodeName": "io", "type": "module"}, {"lineNumber": 917, "col_offset": 70, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 918, "col_offset": 24, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 919, "col_offset": 23, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 920, "col_offset": 12, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 921, "col_offset": 12, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 923, "col_offset": 17, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 924, "col_offset": 28, "nodeName": "read", "type": "Callable"}, {"lineNumber": 925, "col_offset": 17, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 926, "col_offset": 27, "nodeName": "read", "type": "Callable"}, {"lineNumber": 928, "col_offset": 12, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 929, "col_offset": 12, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 932, "col_offset": 56, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 933, "col_offset": 46, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 935, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 937, "col_offset": 18, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 938, "col_offset": 12, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 940, "col_offset": 17, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 941, "col_offset": 22, "nodeName": "read", "type": "Callable"}, {"lineNumber": 943, "col_offset": 12, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 946, "col_offset": 23, "nodeName": "io", "type": "module"}, {"lineNumber": 947, "col_offset": 22, "nodeName": "io", "type": "module"}, {"lineNumber": 949, "col_offset": 70, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 950, "col_offset": 24, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 951, "col_offset": 23, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 952, "col_offset": 12, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 953, "col_offset": 12, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 955, "col_offset": 17, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 956, "col_offset": 28, "nodeName": "read", "type": "Callable"}, {"lineNumber": 957, "col_offset": 17, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 958, "col_offset": 27, "nodeName": "read", "type": "Callable"}, {"lineNumber": 960, "col_offset": 12, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 961, "col_offset": 12, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 974, "col_offset": 17, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 974, "col_offset": 25, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 975, "col_offset": 28, "nodeName": "read", "type": "Callable"}, {"lineNumber": 976, "col_offset": 17, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 976, "col_offset": 25, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 977, "col_offset": 27, "nodeName": "read", "type": "Callable"}, {"lineNumber": 979, "col_offset": 23, "nodeName": "io", "type": "module"}, {"lineNumber": 980, "col_offset": 22, "nodeName": "io", "type": "module"}, {"lineNumber": 981, "col_offset": 32, "nodeName": "_fasta_to_generator", "type": "Any"}, {"lineNumber": 981, "col_offset": 52, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 982, "col_offset": 47, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 983, "col_offset": 24, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 984, "col_offset": 23, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 985, "col_offset": 12, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 986, "col_offset": 12, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 988, "col_offset": 12, "nodeName": "self", "type": "RoundtripTests"}, {"lineNumber": 989, "col_offset": 12, "nodeName": "self", "type": "RoundtripTests"}, {"lineNumber": 1003, "col_offset": 23, "nodeName": "reader", "type": "Any"}, {"lineNumber": 1003, "col_offset": 30, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 1006, "col_offset": 27, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 1007, "col_offset": 26, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 1008, "col_offset": 16, "nodeName": "writer", "type": "Any"}, {"lineNumber": 1008, "col_offset": 23, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 1008, "col_offset": 29, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 1009, "col_offset": 16, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 1010, "col_offset": 16, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 1013, "col_offset": 23, "nodeName": "reader", "type": "Any"}, {"lineNumber": 1013, "col_offset": 30, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 1014, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 1015, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 1017, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1017, "col_offset": 33, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 1017, "col_offset": 39, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 1028, "col_offset": 32, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 1028, "col_offset": 40, "nodeName": "_fasta_to_dna", "type": "Any"}, {"lineNumber": 1031, "col_offset": 32, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 1031, "col_offset": 40, "nodeName": "_fasta_to_rna", "type": "Any"}, {"lineNumber": 1034, "col_offset": 32, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 1034, "col_offset": 40, "nodeName": "_fasta_to_protein", "type": "Any"}, {"lineNumber": 1039, "col_offset": 23, "nodeName": "reader", "type": "Any"}, {"lineNumber": 1039, "col_offset": 30, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 1042, "col_offset": 27, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 1043, "col_offset": 26, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 1044, "col_offset": 16, "nodeName": "writer", "type": "Any"}, {"lineNumber": 1044, "col_offset": 23, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 1044, "col_offset": 29, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 1045, "col_offset": 16, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 1046, "col_offset": 16, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 1049, "col_offset": 23, "nodeName": "reader", "type": "Any"}, {"lineNumber": 1049, "col_offset": 30, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 1050, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 1051, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 1053, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1053, "col_offset": 33, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 1053, "col_offset": 39, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 298, "col_offset": 49, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 305, "col_offset": 61, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 312, "col_offset": 49, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 319, "col_offset": 59, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 323, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 326, "col_offset": 58, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 330, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 344, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 347, "col_offset": 57, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 351, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 354, "col_offset": 58, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 362, "col_offset": 56, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 366, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 369, "col_offset": 48, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 373, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 378, "col_offset": 13, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 383, "col_offset": 13, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 413, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 419, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 425, "col_offset": 13, "nodeName": "QUALFormatError", "type": "Type[skbio.io._exception.QUALFormatError]"}, {"lineNumber": 429, "col_offset": 48, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 431, "col_offset": 57, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 434, "col_offset": 13, "nodeName": "FASTAFormatError", "type": "Type[skbio.io._exception.FASTAFormatError]"}, {"lineNumber": 456, "col_offset": 27, "nodeName": "_fasta_to_generator", "type": "Any"}, {"lineNumber": 456, "col_offset": 47, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 457, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 457, "col_offset": 37, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 457, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 457, "col_offset": 47, "nodeName": "exp", "type": "Any"}, {"lineNumber": 459, "col_offset": 24, "nodeName": "copy", "type": "Any"}, {"lineNumber": 460, "col_offset": 24, "nodeName": "positional_metadata", "type": "Any"}, {"lineNumber": 461, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 461, "col_offset": 37, "nodeName": "o", "type": "Any"}, {"lineNumber": 461, "col_offset": 40, "nodeName": "e", "type": "Any"}, {"lineNumber": 464, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 467, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 468, "col_offset": 24, "nodeName": "o", "type": "Any"}, {"lineNumber": 468, "col_offset": 27, "nodeName": "e", "type": "Any"}, {"lineNumber": 468, "col_offset": 32, "nodeName": "zip", "type": "Any"}, {"lineNumber": 468, "col_offset": 36, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 468, "col_offset": 41, "nodeName": "exp", "type": "Any"}, {"lineNumber": 473, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 474, "col_offset": 21, "nodeName": "_fasta_to_generator", "type": "Any"}, {"lineNumber": 474, "col_offset": 41, "nodeName": "fp", "type": "Any"}, {"lineNumber": 500, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 502, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 503, "col_offset": 41, "nodeName": "empty_fp", "type": "Any"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "positional_metadata", "type": "Any"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 530, "col_offset": 32, "nodeName": "map", "type": "Any"}, {"lineNumber": 530, "col_offset": 36, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 533, "col_offset": 26, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 533, "col_offset": 36, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 534, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 534, "col_offset": 37, "nodeName": "obs", "type": "Any"}, {"lineNumber": 534, "col_offset": 42, "nodeName": "exp", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "positional_metadata", "type": "Any"}, {"lineNumber": 552, "col_offset": 20, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 555, "col_offset": 26, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 555, "col_offset": 36, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 556, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 556, "col_offset": 37, "nodeName": "obs", "type": "Any"}, {"lineNumber": 556, "col_offset": 42, "nodeName": "exp", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 563, "col_offset": 16, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 565, "col_offset": 16, "nodeName": "positional_metadata", "type": "Any"}, {"lineNumber": 567, "col_offset": 20, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 570, "col_offset": 26, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 570, "col_offset": 36, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 571, "col_offset": 37, "nodeName": "obs", "type": "Any"}, {"lineNumber": 571, "col_offset": 42, "nodeName": "exp", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 581, "col_offset": 16, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 583, "col_offset": 16, "nodeName": "positional_metadata", "type": "Any"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 588, "col_offset": 26, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 588, "col_offset": 36, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 589, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 589, "col_offset": 37, "nodeName": "obs", "type": "Any"}, {"lineNumber": 589, "col_offset": 42, "nodeName": "exp", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 592, "col_offset": 21, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 592, "col_offset": 43, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 592, "col_offset": 49, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 593, "col_offset": 20, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 593, "col_offset": 30, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 600, "col_offset": 21, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 600, "col_offset": 43, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 600, "col_offset": 49, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 601, "col_offset": 20, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 601, "col_offset": 30, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 622, "col_offset": 26, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 622, "col_offset": 36, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 624, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 625, "col_offset": 24, "nodeName": "o", "type": "Any"}, {"lineNumber": 625, "col_offset": 27, "nodeName": "e", "type": "Any"}, {"lineNumber": 625, "col_offset": 32, "nodeName": "zip", "type": "Any"}, {"lineNumber": 625, "col_offset": 36, "nodeName": "obs", "type": "Any"}, {"lineNumber": 625, "col_offset": 41, "nodeName": "exp", "type": "Any"}, {"lineNumber": 626, "col_offset": 24, "nodeName": "e", "type": "Any"}, {"lineNumber": 631, "col_offset": 24, "nodeName": "obs", "type": "Any"}, {"lineNumber": 801, "col_offset": 46, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 816, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 817, "col_offset": 22, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 837, "col_offset": 27, "nodeName": "io", "type": "module"}, {"lineNumber": 838, "col_offset": 26, "nodeName": "io", "type": "module"}, {"lineNumber": 839, "col_offset": 56, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 839, "col_offset": 67, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 840, "col_offset": 28, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 841, "col_offset": 27, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 842, "col_offset": 16, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 843, "col_offset": 16, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 845, "col_offset": 21, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 845, "col_offset": 29, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 846, "col_offset": 32, "nodeName": "read", "type": "Callable"}, {"lineNumber": 847, "col_offset": 21, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 847, "col_offset": 29, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 848, "col_offset": 31, "nodeName": "read", "type": "Callable"}, {"lineNumber": 850, "col_offset": 16, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 851, "col_offset": 16, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 856, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 857, "col_offset": 47, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, _io.StringIO], Dict[nothing, nothing], Dict[str, int]]"}, {"lineNumber": 908, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 908, "col_offset": 25, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 908, "col_offset": 39, "nodeName": "defaults_fp", "type": "Any"}, {"lineNumber": 909, "col_offset": 22, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 923, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 923, "col_offset": 25, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 923, "col_offset": 39, "nodeName": "non_defaults_fasta_fp", "type": "Any"}, {"lineNumber": 924, "col_offset": 28, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 925, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 925, "col_offset": 25, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 925, "col_offset": 39, "nodeName": "non_defaults_qual_fp", "type": "Any"}, {"lineNumber": 926, "col_offset": 27, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 940, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 940, "col_offset": 25, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 941, "col_offset": 22, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 955, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 955, "col_offset": 25, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 956, "col_offset": 28, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 957, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 957, "col_offset": 25, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 958, "col_offset": 27, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 968, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 974, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 975, "col_offset": 28, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 976, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 977, "col_offset": 27, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 981, "col_offset": 67, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 992, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1003, "col_offset": 45, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 1006, "col_offset": 27, "nodeName": "io", "type": "module"}, {"lineNumber": 1007, "col_offset": 26, "nodeName": "io", "type": "module"}, {"lineNumber": 1008, "col_offset": 44, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 1009, "col_offset": 16, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 1010, "col_offset": 16, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 1013, "col_offset": 45, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 1014, "col_offset": 16, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 1015, "col_offset": 16, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 1017, "col_offset": 16, "nodeName": "self", "type": "RoundtripTests"}, {"lineNumber": 1020, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1039, "col_offset": 45, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 1042, "col_offset": 27, "nodeName": "io", "type": "module"}, {"lineNumber": 1043, "col_offset": 26, "nodeName": "io", "type": "module"}, {"lineNumber": 1044, "col_offset": 44, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 1045, "col_offset": 16, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 1046, "col_offset": 16, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 1049, "col_offset": 45, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 1050, "col_offset": 16, "nodeName": "fasta_fh", "type": "_io.StringIO"}, {"lineNumber": 1051, "col_offset": 16, "nodeName": "qual_fh", "type": "_io.StringIO"}, {"lineNumber": 1053, "col_offset": 16, "nodeName": "self", "type": "RoundtripTests"}, {"lineNumber": 295, "col_offset": 47, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 296, "col_offset": 47, "nodeName": "e", "type": "Any"}, {"lineNumber": 296, "col_offset": 53, "nodeName": "e", "type": "Any"}, {"lineNumber": 296, "col_offset": 59, "nodeName": "e", "type": "Any"}, {"lineNumber": 456, "col_offset": 59, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 459, "col_offset": 24, "nodeName": "e", "type": "Any"}, {"lineNumber": 460, "col_offset": 24, "nodeName": "e", "type": "Any"}, {"lineNumber": 461, "col_offset": 20, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 464, "col_offset": 31, "nodeName": "_fasta_to_generator", "type": "Any"}, {"lineNumber": 464, "col_offset": 51, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 467, "col_offset": 20, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 467, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 467, "col_offset": 41, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 467, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 467, "col_offset": 51, "nodeName": "exp", "type": "Any"}, {"lineNumber": 469, "col_offset": 24, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 41, "nodeName": "o", "type": "Any"}, {"lineNumber": 469, "col_offset": 44, "nodeName": "e", "type": "Any"}, {"lineNumber": 474, "col_offset": 47, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "exp", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 529, "col_offset": 37, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 533, "col_offset": 51, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 534, "col_offset": 20, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "exp", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 552, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 553, "col_offset": 37, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 555, "col_offset": 51, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 556, "col_offset": 20, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 565, "col_offset": 16, "nodeName": "exp", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 567, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 568, "col_offset": 37, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 570, "col_offset": 62, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 583, "col_offset": 16, "nodeName": "exp", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 586, "col_offset": 37, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 588, "col_offset": 62, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 589, "col_offset": 20, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 592, "col_offset": 21, "nodeName": "six", "type": "module"}, {"lineNumber": 595, "col_offset": 25, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 595, "col_offset": 47, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 595, "col_offset": 53, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 597, "col_offset": 24, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 597, "col_offset": 34, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 600, "col_offset": 21, "nodeName": "six", "type": "module"}, {"lineNumber": 603, "col_offset": 25, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 603, "col_offset": 47, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 603, "col_offset": 53, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 605, "col_offset": 24, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 605, "col_offset": 34, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 622, "col_offset": 48, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 624, "col_offset": 20, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 624, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 624, "col_offset": 41, "nodeName": "obs", "type": "Any"}, {"lineNumber": 624, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 624, "col_offset": 51, "nodeName": "exp", "type": "Any"}, {"lineNumber": 626, "col_offset": 28, "nodeName": "copy", "type": "Any"}, {"lineNumber": 627, "col_offset": 28, "nodeName": "positional_metadata", "type": "Any"}, {"lineNumber": 628, "col_offset": 24, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 628, "col_offset": 41, "nodeName": "o", "type": "Any"}, {"lineNumber": 628, "col_offset": 44, "nodeName": "e", "type": "Any"}, {"lineNumber": 631, "col_offset": 30, "nodeName": "reader_fn", "type": "Any"}, {"lineNumber": 631, "col_offset": 40, "nodeName": "fasta_fp", "type": "Any"}, {"lineNumber": 632, "col_offset": 24, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 632, "col_offset": 41, "nodeName": "obs", "type": "Any"}, {"lineNumber": 632, "col_offset": 46, "nodeName": "exp", "type": "Any"}, {"lineNumber": 734, "col_offset": 44, "nodeName": "e", "type": "Any"}, {"lineNumber": 734, "col_offset": 50, "nodeName": "e", "type": "Any"}, {"lineNumber": 734, "col_offset": 56, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 735, "col_offset": 44, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 736, "col_offset": 13, "nodeName": "empty_gen", "type": "Callable[[], Any]"}, {"lineNumber": 737, "col_offset": 13, "nodeName": "single_seq_gen", "type": "Callable[[], Any]"}, {"lineNumber": 742, "col_offset": 13, "nodeName": "single_seq_gen", "type": "Callable[[], Any]"}, {"lineNumber": 749, "col_offset": 13, "nodeName": "single_seq_gen", "type": "Callable[[], Any]"}, {"lineNumber": 752, "col_offset": 13, "nodeName": "multi_seq_gen", "type": "Callable[[], Any]"}, {"lineNumber": 754, "col_offset": 13, "nodeName": "multi_seq_gen", "type": "Callable[[], Any]"}, {"lineNumber": 757, "col_offset": 13, "nodeName": "newline_description_gen", "type": "Callable[[], Any]"}, {"lineNumber": 762, "col_offset": 13, "nodeName": "newline_description_gen", "type": "Callable[[], Any]"}, {"lineNumber": 767, "col_offset": 13, "nodeName": "newline_description_gen", "type": "Callable[[], Any]"}, {"lineNumber": 772, "col_offset": 13, "nodeName": "whitespace_id_gen", "type": "Callable[[], Any]"}, {"lineNumber": 776, "col_offset": 13, "nodeName": "whitespace_id_gen", "type": "Callable[[], Any]"}, {"lineNumber": 780, "col_offset": 13, "nodeName": "whitespace_id_gen", "type": "Callable[[], Any]"}, {"lineNumber": 801, "col_offset": 46, "nodeName": "io", "type": "module"}, {"lineNumber": 845, "col_offset": 21, "nodeName": "io", "type": "module"}, {"lineNumber": 846, "col_offset": 32, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 847, "col_offset": 21, "nodeName": "io", "type": "module"}, {"lineNumber": 848, "col_offset": 31, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 871, "col_offset": 46, "nodeName": "id_", "type": "str"}, {"lineNumber": 871, "col_offset": 66, "nodeName": "desc", "type": "str"}, {"lineNumber": 878, "col_offset": 41, "nodeName": "id_", "type": "str"}, {"lineNumber": 878, "col_offset": 61, "nodeName": "desc", "type": "str"}, {"lineNumber": 885, "col_offset": 41, "nodeName": "id_", "type": "str"}, {"lineNumber": 885, "col_offset": 61, "nodeName": "desc", "type": "str"}, {"lineNumber": 892, "col_offset": 44, "nodeName": "id_", "type": "str"}, {"lineNumber": 892, "col_offset": 64, "nodeName": "desc", "type": "str"}, {"lineNumber": 968, "col_offset": 38, "nodeName": "map", "type": "Any"}, {"lineNumber": 968, "col_offset": 42, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 968, "col_offset": 57, "nodeName": "e", "type": "Any"}, {"lineNumber": 992, "col_offset": 38, "nodeName": "map", "type": "Any"}, {"lineNumber": 992, "col_offset": 42, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 992, "col_offset": 57, "nodeName": "e", "type": "Any"}, {"lineNumber": 1020, "col_offset": 38, "nodeName": "map", "type": "Any"}, {"lineNumber": 1020, "col_offset": 42, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 1020, "col_offset": 57, "nodeName": "e", "type": "Any"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 37, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 171, "col_offset": 43, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 181, "col_offset": 37, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 43, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 232, "col_offset": 42, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 238, "col_offset": 38, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 252, "col_offset": 38, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 258, "col_offset": 38, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 263, "col_offset": 38, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 276, "col_offset": 38, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 295, "col_offset": 61, "nodeName": "e", "type": "Any"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 308, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 315, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 329, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 343, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 350, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 358, "col_offset": 14, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 377, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 387, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 393, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 399, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 406, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 412, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 418, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 424, "col_offset": 22, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 464, "col_offset": 66, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 465, "col_offset": 53, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 469, "col_offset": 24, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 529, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 553, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 568, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 586, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 595, "col_offset": 25, "nodeName": "six", "type": "module"}, {"lineNumber": 597, "col_offset": 60, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 603, "col_offset": 25, "nodeName": "six", "type": "module"}, {"lineNumber": 605, "col_offset": 60, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 626, "col_offset": 28, "nodeName": "e", "type": "Any"}, {"lineNumber": 627, "col_offset": 28, "nodeName": "e", "type": "Any"}, {"lineNumber": 628, "col_offset": 24, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 631, "col_offset": 55, "nodeName": "qual_fp", "type": "Any"}, {"lineNumber": 631, "col_offset": 66, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 632, "col_offset": 24, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 701, "col_offset": 54, "nodeName": "range", "type": "Any"}, {"lineNumber": 734, "col_offset": 70, "nodeName": "e", "type": "Any"}, {"lineNumber": 735, "col_offset": 58, "nodeName": "e", "type": "Any"}, {"lineNumber": 872, "col_offset": 54, "nodeName": "range", "type": "Any"}, {"lineNumber": 879, "col_offset": 49, "nodeName": "range", "type": "Any"}, {"lineNumber": 886, "col_offset": 49, "nodeName": "range", "type": "Any"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 64, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 167, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 64, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 171, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 66, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 54, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 181, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 54, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 187, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 60, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 55, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 232, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 59, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 238, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 55, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 252, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 55, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 258, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 68, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 263, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 68, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 276, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 55, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 155, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 55, "nodeName": "np", "type": "module"}]