[{"lineNumber": 29, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "test_make_power_curves_keyword_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "test_make_power_curves_unsupported_mode_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "test_make_power_curves_no_meta_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "test_make_power_curves_no_control_cats", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "test_make_power_curves_random_no_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "test_make_power_curve_labels_off", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "test_make_power_curves_all", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "test_make_power_curves_significant", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "test_make_power_curves_paired", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "test_get_paired_effect_runtime_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "test_get_paired_effects", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "test_get_unpaired_effect_runtime_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "test_get_unpaired_effects_all_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "test_get_unpaired_effects_significant_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "test_plot_effects_2d_effects_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "test_plot_effects_effects_and_bounds_or_labels_different_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "test_plot_effects_size_returns", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "test_plot_effects_kwargs_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "test_collate_effect_size_counts_shape_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "test_collate_effect_size_unmatched_size_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "test_collate_effect_size_differnt_counts_and_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "test_collate_effect_size_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "test_collate_effect_size_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "test_collate_effect_size_array_nans_2d", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "test_collate_effect_size_under_power_1d", "type": "Callable[[Any], Any]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "test_collate_effect_size_nans_1d", "type": "Callable[[Any], Any]"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "test_collate_effect_size_1d_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "test__check_strs_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "test__check_strs_num", "type": "Callable[[Any], Any]"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "test__check_str_nan", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "test__check_str_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "test__confidence_bound_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "test__confidence_bound_df", "type": "Callable[[Any], Any]"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "test__confidence_bound_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "test__confidence_bound_nan", "type": "Callable[[Any], Any]"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "test__confidence_bound_axis_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "test__calculate_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "test_compare_distributions_count_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "test_compare_distributions", "type": "Callable[[Any], Any]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "test_calculate_power_curve_ratio_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "test_calculate_power_curve_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "test_calculate_power_curve_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "test_calculate_power_curve_ratio", "type": "Callable[[Any], Any]"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "test_bootstrap_power_curve", "type": "Callable[[Any], Any]"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "test_get_significant_subsample_no_tests", "type": "Callable[[Any], Any]"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "test_get_significant_subsample_no_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "test_get_signfigiant_subsample_no_iteration", "type": "Callable[[Any], Any]"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "test_get_significant_subsample_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "test_get_paired_subsamples_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "test_get_paired_subsamples_break", "type": "Callable[[Any], Any]"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "test_get_paired_subsample_fewer", "type": "Callable[[Any], Any]"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "test_get_paired_subsamples_not_strict", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "test_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "test_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 614, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "meta", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "known_labels", "type": "List[str]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "known_labels", "type": "List[str]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "known_c", "type": "numpy.ndarray"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "known_m", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "known_b", "type": "Any"}, {"lineNumber": 317, "col_offset": 31, "nodeName": "nan", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "known_m", "type": "numpy.ndarray"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "known_b", "type": "numpy.ndarray"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "known_m", "type": "numpy.ndarray"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "known_b", "type": "numpy.ndarray"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "crit", "type": "float"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "known", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "round", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "arange", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "meta", "type": "Dict[str, Union[Dict[str, Any], Dict[str, Union[str, float]]]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 149, "col_offset": 61, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "test_l", "type": "Any"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "known_labels", "type": "List[str]"}, {"lineNumber": 166, "col_offset": 43, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 169, "col_offset": 61, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "test_l", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "known_labels", "type": "List[str]"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "tests", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 188, "col_offset": 47, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "test_fig", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 198, "col_offset": 27, "nodeName": "test_l", "type": "Any"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "get_paired_effect", "type": "Any"}, {"lineNumber": 218, "col_offset": 43, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 56, "nodeName": "meta", "type": "Any"}, {"lineNumber": 218, "col_offset": 67, "nodeName": "cat", "type": "str"}, {"lineNumber": 219, "col_offset": 43, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "known_p", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 36, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "known_c", "type": "numpy.ndarray"}, {"lineNumber": 224, "col_offset": 36, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "get_unpaired_effect", "type": "Any"}, {"lineNumber": 233, "col_offset": 52, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 60, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 235, "col_offset": 47, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "get_unpaired_effect", "type": "Any"}, {"lineNumber": 239, "col_offset": 60, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 239, "col_offset": 68, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 241, "col_offset": 47, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 245, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 245, "col_offset": 38, "nodeName": "plot_effects", "type": "Any"}, {"lineNumber": 245, "col_offset": 66, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 251, "col_offset": 38, "nodeName": "plot_effects", "type": "Any"}, {"lineNumber": 251, "col_offset": 52, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 254, "col_offset": 38, "nodeName": "plot_effects", "type": "Any"}, {"lineNumber": 254, "col_offset": 52, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 254, "col_offset": 66, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "plot_effects", "type": "Any"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 260, "col_offset": 41, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 260, "col_offset": 54, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 267, "col_offset": 38, "nodeName": "plot_effects", "type": "Any"}, {"lineNumber": 267, "col_offset": 52, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 267, "col_offset": 66, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 268, "col_offset": 26, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 295, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 296, "col_offset": 45, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 297, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 299, "col_offset": 42, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 300, "col_offset": 28, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 300, "col_offset": 41, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 305, "col_offset": 18, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 306, "col_offset": 18, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 308, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 310, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 312, "col_offset": 28, "nodeName": "known_m", "type": "Any"}, {"lineNumber": 312, "col_offset": 37, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 313, "col_offset": 28, "nodeName": "known_b", "type": "Any"}, {"lineNumber": 313, "col_offset": 37, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 318, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 319, "col_offset": 45, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 320, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 322, "col_offset": 42, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 323, "col_offset": 28, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 323, "col_offset": 41, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 329, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 332, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 333, "col_offset": 45, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 334, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 336, "col_offset": 28, "nodeName": "known_m", "type": "numpy.ndarray"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "known_b", "type": "numpy.ndarray"}, {"lineNumber": 337, "col_offset": 37, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 342, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 342, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 343, "col_offset": 45, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 344, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 351, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 352, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 353, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 354, "col_offset": 45, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 355, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 357, "col_offset": 28, "nodeName": "known_m", "type": "numpy.ndarray"}, {"lineNumber": 357, "col_offset": 37, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 358, "col_offset": 28, "nodeName": "known_b", "type": "numpy.ndarray"}, {"lineNumber": 358, "col_offset": 37, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 381, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 381, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 382, "col_offset": 28, "nodeName": "test", "type": "Any"}, {"lineNumber": 382, "col_offset": 34, "nodeName": "known", "type": "float"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 388, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 393, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 393, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 394, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 394, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 399, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 407, "col_offset": 33, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 408, "col_offset": 28, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 408, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 413, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 421, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 421, "col_offset": 33, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 422, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 422, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 431, "col_offset": 15, "nodeName": "_calculate_power", "type": "Any"}, {"lineNumber": 431, "col_offset": 32, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 431, "col_offset": 44, "nodeName": "crit", "type": "float"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 433, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 433, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "compare_distributions", "type": "Any"}, {"lineNumber": 444, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 444, "col_offset": 45, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 445, "col_offset": 24, "nodeName": "known", "type": "Any"}, {"lineNumber": 445, "col_offset": 31, "nodeName": "test", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 454, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 454, "col_offset": 38, "nodeName": "calculate_power_curve", "type": "Any"}, {"lineNumber": 454, "col_offset": 61, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 455, "col_offset": 26, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 455, "col_offset": 36, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 466, "col_offset": 15, "nodeName": "calculate_power_curve", "type": "Any"}, {"lineNumber": 466, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 467, "col_offset": 37, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 468, "col_offset": 37, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 471, "col_offset": 30, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 476, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 480, "col_offset": 15, "nodeName": "calculate_power_curve", "type": "Any"}, {"lineNumber": 480, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 481, "col_offset": 37, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 482, "col_offset": 37, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 487, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 487, "col_offset": 30, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 496, "col_offset": 15, "nodeName": "calculate_power_curve", "type": "Any"}, {"lineNumber": 496, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 497, "col_offset": 37, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 498, "col_offset": 37, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 503, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 503, "col_offset": 30, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 508, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 510, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 513, "col_offset": 32, "nodeName": "bootstrap_power_curve", "type": "Any"}, {"lineNumber": 513, "col_offset": 54, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 514, "col_offset": 54, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 515, "col_offset": 54, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 518, "col_offset": 24, "nodeName": "test_mean", "type": "Any"}, {"lineNumber": 518, "col_offset": 35, "nodeName": "known_mean", "type": "numpy.ndarray"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 519, "col_offset": 24, "nodeName": "test_bound", "type": "Any"}, {"lineNumber": 519, "col_offset": 36, "nodeName": "known_bound", "type": "numpy.ndarray"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 561, "col_offset": 19, "nodeName": "get_significant_subsample", "type": "Any"}, {"lineNumber": 561, "col_offset": 55, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 575, "col_offset": 21, "nodeName": "get_paired_subsamples", "type": "Any"}, {"lineNumber": 575, "col_offset": 43, "nodeName": "meta", "type": "Any"}, {"lineNumber": 575, "col_offset": 54, "nodeName": "cat", "type": "str"}, {"lineNumber": 575, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 576, "col_offset": 27, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 576, "col_offset": 40, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 586, "col_offset": 21, "nodeName": "get_paired_subsamples", "type": "Any"}, {"lineNumber": 586, "col_offset": 43, "nodeName": "meta", "type": "Any"}, {"lineNumber": 586, "col_offset": 54, "nodeName": "cat", "type": "str"}, {"lineNumber": 586, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 587, "col_offset": 27, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 587, "col_offset": 40, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 598, "col_offset": 21, "nodeName": "get_paired_subsamples", "type": "Any"}, {"lineNumber": 598, "col_offset": 43, "nodeName": "meta", "type": "Any"}, {"lineNumber": 598, "col_offset": 54, "nodeName": "cat", "type": "str"}, {"lineNumber": 598, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 600, "col_offset": 27, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 600, "col_offset": 40, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 610, "col_offset": 21, "nodeName": "get_paired_subsamples", "type": "Any"}, {"lineNumber": 610, "col_offset": 43, "nodeName": "meta", "type": "Any"}, {"lineNumber": 610, "col_offset": 54, "nodeName": "cat", "type": "str"}, {"lineNumber": 610, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 612, "col_offset": 27, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 612, "col_offset": 40, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "arange", "type": "Any"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "nan", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "nan", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "meta", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 53, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 53, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 128, "col_offset": 45, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 53, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "cat", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "tests", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 62, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 61, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "test_fig", "type": "Any"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "Figure", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 167, "col_offset": 62, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 61, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "test_fig", "type": "Any"}, {"lineNumber": 175, "col_offset": 45, "nodeName": "Figure", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "cat", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 47, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 188, "col_offset": 63, "nodeName": "meta", "type": "Any"}, {"lineNumber": 189, "col_offset": 43, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 189, "col_offset": 61, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "astype", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "get_paired_effect", "type": "Any"}, {"lineNumber": 207, "col_offset": 30, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "meta", "type": "Any"}, {"lineNumber": 207, "col_offset": 49, "nodeName": "cat", "type": "str"}, {"lineNumber": 207, "col_offset": 54, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 218, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 218, "col_offset": 56, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "get_unpaired_effect", "type": "Any"}, {"lineNumber": 229, "col_offset": 39, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 52, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 233, "col_offset": 60, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "arange", "type": "Any"}, {"lineNumber": 239, "col_offset": 60, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 239, "col_offset": 68, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "arange", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 245, "col_offset": 52, "nodeName": "ones", "type": "Any"}, {"lineNumber": 245, "col_offset": 66, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 246, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 251, "col_offset": 52, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 251, "col_offset": 66, "nodeName": "ones", "type": "Any"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 252, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 254, "col_offset": 52, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 254, "col_offset": 66, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 255, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 255, "col_offset": 40, "nodeName": "arange", "type": "Any"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 260, "col_offset": 41, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 260, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "arange", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "fig", "type": "Any"}, {"lineNumber": 263, "col_offset": 40, "nodeName": "Figure", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 267, "col_offset": 52, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 267, "col_offset": 66, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 268, "col_offset": 26, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 268, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 275, "col_offset": 32, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 282, "col_offset": 32, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 287, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 287, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 290, "col_offset": 32, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 295, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 296, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 297, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 300, "col_offset": 28, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 305, "col_offset": 18, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 306, "col_offset": 18, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 308, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 309, "col_offset": 45, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 310, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 318, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 319, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 320, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 323, "col_offset": 28, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 328, "col_offset": 18, "nodeName": "power", "type": "numpy.ndarray"}, {"lineNumber": 328, "col_offset": 34, "nodeName": "power", "type": "numpy.ndarray"}, {"lineNumber": 328, "col_offset": 43, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 332, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 334, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "nan", "type": "Any"}, {"lineNumber": 342, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 344, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 350, "col_offset": 18, "nodeName": "power", "type": "numpy.ndarray"}, {"lineNumber": 350, "col_offset": 34, "nodeName": "power", "type": "numpy.ndarray"}, {"lineNumber": 350, "col_offset": 43, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 353, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 355, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 362, "col_offset": 24, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 370, "col_offset": 25, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "nan", "type": "Any"}, {"lineNumber": 374, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 374, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 375, "col_offset": 24, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 381, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 393, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 431, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 437, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 437, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "compare_distributions", "type": "Any"}, {"lineNumber": 438, "col_offset": 34, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 438, "col_offset": 42, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 443, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 444, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 444, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 454, "col_offset": 61, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 455, "col_offset": 26, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 455, "col_offset": 36, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 466, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 467, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 468, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 480, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 481, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 482, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 496, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 497, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 498, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 513, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 514, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 515, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 524, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 524, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "get_significant_subsample", "type": "Any"}, {"lineNumber": 525, "col_offset": 46, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 537, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 537, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "get_significant_subsample", "type": "Any"}, {"lineNumber": 538, "col_offset": 48, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 551, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 551, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 552, "col_offset": 12, "nodeName": "get_significant_subsample", "type": "Any"}, {"lineNumber": 552, "col_offset": 48, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 557, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 557, "col_offset": 33, "nodeName": "arange", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 559, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 559, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 561, "col_offset": 46, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 563, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 563, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 569, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 570, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 575, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 582, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 582, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 586, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 592, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 593, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 598, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 599, "col_offset": 49, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 604, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 605, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 610, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "loc", "type": "Any"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "id_", "type": "Any"}, {"lineNumber": 36, "col_offset": 49, "nodeName": "ids", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "power", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 105, "col_offset": 64, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 111, "col_offset": 65, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 116, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 121, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 121, "col_offset": 69, "nodeName": "meta", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 128, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 128, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 45, "nodeName": "meta", "type": "Any"}, {"lineNumber": 132, "col_offset": 56, "nodeName": "cat", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 135, "col_offset": 63, "nodeName": "meta", "type": "Any"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 62, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 167, "col_offset": 62, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "meta", "type": "Any"}, {"lineNumber": 184, "col_offset": 56, "nodeName": "cat", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 188, "col_offset": 63, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 189, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 189, "col_offset": 61, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 191, "col_offset": 51, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 207, "col_offset": 30, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 229, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 275, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 282, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 287, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 290, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 309, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 328, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 341, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 350, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 374, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 375, "col_offset": 24, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 403, "col_offset": 29, "nodeName": "nan", "type": "Any"}, {"lineNumber": 417, "col_offset": 29, "nodeName": "nan", "type": "Any"}, {"lineNumber": 437, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 438, "col_offset": 34, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 438, "col_offset": 42, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 456, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 499, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 524, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 525, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 532, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 537, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 538, "col_offset": 39, "nodeName": "test_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 538, "col_offset": 48, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 546, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 551, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 552, "col_offset": 39, "nodeName": "test_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 552, "col_offset": 48, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 559, "col_offset": 32, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 559, "col_offset": 45, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 561, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 563, "col_offset": 29, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 563, "col_offset": 47, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 564, "col_offset": 24, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 564, "col_offset": 31, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 105, "col_offset": 64, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 111, "col_offset": 65, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 121, "col_offset": 69, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 132, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 135, "col_offset": 63, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 138, "col_offset": 51, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 229, "col_offset": 48, "nodeName": "ones", "type": "Any"}, {"lineNumber": 229, "col_offset": 59, "nodeName": "ones", "type": "Any"}, {"lineNumber": 273, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 273, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 274, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 280, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 280, "col_offset": 44, "nodeName": "ones", "type": "Any"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 281, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 289, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 345, "col_offset": 30, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 346, "col_offset": 30, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 532, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 546, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 564, "col_offset": 24, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "id_", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "div", "type": "Any"}]