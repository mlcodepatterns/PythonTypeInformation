[{"lineNumber": 23, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "test_get_paired_subsamples_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_get_paired_subsamples_not_strict", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "test__check_strs_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "test__check_strs_num", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "test__check_str_nan", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test__check_str_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "test__confidence_bound_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test__confidence_bound_df", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test__confidence_bound_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test__calculate_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "test_compare_distributions", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "test_calculate_power_curve_ratio_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "test_calculate_power_curve_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "test_calculate_power_curve_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "test_calculate_power_curve_ratio", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "test_bootstrap_power_curve", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "test_get_signifigant_subsample_no_tests", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "test_get_signifigant_subsample_no_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "test_get_signifigant_subsample_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "test_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "meta", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "crit", "type": "float"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "known", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "round", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "arange", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "meta", "type": "Dict[str, Union[Dict[str, Any], Dict[str, str]]]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "get_paired_subsamples", "type": "Any"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "meta", "type": "Any"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "cat", "type": "str"}, {"lineNumber": 61, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "get_paired_subsamples", "type": "Any"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "meta", "type": "Any"}, {"lineNumber": 71, "col_offset": 54, "nodeName": "cat", "type": "str"}, {"lineNumber": 71, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "_calculate_power", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "crit", "type": "float"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "compare_distributions", "type": "Any"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 45, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "known", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "test", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "calculate_power_curve", "type": "Any"}, {"lineNumber": 134, "col_offset": 61, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 36, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "calculate_power_curve", "type": "Any"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "calculate_power_curve", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "calculate_power_curve", "type": "Any"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "bootstrap_power_curve", "type": "Any"}, {"lineNumber": 192, "col_offset": 54, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 54, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 194, "col_offset": 54, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "test_mean", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "known_mean", "type": "numpy.ndarray"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "test_bound", "type": "Any"}, {"lineNumber": 198, "col_offset": 36, "nodeName": "known_bound", "type": "numpy.ndarray"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 203, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 203, "col_offset": 38, "nodeName": "get_signifigant_subsample", "type": "Any"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 216, "col_offset": 38, "nodeName": "get_signifigant_subsample", "type": "Any"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "get_signifigant_subsample", "type": "Any"}, {"lineNumber": 225, "col_offset": 55, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "arange", "type": "Any"}, {"lineNumber": 42, "col_offset": 56, "nodeName": "nan", "type": "Any"}, {"lineNumber": 47, "col_offset": 56, "nodeName": "nan", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 57, "col_offset": 53, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "nan", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 124, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 134, "col_offset": 61, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 135, "col_offset": 36, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 192, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 193, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 194, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 216, "col_offset": 66, "nodeName": "test_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 221, "col_offset": 33, "nodeName": "arange", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 223, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 46, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 227, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "power", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 223, "col_offset": 32, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 227, "col_offset": 47, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "self", "type": "PowerAnalysisTest"}]