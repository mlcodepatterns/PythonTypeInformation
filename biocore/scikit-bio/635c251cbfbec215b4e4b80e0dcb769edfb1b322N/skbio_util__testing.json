[{"lineNumber": 391, "col_offset": 0, "nodeName": "_assert_series_equal", "type": "Callable[..., Any]"}, {"lineNumber": 423, "col_offset": 0, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 492, "col_offset": 0, "nodeName": "assert_data_frame_almost_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "callers_filename", "type": "str"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "data_path", "type": "str"}, {"lineNumber": 324, "col_offset": 11, "nodeName": "data_path", "type": "str"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "max_idx", "type": "Any"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "max_arr1", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "max_arr2", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "sign_arr1", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "sign_arr2", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "wrn", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "differences", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "special_cases", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "md", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "md", "type": "Optional[Dict[nothing, nothing]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "metadata", "type": "Dict[str, str]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "metadata", "type": "Dict[nothing, nothing]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "metadata", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "_filename", "type": "Any"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "filename", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "_test_dir", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "argv", "type": "List[Union[Any, str]]"}, {"lineNumber": 282, "col_offset": 11, "nodeName": "PY3", "type": "Any"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "path", "type": "str"}, {"lineNumber": 323, "col_offset": 35, "nodeName": "subfolder", "type": "Any"}, {"lineNumber": 323, "col_offset": 46, "nodeName": "fn", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "ignore_method_names", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "_assert_frame_equal", "type": "Callable[..., Any]"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 364, "col_offset": 38, "nodeName": "samples", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "_assert_frame_equal", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "features", "type": "Any"}, {"lineNumber": 369, "col_offset": 39, "nodeName": "features", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "_assert_frame_equal", "type": "Callable[..., Any]"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "biplot_scores", "type": "Any"}, {"lineNumber": 374, "col_offset": 44, "nodeName": "biplot_scores", "type": "Any"}, {"lineNumber": 375, "col_offset": 24, "nodeName": "ignore_biplot_scores_labels", "type": "Any"}, {"lineNumber": 376, "col_offset": 24, "nodeName": "ignore_biplot_scores_labels", "type": "Any"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "_assert_frame_equal", "type": "Callable[..., Any]"}, {"lineNumber": 379, "col_offset": 24, "nodeName": "sample_constraints", "type": "Any"}, {"lineNumber": 379, "col_offset": 49, "nodeName": "sample_constraints", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "_assert_series_equal", "type": "Callable[..., Any]"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "eigvals", "type": "Any"}, {"lineNumber": 383, "col_offset": 39, "nodeName": "eigvals", "type": "Any"}, {"lineNumber": 383, "col_offset": 54, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "_assert_series_equal", "type": "Callable[..., Any]"}, {"lineNumber": 386, "col_offset": 25, "nodeName": "proportion_explained", "type": "Any"}, {"lineNumber": 386, "col_offset": 52, "nodeName": "proportion_explained", "type": "Any"}, {"lineNumber": 387, "col_offset": 25, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "left_values", "type": "Any"}, {"lineNumber": 409, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "right_values", "type": "Any"}, {"lineNumber": 410, "col_offset": 23, "nodeName": "values", "type": "Any"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "ignore_directionality", "type": "Any"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 455, "col_offset": 22, "nodeName": "arr1", "type": "Any"}, {"lineNumber": 456, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 456, "col_offset": 22, "nodeName": "arr2", "type": "Any"}, {"lineNumber": 458, "col_offset": 7, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 458, "col_offset": 21, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 466, "col_offset": 14, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 468, "col_offset": 15, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "sign", "type": "Any"}, {"lineNumber": 470, "col_offset": 24, "nodeName": "max_arr1", "type": "Any"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "sign", "type": "Any"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "max_arr2", "type": "Any"}, {"lineNumber": 475, "col_offset": 10, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 476, "col_offset": 18, "nodeName": "sign_arr1", "type": "Any"}, {"lineNumber": 476, "col_offset": 30, "nodeName": "sign_arr2", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "differences", "type": "Any"}, {"lineNumber": 489, "col_offset": 31, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 529, "col_offset": 27, "nodeName": "left", "type": "Any"}, {"lineNumber": 529, "col_offset": 33, "nodeName": "right", "type": "Any"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "assert_index_equal", "type": "Any"}, {"lineNumber": 541, "col_offset": 27, "nodeName": "index", "type": "Any"}, {"lineNumber": 541, "col_offset": 39, "nodeName": "index", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "PY3", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "PY3", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertReallyEqual", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertReallyEqual", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertReallyEqual", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertReallyEqual", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertReallyEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertReallyEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertReallyNotEqual", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertReallyNotEqual", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 144, "col_offset": 40, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 160, "col_offset": 44, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 184, "col_offset": 39, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 208, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 216, "col_offset": 14, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 225, "col_offset": 14, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "filename", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "_filename", "type": "Any"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 322, "col_offset": 43, "nodeName": "callers_filename", "type": "str"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 361, "col_offset": 25, "nodeName": "short_method_name", "type": "Any"}, {"lineNumber": 361, "col_offset": 49, "nodeName": "short_method_name", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "long_method_name", "type": "Any"}, {"lineNumber": 362, "col_offset": 48, "nodeName": "long_method_name", "type": "Any"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "left", "type": "Any"}, {"lineNumber": 364, "col_offset": 38, "nodeName": "right", "type": "Any"}, {"lineNumber": 365, "col_offset": 39, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 366, "col_offset": 46, "nodeName": "ignore_directionality", "type": "Any"}, {"lineNumber": 367, "col_offset": 32, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "left", "type": "Any"}, {"lineNumber": 369, "col_offset": 39, "nodeName": "right", "type": "Any"}, {"lineNumber": 370, "col_offset": 39, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 371, "col_offset": 46, "nodeName": "ignore_directionality", "type": "Any"}, {"lineNumber": 372, "col_offset": 32, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "left", "type": "Any"}, {"lineNumber": 374, "col_offset": 44, "nodeName": "right", "type": "Any"}, {"lineNumber": 377, "col_offset": 32, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 379, "col_offset": 24, "nodeName": "left", "type": "Any"}, {"lineNumber": 379, "col_offset": 49, "nodeName": "right", "type": "Any"}, {"lineNumber": 380, "col_offset": 39, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 381, "col_offset": 32, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "left", "type": "Any"}, {"lineNumber": 383, "col_offset": 39, "nodeName": "right", "type": "Any"}, {"lineNumber": 384, "col_offset": 33, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 386, "col_offset": 25, "nodeName": "left", "type": "Any"}, {"lineNumber": 386, "col_offset": 52, "nodeName": "right", "type": "Any"}, {"lineNumber": 388, "col_offset": 33, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 393, "col_offset": 7, "nodeName": "left_s", "type": "Any"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "right_s", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 396, "col_offset": 32, "nodeName": "values", "type": "Any"}, {"lineNumber": 396, "col_offset": 47, "nodeName": "values", "type": "Any"}, {"lineNumber": 398, "col_offset": 15, "nodeName": "ignore_index", "type": "Any"}, {"lineNumber": 406, "col_offset": 7, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 406, "col_offset": 26, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 409, "col_offset": 22, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 410, "col_offset": 23, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 415, "col_offset": 32, "nodeName": "left_values", "type": "Any"}, {"lineNumber": 415, "col_offset": 45, "nodeName": "right_values", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 417, "col_offset": 15, "nodeName": "ignore_index", "type": "Any"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "ignore_columns", "type": "Any"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 455, "col_offset": 34, "nodeName": "float64", "type": "Any"}, {"lineNumber": 456, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 456, "col_offset": 34, "nodeName": "float64", "type": "Any"}, {"lineNumber": 458, "col_offset": 7, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 458, "col_offset": 21, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 459, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 475, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 481, "col_offset": 16, "nodeName": "wrn", "type": "Any"}, {"lineNumber": 484, "col_offset": 51, "nodeName": "differences", "type": "Any"}, {"lineNumber": 487, "col_offset": 16, "nodeName": "special_cases", "type": "Any"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 489, "col_offset": 18, "nodeName": "differences", "type": "Any"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "pdt", "type": "Any"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "pdt", "type": "Any"}, {"lineNumber": 541, "col_offset": 27, "nodeName": "left", "type": "Any"}, {"lineNumber": 541, "col_offset": 39, "nodeName": "right", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 58, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 99, "col_offset": 51, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "obj", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "obj", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "obj", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 195, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "md", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 208, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 216, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 225, "col_offset": 14, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "core", "type": "Any"}, {"lineNumber": 286, "col_offset": 29, "nodeName": "argv", "type": "List[Union[Any, str]]"}, {"lineNumber": 286, "col_offset": 47, "nodeName": "_test_dir", "type": "Any"}, {"lineNumber": 321, "col_offset": 23, "nodeName": "getouterframes", "type": "Callable[..., List[inspect.FrameInfo]]"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 358, "col_offset": 21, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 358, "col_offset": 26, "nodeName": "left", "type": "Any"}, {"lineNumber": 358, "col_offset": 35, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 358, "col_offset": 40, "nodeName": "right", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "npt", "type": "module"}, {"lineNumber": 361, "col_offset": 25, "nodeName": "left", "type": "Any"}, {"lineNumber": 361, "col_offset": 49, "nodeName": "right", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "npt", "type": "module"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "left", "type": "Any"}, {"lineNumber": 362, "col_offset": 48, "nodeName": "right", "type": "Any"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "left_s", "type": "Any"}, {"lineNumber": 394, "col_offset": 34, "nodeName": "right_s", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "npt", "type": "module"}, {"lineNumber": 396, "col_offset": 32, "nodeName": "left_s", "type": "Any"}, {"lineNumber": 396, "col_offset": 47, "nodeName": "right_s", "type": "Any"}, {"lineNumber": 397, "col_offset": 40, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "assert_index_equal", "type": "Any"}, {"lineNumber": 399, "col_offset": 31, "nodeName": "index", "type": "Any"}, {"lineNumber": 399, "col_offset": 45, "nodeName": "index", "type": "Any"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 407, "col_offset": 35, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "left_values", "type": "Any"}, {"lineNumber": 413, "col_offset": 25, "nodeName": "right_values", "type": "numpy.ndarray"}, {"lineNumber": 413, "col_offset": 40, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 413, "col_offset": 57, "nodeName": "left_values", "type": "Any"}, {"lineNumber": 414, "col_offset": 57, "nodeName": "right_values", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "npt", "type": "module"}, {"lineNumber": 415, "col_offset": 67, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "assert_index_equal", "type": "Any"}, {"lineNumber": 418, "col_offset": 31, "nodeName": "index", "type": "Any"}, {"lineNumber": 418, "col_offset": 46, "nodeName": "index", "type": "Any"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "assert_index_equal", "type": "Any"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "columns", "type": "Any"}, {"lineNumber": 420, "col_offset": 48, "nodeName": "columns", "type": "Any"}, {"lineNumber": 455, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 456, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 460, "col_offset": 67, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 461, "col_offset": 67, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 466, "col_offset": 14, "nodeName": "abs", "type": "Any"}, {"lineNumber": 466, "col_offset": 21, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 467, "col_offset": 20, "nodeName": "max_idx", "type": "Any"}, {"lineNumber": 468, "col_offset": 20, "nodeName": "max_idx", "type": "Any"}, {"lineNumber": 484, "col_offset": 22, "nodeName": "isfinite", "type": "Any"}, {"lineNumber": 484, "col_offset": 34, "nodeName": "differences", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "cmp", "type": "Callable[[Any, Any], int]"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "cmp", "type": "Callable[[Any, Any], int]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "b", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "cmp", "type": "Callable[[Any, Any], int]"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "cmp", "type": "Callable[[Any, Any], int]"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "a", "type": "Any"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 58, "nodeName": "pd", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 80, "col_offset": 55, "nodeName": "md", "type": "Optional[Dict[nothing, nothing]]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "obj", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "obj", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "md", "type": "Dict[Union[int, str], Union[List[bool], str]]"}, {"lineNumber": 195, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "pd", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 197, "col_offset": 45, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "obj", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "obj", "type": "Any"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "argv", "type": "List[Union[Any, str]]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "argv", "type": "List[Union[Any, str]]"}, {"lineNumber": 286, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 321, "col_offset": 23, "nodeName": "inspect", "type": "module"}, {"lineNumber": 321, "col_offset": 46, "nodeName": "currentframe", "type": "Callable[[], Optional[types.FrameType]]"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 399, "col_offset": 31, "nodeName": "left_s", "type": "Any"}, {"lineNumber": 399, "col_offset": 45, "nodeName": "right_s", "type": "Any"}, {"lineNumber": 418, "col_offset": 31, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 418, "col_offset": 46, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 420, "col_offset": 48, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 460, "col_offset": 67, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 461, "col_offset": 67, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 466, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 467, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 468, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 484, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 76, "col_offset": 53, "nodeName": "md", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "obj", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "_metadata_constructor_", "type": "Any"}, {"lineNumber": 321, "col_offset": 46, "nodeName": "inspect", "type": "module"}, {"lineNumber": 467, "col_offset": 35, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 468, "col_offset": 35, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "self", "type": "MetadataMixinTests"}, {"lineNumber": 467, "col_offset": 35, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 468, "col_offset": 35, "nodeName": "arr2", "type": "numpy.ndarray"}]