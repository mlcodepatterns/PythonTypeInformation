[{"lineNumber": 36, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 382, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "result", "type": "List[Union[int, Any]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "j", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "counts", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "den", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "freq_arr", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "D", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "D", "type": "float"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "exp", "type": "float"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "r", "type": "int"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "observed", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "seq", "type": "str"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "reps", "type": "int"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "sum", "type": "int"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "urn_1", "type": "str"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "seq", "type": "str"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "observations", "type": "List[Any]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "reps", "type": "int"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "tps", "type": "Iterator[Any]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "f", "type": "int"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "r", "type": "int"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "r", "type": "int"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "r", "type": "int"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "ci_type", "type": "str"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "ci_type", "type": "str"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "ci_type", "type": "str"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "r", "type": "int"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "start", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "start", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "step", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "step", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "result", "type": "List[Union[int, Any]]"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 86, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 144, "col_offset": 43, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "observed_upper", "type": "Any"}, {"lineNumber": 154, "col_offset": 54, "nodeName": "expected_upper", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 155, "col_offset": 38, "nodeName": "observed_lower", "type": "Any"}, {"lineNumber": 155, "col_offset": 54, "nodeName": "expected_lower", "type": "numpy.ndarray"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "fisher_alpha", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "goods_coverage", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "counts", "type": "List[int]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 178, "col_offset": 54, "nodeName": "exp", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 182, "col_offset": 54, "nodeName": "exp", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "num", "type": "Any"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "den", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 61, "nodeName": "exp", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 207, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 210, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 214, "col_offset": 14, "nodeName": "observed_species", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 217, "col_offset": 14, "nodeName": "observed_species", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "observed_species", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "sum", "type": "Any"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "simpson_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "exp", "type": "Any"}, {"lineNumber": 252, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 41, "nodeName": "exp", "type": "float"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 266, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 267, "col_offset": 14, "nodeName": "_indices_to_counts", "type": "Callable[..., Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 268, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 268, "col_offset": 36, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "_indices_to_counts", "type": "Callable[..., Any]"}, {"lineNumber": 271, "col_offset": 57, "nodeName": "obs", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 272, "col_offset": 36, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 275, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 281, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "x", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 294, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "reps", "type": "int"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "izip", "type": "Any"}, {"lineNumber": 304, "col_offset": 63, "nodeName": "expected", "type": "List[Tuple[int, Set[int], int, int]]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 323, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "reps", "type": "int"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 326, "col_offset": 14, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 326, "col_offset": 64, "nodeName": "observations", "type": "List[Any]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 333, "col_offset": 17, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 333, "col_offset": 28, "nodeName": "lladser_ci_from_r", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 334, "col_offset": 31, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 335, "col_offset": 31, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 339, "col_offset": 17, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "lladser_ci_from_r", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 340, "col_offset": 31, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 341, "col_offset": 31, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 345, "col_offset": 17, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "lladser_ci_from_r", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 346, "col_offset": 31, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 347, "col_offset": 31, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 351, "col_offset": 17, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "lladser_ci_from_r", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 352, "col_offset": 31, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 353, "col_offset": 31, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 357, "col_offset": 28, "nodeName": "lladser_ci_from_r", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 359, "col_offset": 31, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 365, "col_offset": 28, "nodeName": "lladser_ci_from_r", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 367, "col_offset": 31, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 368, "col_offset": 31, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 371, "col_offset": 28, "nodeName": "lladser_ci_from_r", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 373, "col_offset": 31, "nodeName": "obs_low", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 374, "col_offset": 31, "nodeName": "obs_high", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 378, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 378, "col_offset": 38, "nodeName": "lladser_ci_from_r", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "_indices_to_counts", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "curr", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "curr", "type": "Union[Any, int]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "obs", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "brillouin_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "simpson_reciprocal", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 50, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "equitability", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "equitability", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "e", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "exp", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "heip_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "log", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "kempton_taylor_q", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 48, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "kempton_taylor_q", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 48, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "margalef", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "mcintosh_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "mcintosh_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "menhinick", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 217, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "osd", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "robbins", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "simpson", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 236, "col_offset": 31, "nodeName": "simpson", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "simpson_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "D", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 252, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 19, "nodeName": "D", "type": "float"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "simpson_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 33, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "strong", "type": "Callable[[Any], Any]"}, {"lineNumber": 266, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 275, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "_expand_counts", "type": "Callable[[Any], Any]"}, {"lineNumber": 276, "col_offset": 46, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 276, "col_offset": 52, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "lladser_point_estimates", "type": "Callable[..., Generator[Tuple[Any, Any, Any], Any, None]]"}, {"lineNumber": 281, "col_offset": 48, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 281, "col_offset": 51, "nodeName": "r", "type": "int"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "observed", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "observed", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "x", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 304, "col_offset": 25, "nodeName": "get_interval_for_r_new_species", "type": "Callable[[Any, Any], Generator[Tuple[int, Set[Any], int, int], Any, None]]"}, {"lineNumber": 304, "col_offset": 56, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 305, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "lladser_ci_series", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 315, "col_offset": 41, "nodeName": "urn_1", "type": "str"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 316, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 316, "col_offset": 29, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 325, "col_offset": 32, "nodeName": "obs", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 333, "col_offset": 48, "nodeName": "r", "type": "int"}, {"lineNumber": 333, "col_offset": 53, "nodeName": "t", "type": "int"}, {"lineNumber": 333, "col_offset": 58, "nodeName": "f", "type": "int"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 339, "col_offset": 48, "nodeName": "r", "type": "int"}, {"lineNumber": 339, "col_offset": 53, "nodeName": "t", "type": "int"}, {"lineNumber": 339, "col_offset": 58, "nodeName": "f", "type": "int"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 345, "col_offset": 48, "nodeName": "r", "type": "int"}, {"lineNumber": 345, "col_offset": 53, "nodeName": "t", "type": "int"}, {"lineNumber": 345, "col_offset": 58, "nodeName": "f", "type": "int"}, {"lineNumber": 345, "col_offset": 67, "nodeName": "alpha", "type": "float"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 351, "col_offset": 48, "nodeName": "r", "type": "int"}, {"lineNumber": 351, "col_offset": 53, "nodeName": "t", "type": "int"}, {"lineNumber": 351, "col_offset": 58, "nodeName": "f", "type": "int"}, {"lineNumber": 351, "col_offset": 67, "nodeName": "alpha", "type": "float"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 358, "col_offset": 14, "nodeName": "r", "type": "int"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "t", "type": "int"}, {"lineNumber": 358, "col_offset": 24, "nodeName": "f", "type": "int"}, {"lineNumber": 358, "col_offset": 33, "nodeName": "alpha", "type": "float"}, {"lineNumber": 358, "col_offset": 48, "nodeName": "ci_type", "type": "str"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 366, "col_offset": 14, "nodeName": "r", "type": "int"}, {"lineNumber": 366, "col_offset": 19, "nodeName": "t", "type": "int"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "f", "type": "int"}, {"lineNumber": 366, "col_offset": 33, "nodeName": "alpha", "type": "float"}, {"lineNumber": 366, "col_offset": 48, "nodeName": "ci_type", "type": "str"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 372, "col_offset": 14, "nodeName": "r", "type": "int"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "t", "type": "int"}, {"lineNumber": 372, "col_offset": 24, "nodeName": "f", "type": "int"}, {"lineNumber": 372, "col_offset": 33, "nodeName": "alpha", "type": "float"}, {"lineNumber": 372, "col_offset": 48, "nodeName": "ci_type", "type": "str"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 378, "col_offset": 59, "nodeName": "r", "type": "int"}, {"lineNumber": 378, "col_offset": 64, "nodeName": "t", "type": "int"}, {"lineNumber": 378, "col_offset": 69, "nodeName": "f", "type": "int"}, {"lineNumber": 379, "col_offset": 32, "nodeName": "alpha", "type": "float"}, {"lineNumber": 379, "col_offset": 47, "nodeName": "ci_type", "type": "str"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "max", "type": "Callable"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "indices", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "indices", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "indices", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "f", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "ZeroDivisionError", "type": "Type[ZeroDivisionError]"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "FloatingPointError", "type": "Type[FloatingPointError]"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "curr", "type": "int"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "result", "type": "List[Union[int, Any]]"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 101, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 60, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 70, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "diversity", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "esty_ci", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "h", "type": "Any"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 185, "col_offset": 52, "nodeName": "log", "type": "Any"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 230, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 231, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 235, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 240, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "freq_arr", "type": "Any"}, {"lineNumber": 258, "col_offset": 33, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 263, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "k", "type": "int"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 287, "col_offset": 29, "nodeName": "x", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 287, "col_offset": 45, "nodeName": "t", "type": "Any"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 303, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 309, "col_offset": 30, "nodeName": "get_interval_for_r_new_species", "type": "Callable[[Any, Any], Generator[Tuple[int, Set[Any], int, int], Any, None]]"}, {"lineNumber": 309, "col_offset": 61, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "observations", "type": "List[Any]"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 327, "col_offset": 28, "nodeName": "tps", "type": "Iterator[Any]"}, {"lineNumber": 327, "col_offset": 36, "nodeName": "alpha", "type": "float"}, {"lineNumber": 327, "col_offset": 44, "nodeName": "reps", "type": "int"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "j", "type": "int"}, {"lineNumber": 101, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 185, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 235, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 287, "col_offset": 36, "nodeName": "r", "type": "int"}, {"lineNumber": 295, "col_offset": 27, "nodeName": "lladser_point_estimates", "type": "Callable[..., Generator[Tuple[Any, Any, Any], Any, None]]"}, {"lineNumber": 295, "col_offset": 51, "nodeName": "seq", "type": "str"}, {"lineNumber": 297, "col_offset": 31, "nodeName": "sum", "type": "Union[Any, int]"}, {"lineNumber": 297, "col_offset": 37, "nodeName": "reps", "type": "int"}, {"lineNumber": 297, "col_offset": 46, "nodeName": "sum", "type": "Union[Any, int]"}, {"lineNumber": 297, "col_offset": 52, "nodeName": "reps", "type": "int"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "lladser_ci_series", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 324, "col_offset": 41, "nodeName": "seq", "type": "str"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 324, "col_offset": 57, "nodeName": "alpha", "type": "float"}, {"lineNumber": 326, "col_offset": 33, "nodeName": "a_b", "type": "Any"}, {"lineNumber": 326, "col_offset": 56, "nodeName": "a_b", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "arr", "type": "numpy.ndarray"}]