[{"lineNumber": 26, "col_offset": 0, "nodeName": "_get_alpha_diversity_metric_map", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "get_alpha_diversity_metrics", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "get_beta_diversity_metrics", "type": "Callable[[], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "metric_map", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "counts", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "results", "type": "Iterator[Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "distances", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "ace", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "chao1", "type": "Any"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "chao1_ci", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "berger_parker_d", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "brillouin_d", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "dominance", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "doubles", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "enspie", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "esty_ci", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "faith_pd", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "fisher_alpha", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "goods_coverage", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "heip_e", "type": "Any"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "kempton_taylor_q", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "margalef", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "mcintosh_d", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "mcintosh_e", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "menhinick", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "michaelis_menten_fit", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "observed_otus", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "osd", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "pielou_e", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "robbins", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "shannon", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "simpson", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "simpson_e", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "singles", "type": "Any"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "strong", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "gini_index", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "lladser_pe", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "lladser_ci", "type": "Any"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "_get_alpha_diversity_metric_map", "type": "Callable[[], Any]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "_get_alpha_diversity_metric_map", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "atleast_2d", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "counts", "type": "Any"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "counts", "type": "Any"}, {"lineNumber": 159, "col_offset": 7, "nodeName": "metric", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "counts", "type": "Any"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "counts_by_node", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "metric", "type": "functools.partial[nothing]"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "map", "type": "Callable"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "metric", "type": "Any"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "counts", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "Series", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "results", "type": "Iterator[Any]"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "counts", "type": "Any"}, {"lineNumber": 235, "col_offset": 7, "nodeName": "metric", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "pdist", "type": "Any"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "counts", "type": "Any"}, {"lineNumber": 248, "col_offset": 30, "nodeName": "metric", "type": "Union[functools.partial[nothing], Any, Callable[[Any, Any], Any]]"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "DistanceMatrix", "type": "Type[skbio.stats.distance._base.DistanceMatrix]"}, {"lineNumber": 249, "col_offset": 26, "nodeName": "distances", "type": "Any"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "ids", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "alpha", "type": "module"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "alpha", "type": "module"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "alpha", "type": "module"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "alpha", "type": "module"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "alpha", "type": "module"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "alpha", "type": "module"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "alpha", "type": "module"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "alpha", "type": "module"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "alpha", "type": "module"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "alpha", "type": "module"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "alpha", "type": "module"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "alpha", "type": "module"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "alpha", "type": "module"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "alpha", "type": "module"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "alpha", "type": "module"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "alpha", "type": "module"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "alpha", "type": "module"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "alpha", "type": "module"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "alpha", "type": "module"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "alpha", "type": "module"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "alpha", "type": "module"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "alpha", "type": "module"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "alpha", "type": "module"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "alpha", "type": "module"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "alpha", "type": "module"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "alpha", "type": "module"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "alpha", "type": "module"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "alpha", "type": "module"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "alpha", "type": "module"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "alpha", "type": "module"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "alpha", "type": "module"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 7, "nodeName": "ids", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "counts_by_node", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "tree_index", "type": "Any"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "branch_lengths", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "_vectorize_counts_and_tree", "type": "Callable[[Any, Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "counts", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "_faith_pd", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "metric", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "metric", "type": "functools.partial[nothing]"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "ids", "type": "Any"}, {"lineNumber": 230, "col_offset": 7, "nodeName": "ids", "type": "Any"}, {"lineNumber": 230, "col_offset": 27, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "metric", "type": "functools.partial[nothing]"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "counts", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "_", "type": "Any"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "_unweighted_unifrac_pdist_f", "type": "Callable[[Any, Any, Any], Tuple[functools.partial[Any], Any, Any]]"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "counts", "type": "Any"}, {"lineNumber": 238, "col_offset": 9, "nodeName": "metric", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "normalized", "type": "Union[Any, bool]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "diversity", "type": "module"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "diversity", "type": "module"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "diversity", "type": "module"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "diversity", "type": "module"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "diversity", "type": "module"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "diversity", "type": "module"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "diversity", "type": "module"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "diversity", "type": "module"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "diversity", "type": "module"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "diversity", "type": "module"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "diversity", "type": "module"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "diversity", "type": "module"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "diversity", "type": "module"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "diversity", "type": "module"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "diversity", "type": "module"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "diversity", "type": "module"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "diversity", "type": "module"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "diversity", "type": "module"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "diversity", "type": "module"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "diversity", "type": "module"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "diversity", "type": "module"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "diversity", "type": "module"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "diversity", "type": "module"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "diversity", "type": "module"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "diversity", "type": "module"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "diversity", "type": "module"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "diversity", "type": "module"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "diversity", "type": "module"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "diversity", "type": "module"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "diversity", "type": "module"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "diversity", "type": "module"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 154, "col_offset": 46, "nodeName": "ids", "type": "Any"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 165, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 51, "nodeName": "branch_lengths", "type": "Any"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 171, "col_offset": 9, "nodeName": "metric", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "metric_map", "type": "Dict[str, Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 230, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 230, "col_offset": 46, "nodeName": "ids", "type": "Any"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "counts", "type": "Any"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "_", "type": "Any"}, {"lineNumber": 240, "col_offset": 28, "nodeName": "_weighted_unifrac_pdist_f", "type": "Callable[[Any, Any, Any, Any], Tuple[Callable[[Any, Any], Any], Any, Any]]"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "counts", "type": "Any"}, {"lineNumber": 243, "col_offset": 9, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "metric", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "metric", "type": "functools.partial[nothing]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "skbio", "type": "module"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "skbio", "type": "module"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "skbio", "type": "module"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "skbio", "type": "module"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "skbio", "type": "module"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "skbio", "type": "module"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "skbio", "type": "module"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "skbio", "type": "module"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "skbio", "type": "module"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "skbio", "type": "module"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "skbio", "type": "module"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "skbio", "type": "module"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "skbio", "type": "module"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "skbio", "type": "module"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "skbio", "type": "module"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "skbio", "type": "module"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "skbio", "type": "module"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "skbio", "type": "module"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "skbio", "type": "module"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "skbio", "type": "module"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "skbio", "type": "module"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "skbio", "type": "module"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "skbio", "type": "module"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "skbio", "type": "module"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "skbio", "type": "module"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "skbio", "type": "module"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "skbio", "type": "module"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "skbio", "type": "module"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "skbio", "type": "module"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "skbio", "type": "module"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "skbio", "type": "module"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "metric_map", "type": "Dict[str, Any]"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 237, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 242, "col_offset": 27, "nodeName": "normalized", "type": "Union[Any, bool]"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "metric", "type": "Any"}, {"lineNumber": 174, "col_offset": 58, "nodeName": "metric", "type": "Any"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 241, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 244, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}]