[{"lineNumber": 24, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 295, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "exp", "type": "float"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "counts", "type": "List[int]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "den", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "obs_few", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "obs_many", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "freq_arr", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "D", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "D", "type": "float"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "exp", "type": "float"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "result", "type": "List[Union[int, Tuple[Any, Any]]]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "max_size", "type": "int"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "observed_lower", "type": "Any"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "observed_upper", "type": "Any"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "observed_lower", "type": "Any"}, {"lineNumber": 152, "col_offset": 54, "nodeName": "expected_lower", "type": "numpy.ndarray"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "observed_upper", "type": "Any"}, {"lineNumber": 153, "col_offset": 54, "nodeName": "expected_upper", "type": "numpy.ndarray"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "fisher_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "exp", "type": "float"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "fisher_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "exp", "type": "float"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "fisher_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "fisher_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "goods_coverage", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "counts", "type": "List[int]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 198, "col_offset": 54, "nodeName": "exp", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 202, "col_offset": 54, "nodeName": "exp", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 214, "col_offset": 14, "nodeName": "num", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "den", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 61, "nodeName": "exp", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 225, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 228, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 229, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 232, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "obs_many", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "observed_otus", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "observed_otus", "type": "Callable[[Any], Any]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 248, "col_offset": 14, "nodeName": "observed_otus", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "sum", "type": "Any"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "simpson_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 274, "col_offset": 24, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 275, "col_offset": 30, "nodeName": "exp", "type": "Any"}, {"lineNumber": 280, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 283, "col_offset": 41, "nodeName": "exp", "type": "float"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "obs", "type": "Any"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "brillouin_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "equitability", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "equitability", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "max_size", "type": "int"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "result", "type": "List[Union[int, Tuple[Any, Any]]]"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 30, "nodeName": "e", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "heip_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "heip_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "heip_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "log", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 198, "col_offset": 31, "nodeName": "kempton_taylor_q", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 48, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "kempton_taylor_q", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 48, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "margalef", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "mcintosh_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "mcintosh_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "menhinick", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "obs_few", "type": "Any"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "obs_many", "type": "Any"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "osd", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "robbins", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "simpson", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "simpson", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "simpson_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "D", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 280, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "D", "type": "float"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "simpson_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 283, "col_offset": 35, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 286, "col_offset": 33, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "strong", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "max", "type": "Callable"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "bincount", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "curr", "type": "Tuple[Any, Any]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "curr", "type": "Union[Tuple[Any, Any], int]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 46, "nodeName": "_diversity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 57, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 143, "col_offset": 63, "nodeName": "esty_ci", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 184, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "exp", "type": "Any"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "h", "type": "Any"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 205, "col_offset": 52, "nodeName": "log", "type": "Any"}, {"lineNumber": 208, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 215, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 219, "col_offset": 53, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 234, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "arange", "type": "Any"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 255, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 258, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 263, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 264, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "freq_arr", "type": "Any"}, {"lineNumber": 286, "col_offset": 33, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 287, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 292, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 133, "col_offset": 65, "nodeName": "max_size", "type": "int"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "f", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "ZeroDivisionError", "type": "Type[ZeroDivisionError]"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "FloatingPointError", "type": "Type[FloatingPointError]"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "curr", "type": "int"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "result", "type": "List[Union[int, Tuple[Any, Any]]]"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 264, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 287, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 133, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "arr", "type": "numpy.ndarray"}]