[{"lineNumber": 25, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "test__confidence_bound_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "test__confidence_bound_df", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "test__confidence_bound_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "test__confidence_bound_nan", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "test__confidence_bound_axis_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "test_collate_effect_size_counts_shape_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "test_collate_effect_size_different_power_shapes", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "test_collate_effect_size_power_and_counts_not_same_lenght", "type": "Callable[[Any], Any]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "test_collate_effect_size_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "test_collate_effect_size_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "test_collate_effect_size_nans", "type": "Callable[[Any], Any]"}, {"lineNumber": 350, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "meta", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "known_m", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "known_b", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "round", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "arange", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "meta", "type": "Dict[str, Union[Dict[str, Any], Dict[str, str]]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "test", "type": "Any"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "known", "type": "float"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 301, "col_offset": 37, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 302, "col_offset": 39, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 307, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 307, "col_offset": 38, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 307, "col_offset": 59, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 308, "col_offset": 26, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 308, "col_offset": 34, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 313, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 313, "col_offset": 38, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 313, "col_offset": 59, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 314, "col_offset": 26, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 314, "col_offset": 34, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 319, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 320, "col_offset": 45, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 321, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 323, "col_offset": 28, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 323, "col_offset": 42, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 324, "col_offset": 41, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 329, "col_offset": 18, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 332, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 334, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 336, "col_offset": 28, "nodeName": "known_m", "type": "Any"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "known_b", "type": "Any"}, {"lineNumber": 337, "col_offset": 37, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 342, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 342, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 343, "col_offset": 45, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 344, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "arange", "type": "Any"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "nan", "type": "Any"}, {"lineNumber": 49, "col_offset": 56, "nodeName": "nan", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 301, "col_offset": 58, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 302, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 306, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 307, "col_offset": 59, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 308, "col_offset": 34, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 312, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 313, "col_offset": 59, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 314, "col_offset": 34, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 319, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 320, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 321, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 323, "col_offset": 28, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 329, "col_offset": 18, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 332, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 333, "col_offset": 45, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 334, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "nan", "type": "Any"}, {"lineNumber": 342, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 344, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "power", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "nan", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "nan", "type": "Any"}, {"lineNumber": 301, "col_offset": 58, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 333, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 341, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 345, "col_offset": 30, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 346, "col_offset": 30, "nodeName": "test_b", "type": "Any"}]