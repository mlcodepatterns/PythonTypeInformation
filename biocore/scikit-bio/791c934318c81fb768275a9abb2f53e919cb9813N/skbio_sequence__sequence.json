[{"lineNumber": 33, "col_offset": 15, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "SkbioObject", "type": "Type[skbio._base.SkbioObject]"}, {"lineNumber": 1628, "col_offset": 14, "nodeName": "IUPACSequence", "type": "Type[IUPACSequence]"}, {"lineNumber": 1675, "col_offset": 10, "nodeName": "NucleotideSequence", "type": "Type[NucleotideSequence]"}, {"lineNumber": 1746, "col_offset": 10, "nodeName": "NucleotideSequence", "type": "Type[NucleotideSequence]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "collections", "type": "module"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "default_write_format", "type": "str"}, {"lineNumber": 1122, "col_offset": 20, "nodeName": "with_metaclass", "type": "Any"}, {"lineNumber": 1122, "col_offset": 35, "nodeName": "ABCMeta", "type": "Type[abc.ABCMeta]"}, {"lineNumber": 1122, "col_offset": 44, "nodeName": "Sequence", "type": "Type[Sequence]"}, {"lineNumber": 1123, "col_offset": 4, "nodeName": "_number_of_extended_ascii_codes", "type": "int"}, {"lineNumber": 1124, "col_offset": 4, "nodeName": "_ascii_lowercase_boundary", "type": "int"}, {"lineNumber": 1381, "col_offset": 25, "nodeName": "with_metaclass", "type": "Any"}, {"lineNumber": 1381, "col_offset": 40, "nodeName": "ABCMeta", "type": "Type[abc.ABCMeta]"}, {"lineNumber": 1381, "col_offset": 49, "nodeName": "IUPACSequence", "type": "Type[IUPACSequence]"}, {"lineNumber": 1569, "col_offset": 4, "nodeName": "rc", "type": "Callable[[Any], Any]"}, {"lineNumber": 1569, "col_offset": 9, "nodeName": "reverse_complement", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 5, "nodeName": "hooks", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "writeable", "type": "bool"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "writeable", "type": "bool"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "_string", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "is_ndarray", "type": "bool"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "is_ndarray", "type": "bool"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "writeable", "type": "bool"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "_string", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "_quality", "type": "Any"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "quality", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "qual", "type": "None"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "seq", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 349, "col_offset": 17, "nodeName": "indexables", "type": "List[Any]"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "first_ten", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "cn", "type": "Any"}, {"lineNumber": 509, "col_offset": 13, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "length", "type": "int"}, {"lineNumber": 569, "col_offset": 15, "nodeName": "_id", "type": "Any"}, {"lineNumber": 582, "col_offset": 15, "nodeName": "_description", "type": "Any"}, {"lineNumber": 599, "col_offset": 15, "nodeName": "_quality", "type": "Any"}, {"lineNumber": 1023, "col_offset": 11, "nodeName": "overlap", "type": "Any"}, {"lineNumber": 1028, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 1056, "col_offset": 8, "nodeName": "k_words", "type": "Generator[Any, Any, None]"}, {"lineNumber": 1084, "col_offset": 11, "nodeName": "overlap", "type": "Any"}, {"lineNumber": 1089, "col_offset": 8, "nodeName": "result", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 1090, "col_offset": 8, "nodeName": "kmer_counts", "type": "Counter[nothing]"}, {"lineNumber": 1093, "col_offset": 15, "nodeName": "result", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 1115, "col_offset": 8, "nodeName": "start", "type": "int"}, {"lineNumber": 1117, "col_offset": 12, "nodeName": "match", "type": "Any"}, {"lineNumber": 1220, "col_offset": 11, "nodeName": "case_insensitive", "type": "Any"}, {"lineNumber": 1223, "col_offset": 11, "nodeName": "validate", "type": "Any"}, {"lineNumber": 1228, "col_offset": 8, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 1358, "col_offset": 8, "nodeName": "degen_chars", "type": "Any"}, {"lineNumber": 1358, "col_offset": 22, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 1362, "col_offset": 8, "nodeName": "expansions", "type": "List[Any]"}, {"lineNumber": 1363, "col_offset": 12, "nodeName": "char", "type": "Any"}, {"lineNumber": 1363, "col_offset": 20, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1377, "col_offset": 8, "nodeName": "result", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 1471, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 1472, "col_offset": 8, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 1472, "col_offset": 25, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 1473, "col_offset": 8, "nodeName": "seq_iterator", "type": "Union[reversed[Any], NucleotideSequence]"}, {"lineNumber": 1474, "col_offset": 12, "nodeName": "base", "type": "Any"}, {"lineNumber": 1474, "col_offset": 20, "nodeName": "seq_iterator", "type": "Union[NucleotideSequence, reversed[Any]]"}, {"lineNumber": 1484, "col_offset": 8, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1484, "col_offset": 18, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1605, "col_offset": 8, "nodeName": "gaps", "type": "str"}, {"lineNumber": 1606, "col_offset": 8, "nodeName": "acceptable", "type": "str"}, {"lineNumber": 1615, "col_offset": 8, "nodeName": "pat", "type": "Pattern[str]"}, {"lineNumber": 1617, "col_offset": 12, "nodeName": "hits", "type": "Any"}, {"lineNumber": 1712, "col_offset": 15, "nodeName": "comp_map", "type": "Dict[Union[str, Any], Union[str, Any]]"}, {"lineNumber": 1778, "col_offset": 15, "nodeName": "comp_map", "type": "Dict[Union[str, Any], Union[str, Any]]"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "Sequence", "type": "Type[Sequence]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_set_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "id", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_set_description", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "description", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_set_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_set_quality", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "quality", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "_owns_bytes", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "_owns_bytes", "type": "bool"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "flags", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "flags", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "id_", "type": "Any"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "_id", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "id_", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "description", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "_description", "type": "Any"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "description", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "potential_copy", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "potential_copy", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "_owns_bytes", "type": "bool"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "size", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "flags", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "quality", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "quality", "type": "numpy.ndarray"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "quality", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "writeable", "type": "bool"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "other", "type": "Any"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "_string", "type": "Any"}, {"lineNumber": 231, "col_offset": 42, "nodeName": "_string", "type": "Any"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "equals", "type": "Callable[..., Any]"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "indexable", "type": "numpy.ndarray"}, {"lineNumber": 342, "col_offset": 14, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 343, "col_offset": 11, "nodeName": "has_quality", "type": "Callable[[], Any]"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "qual", "type": "Any"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "to", "type": "Callable[..., Any]"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "piece", "type": "Any"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 384, "col_offset": 20, "nodeName": "_string", "type": "Any"}, {"lineNumber": 407, "col_offset": 11, "nodeName": "has_quality", "type": "Callable[[], Any]"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "qual", "type": "Any"}, {"lineNumber": 408, "col_offset": 19, "nodeName": "quality", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "qual", "type": "List[nothing]"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "c", "type": "Any"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 412, "col_offset": 20, "nodeName": "zip_longest", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 412, "col_offset": 32, "nodeName": "_string", "type": "Any"}, {"lineNumber": 412, "col_offset": 46, "nodeName": "qual", "type": "Any"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 508, "col_offset": 20, "nodeName": "_string", "type": "Any"}, {"lineNumber": 509, "col_offset": 13, "nodeName": "__class__", "type": "Type[Sequence]"}, {"lineNumber": 510, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 510, "col_offset": 21, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 511, "col_offset": 11, "nodeName": "length", "type": "int"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "ellipses", "type": "str"}, {"lineNumber": 514, "col_offset": 12, "nodeName": "ellipses", "type": "str"}, {"lineNumber": 538, "col_offset": 15, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 542, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 556, "col_offset": 15, "nodeName": "view", "type": "Any"}, {"lineNumber": 569, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 582, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 599, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "quality", "type": "Any"}, {"lineNumber": 691, "col_offset": 24, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 692, "col_offset": 18, "nodeName": "id", "type": "Any"}, {"lineNumber": 693, "col_offset": 27, "nodeName": "description", "type": "Any"}, {"lineNumber": 694, "col_offset": 23, "nodeName": "quality", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 696, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 697, "col_offset": 15, "nodeName": "_constructor", "type": "Callable[..., Any]"}, {"lineNumber": 700, "col_offset": 15, "nodeName": "__class__", "type": "Type[Sequence]"}, {"lineNumber": 774, "col_offset": 11, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 775, "col_offset": 12, "nodeName": "ignore", "type": "Dict[nothing, nothing]"}, {"lineNumber": 778, "col_offset": 15, "nodeName": "descriptive", "type": "bool"}, {"lineNumber": 833, "col_offset": 15, "nodeName": "count", "type": "Any"}, {"lineNumber": 833, "col_offset": 34, "nodeName": "subsequence", "type": "Any"}, {"lineNumber": 881, "col_offset": 11, "nodeName": "distance_fn", "type": "Any"}, {"lineNumber": 882, "col_offset": 12, "nodeName": "distance_fn", "type": "Any"}, {"lineNumber": 882, "col_offset": 26, "nodeName": "hamming", "type": "Any"}, {"lineNumber": 883, "col_offset": 15, "nodeName": "distance_fn", "type": "Any"}, {"lineNumber": 883, "col_offset": 27, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 883, "col_offset": 33, "nodeName": "other", "type": "Any"}, {"lineNumber": 927, "col_offset": 15, "nodeName": "distance", "type": "Callable[..., Any]"}, {"lineNumber": 927, "col_offset": 29, "nodeName": "other", "type": "Any"}, {"lineNumber": 1020, "col_offset": 11, "nodeName": "k", "type": "Any"}, {"lineNumber": 1024, "col_offset": 12, "nodeName": "step", "type": "int"}, {"lineNumber": 1026, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 1026, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 1028, "col_offset": 17, "nodeName": "range", "type": "Any"}, {"lineNumber": 1028, "col_offset": 45, "nodeName": "step", "type": "Union[Any, int]"}, {"lineNumber": 1056, "col_offset": 18, "nodeName": "kmers", "type": "Callable[..., Any]"}, {"lineNumber": 1056, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 1056, "col_offset": 32, "nodeName": "overlap", "type": "Any"}, {"lineNumber": 1057, "col_offset": 15, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 1085, "col_offset": 12, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 1087, "col_offset": 12, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 1089, "col_offset": 17, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 1089, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1090, "col_offset": 22, "nodeName": "kmer_counts", "type": "Callable[..., Any]"}, {"lineNumber": 1090, "col_offset": 39, "nodeName": "k", "type": "Any"}, {"lineNumber": 1091, "col_offset": 12, "nodeName": "word", "type": "Any"}, {"lineNumber": 1091, "col_offset": 18, "nodeName": "count", "type": "Any"}, {"lineNumber": 1091, "col_offset": 27, "nodeName": "viewitems", "type": "Any"}, {"lineNumber": 1091, "col_offset": 37, "nodeName": "kmer_counts", "type": "Counter[nothing]"}, {"lineNumber": 1115, "col_offset": 21, "nodeName": "retrieve_group_0", "type": "Any"}, {"lineNumber": 1117, "col_offset": 21, "nodeName": "finditer", "type": "Any"}, {"lineNumber": 1117, "col_offset": 36, "nodeName": "_string", "type": "Any"}, {"lineNumber": 1118, "col_offset": 16, "nodeName": "g", "type": "Any"}, {"lineNumber": 1137, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1142, "col_offset": 12, "nodeName": "degens", "type": "Any"}, {"lineNumber": 1142, "col_offset": 21, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 1144, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1149, "col_offset": 12, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 1149, "col_offset": 19, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 1151, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1163, "col_offset": 64, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 1175, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1187, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1187, "col_offset": 19, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 1219, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1219, "col_offset": 44, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 1219, "col_offset": 54, "nodeName": "id", "type": "Any"}, {"lineNumber": 1219, "col_offset": 58, "nodeName": "description", "type": "Any"}, {"lineNumber": 1219, "col_offset": 71, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1228, "col_offset": 20, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 1228, "col_offset": 34, "nodeName": "_ascii_lowercase_boundary", "type": "int"}, {"lineNumber": 1229, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 1229, "col_offset": 18, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 1245, "col_offset": 12, "nodeName": "_validation_mask", "type": "Any"}, {"lineNumber": 1246, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 1246, "col_offset": 18, "nodeName": "invalid_characters", "type": "Any"}, {"lineNumber": 1255, "col_offset": 15, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 1258, "col_offset": 15, "nodeName": "in1d", "type": "Any"}, {"lineNumber": 1258, "col_offset": 23, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 1258, "col_offset": 36, "nodeName": "_gap_codes", "type": "Any"}, {"lineNumber": 1292, "col_offset": 15, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1315, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 1318, "col_offset": 15, "nodeName": "in1d", "type": "Any"}, {"lineNumber": 1318, "col_offset": 23, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 1318, "col_offset": 36, "nodeName": "_degenerate_codes", "type": "Any"}, {"lineNumber": 1322, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 1358, "col_offset": 22, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1359, "col_offset": 29, "nodeName": "union", "type": "Any"}, {"lineNumber": 1360, "col_offset": 12, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 1364, "col_offset": 12, "nodeName": "char", "type": "str"}, {"lineNumber": 1377, "col_offset": 17, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1472, "col_offset": 25, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1473, "col_offset": 41, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 1473, "col_offset": 54, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1476, "col_offset": 12, "nodeName": "base", "type": "str"}, {"lineNumber": 1484, "col_offset": 18, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1485, "col_offset": 34, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 1486, "col_offset": 12, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1488, "col_offset": 15, "nodeName": "to", "type": "Any"}, {"lineNumber": 1516, "col_offset": 15, "nodeName": "_complement", "type": "Callable[..., Any]"}, {"lineNumber": 1538, "col_offset": 15, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1568, "col_offset": 15, "nodeName": "_complement", "type": "Callable[..., Any]"}, {"lineNumber": 1605, "col_offset": 15, "nodeName": "escape", "type": "Callable"}, {"lineNumber": 1606, "col_offset": 29, "nodeName": "allow_gaps", "type": "Any"}, {"lineNumber": 1606, "col_offset": 21, "nodeName": "gaps", "type": "str"}, {"lineNumber": 1608, "col_offset": 11, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 1609, "col_offset": 12, "nodeName": "pat_str", "type": "str"}, {"lineNumber": 1615, "col_offset": 14, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 1615, "col_offset": 25, "nodeName": "pat_str", "type": "str"}, {"lineNumber": 1617, "col_offset": 20, "nodeName": "regex_iter", "type": "Any"}, {"lineNumber": 1617, "col_offset": 36, "nodeName": "pat", "type": "Pattern[str]"}, {"lineNumber": 1618, "col_offset": 15, "nodeName": "allow_gaps", "type": "Any"}, {"lineNumber": 1655, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1711, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1725, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1777, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1791, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "id", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "id", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "id", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "description", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "description", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "description", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "quality", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "quality", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "quality", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "copy", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "view", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "issubdtype", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 152, "col_offset": 50, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "potential_copy", "type": "Any"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "_owns_bytes", "type": "bool"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "_owns_bytes", "type": "bool"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "view", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "quality", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "quality", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "cast_type", "type": "str"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "cast_type", "type": "str"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 185, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "flags", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "any", "type": "Any"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "other", "type": "Any"}, {"lineNumber": 229, "col_offset": 28, "nodeName": "_string", "type": "Any"}, {"lineNumber": 231, "col_offset": 42, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 331, "col_offset": 24, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 331, "col_offset": 35, "nodeName": "indexable", "type": "Any"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 332, "col_offset": 34, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "indexable", "type": "List[Any]"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "seq", "type": "Any"}, {"lineNumber": 342, "col_offset": 14, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 342, "col_offset": 26, "nodeName": "indexable", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 343, "col_offset": 11, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 344, "col_offset": 19, "nodeName": "quality", "type": "Any"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 346, "col_offset": 32, "nodeName": "seq", "type": "Any"}, {"lineNumber": 346, "col_offset": 45, "nodeName": "qual", "type": "Any"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 350, "col_offset": 26, "nodeName": "i", "type": "Any"}, {"lineNumber": 350, "col_offset": 29, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 361, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "piece", "type": "Any"}, {"lineNumber": 384, "col_offset": 20, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 407, "col_offset": 11, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 408, "col_offset": 19, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 412, "col_offset": 32, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 476, "col_offset": 20, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 476, "col_offset": 28, "nodeName": "other", "type": "Any"}, {"lineNumber": 508, "col_offset": 20, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 509, "col_offset": 13, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 515, "col_offset": 44, "nodeName": "cn", "type": "Any"}, {"lineNumber": 515, "col_offset": 48, "nodeName": "first_ten", "type": "Any"}, {"lineNumber": 515, "col_offset": 59, "nodeName": "ellipses", "type": "str"}, {"lineNumber": 515, "col_offset": 69, "nodeName": "length", "type": "int"}, {"lineNumber": 538, "col_offset": 20, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 556, "col_offset": 15, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 691, "col_offset": 24, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 692, "col_offset": 18, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 693, "col_offset": 27, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 694, "col_offset": 23, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "defaults", "type": "Dict[str, Any]"}, {"lineNumber": 697, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 697, "col_offset": 35, "nodeName": "defaults", "type": "Dict[str, Any]"}, {"lineNumber": 700, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 700, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 785, "col_offset": 25, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 785, "col_offset": 36, "nodeName": "__class__", "type": "Type[Sequence]"}, {"lineNumber": 785, "col_offset": 54, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 786, "col_offset": 12, "nodeName": "raiser", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 789, "col_offset": 23, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 789, "col_offset": 34, "nodeName": "id", "type": "Any"}, {"lineNumber": 789, "col_offset": 45, "nodeName": "id", "type": "Any"}, {"lineNumber": 790, "col_offset": 12, "nodeName": "raiser", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 793, "col_offset": 32, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 794, "col_offset": 16, "nodeName": "description", "type": "Any"}, {"lineNumber": 794, "col_offset": 36, "nodeName": "description", "type": "Any"}, {"lineNumber": 795, "col_offset": 12, "nodeName": "raiser", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 800, "col_offset": 28, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 802, "col_offset": 12, "nodeName": "raiser", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 805, "col_offset": 29, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 805, "col_offset": 40, "nodeName": "_string", "type": "Any"}, {"lineNumber": 805, "col_offset": 56, "nodeName": "_string", "type": "Any"}, {"lineNumber": 806, "col_offset": 12, "nodeName": "raiser", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 833, "col_offset": 15, "nodeName": "_string", "type": "Any"}, {"lineNumber": 876, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 876, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 876, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 876, "col_offset": 28, "nodeName": "other", "type": "Any"}, {"lineNumber": 877, "col_offset": 18, "nodeName": "SequenceError", "type": "Type[skbio.sequence._exception.SequenceError]"}, {"lineNumber": 927, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 927, "col_offset": 48, "nodeName": "hamming", "type": "Any"}, {"lineNumber": 963, "col_offset": 20, "nodeName": "fraction_diff", "type": "Callable[[Any], Any]"}, {"lineNumber": 963, "col_offset": 39, "nodeName": "other", "type": "Any"}, {"lineNumber": 983, "col_offset": 19, "nodeName": "index", "type": "Any"}, {"lineNumber": 983, "col_offset": 38, "nodeName": "subsequence", "type": "Any"}, {"lineNumber": 1021, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1056, "col_offset": 18, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 1057, "col_offset": 15, "nodeName": "collections", "type": "module"}, {"lineNumber": 1087, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 1089, "col_offset": 17, "nodeName": "collections", "type": "module"}, {"lineNumber": 1090, "col_offset": 22, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 1090, "col_offset": 50, "nodeName": "overlap", "type": "Any"}, {"lineNumber": 1092, "col_offset": 12, "nodeName": "result", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 1092, "col_offset": 32, "nodeName": "count", "type": "Any"}, {"lineNumber": 1092, "col_offset": 40, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 1117, "col_offset": 21, "nodeName": "regex", "type": "Any"}, {"lineNumber": 1117, "col_offset": 36, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 1118, "col_offset": 21, "nodeName": "range", "type": "Any"}, {"lineNumber": 1118, "col_offset": 27, "nodeName": "start", "type": "int"}, {"lineNumber": 1133, "col_offset": 11, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1134, "col_offset": 36, "nodeName": "invert", "type": "Any"}, {"lineNumber": 1141, "col_offset": 11, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1142, "col_offset": 21, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1143, "col_offset": 12, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1143, "col_offset": 37, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1148, "col_offset": 11, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1149, "col_offset": 19, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1150, "col_offset": 12, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1150, "col_offset": 30, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1163, "col_offset": 15, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 1163, "col_offset": 38, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 1163, "col_offset": 64, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1187, "col_offset": 19, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1221, "col_offset": 12, "nodeName": "_convert_to_uppercase", "type": "Any"}, {"lineNumber": 1224, "col_offset": 12, "nodeName": "_validate", "type": "Any"}, {"lineNumber": 1228, "col_offset": 20, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1228, "col_offset": 34, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1229, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1243, "col_offset": 29, "nodeName": "bincount", "type": "Any"}, {"lineNumber": 1244, "col_offset": 12, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 1245, "col_offset": 12, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1246, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1247, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1249, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1255, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1255, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1258, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1258, "col_offset": 23, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1258, "col_offset": 36, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1318, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1318, "col_offset": 23, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1318, "col_offset": 36, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1359, "col_offset": 29, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 1360, "col_offset": 12, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1364, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1364, "col_offset": 23, "nodeName": "char", "type": "Any"}, {"lineNumber": 1365, "col_offset": 15, "nodeName": "char", "type": "str"}, {"lineNumber": 1365, "col_offset": 23, "nodeName": "nonexpansion_chars", "type": "Any"}, {"lineNumber": 1377, "col_offset": 26, "nodeName": "expansions", "type": "List[Any]"}, {"lineNumber": 1378, "col_offset": 16, "nodeName": "to", "type": "Any"}, {"lineNumber": 1378, "col_offset": 60, "nodeName": "nondegen_seq", "type": "Tuple[Any, ...]"}, {"lineNumber": 1378, "col_offset": 76, "nodeName": "result", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 1473, "col_offset": 23, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 1473, "col_offset": 32, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1476, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1476, "col_offset": 23, "nodeName": "base", "type": "Any"}, {"lineNumber": 1479, "col_offset": 19, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 1485, "col_offset": 11, "nodeName": "has_quality", "type": "Any"}, {"lineNumber": 1486, "col_offset": 22, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1488, "col_offset": 15, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1488, "col_offset": 57, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1516, "col_offset": 15, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1538, "col_offset": 23, "nodeName": "reverse_complement", "type": "Any"}, {"lineNumber": 1568, "col_offset": 15, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1605, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 1605, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1605, "col_offset": 33, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 1610, "col_offset": 13, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 1611, "col_offset": 12, "nodeName": "pat_str", "type": "str"}, {"lineNumber": 1615, "col_offset": 14, "nodeName": "re", "type": "module"}, {"lineNumber": 1617, "col_offset": 20, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1619, "col_offset": 16, "nodeName": "degapped", "type": "Any"}, {"lineNumber": 1620, "col_offset": 20, "nodeName": "gap_char", "type": "Any"}, {"lineNumber": 1620, "col_offset": 32, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 1670, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1670, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1671, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1711, "col_offset": 8, "nodeName": "comp_map", "type": "Dict[Union[str, Any], Union[str, Any]]"}, {"lineNumber": 1711, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 1711, "col_offset": 28, "nodeName": "c", "type": "Any"}, {"lineNumber": 1740, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1740, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1740, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1740, "col_offset": 65, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1741, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1741, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1741, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1741, "col_offset": 66, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1742, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1742, "col_offset": 34, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1742, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1777, "col_offset": 8, "nodeName": "comp_map", "type": "Dict[Union[str, Any], Union[str, Any]]"}, {"lineNumber": 1777, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 1777, "col_offset": 28, "nodeName": "c", "type": "Any"}, {"lineNumber": 1806, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1806, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1806, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1806, "col_offset": 65, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1807, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1807, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1807, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1807, "col_offset": 66, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1808, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1808, "col_offset": 34, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1808, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 121, "col_offset": 49, "nodeName": "size", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "issubdtype", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "size", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "quality", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "quality", "type": "numpy.ndarray"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "quality", "type": "Any"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "quality", "type": "Any"}, {"lineNumber": 185, "col_offset": 50, "nodeName": "cast_type", "type": "str"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "quality", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "quality", "type": "Any"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "SequenceError", "type": "Type[skbio.sequence._exception.SequenceError]"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "quality", "type": "Any"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 192, "col_offset": 22, "nodeName": "SequenceError", "type": "Type[skbio.sequence._exception.SequenceError]"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "SequenceError", "type": "Type[skbio.sequence._exception.SequenceError]"}, {"lineNumber": 229, "col_offset": 28, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "Sequence", "type": "Type[Sequence]"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "other", "type": "Any"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 330, "col_offset": 26, "nodeName": "indexable", "type": "Any"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 330, "col_offset": 100, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 330, "col_offset": 108, "nodeName": "indexable", "type": "Any"}, {"lineNumber": 331, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "indexable", "type": "numpy.ndarray"}, {"lineNumber": 333, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 333, "col_offset": 33, "nodeName": "indexable", "type": "numpy.ndarray"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 335, "col_offset": 19, "nodeName": "has_quality", "type": "Callable[[], Any]"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "qual", "type": "Any"}, {"lineNumber": 338, "col_offset": 23, "nodeName": "to", "type": "Callable[..., Any]"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 339, "col_offset": 24, "nodeName": "indexable", "type": "Any"}, {"lineNumber": 339, "col_offset": 35, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 339, "col_offset": 52, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 339, "col_offset": 63, "nodeName": "indexable", "type": "Any"}, {"lineNumber": 339, "col_offset": 74, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 344, "col_offset": 19, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "indexable", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 361, "col_offset": 26, "nodeName": "i", "type": "Any"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "piece", "type": "Any"}, {"lineNumber": 363, "col_offset": 22, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 413, "col_offset": 18, "nodeName": "_constructor", "type": "Callable[..., Any]"}, {"lineNumber": 542, "col_offset": 19, "nodeName": "view", "type": "Any"}, {"lineNumber": 556, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 779, "col_offset": 22, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 785, "col_offset": 36, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 785, "col_offset": 54, "nodeName": "other", "type": "Any"}, {"lineNumber": 789, "col_offset": 34, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 789, "col_offset": 45, "nodeName": "other", "type": "Any"}, {"lineNumber": 794, "col_offset": 16, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 794, "col_offset": 36, "nodeName": "other", "type": "Any"}, {"lineNumber": 800, "col_offset": 43, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 800, "col_offset": 58, "nodeName": "quality", "type": "Any"}, {"lineNumber": 801, "col_offset": 58, "nodeName": "quality", "type": "Any"}, {"lineNumber": 805, "col_offset": 40, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 805, "col_offset": 56, "nodeName": "other", "type": "Any"}, {"lineNumber": 833, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 963, "col_offset": 20, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 983, "col_offset": 19, "nodeName": "_string", "type": "Any"}, {"lineNumber": 1028, "col_offset": 38, "nodeName": "k", "type": "Any"}, {"lineNumber": 1029, "col_offset": 18, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 1057, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1057, "col_offset": 40, "nodeName": "seq", "type": "Any"}, {"lineNumber": 1057, "col_offset": 49, "nodeName": "seq", "type": "Any"}, {"lineNumber": 1057, "col_offset": 56, "nodeName": "k_words", "type": "Generator[Any, Any, None]"}, {"lineNumber": 1085, "col_offset": 36, "nodeName": "k", "type": "Any"}, {"lineNumber": 1087, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1087, "col_offset": 28, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 1134, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 1136, "col_offset": 70, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 1143, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 1150, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1163, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1163, "col_offset": 38, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1219, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1219, "col_offset": 14, "nodeName": "IUPACSequence", "type": "Type[IUPACSequence]"}, {"lineNumber": 1219, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 1221, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1224, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1230, "col_offset": 17, "nodeName": "_byte_ownership", "type": "Any"}, {"lineNumber": 1233, "col_offset": 16, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 1243, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 1244, "col_offset": 12, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1244, "col_offset": 35, "nodeName": "_number_of_extended_ascii_codes", "type": "int"}, {"lineNumber": 1292, "col_offset": 20, "nodeName": "invert", "type": "Any"}, {"lineNumber": 1315, "col_offset": 15, "nodeName": "gaps", "type": "Callable[[], Any]"}, {"lineNumber": 1322, "col_offset": 15, "nodeName": "degenerates", "type": "Callable[[], Any]"}, {"lineNumber": 1359, "col_offset": 29, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1366, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1366, "col_offset": 34, "nodeName": "char", "type": "str"}, {"lineNumber": 1373, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 1378, "col_offset": 16, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1478, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1485, "col_offset": 11, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1486, "col_offset": 22, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1488, "col_offset": 32, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1488, "col_offset": 40, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 1538, "col_offset": 23, "nodeName": "other", "type": "Any"}, {"lineNumber": 1605, "col_offset": 33, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1609, "col_offset": 43, "nodeName": "acceptable", "type": "str"}, {"lineNumber": 1609, "col_offset": 55, "nodeName": "min_length", "type": "Any"}, {"lineNumber": 1613, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1619, "col_offset": 27, "nodeName": "hits", "type": "Any"}, {"lineNumber": 1620, "col_offset": 32, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1621, "col_offset": 20, "nodeName": "degapped", "type": "Any"}, {"lineNumber": 1622, "col_offset": 36, "nodeName": "min_length", "type": "Any"}, {"lineNumber": 1625, "col_offset": 22, "nodeName": "hits", "type": "Any"}, {"lineNumber": 1711, "col_offset": 34, "nodeName": "c", "type": "Any"}, {"lineNumber": 1711, "col_offset": 39, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 1777, "col_offset": 34, "nodeName": "c", "type": "Any"}, {"lineNumber": 1777, "col_offset": 39, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 49, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 127, "col_offset": 54, "nodeName": "id_", "type": "Any"}, {"lineNumber": 133, "col_offset": 63, "nodeName": "description", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "view", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "quality", "type": "Any"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 59, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 330, "col_offset": 70, "nodeName": "indexable", "type": "Any"}, {"lineNumber": 330, "col_offset": 81, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 334, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 335, "col_offset": 19, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 338, "col_offset": 23, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 338, "col_offset": 40, "nodeName": "seq", "type": "Any"}, {"lineNumber": 338, "col_offset": 53, "nodeName": "qual", "type": "Any"}, {"lineNumber": 340, "col_offset": 65, "nodeName": "indexable", "type": "Any"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 352, "col_offset": 28, "nodeName": "i", "type": "Any"}, {"lineNumber": 352, "col_offset": 31, "nodeName": "Integral", "type": "Type[numbers.Integral]"}, {"lineNumber": 353, "col_offset": 19, "nodeName": "i", "type": "Any"}, {"lineNumber": 354, "col_offset": 20, "nodeName": "i", "type": "slice"}, {"lineNumber": 356, "col_offset": 20, "nodeName": "i", "type": "slice"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 363, "col_offset": 60, "nodeName": "i", "type": "Any"}, {"lineNumber": 413, "col_offset": 18, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 413, "col_offset": 45, "nodeName": "c", "type": "Any"}, {"lineNumber": 413, "col_offset": 56, "nodeName": "q", "type": "Any"}, {"lineNumber": 542, "col_offset": 19, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 800, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 800, "col_offset": 58, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 801, "col_offset": 58, "nodeName": "other", "type": "Any"}, {"lineNumber": 983, "col_offset": 19, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 1028, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1028, "col_offset": 30, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 1029, "col_offset": 23, "nodeName": "i", "type": "Any"}, {"lineNumber": 1085, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1085, "col_offset": 28, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 1092, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1092, "col_offset": 23, "nodeName": "word", "type": "Any"}, {"lineNumber": 1118, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1143, "col_offset": 49, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 1143, "col_offset": 53, "nodeName": "d", "type": "Any"}, {"lineNumber": 1143, "col_offset": 60, "nodeName": "d", "type": "Any"}, {"lineNumber": 1143, "col_offset": 65, "nodeName": "degens", "type": "Any"}, {"lineNumber": 1150, "col_offset": 42, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 1150, "col_offset": 46, "nodeName": "g", "type": "Any"}, {"lineNumber": 1150, "col_offset": 53, "nodeName": "g", "type": "Any"}, {"lineNumber": 1150, "col_offset": 58, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 1230, "col_offset": 17, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1233, "col_offset": 16, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1233, "col_offset": 28, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 1244, "col_offset": 35, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1292, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1292, "col_offset": 30, "nodeName": "gaps", "type": "Callable[[], Any]"}, {"lineNumber": 1315, "col_offset": 15, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1322, "col_offset": 15, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1366, "col_offset": 16, "nodeName": "expansions", "type": "List[Any]"}, {"lineNumber": 1372, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1378, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1378, "col_offset": 41, "nodeName": "nondegen_seq", "type": "Tuple[Any, ...]"}, {"lineNumber": 1478, "col_offset": 16, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 1478, "col_offset": 30, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 1480, "col_offset": 22, "nodeName": "SequenceError", "type": "Type[skbio.sequence._exception.SequenceError]"}, {"lineNumber": 1611, "col_offset": 45, "nodeName": "acceptable", "type": "str"}, {"lineNumber": 1611, "col_offset": 57, "nodeName": "min_length", "type": "Any"}, {"lineNumber": 1613, "col_offset": 58, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 1621, "col_offset": 31, "nodeName": "replace", "type": "Any"}, {"lineNumber": 1621, "col_offset": 48, "nodeName": "gap_char", "type": "Any"}, {"lineNumber": 1622, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1622, "col_offset": 23, "nodeName": "degapped", "type": "Any"}, {"lineNumber": 1623, "col_offset": 26, "nodeName": "hits", "type": "Any"}, {"lineNumber": 1711, "col_offset": 39, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1777, "col_offset": 39, "nodeName": "cls", "type": "Any"}, {"lineNumber": 121, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "size", "type": "Any"}, {"lineNumber": 334, "col_offset": 42, "nodeName": "_slices_from_iter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 334, "col_offset": 65, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 334, "col_offset": 78, "nodeName": "indexable", "type": "List[Any]"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 336, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 352, "col_offset": 31, "nodeName": "numbers", "type": "module"}, {"lineNumber": 352, "col_offset": 57, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 352, "col_offset": 68, "nodeName": "i", "type": "Any"}, {"lineNumber": 352, "col_offset": 71, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 354, "col_offset": 24, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 354, "col_offset": 30, "nodeName": "i", "type": "Any"}, {"lineNumber": 356, "col_offset": 24, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "i", "type": "Any"}, {"lineNumber": 359, "col_offset": 52, "nodeName": "i", "type": "Any"}, {"lineNumber": 542, "col_offset": 19, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 542, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 542, "col_offset": 51, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 781, "col_offset": 21, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 781, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 781, "col_offset": 34, "nodeName": "feature", "type": "str"}, {"lineNumber": 1029, "col_offset": 25, "nodeName": "i", "type": "Any"}, {"lineNumber": 1029, "col_offset": 27, "nodeName": "k", "type": "Any"}, {"lineNumber": 1118, "col_offset": 38, "nodeName": "groups", "type": "Any"}, {"lineNumber": 1119, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 1119, "col_offset": 35, "nodeName": "g", "type": "Any"}, {"lineNumber": 1119, "col_offset": 39, "nodeName": "end", "type": "Any"}, {"lineNumber": 1119, "col_offset": 49, "nodeName": "g", "type": "Any"}, {"lineNumber": 1119, "col_offset": 53, "nodeName": "group", "type": "Any"}, {"lineNumber": 1119, "col_offset": 65, "nodeName": "g", "type": "Any"}, {"lineNumber": 1134, "col_offset": 46, "nodeName": "bincount", "type": "Any"}, {"lineNumber": 1248, "col_offset": 50, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 1251, "col_offset": 30, "nodeName": "bad", "type": "List[Any]"}, {"lineNumber": 1292, "col_offset": 30, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1372, "col_offset": 20, "nodeName": "expansions", "type": "List[Any]"}, {"lineNumber": 1372, "col_offset": 38, "nodeName": "degen_chars", "type": "Any"}, {"lineNumber": 1374, "col_offset": 26, "nodeName": "SequenceError", "type": "Type[skbio.sequence._exception.SequenceError]"}, {"lineNumber": 1478, "col_offset": 45, "nodeName": "base", "type": "str"}, {"lineNumber": 1621, "col_offset": 31, "nodeName": "degapped", "type": "Any"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "quality", "type": "Any"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 334, "col_offset": 42, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 334, "col_offset": 65, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 336, "col_offset": 47, "nodeName": "_slices_from_iter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 336, "col_offset": 70, "nodeName": "quality", "type": "Any"}, {"lineNumber": 336, "col_offset": 84, "nodeName": "indexable", "type": "List[Any]"}, {"lineNumber": 356, "col_offset": 33, "nodeName": "i", "type": "Any"}, {"lineNumber": 782, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 782, "col_offset": 29, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 782, "col_offset": 35, "nodeName": "attr", "type": "str"}, {"lineNumber": 782, "col_offset": 42, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 782, "col_offset": 50, "nodeName": "other", "type": "Any"}, {"lineNumber": 782, "col_offset": 57, "nodeName": "attr", "type": "str"}, {"lineNumber": 1118, "col_offset": 38, "nodeName": "match", "type": "Any"}, {"lineNumber": 1119, "col_offset": 23, "nodeName": "match", "type": "Any"}, {"lineNumber": 1119, "col_offset": 39, "nodeName": "match", "type": "Any"}, {"lineNumber": 1119, "col_offset": 53, "nodeName": "match", "type": "Any"}, {"lineNumber": 1134, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 1135, "col_offset": 16, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 1136, "col_offset": 26, "nodeName": "_number_of_extended_ascii_codes", "type": "Any"}, {"lineNumber": 1248, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 1251, "col_offset": 53, "nodeName": "bad", "type": "List[Any]"}, {"lineNumber": 1372, "col_offset": 50, "nodeName": "char", "type": "str"}, {"lineNumber": 1375, "col_offset": 71, "nodeName": "char", "type": "str"}, {"lineNumber": 1482, "col_offset": 44, "nodeName": "base", "type": "str"}, {"lineNumber": 1482, "col_offset": 50, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 336, "col_offset": 47, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 336, "col_offset": 70, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 1135, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1135, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1135, "col_offset": 38, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 1135, "col_offset": 59, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 1136, "col_offset": 26, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1250, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1250, "col_offset": 41, "nodeName": "bad", "type": "List[Any]"}, {"lineNumber": 1251, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1251, "col_offset": 41, "nodeName": "bad", "type": "List[Any]"}, {"lineNumber": 1482, "col_offset": 50, "nodeName": "__class__", "type": "Type[NucleotideSequence]"}, {"lineNumber": 1135, "col_offset": 38, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1135, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 1247, "col_offset": 23, "nodeName": "where", "type": "Any"}, {"lineNumber": 1482, "col_offset": 50, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1247, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 1248, "col_offset": 16, "nodeName": "invalid_characters", "type": "Any"}]