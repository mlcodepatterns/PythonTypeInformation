[{"lineNumber": 26, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "_check_alignment", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "test_object_is_reusable", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "test_regression_on_instantiation_arguments", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "test_protein_sequence_is_usable", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "test_lowercase_is_valid_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "test_align_with_N_in_nucleotide_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "test_arg_match_score", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "test_arg_mismatch_score", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "test_arg_matrix_overrides_match_and_mismatch", "type": "Callable[[Any], Any]"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "test_arg_gap_open_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "test_arg_gap_extend_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "test_arg_score_only", "type": "Callable[[Any], Any]"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "test_arg_score_filter_is_used", "type": "Callable[[Any], Any]"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "test_arg_distance_filter_is_used", "type": "Callable[[Any], Any]"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "test_arg_override_skip_babp", "type": "Callable[[Any], Any]"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "test_arg_zero_index_changes_base_of_index_to_0_or_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "test_arg_suppress_sequences", "type": "Callable[[Any], Any]"}, {"lineNumber": 558, "col_offset": 36, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "_check_Alignment_to_AlignmentStructure", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "test_same_as_using_StripedSmithWaterman_object", "type": "Callable[[Any], Any]"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "test_kwargs_are_usable", "type": "Callable[[Any], Any]"}, {"lineNumber": 597, "col_offset": 29, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "mock_object_factory", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "test_works_for_dot_and_square_bracket_access", "type": "Callable[[Any], Any]"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "test_is_zero_based_returns_true_if_index_base_is_zero", "type": "Callable[[Any], Any]"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "test_set_zero_based_changes_the_index_base", "type": "Callable[[Any], Any]"}, {"lineNumber": 657, "col_offset": 4, "nodeName": "test__get_aligned_sequences", "type": "Callable[[Any], Any]"}, {"lineNumber": 723, "col_offset": 4, "nodeName": "test_aligned_query_target_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 731, "col_offset": 4, "nodeName": "test_aligned_query_target_sequence_with_suppressed_sequences", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "falsy_or_negative", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 738, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "attribute", "type": "str"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "align_attributes", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "iterable_kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "default_kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "default", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "query_sequence", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "query_sequences", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "query_sequence", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "query_sequences", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "expected_alignments", "type": "List[Dict[str, Union[int, str]]]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 344, "col_offset": 30, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 364, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 440, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 456, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 473, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 490, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 532, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, Union[int, str]], bool]]"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "align1", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "align1", "type": "Any"}, {"lineNumber": 600, "col_offset": 37, "nodeName": "AlignmentStructure", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "accessible", "type": "str"}, {"lineNumber": 610, "col_offset": 26, "nodeName": "align_attributes", "type": "List[str]"}, {"lineNumber": 629, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, str], bool]]"}, {"lineNumber": 650, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, str], bool]]"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "generic_sequence", "type": "str"}, {"lineNumber": 708, "col_offset": 12, "nodeName": "test", "type": "Dict[str, Union[List[Tuple[int, str]], int, str]]"}, {"lineNumber": 708, "col_offset": 20, "nodeName": "tests", "type": "List[Dict[str, Union[List[Tuple[int, str]], int, str]]]"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 739, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "default_kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "target_sequence", "type": "Any"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "target_sequences", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "target_sequence", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "target_sequences", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "result", "type": "nothing"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 45, "nodeName": "expected_alignments", "type": "List[Dict[str, Union[int, str]]]"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 213, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 213, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 234, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 251, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 268, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "_check_argument_with_inequality_on_optimal_align_score", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "_check_argument_with_inequality_on_optimal_align_score", "type": "Callable[..., Any]"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 325, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 326, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 326, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 345, "col_offset": 35, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "_check_argument_with_inequality_on_optimal_align_score", "type": "Callable[..., Any]"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 391, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 392, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 392, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "_check_argument_with_inequality_on_optimal_align_score", "type": "Callable[..., Any]"}, {"lineNumber": 427, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 429, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 430, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 430, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "_check_bit_flag_sets_properties_falsy_or_negative", "type": "Callable[..., Any]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "_check_bit_flag_sets_properties_falsy_or_negative", "type": "Callable[..., Any]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "_check_bit_flag_sets_properties_falsy_or_negative", "type": "Callable[..., Any]"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "_check_bit_flag_sets_properties_falsy_or_negative", "type": "Callable[..., Any]"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 532, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 551, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 554, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 555, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 555, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 560, "col_offset": 44, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 561, "col_offset": 44, "nodeName": "aligned_query_sequence", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 562, "col_offset": 44, "nodeName": "aligned_target_sequence", "type": "Any"}, {"lineNumber": 563, "col_offset": 11, "nodeName": "query_begin", "type": "Any"}, {"lineNumber": 578, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 578, "col_offset": 37, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 579, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 579, "col_offset": 23, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 580, "col_offset": 17, "nodeName": "local_pairwise_align_ssw", "type": "Any"}, {"lineNumber": 580, "col_offset": 42, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 581, "col_offset": 42, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "_check_Alignment_to_AlignmentStructure", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 582, "col_offset": 52, "nodeName": "align2", "type": "Any"}, {"lineNumber": 582, "col_offset": 60, "nodeName": "align1", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 590, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 590, "col_offset": 37, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 591, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 591, "col_offset": 23, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 592, "col_offset": 17, "nodeName": "local_pairwise_align_ssw", "type": "Any"}, {"lineNumber": 592, "col_offset": 42, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 593, "col_offset": 42, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "_check_Alignment_to_AlignmentStructure", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 594, "col_offset": 52, "nodeName": "align2", "type": "Any"}, {"lineNumber": 594, "col_offset": 60, "nodeName": "align1", "type": "Any"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "MockAlignmentStructure", "type": "Type[Any]"}, {"lineNumber": 608, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 608, "col_offset": 37, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 609, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 610, "col_offset": 26, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 629, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 629, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 632, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 650, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 650, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 653, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 709, "col_offset": 12, "nodeName": "mock_object", "type": "Any"}, {"lineNumber": 724, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 725, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 727, "col_offset": 25, "nodeName": "aligned_target_sequence", "type": "Any"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 729, "col_offset": 25, "nodeName": "aligned_query_sequence", "type": "Any"}, {"lineNumber": 732, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 734, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 735, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 735, "col_offset": 31, "nodeName": "aligned_target_sequence", "type": "Any"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 736, "col_offset": 31, "nodeName": "aligned_query_sequence", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "arg", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "i_range", "type": "Any"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "arg_settings", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "query", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "prop", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "properties_to_null", "type": "Any"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "result", "type": "nothing"}, {"lineNumber": 181, "col_offset": 42, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 196, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 212, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 232, "col_offset": 57, "nodeName": "blosum50", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 250, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 266, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 300, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 306, "col_offset": 23, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 323, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 325, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "query1", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "align1", "type": "Any"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "align2", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 366, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 372, "col_offset": 23, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 391, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 404, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 405, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 410, "col_offset": 23, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 427, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 429, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 442, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 443, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 458, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 459, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 475, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 476, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 492, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 493, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 533, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 535, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 536, "col_offset": 34, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 536, "col_offset": 45, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "self", "type": "TestAlignStripedSmithWaterman"}, {"lineNumber": 560, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 560, "col_offset": 44, "nodeName": "structure", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "self", "type": "TestAlignStripedSmithWaterman"}, {"lineNumber": 561, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 561, "col_offset": 44, "nodeName": "structure", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "self", "type": "TestAlignStripedSmithWaterman"}, {"lineNumber": 562, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 562, "col_offset": 44, "nodeName": "structure", "type": "Any"}, {"lineNumber": 563, "col_offset": 11, "nodeName": "structure", "type": "Any"}, {"lineNumber": 564, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 567, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "self", "type": "TestAlignStripedSmithWaterman"}, {"lineNumber": 590, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 593, "col_offset": 61, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "self", "type": "TestAlignStripedSmithWaterman"}, {"lineNumber": 602, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 602, "col_offset": 27, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 611, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 630, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 632, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 633, "col_offset": 29, "nodeName": "z", "type": "bool"}, {"lineNumber": 651, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 653, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 654, "col_offset": 12, "nodeName": "set_zero_based", "type": "Any"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 709, "col_offset": 26, "nodeName": "mock_object_factory", "type": "Callable[[Any], Any]"}, {"lineNumber": 717, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 727, "col_offset": 25, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 729, "col_offset": 25, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 735, "col_offset": 8, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 735, "col_offset": 31, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 736, "col_offset": 31, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "i", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "align1", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "align2", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "arg", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "setting", "type": "Any"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "setting", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "query_sequence", "type": "Any"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "query", "type": "Any"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "target_sequence", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 306, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 346, "col_offset": 25, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 346, "col_offset": 46, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "query1", "type": "Any"}, {"lineNumber": 347, "col_offset": 32, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 349, "col_offset": 46, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "query2", "type": "Any"}, {"lineNumber": 351, "col_offset": 32, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 353, "col_offset": 36, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 354, "col_offset": 36, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 370, "col_offset": 20, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 372, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 408, "col_offset": 20, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 410, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 533, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 534, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 535, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 560, "col_offset": 25, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 561, "col_offset": 29, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 562, "col_offset": 29, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 564, "col_offset": 12, "nodeName": "self", "type": "TestAlignStripedSmithWaterman"}, {"lineNumber": 564, "col_offset": 29, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 567, "col_offset": 20, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 572, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 572, "col_offset": 33, "nodeName": "start", "type": "Any"}, {"lineNumber": 572, "col_offset": 40, "nodeName": "expected_start", "type": "Any"}, {"lineNumber": 573, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 573, "col_offset": 33, "nodeName": "end", "type": "Any"}, {"lineNumber": 573, "col_offset": 38, "nodeName": "expected_end", "type": "Any"}, {"lineNumber": 611, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 611, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 611, "col_offset": 37, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 611, "col_offset": 48, "nodeName": "accessible", "type": "str"}, {"lineNumber": 612, "col_offset": 29, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 630, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 631, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 632, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 633, "col_offset": 32, "nodeName": "is_zero_based", "type": "Any"}, {"lineNumber": 651, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 652, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 653, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 654, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 654, "col_offset": 41, "nodeName": "z", "type": "bool"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 655, "col_offset": 33, "nodeName": "z", "type": "bool"}, {"lineNumber": 655, "col_offset": 36, "nodeName": "is_zero_based", "type": "Any"}, {"lineNumber": 709, "col_offset": 26, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 716, "col_offset": 16, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 717, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 717, "col_offset": 29, "nodeName": "test", "type": "Dict[str, Union[List[Tuple[int, str]], int, str]]"}, {"lineNumber": 718, "col_offset": 29, "nodeName": "_get_aligned_sequence", "type": "Any"}, {"lineNumber": 719, "col_offset": 33, "nodeName": "mock_object", "type": "Any"}, {"lineNumber": 719, "col_offset": 46, "nodeName": "generic_sequence", "type": "str"}, {"lineNumber": 721, "col_offset": 33, "nodeName": "end", "type": "int"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "iterable_kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 60, "col_offset": 50, "nodeName": "query_sequence", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "query1", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "target_sequence", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "query_sequence", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "query2", "type": "Any"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "target_sequence", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "i", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "default", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "i", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "default", "type": "Any"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "i", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "default", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 96, "col_offset": 63, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "p", "type": "str"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "align_attributes", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 350, "col_offset": 66, "nodeName": "matrix", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 353, "col_offset": 36, "nodeName": "align1", "type": "Any"}, {"lineNumber": 354, "col_offset": 36, "nodeName": "align2", "type": "Any"}, {"lineNumber": 564, "col_offset": 29, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 567, "col_offset": 20, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 568, "col_offset": 22, "nodeName": "query_begin", "type": "Any"}, {"lineNumber": 569, "col_offset": 22, "nodeName": "query_end", "type": "Any"}, {"lineNumber": 570, "col_offset": 22, "nodeName": "target_begin", "type": "Any"}, {"lineNumber": 571, "col_offset": 22, "nodeName": "target_end_optimal", "type": "Any"}, {"lineNumber": 572, "col_offset": 16, "nodeName": "self", "type": "TestAlignStripedSmithWaterman"}, {"lineNumber": 573, "col_offset": 16, "nodeName": "self", "type": "TestAlignStripedSmithWaterman"}, {"lineNumber": 603, "col_offset": 20, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 603, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 603, "col_offset": 34, "nodeName": "key", "type": "Any"}, {"lineNumber": 612, "col_offset": 39, "nodeName": "accessible", "type": "str"}, {"lineNumber": 633, "col_offset": 32, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 655, "col_offset": 36, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 715, "col_offset": 48, "nodeName": "test", "type": "Dict[str, Union[List[Tuple[int, str]], int, str]]"}, {"lineNumber": 718, "col_offset": 29, "nodeName": "AlignmentStructure", "type": "Any"}, {"lineNumber": 720, "col_offset": 33, "nodeName": "test", "type": "Dict[str, Union[List[Tuple[int, str]], int, str]]"}, {"lineNumber": 720, "col_offset": 55, "nodeName": "test", "type": "Dict[str, Union[List[Tuple[int, str]], int, str]]"}, {"lineNumber": 721, "col_offset": 38, "nodeName": "test", "type": "Dict[str, Union[List[Tuple[int, str]], int, str]]"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "attribute", "type": "str"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "attribute", "type": "str"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "arg", "type": "Any"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "iterable_kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 65, "col_offset": 52, "nodeName": "default_kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "compare_lt", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "compare_gt", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "prop", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "prop", "type": "Any"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "prop", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "arg", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "falsy_or_negative", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 54, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 99, "col_offset": 65, "nodeName": "prop", "type": "Any"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "p", "type": "str"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "properties_to_null", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "falsy_or_negative", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 55, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 103, "col_offset": 66, "nodeName": "prop", "type": "str"}, {"lineNumber": 568, "col_offset": 22, "nodeName": "structure", "type": "Any"}, {"lineNumber": 569, "col_offset": 22, "nodeName": "structure", "type": "Any"}, {"lineNumber": 570, "col_offset": 22, "nodeName": "structure", "type": "Any"}, {"lineNumber": 571, "col_offset": 22, "nodeName": "structure", "type": "Any"}, {"lineNumber": 603, "col_offset": 39, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 715, "col_offset": 18, "nodeName": "test", "type": "Dict[str, Union[List[Tuple[int, str]], int, str]]"}, {"lineNumber": 716, "col_offset": 21, "nodeName": "le", "type": "int"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "align1", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "align2", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "align1", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "align2", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "align1", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "align2", "type": "Any"}, {"lineNumber": 603, "col_offset": 50, "nodeName": "key", "type": "Any"}, {"lineNumber": 716, "col_offset": 27, "nodeName": "t", "type": "str"}, {"lineNumber": 716, "col_offset": 47, "nodeName": "le", "type": "int"}, {"lineNumber": 716, "col_offset": 51, "nodeName": "t", "type": "str"}, {"lineNumber": 716, "col_offset": 56, "nodeName": "test", "type": "Dict[str, Union[List[Tuple[int, str]], int, str]]"}]