[{"lineNumber": 24, "col_offset": 0, "nodeName": "_get_alpha_diversity_metrics", "type": "Callable[[], Any]"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "_validate_counts_vector", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 0, "nodeName": "_validate_counts_vectors", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 0, "nodeName": "_validate_otu_ids_and_tree", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 287, "col_offset": 0, "nodeName": "_vectorize_counts_and_tree", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "counts", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "results", "type": "Iterator[Any]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "distances", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "counts", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "lens", "type": "List[int]"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "suppress_cast", "type": "Union[Any, bool]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "counts", "type": "Any"}, {"lineNumber": 235, "col_offset": 18, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "len_otu_ids", "type": "int"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "set_otu_ids", "type": "Set[Any]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "branch_lengths", "type": "List[Any]"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "tip_names", "type": "List[Any]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "e", "type": "Any"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "set_tip_names", "type": "Set[Any]"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "missing_tip_names", "type": "Set[Any]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "tree_index", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "otu_ids", "type": "numpy.ndarray"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "counts", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "counts_by_node", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "branch_lengths", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "ace", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "chao1", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "chao1_ci", "type": "Any"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "berger_parker_d", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "brillouin_d", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "dominance", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "doubles", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "enspie", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "esty_ci", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "faith_pd", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "fisher_alpha", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "goods_coverage", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "heip_e", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "kempton_taylor_q", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "margalef", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "mcintosh_d", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "mcintosh_e", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "menhinick", "type": "Any"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "michaelis_menten_fit", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "observed_otus", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "osd", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "pielou_e", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "robbins", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "shannon", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "simpson", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "simpson_e", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "singles", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "strong", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "gini_index", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "lladser_pe", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "lladser_ci", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "_get_alpha_diversity_metrics", "type": "Callable[[], Any]"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "atleast_2d", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "counts", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "counts", "type": "Any"}, {"lineNumber": 114, "col_offset": 7, "nodeName": "metric", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "counts", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "counts_by_node", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "metric", "type": "functools.partial[nothing]"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "map", "type": "Callable"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "metric", "type": "Any"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "counts", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "Series", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "results", "type": "Iterator[Any]"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "counts", "type": "Any"}, {"lineNumber": 191, "col_offset": 7, "nodeName": "metric", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "_unweighted_unifrac_pdist_f", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "pdist", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "counts", "type": "Any"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "metric", "type": "Any"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "DistanceMatrix", "type": "Type[skbio.stats.distance._base.DistanceMatrix]"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "distances", "type": "Any"}, {"lineNumber": 206, "col_offset": 37, "nodeName": "ids", "type": "Any"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "counts", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "suppress_cast", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "counts", "type": "Any"}, {"lineNumber": 220, "col_offset": 7, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 234, "col_offset": 20, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "otu_ids", "type": "Any"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "otu_ids", "type": "Any"}, {"lineNumber": 250, "col_offset": 7, "nodeName": "len_otu_ids", "type": "int"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "len_otu_ids", "type": "int"}, {"lineNumber": 269, "col_offset": 13, "nodeName": "traverse", "type": "Any"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 274, "col_offset": 24, "nodeName": "tip_names", "type": "List[Any]"}, {"lineNumber": 277, "col_offset": 7, "nodeName": "any", "type": "Any"}, {"lineNumber": 280, "col_offset": 24, "nodeName": "set_otu_ids", "type": "Set[Any]"}, {"lineNumber": 280, "col_offset": 38, "nodeName": "set_tip_names", "type": "Set[Any]"}, {"lineNumber": 281, "col_offset": 7, "nodeName": "missing_tip_names", "type": "Set[Any]"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "to_array", "type": "Any"}, {"lineNumber": 291, "col_offset": 14, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "otu_ids", "type": "Any"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "atleast_2d", "type": "Any"}, {"lineNumber": 292, "col_offset": 27, "nodeName": "counts", "type": "Any"}, {"lineNumber": 293, "col_offset": 21, "nodeName": "_nodes_by_counts", "type": "Any"}, {"lineNumber": 293, "col_offset": 38, "nodeName": "counts", "type": "Any"}, {"lineNumber": 293, "col_offset": 46, "nodeName": "otu_ids", "type": "numpy.ndarray"}, {"lineNumber": 293, "col_offset": 55, "nodeName": "tree_index", "type": "Any"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "tree_index", "type": "Any"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "T", "type": "Any"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "tree_index", "type": "Any"}, {"lineNumber": 298, "col_offset": 41, "nodeName": "branch_lengths", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 7, "nodeName": "ids", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "counts_by_node", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "tree_index", "type": "Any"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "branch_lengths", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "_vectorize_counts_and_tree", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "counts", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "_faith_pd", "type": "Any"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "metric", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "metric", "type": "functools.partial[nothing]"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "ids", "type": "Any"}, {"lineNumber": 186, "col_offset": 7, "nodeName": "ids", "type": "Any"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "_unifrac", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "counts", "type": "Any"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "_", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "f", "type": "Any"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "counts", "type": "Any"}, {"lineNumber": 195, "col_offset": 9, "nodeName": "metric", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "normalized", "type": "Union[Any, bool]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "_weighted_unifrac_pdist_f", "type": "Any"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 220, "col_offset": 7, "nodeName": "counts", "type": "Any"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 222, "col_offset": 10, "nodeName": "any", "type": "Any"}, {"lineNumber": 234, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 238, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 239, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 250, "col_offset": 26, "nodeName": "set_otu_ids", "type": "Set[Any]"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 252, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "counts", "type": "Any"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 255, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "children", "type": "Any"}, {"lineNumber": 256, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 259, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "children", "type": "Any"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 269, "col_offset": 13, "nodeName": "tree", "type": "Any"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "is_tip", "type": "Any"}, {"lineNumber": 275, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "tip_names", "type": "List[Any]"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "set_tip_names", "type": "Set[Any]"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "DuplicateNodeError", "type": "Type[skbio.tree._exception.DuplicateNodeError]"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 281, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 282, "col_offset": 14, "nodeName": "MissingNodeError", "type": "Type[skbio.tree._exception.MissingNodeError]"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "tree", "type": "Any"}, {"lineNumber": 291, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "counts_by_node", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "ids", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 120, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "_faith_pd", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "branch_lengths", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "metric", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 186, "col_offset": 46, "nodeName": "ids", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "beta", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "_unifrac", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "counts", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "_", "type": "Any"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "f", "type": "Any"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "counts", "type": "Any"}, {"lineNumber": 200, "col_offset": 9, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "metric", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "metric", "type": "functools.partial[nothing]"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "_validate_counts_vector", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 47, "nodeName": "counts", "type": "Any"}, {"lineNumber": 236, "col_offset": 55, "nodeName": "suppress_cast", "type": "Union[Any, bool]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "lens", "type": "List[int]"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "counts", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "lens", "type": "List[int]"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "is_root", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 271, "col_offset": 34, "nodeName": "length", "type": "Any"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "e", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 273, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 277, "col_offset": 7, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "skbio", "type": "module"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "skbio", "type": "module"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "skbio", "type": "module"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "skbio", "type": "module"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "skbio", "type": "module"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "skbio", "type": "module"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "skbio", "type": "module"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "skbio", "type": "module"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "skbio", "type": "module"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "skbio", "type": "module"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "skbio", "type": "module"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "skbio", "type": "module"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "skbio", "type": "module"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "skbio", "type": "module"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "skbio", "type": "module"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "skbio", "type": "module"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "skbio", "type": "module"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "skbio", "type": "module"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "skbio", "type": "module"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "skbio", "type": "module"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "skbio", "type": "module"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "skbio", "type": "module"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "skbio", "type": "module"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "skbio", "type": "module"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "skbio", "type": "module"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "skbio", "type": "module"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "skbio", "type": "module"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "skbio", "type": "module"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "skbio", "type": "module"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "skbio", "type": "module"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "skbio", "type": "module"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 193, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "beta", "type": "Any"}, {"lineNumber": 199, "col_offset": 62, "nodeName": "normalized", "type": "Union[Any, bool]"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 222, "col_offset": 10, "nodeName": "counts", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "root", "type": "Any"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "root", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "branch_lengths", "type": "List[Any]"}, {"lineNumber": 271, "col_offset": 34, "nodeName": "e", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "tip_names", "type": "List[Any]"}, {"lineNumber": 273, "col_offset": 29, "nodeName": "e", "type": "Any"}, {"lineNumber": 277, "col_offset": 7, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 284, "col_offset": 42, "nodeName": "missing_tip_names", "type": "Set[Any]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 130, "col_offset": 58, "nodeName": "metric", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "skbio", "type": "module"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "diversity", "type": "Any"}, {"lineNumber": 198, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "tree", "type": "Any"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "tree", "type": "Any"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "l", "type": "Any"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "l", "type": "Any"}, {"lineNumber": 277, "col_offset": 36, "nodeName": "branch_lengths", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "skbio", "type": "module"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "skbio", "type": "module"}]