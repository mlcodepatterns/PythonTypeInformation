[{"lineNumber": 12, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 117, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "aln", "type": "skbio.core.alignment.alignment.Alignment"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "GF", "type": "collections.OrderedDict[str, Union[str, int]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "GS", "type": "collections.OrderedDict[str, Dict[str, int]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "GC", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "Alignment", "type": "Type[skbio.core.alignment.alignment.Alignment]"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "seqs", "type": "List[skbio.core.sequence.DNASequence]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "Stockholm", "type": "Type[skbio.format.stockholm.`namedtuple-Stockholm-aln-GF-GS-GR-GC`]"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "stockholm_from_alignment", "type": "Callable[[Any], str]"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "st", "type": "skbio.format.stockholm.`namedtuple-Stockholm-aln-GF-GS-GR-GC`"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "Stockholm", "type": "Type[skbio.format.stockholm.`namedtuple-Stockholm-aln-GF-GS-GR-GC`]"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "stockholm_from_alignment", "type": "Callable[[Any], str]"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "st", "type": "skbio.format.stockholm.`namedtuple-Stockholm-aln-GF-GS-GR-GC`"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "Stockholm", "type": "Type[skbio.format.stockholm.`namedtuple-Stockholm-aln-GF-GS-GR-GC`]"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "stockholm_from_alignment", "type": "Callable[[Any], str]"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "st", "type": "skbio.format.stockholm.`namedtuple-Stockholm-aln-GF-GS-GR-GC`"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "Stockholm", "type": "Type[skbio.format.stockholm.`namedtuple-Stockholm-aln-GF-GS-GR-GC`]"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "stockholm_from_alignment", "type": "Callable[[Any], str]"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "st", "type": "skbio.format.stockholm.`namedtuple-Stockholm-aln-GF-GS-GR-GC`"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "Stockholm", "type": "Type[skbio.format.stockholm.`namedtuple-Stockholm-aln-GF-GS-GR-GC`]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "stockholm_from_alignment", "type": "Callable[[Any], str]"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "st", "type": "skbio.format.stockholm.`namedtuple-Stockholm-aln-GF-GS-GR-GC`"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "Stockholm", "type": "Type[skbio.format.stockholm.`namedtuple-Stockholm-aln-GF-GS-GR-GC`]"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "stockholm_from_alignment", "type": "Callable[[Any], str]"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "st", "type": "skbio.format.stockholm.`namedtuple-Stockholm-aln-GF-GS-GR-GC`"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "Stockholm", "type": "Type[skbio.format.stockholm.`namedtuple-Stockholm-aln-GF-GS-GR-GC`]"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "stockholm_from_alignment", "type": "Callable[[Any], str]"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "st", "type": "skbio.format.stockholm.`namedtuple-Stockholm-aln-GF-GS-GR-GC`"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "aln", "type": "skbio.core.alignment.alignment.Alignment"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "GC", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 31, "col_offset": 52, "nodeName": "GF", "type": "collections.OrderedDict[str, Union[str, int]]"}, {"lineNumber": 31, "col_offset": 64, "nodeName": "GS", "type": "collections.OrderedDict[str, Dict[str, int]]"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "GR", "type": "collections.OrderedDict[str, Dict[str, str]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "aln", "type": "skbio.core.alignment.alignment.Alignment"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "GC", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "aln", "type": "skbio.core.alignment.alignment.Alignment"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "GF", "type": "collections.OrderedDict[str, Union[str, int]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "aln", "type": "skbio.core.alignment.alignment.Alignment"}, {"lineNumber": 65, "col_offset": 58, "nodeName": "GS", "type": "collections.OrderedDict[str, Dict[str, int]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "aln", "type": "skbio.core.alignment.alignment.Alignment"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "GR", "type": "collections.OrderedDict[str, Dict[str, str]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "aln", "type": "skbio.core.alignment.alignment.Alignment"}, {"lineNumber": 93, "col_offset": 49, "nodeName": "GF", "type": "collections.OrderedDict[str, Union[int, List[str], str]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "aln", "type": "skbio.core.alignment.alignment.Alignment"}, {"lineNumber": 108, "col_offset": 49, "nodeName": "GF", "type": "collections.OrderedDict[str, List[str]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 31, "col_offset": 52, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 31, "col_offset": 64, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 65, "col_offset": 58, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "self", "type": "StockholmTests"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "self", "type": "StockholmTests"}]