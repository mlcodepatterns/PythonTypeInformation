[{"lineNumber": 16, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_add_line", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "test_add_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_add_separator", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 47, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "ElasticLines", "type": "Type[skbio.sequence._base.ElasticLines]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "add_line", "type": "Callable[[Any], None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "ElasticLines", "type": "Type[skbio.sequence._base.ElasticLines]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "add_lines", "type": "Callable[[Any], None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "add_separator", "type": "Callable[[], None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "add_line", "type": "Callable[[Any], None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "add_separator", "type": "Callable[[], None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "add_lines", "type": "Callable[[Any], None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "add_separator", "type": "Callable[[], None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "to_str", "type": "Callable[[], str]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "to_str", "type": "Callable[[], str]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "to_str", "type": "Callable[[], str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "to_str", "type": "Callable[[], str]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "to_str", "type": "Callable[[], str]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "to_str", "type": "Callable[[], str]"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "el", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "self", "type": "TestElasticLines"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "self", "type": "TestElasticLines"}]