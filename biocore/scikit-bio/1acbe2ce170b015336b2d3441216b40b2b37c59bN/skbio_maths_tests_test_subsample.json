[{"lineNumber": 19, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 83, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "actual", "type": "Dict[Tuple[Any, ...], None]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "actual", "type": "Dict[Tuple[Any, ...], None]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "actual", "type": "Dict[Tuple[Any, ...], None]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 26, "col_offset": 49, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 27, "col_offset": 49, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "actual", "type": "Dict[Tuple[Any, ...], None]"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "subsample", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "actual", "type": "Dict[Tuple[Any, ...], None]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "subsample", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 42, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "subsample", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "subsample", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 49, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "subsample", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "actual", "type": "Dict[Tuple[Any, ...], None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "SubsampleTests"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "SubsampleTests"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "subsample", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "actual", "type": "Dict[Tuple[Any, ...], None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "SubsampleTests"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "subsample", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "actual", "type": "Dict[Tuple[Any, ...], None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "SubsampleTests"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "subsample", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "subsample", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "obs", "type": "Any"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "obs", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "SubsampleTests"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "actual", "type": "Dict[Tuple[Any, ...], None]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "self", "type": "SubsampleTests"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "self", "type": "SubsampleTests"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "obs", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "np", "type": "module"}]