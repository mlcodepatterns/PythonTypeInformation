[{"lineNumber": 23, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 109, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "den", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "num", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "den", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 61, "nodeName": "exp", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "observed_species", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "observed_species", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "observed_species", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "brillouin_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "simpson_reciprocal", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "mcintosh_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "mcintosh_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "osd", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "simpson", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "simpson", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 60, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 70, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "arr", "type": "numpy.ndarray"}]