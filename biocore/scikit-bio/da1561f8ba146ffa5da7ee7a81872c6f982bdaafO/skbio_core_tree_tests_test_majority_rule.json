[{"lineNumber": 20, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 159, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "inner", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "inner", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "obs", "type": "Dict[Any, Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "obs", "type": "Dict[Any, Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "tree", "type": "skbio.core.tree.tree.TreeNode"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "majority_rule", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 65, "nodeName": "exp", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "obs", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "support", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "support", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "support", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "children", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "support", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "support", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "support", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "majority_rule", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 65, "nodeName": "exp", "type": "str"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "obs", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "support", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "support", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "support", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "children", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "support", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "support", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "support", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "obs_clades", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "obs_lengths", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "_walk_clades", "type": "Callable[[Any, Any], Tuple[List[Tuple[Any, Any]], collections.defaultdict[Any, Any]]]"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "obs_lengths", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "exp_lengths_nolength", "type": "Dict[FrozenSet[str], None]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "obs_clades", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "obs_lengths", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "_walk_clades", "type": "Callable[[Any, Any], Tuple[List[Tuple[Any, Any]], collections.defaultdict[Any, Any]]]"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "obs_lengths", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "exp_lengths", "type": "Dict[FrozenSet[str], float]"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "_filter_clades", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "clade_counts", "type": "List[Tuple[FrozenSet[str], int]]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "obs", "type": "Dict[Any, Any]"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "exp", "type": "Dict[FrozenSet[str], int]"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "_filter_clades", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "clade_counts", "type": "List[Tuple[FrozenSet[str], int]]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "obs", "type": "Dict[Any, Any]"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "exp", "type": "Dict[FrozenSet[str], int]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "foo", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "foo", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "foo", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "to_newick", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "obs", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "to_newick", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "obs", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "majority_rule", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "from_newick", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 106, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "obs_clades", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "exp_clades", "type": "List[Tuple[FrozenSet[str], float]]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "traverse", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "length", "type": "float"}, {"lineNumber": 114, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "obs_clades", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 116, "col_offset": 46, "nodeName": "exp_clades", "type": "List[Tuple[FrozenSet[str], float]]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "_build_trees", "type": "Callable[[Any, Any, Any], List[skbio.core.tree.tree.TreeNode]]"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "clade_counts", "type": "Dict[FrozenSet[str], int]"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "edge_lengths", "type": "Dict[FrozenSet[str], int]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "tree", "type": "skbio.core.tree.tree.TreeNode"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "children", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "children", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "self", "type": "MajorityRuleTests"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "TreeNode", "type": "Type[skbio.core.tree.tree.TreeNode]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 106, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 62, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 106, "col_offset": 66, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "t", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 114, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 62, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 66, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "children", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "children", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "children", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "children", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "tree", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "inner", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "inner", "type": "Any"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "ones", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "tree", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "inner", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "inner", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "tree", "type": "skbio.core.tree.tree.TreeNode"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "tree", "type": "skbio.core.tree.tree.TreeNode"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "tree", "type": "skbio.core.tree.tree.TreeNode"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "tree", "type": "skbio.core.tree.tree.TreeNode"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "children", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 55, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "children", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "tree", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "tree", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "inner", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "tree", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "tree", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "inner", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "tree", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "tree", "type": "Any"}]