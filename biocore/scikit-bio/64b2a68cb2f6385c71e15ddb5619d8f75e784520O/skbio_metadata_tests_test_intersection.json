[{"lineNumber": 19, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "test_left", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "test_toomany", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_right", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_upstream", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "test_downstream", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test_n", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "test_count", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "test_max_dist", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "test_find", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "test_find", "type": "Callable[[Any], Any]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "test_traverse", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "test_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "test_public_interval", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "test_update", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 219, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "iv", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "iv", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "u", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "upstreams", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "u", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "upstreams", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "u", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "upstreams", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "downstreams", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "downstreams", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "max", "type": "int"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "iv", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "l", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "u", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "u", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "t", "type": "int"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "iv", "type": "Any"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "iv", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "nintervals", "type": "int"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "a", "type": "List[nothing]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "fn", "type": "Callable"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "append", "type": "Callable"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "IntervalNode", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "iv", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "NeighborTestCase"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "self", "type": "NeighborTestCase"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "self", "type": "NeighborTestCase"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "self", "type": "NeighborTestCase"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "start", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "IntervalTree", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "add_interval", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "UpDownStreamTestCase"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "self", "type": "UpDownStreamTestCase"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "upstream_of_interval", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "upstream_of_interval", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "upstream_of_interval", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "self", "type": "UpDownStreamTestCase"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "downstream_of_interval", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "downstream_of_interval", "type": "Any"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "self", "type": "UpDownStreamTestCase"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "IntervalNode", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "LotsaTestCase"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "max", "type": "int"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "iv", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "iv", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "LotsaTestCase"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "self", "type": "LotsaTestCase"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "right", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "left", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "right", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "right", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "self", "type": "LotsaTestCase"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "right", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "d", "type": "int"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "self", "type": "LotsaTestCase"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "start", "type": "int"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "end", "type": "int"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "results", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "feat", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "results", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "IntervalTree", "type": "Any"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "find", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "a", "type": "List[nothing]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "traverse", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "fn", "type": "Callable"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "nintervals", "type": "int"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "IntervalTree", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "traverse", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "insert", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "start", "type": "Any"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "end", "type": "Any"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "f", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "NeighborTestCase"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "left", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "end", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "NeighborTestCase"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "NeighborTestCase"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "right", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "right", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "start", "type": "Any"}, {"lineNumber": 58, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "add_interval", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "f", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "iv", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "iv", "type": "Any"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "iv", "type": "Any"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "iv", "type": "Any"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "iv", "type": "Any"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "after", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "start", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "start", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "after_interval", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "start", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "start", "type": "Any"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "self", "type": "LotsaTestCase"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "insert", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "start", "type": "Any"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "end", "type": "Any"}, {"lineNumber": 123, "col_offset": 43, "nodeName": "f", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "insert", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "iv", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "LotsaTestCase"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "r", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "iv", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "LotsaTestCase"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "l", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "iv", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "LotsaTestCase"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "u", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "iv", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "LotsaTestCase"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "u", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "iv", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "LotsaTestCase"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "r", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "right", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "sys", "type": "module"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "sys", "type": "module"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "start", "type": "int"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "find", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "start", "type": "int"}, {"lineNumber": 162, "col_offset": 37, "nodeName": "end", "type": "int"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "insert", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "insert_interval", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "add_interval", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "iv", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "r", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "a", "type": "List[nothing]"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "find", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "after", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "before", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "after_interval", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "before_interval", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "upstream_of_interval", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "downstream_of_interval", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "traverse", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "iv", "type": "Any"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 215, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 215, "col_offset": 51, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 216, "col_offset": 43, "nodeName": "find", "type": "Any"}, {"lineNumber": 216, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "iv", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "f", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "left", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "iv", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "NeighborTestCase"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "left", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "left", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "iv", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "b10", "type": "int"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "r", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "r", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "NeighborTestCase"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "get_right_start", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "iv", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "NeighborTestCase"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "iv", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "UpDownStreamTestCase"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "end", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "UpDownStreamTestCase"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "start", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "UpDownStreamTestCase"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "start", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "UpDownStreamTestCase"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "start", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "UpDownStreamTestCase"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "start", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "iv", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "UpDownStreamTestCase"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "UpDownStreamTestCase"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "iv", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 110, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "UpDownStreamTestCase"}, {"lineNumber": 112, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "UpDownStreamTestCase"}, {"lineNumber": 113, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "iv", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "f", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "iv", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "iv", "type": "Any"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "d", "type": "int"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "self", "type": "LotsaTestCase"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "r", "type": "Any"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "random", "type": "module"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "max", "type": "int"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "iv", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "iv", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "iv", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 176, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "iv", "type": "Any"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "iv", "type": "Any"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "iv", "type": "Any"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "iv", "type": "Any"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "iv", "type": "Any"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "iv", "type": "Any"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "iv", "type": "Any"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "iv", "type": "Any"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "iv", "type": "Any"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "iv", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 54, "nodeName": "interval", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 216, "col_offset": 43, "nodeName": "iv", "type": "Any"}, {"lineNumber": 216, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "iv", "type": "Any"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 33, "col_offset": 51, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "r", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "iv", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "iv", "type": "Any"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "IntervalObj", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "r", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "u", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "u", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "u", "type": "Any"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "d", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "d", "type": "Any"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "r", "type": "Any"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "r", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "r", "type": "Any"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "r", "type": "Any"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "self", "type": "LotsaTestCase"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "random", "type": "module"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "self", "type": "LotsaTestCase"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 179, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 181, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 208, "col_offset": 53, "nodeName": "append", "type": "Any"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 211, "col_offset": 54, "nodeName": "ival", "type": "Any"}, {"lineNumber": 215, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 215, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 216, "col_offset": 43, "nodeName": "self", "type": "IntervalTreeTest"}, {"lineNumber": 174, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 174, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 176, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 180, "col_offset": 49, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 182, "col_offset": 46, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 208, "col_offset": 53, "nodeName": "x", "type": "Any"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "end", "type": "Any"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "start", "type": "int"}, {"lineNumber": 165, "col_offset": 47, "nodeName": "end", "type": "Any"}, {"lineNumber": 165, "col_offset": 59, "nodeName": "end", "type": "int"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "start", "type": "Any"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "end", "type": "int"}, {"lineNumber": 166, "col_offset": 47, "nodeName": "start", "type": "Any"}, {"lineNumber": 166, "col_offset": 61, "nodeName": "start", "type": "int"}, {"lineNumber": 176, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "feat", "type": "Any"}, {"lineNumber": 165, "col_offset": 47, "nodeName": "feat", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "feat", "type": "Any"}, {"lineNumber": 166, "col_offset": 47, "nodeName": "feat", "type": "Any"}, {"lineNumber": 180, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 182, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 180, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 180, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 182, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 182, "col_offset": 62, "nodeName": "i", "type": "int"}]