[{"lineNumber": 24, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 268, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "n1_called", "type": "bool"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "n2_called", "type": "bool"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "new", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "SomethingToInterpolate", "type": "Type[Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "subclass_registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "dirs_to_remove", "type": "List[str]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "element", "type": "nothing"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "dirs_to_remove", "type": "List[str]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "id_", "type": "bytes"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "exp", "type": "str"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "fd", "type": "io.BytesIO"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "test_fds", "type": "List[IO[bytes]]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "test_filepaths", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "extra_file", "type": "str"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "name", "type": "str"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "tmp_dir_path", "type": "str"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "tmp_dir_path2", "type": "str"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "tmp_dir_path3", "type": "str"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "dirs_to_remove", "type": "List[str]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "empty", "type": "Union[List[nothing], Tuple[()], str, Set[nothing], Dict[nothing, nothing], Generator[nothing, Any, nothing]]"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "MiniRegistry", "type": "Type[skbio.util._misc.MiniRegistry]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "n1_called", "type": "bool"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "n2_called", "type": "bool"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "some_registration1", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "some_registration2", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "n1_called", "type": "bool"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "n2_called", "type": "bool"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "new", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "new", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "new", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "interpolate", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "SomethingToInterpolate", "type": "Type[Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "interpolate", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "Subclass", "type": "Type[Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "safe_md5", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "fd", "type": "io.BytesIO"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "exp", "type": "str"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "name", "type": "str"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "remove_files", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "test_filepaths", "type": "List[str]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "OSError", "type": "Type[OSError]"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "remove_files", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 49, "nodeName": "test_filepaths", "type": "List[str]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "extra_file", "type": "str"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "remove_files", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "test_filepaths", "type": "List[str]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "OSError", "type": "Type[OSError]"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "remove_files", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 49, "nodeName": "test_filepaths", "type": "List[str]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "remove_files", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "test_filepaths", "type": "List[str]"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 195, "col_offset": 32, "nodeName": "tmp_dir_path", "type": "str"}, {"lineNumber": 195, "col_offset": 46, "nodeName": "tmp_dir_path2", "type": "str"}, {"lineNumber": 195, "col_offset": 61, "nodeName": "tmp_dir_path3", "type": "str"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "OSError", "type": "Type[OSError]"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "create_dir", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "tmp_dir_path", "type": "str"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 14, "nodeName": "_handle_error_codes", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "obs", "type": "List[str]"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "exp", "type": "List[str]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "e", "type": "Union[str, int, float]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "subclass_registry", "type": "skbio.util._misc.MiniRegistry"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "interpolate_me", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "dont_interpolate_me", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "interpolate_me", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "dont_interpolate_me", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "element", "type": "nothing"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "is_casava_v180_or_later", "type": "Callable[[Any], bool]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "is_casava_v180_or_later", "type": "Callable[[Any], bool]"}, {"lineNumber": 145, "col_offset": 48, "nodeName": "id_", "type": "bytes"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "is_casava_v180_or_later", "type": "Callable[[Any], bool]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "hexdigest", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "fd", "type": "io.BytesIO"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 161, "col_offset": 57, "nodeName": "i", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "element", "type": "IO[bytes]"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "element", "type": "IO[bytes]"}, {"lineNumber": 162, "col_offset": 54, "nodeName": "test_fds", "type": "List[IO[bytes]]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "test_filepaths", "type": "List[str]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "extra_file", "type": "str"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "create_dir", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "tmp_dir_path", "type": "str"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "create_dir", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 36, "nodeName": "tmp_dir_path", "type": "str"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "create_dir", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 36, "nodeName": "tmp_dir_path2", "type": "str"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "create_dir", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 36, "nodeName": "tmp_dir_path3", "type": "str"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "flatten", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 215, "col_offset": 54, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "flatten", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "cardinal_to_ordinal", "type": "Callable[[Any], str]"}, {"lineNumber": 227, "col_offset": 35, "nodeName": "n", "type": "Any"}, {"lineNumber": 227, "col_offset": 42, "nodeName": "n", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "CardinalToOrdinalTests"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 232, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "cardinal_to_ordinal", "type": "Callable[[Any], str]"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 242, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 242, "col_offset": 44, "nodeName": "empty_gen", "type": "Callable[[], Any]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "TestFindDuplicates"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "find_duplicates", "type": "Callable[[Any], Set[Any]]"}, {"lineNumber": 246, "col_offset": 67, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "TestFindDuplicates"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "find_duplicates", "type": "Callable[[Any], Set[Any]]"}, {"lineNumber": 249, "col_offset": 67, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "TestFindDuplicates"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "find_duplicates", "type": "Callable[[Any], Set[Any]]"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestFindDuplicates"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "find_duplicates", "type": "Callable[[Any], Set[Any]]"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "TestFindDuplicates"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "find_duplicates", "type": "Callable[[Any], Set[Any]]"}, {"lineNumber": 265, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestMiniRegistry"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "SomethingToInterpolate", "type": "Type[Any]"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "SomethingToInterpolate", "type": "Type[Any]"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "Subclass", "type": "Type[Any]"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "Subclass", "type": "Type[Any]"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "self", "type": "MiscTests"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 161, "col_offset": 62, "nodeName": "range", "type": "Any"}, {"lineNumber": 192, "col_offset": 44, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 193, "col_offset": 44, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "self", "type": "CardinalToOrdinalTests"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "self", "type": "TestFindDuplicates"}, {"lineNumber": 243, "col_offset": 29, "nodeName": "find_duplicates", "type": "Callable[[Any], Set[Any]]"}, {"lineNumber": 243, "col_offset": 45, "nodeName": "empty", "type": "Union[Generator[nothing, Any, nothing], str, Set[nothing], List[nothing], Dict[nothing, nothing], Tuple[()]]"}, {"lineNumber": 243, "col_offset": 53, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "e", "type": "Union[float, int, str]"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "gen", "type": "Callable[[], Any]"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "range", "type": "Any"}]