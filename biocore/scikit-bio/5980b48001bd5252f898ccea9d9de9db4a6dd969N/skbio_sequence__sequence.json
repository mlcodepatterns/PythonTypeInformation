[{"lineNumber": 27, "col_offset": 15, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "SkbioObject", "type": "Type[skbio._base.SkbioObject]"}, {"lineNumber": 1037, "col_offset": 0, "nodeName": "_number_of_extended_ascii_codes", "type": "int"}, {"lineNumber": 1038, "col_offset": 0, "nodeName": "_ascii_lowercase_boundary", "type": "int"}, {"lineNumber": 1658, "col_offset": 14, "nodeName": "IUPACSequence", "type": "Type[IUPACSequence]"}, {"lineNumber": 1713, "col_offset": 10, "nodeName": "NucleotideSequence", "type": "Type[NucleotideSequence]"}, {"lineNumber": 1791, "col_offset": 10, "nodeName": "NucleotideSequence", "type": "Type[NucleotideSequence]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "collections", "type": "module"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "default_write_format", "type": "str"}, {"lineNumber": 1040, "col_offset": 20, "nodeName": "with_metaclass", "type": "Any"}, {"lineNumber": 1040, "col_offset": 35, "nodeName": "ABCMeta", "type": "Type[abc.ABCMeta]"}, {"lineNumber": 1040, "col_offset": 44, "nodeName": "Sequence", "type": "Type[Sequence]"}, {"lineNumber": 1413, "col_offset": 25, "nodeName": "with_metaclass", "type": "Any"}, {"lineNumber": 1413, "col_offset": 40, "nodeName": "ABCMeta", "type": "Type[abc.ABCMeta]"}, {"lineNumber": 1413, "col_offset": 49, "nodeName": "IUPACSequence", "type": "Type[IUPACSequence]"}, {"lineNumber": 1599, "col_offset": 4, "nodeName": "rc", "type": "Callable[[Any], Any]"}, {"lineNumber": 1599, "col_offset": 9, "nodeName": "reverse_complement", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_id", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "id", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_description", "type": "Any"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "description", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "first_ten", "type": "Union[Any, str]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "cn", "type": "Any"}, {"lineNumber": 379, "col_offset": 13, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "length", "type": "int"}, {"lineNumber": 439, "col_offset": 15, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "_sequence", "type": "Any"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "_id", "type": "Any"}, {"lineNumber": 478, "col_offset": 15, "nodeName": "_description", "type": "Any"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "_quality", "type": "Any"}, {"lineNumber": 903, "col_offset": 8, "nodeName": "sequence_length", "type": "int"}, {"lineNumber": 905, "col_offset": 11, "nodeName": "overlapping", "type": "Any"}, {"lineNumber": 910, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 938, "col_offset": 8, "nodeName": "k_words", "type": "Generator[Any, Any, None]"}, {"lineNumber": 966, "col_offset": 11, "nodeName": "overlapping", "type": "Any"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "result", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "k_word_counts", "type": "Counter[nothing]"}, {"lineNumber": 975, "col_offset": 15, "nodeName": "result", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 1008, "col_offset": 8, "nodeName": "_quality", "type": "Any"}, {"lineNumber": 1008, "col_offset": 24, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1030, "col_offset": 8, "nodeName": "start", "type": "int"}, {"lineNumber": 1032, "col_offset": 12, "nodeName": "match", "type": "Any"}, {"lineNumber": 1120, "col_offset": 8, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 1120, "col_offset": 25, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 1121, "col_offset": 8, "nodeName": "_id", "type": "Any"}, {"lineNumber": 1121, "col_offset": 19, "nodeName": "id", "type": "Any"}, {"lineNumber": 1122, "col_offset": 8, "nodeName": "_description", "type": "Any"}, {"lineNumber": 1122, "col_offset": 28, "nodeName": "description", "type": "Any"}, {"lineNumber": 1130, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 1134, "col_offset": 8, "nodeName": "is_ndarray", "type": "bool"}, {"lineNumber": 1135, "col_offset": 11, "nodeName": "is_ndarray", "type": "bool"}, {"lineNumber": 1149, "col_offset": 11, "nodeName": "validate", "type": "Any"}, {"lineNumber": 1175, "col_offset": 8, "nodeName": "writeable", "type": "bool"}, {"lineNumber": 1177, "col_offset": 8, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 1177, "col_offset": 22, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 1178, "col_offset": 8, "nodeName": "_chars", "type": "Any"}, {"lineNumber": 1213, "col_offset": 8, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 1213, "col_offset": 15, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 1214, "col_offset": 8, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 1261, "col_offset": 8, "nodeName": "degapped_to_gapped", "type": "List[int]"}, {"lineNumber": 1262, "col_offset": 8, "nodeName": "gapped_to_degapped", "type": "List[Optional[int]]"}, {"lineNumber": 1263, "col_offset": 8, "nodeName": "non_gap_count", "type": "int"}, {"lineNumber": 1352, "col_offset": 12, "nodeName": "e", "type": "Any"}, {"lineNumber": 1352, "col_offset": 17, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1391, "col_offset": 8, "nodeName": "degen_chars", "type": "Any"}, {"lineNumber": 1391, "col_offset": 22, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 1395, "col_offset": 8, "nodeName": "expansions", "type": "List[Any]"}, {"lineNumber": 1396, "col_offset": 12, "nodeName": "char", "type": "Any"}, {"lineNumber": 1396, "col_offset": 20, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1409, "col_offset": 8, "nodeName": "result", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 1503, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 1504, "col_offset": 8, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 1504, "col_offset": 25, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 1505, "col_offset": 8, "nodeName": "seq_iterator", "type": "Union[reversed[Any], NucleotideSequence]"}, {"lineNumber": 1506, "col_offset": 12, "nodeName": "base", "type": "Any"}, {"lineNumber": 1506, "col_offset": 20, "nodeName": "seq_iterator", "type": "Union[reversed[Any], NucleotideSequence]"}, {"lineNumber": 1514, "col_offset": 8, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1514, "col_offset": 18, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1635, "col_offset": 8, "nodeName": "gaps", "type": "str"}, {"lineNumber": 1636, "col_offset": 8, "nodeName": "acceptable", "type": "str"}, {"lineNumber": 1645, "col_offset": 8, "nodeName": "pat", "type": "Pattern[str]"}, {"lineNumber": 1647, "col_offset": 12, "nodeName": "hits", "type": "Any"}, {"lineNumber": 1702, "col_offset": 8, "nodeName": "degen_map_lower", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1703, "col_offset": 12, "nodeName": "degen_char", "type": "str"}, {"lineNumber": 1703, "col_offset": 26, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1710, "col_offset": 15, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1752, "col_offset": 15, "nodeName": "comp_map", "type": "Dict[Union[str, Any], Union[str, Any]]"}, {"lineNumber": 1783, "col_offset": 12, "nodeName": "degen_char", "type": "str"}, {"lineNumber": 1788, "col_offset": 15, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1824, "col_offset": 15, "nodeName": "comp_map", "type": "Dict[Union[str, Any], Union[str, Any]]"}, {"lineNumber": 1855, "col_offset": 12, "nodeName": "degen_char", "type": "str"}, {"lineNumber": 1860, "col_offset": 15, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "sequence", "type": "str"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_set_quality", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "quality", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "other", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "equals", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "copy", "type": "Callable[..., Any]"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 379, "col_offset": 13, "nodeName": "__class__", "type": "Type[Sequence]"}, {"lineNumber": 380, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 380, "col_offset": 21, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 381, "col_offset": 11, "nodeName": "length", "type": "int"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "ellipses", "type": "str"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "ellipses", "type": "str"}, {"lineNumber": 408, "col_offset": 15, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 408, "col_offset": 24, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 439, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 478, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 511, "col_offset": 15, "nodeName": "quality", "type": "Any"}, {"lineNumber": 587, "col_offset": 24, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 588, "col_offset": 18, "nodeName": "id", "type": "Any"}, {"lineNumber": 589, "col_offset": 27, "nodeName": "description", "type": "Any"}, {"lineNumber": 590, "col_offset": 23, "nodeName": "quality", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 592, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 593, "col_offset": 15, "nodeName": "__class__", "type": "Type[Sequence]"}, {"lineNumber": 667, "col_offset": 11, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 668, "col_offset": 12, "nodeName": "ignore", "type": "Dict[nothing, nothing]"}, {"lineNumber": 713, "col_offset": 15, "nodeName": "count", "type": "Union[Any, Callable[..., int]]"}, {"lineNumber": 713, "col_offset": 36, "nodeName": "subsequence", "type": "Any"}, {"lineNumber": 761, "col_offset": 11, "nodeName": "distance_fn", "type": "Any"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "distance_fn", "type": "Any"}, {"lineNumber": 762, "col_offset": 26, "nodeName": "hamming", "type": "Any"}, {"lineNumber": 763, "col_offset": 15, "nodeName": "distance_fn", "type": "Any"}, {"lineNumber": 763, "col_offset": 27, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 763, "col_offset": 33, "nodeName": "other", "type": "Any"}, {"lineNumber": 807, "col_offset": 15, "nodeName": "distance", "type": "Callable[..., Any]"}, {"lineNumber": 807, "col_offset": 29, "nodeName": "other", "type": "Any"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "k", "type": "Any"}, {"lineNumber": 903, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 903, "col_offset": 30, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 906, "col_offset": 12, "nodeName": "step", "type": "int"}, {"lineNumber": 908, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 908, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 910, "col_offset": 17, "nodeName": "range", "type": "Any"}, {"lineNumber": 910, "col_offset": 51, "nodeName": "step", "type": "Union[int, Any]"}, {"lineNumber": 938, "col_offset": 18, "nodeName": "k_words", "type": "Callable[..., Any]"}, {"lineNumber": 938, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 938, "col_offset": 34, "nodeName": "overlapping", "type": "Any"}, {"lineNumber": 939, "col_offset": 15, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 967, "col_offset": 12, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 969, "col_offset": 12, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 971, "col_offset": 17, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 971, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 972, "col_offset": 24, "nodeName": "k_word_counts", "type": "Callable[..., Any]"}, {"lineNumber": 972, "col_offset": 43, "nodeName": "k", "type": "Any"}, {"lineNumber": 973, "col_offset": 12, "nodeName": "word", "type": "Any"}, {"lineNumber": 973, "col_offset": 18, "nodeName": "count", "type": "Any"}, {"lineNumber": 973, "col_offset": 27, "nodeName": "viewitems", "type": "Any"}, {"lineNumber": 973, "col_offset": 37, "nodeName": "k_word_counts", "type": "Counter[nothing]"}, {"lineNumber": 978, "col_offset": 11, "nodeName": "quality", "type": "Any"}, {"lineNumber": 979, "col_offset": 12, "nodeName": "quality", "type": "numpy.ndarray"}, {"lineNumber": 992, "col_offset": 12, "nodeName": "quality", "type": "Any"}, {"lineNumber": 993, "col_offset": 12, "nodeName": "writeable", "type": "bool"}, {"lineNumber": 1008, "col_offset": 8, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 1030, "col_offset": 21, "nodeName": "retrieve_group_0", "type": "Any"}, {"lineNumber": 1032, "col_offset": 21, "nodeName": "finditer", "type": "Any"}, {"lineNumber": 1032, "col_offset": 36, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 1033, "col_offset": 16, "nodeName": "g", "type": "Any"}, {"lineNumber": 1045, "col_offset": 15, "nodeName": "invert", "type": "Any"}, {"lineNumber": 1061, "col_offset": 64, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 1073, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1085, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1085, "col_offset": 19, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 1119, "col_offset": 12, "nodeName": "sequence", "type": "str"}, {"lineNumber": 1120, "col_offset": 8, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1121, "col_offset": 8, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1122, "col_offset": 8, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1123, "col_offset": 8, "nodeName": "_set_quality", "type": "Any"}, {"lineNumber": 1123, "col_offset": 26, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1124, "col_offset": 8, "nodeName": "_set_sequence", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1124, "col_offset": 27, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 1124, "col_offset": 37, "nodeName": "validate", "type": "Any"}, {"lineNumber": 1127, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1130, "col_offset": 15, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 1134, "col_offset": 21, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1134, "col_offset": 32, "nodeName": "sequence", "type": "Union[str, Any]"}, {"lineNumber": 1134, "col_offset": 42, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1144, "col_offset": 12, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 1146, "col_offset": 11, "nodeName": "size", "type": "Any"}, {"lineNumber": 1150, "col_offset": 12, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 1175, "col_offset": 8, "nodeName": "flags", "type": "Any"}, {"lineNumber": 1177, "col_offset": 8, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1178, "col_offset": 8, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1178, "col_offset": 22, "nodeName": "view", "type": "Any"}, {"lineNumber": 1213, "col_offset": 15, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1214, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 1215, "col_offset": 15, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1264, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 1264, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 1264, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1264, "col_offset": 30, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1271, "col_offset": 15, "nodeName": "degapped_to_gapped", "type": "List[int]"}, {"lineNumber": 1271, "col_offset": 35, "nodeName": "gapped_to_degapped", "type": "List[Optional[int]]"}, {"lineNumber": 1330, "col_offset": 15, "nodeName": "char", "type": "Any"}, {"lineNumber": 1330, "col_offset": 23, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 1391, "col_offset": 22, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1392, "col_offset": 29, "nodeName": "union", "type": "Any"}, {"lineNumber": 1393, "col_offset": 12, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 1409, "col_offset": 17, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1504, "col_offset": 25, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1505, "col_offset": 41, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 1505, "col_offset": 54, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1514, "col_offset": 18, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1515, "col_offset": 34, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 1516, "col_offset": 12, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1518, "col_offset": 15, "nodeName": "copy", "type": "Any"}, {"lineNumber": 1546, "col_offset": 15, "nodeName": "_complement", "type": "Callable[..., Any]"}, {"lineNumber": 1568, "col_offset": 15, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1598, "col_offset": 15, "nodeName": "_complement", "type": "Callable[..., Any]"}, {"lineNumber": 1635, "col_offset": 15, "nodeName": "escape", "type": "Callable"}, {"lineNumber": 1636, "col_offset": 29, "nodeName": "allow_gaps", "type": "Any"}, {"lineNumber": 1636, "col_offset": 21, "nodeName": "gaps", "type": "str"}, {"lineNumber": 1638, "col_offset": 11, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 1639, "col_offset": 12, "nodeName": "pat_str", "type": "str"}, {"lineNumber": 1645, "col_offset": 14, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 1645, "col_offset": 25, "nodeName": "pat_str", "type": "str"}, {"lineNumber": 1647, "col_offset": 20, "nodeName": "regex_iter", "type": "Any"}, {"lineNumber": 1647, "col_offset": 36, "nodeName": "pat", "type": "Pattern[str]"}, {"lineNumber": 1648, "col_offset": 15, "nodeName": "allow_gaps", "type": "Any"}, {"lineNumber": 1684, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1704, "col_offset": 12, "nodeName": "nondegen_chars", "type": "Set[str]"}, {"lineNumber": 1708, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1708, "col_offset": 25, "nodeName": "degen_map_lower", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1751, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1764, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1783, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1784, "col_offset": 12, "nodeName": "nondegen_chars", "type": "Set[str]"}, {"lineNumber": 1823, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1836, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1855, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1856, "col_offset": 12, "nodeName": "nondegen_chars", "type": "Set[str]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "seq", "type": "Union[Any, str]"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "qual", "type": "Any"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "seq", "type": "Union[List[Union[Any, str]], str, Any]"}, {"lineNumber": 240, "col_offset": 47, "nodeName": "qual", "type": "Any"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 346, "col_offset": 28, "nodeName": "other", "type": "Any"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 379, "col_offset": 13, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 385, "col_offset": 44, "nodeName": "cn", "type": "Any"}, {"lineNumber": 385, "col_offset": 48, "nodeName": "first_ten", "type": "Union[str, Any]"}, {"lineNumber": 385, "col_offset": 59, "nodeName": "ellipses", "type": "str"}, {"lineNumber": 385, "col_offset": 69, "nodeName": "length", "type": "int"}, {"lineNumber": 408, "col_offset": 24, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 511, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 587, "col_offset": 24, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 588, "col_offset": 18, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 589, "col_offset": 27, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 590, "col_offset": 23, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "defaults", "type": "Dict[str, Any]"}, {"lineNumber": 593, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 593, "col_offset": 32, "nodeName": "defaults", "type": "Dict[str, Any]"}, {"lineNumber": 671, "col_offset": 25, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 671, "col_offset": 36, "nodeName": "__class__", "type": "Type[Sequence]"}, {"lineNumber": 671, "col_offset": 54, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 674, "col_offset": 23, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 674, "col_offset": 34, "nodeName": "id", "type": "Any"}, {"lineNumber": 674, "col_offset": 45, "nodeName": "id", "type": "Any"}, {"lineNumber": 677, "col_offset": 32, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 678, "col_offset": 16, "nodeName": "description", "type": "Any"}, {"lineNumber": 678, "col_offset": 36, "nodeName": "description", "type": "Any"}, {"lineNumber": 683, "col_offset": 28, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 687, "col_offset": 29, "nodeName": "ignore", "type": "List[str]"}, {"lineNumber": 687, "col_offset": 40, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 687, "col_offset": 57, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 713, "col_offset": 15, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 756, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 756, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 756, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 756, "col_offset": 28, "nodeName": "other", "type": "Any"}, {"lineNumber": 757, "col_offset": 18, "nodeName": "SequenceError", "type": "Type[skbio.sequence._exception.SequenceError]"}, {"lineNumber": 807, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 807, "col_offset": 48, "nodeName": "hamming", "type": "Any"}, {"lineNumber": 843, "col_offset": 20, "nodeName": "fraction_diff", "type": "Callable[[Any], Any]"}, {"lineNumber": 843, "col_offset": 39, "nodeName": "other", "type": "Any"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "index", "type": "Union[Any, Callable[..., int]]"}, {"lineNumber": 863, "col_offset": 40, "nodeName": "subsequence", "type": "Any"}, {"lineNumber": 901, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 938, "col_offset": 18, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 939, "col_offset": 15, "nodeName": "collections", "type": "module"}, {"lineNumber": 969, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 971, "col_offset": 17, "nodeName": "collections", "type": "module"}, {"lineNumber": 972, "col_offset": 24, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 972, "col_offset": 58, "nodeName": "overlapping", "type": "Any"}, {"lineNumber": 974, "col_offset": 12, "nodeName": "result", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 974, "col_offset": 32, "nodeName": "count", "type": "Any"}, {"lineNumber": 974, "col_offset": 40, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 979, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 979, "col_offset": 33, "nodeName": "quality", "type": "Any"}, {"lineNumber": 981, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 984, "col_offset": 16, "nodeName": "quality", "type": "Any"}, {"lineNumber": 986, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 988, "col_offset": 16, "nodeName": "cast_type", "type": "str"}, {"lineNumber": 990, "col_offset": 16, "nodeName": "cast_type", "type": "str"}, {"lineNumber": 992, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 992, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 993, "col_offset": 12, "nodeName": "flags", "type": "Any"}, {"lineNumber": 995, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 1003, "col_offset": 16, "nodeName": "any", "type": "Any"}, {"lineNumber": 1032, "col_offset": 21, "nodeName": "regex", "type": "Any"}, {"lineNumber": 1032, "col_offset": 36, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 1033, "col_offset": 21, "nodeName": "range", "type": "Any"}, {"lineNumber": 1033, "col_offset": 27, "nodeName": "start", "type": "int"}, {"lineNumber": 1045, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1048, "col_offset": 34, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 1061, "col_offset": 15, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 1061, "col_offset": 38, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 1061, "col_offset": 64, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1085, "col_offset": 19, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1118, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1118, "col_offset": 26, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 1118, "col_offset": 36, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 1119, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1119, "col_offset": 31, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 1123, "col_offset": 8, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1124, "col_offset": 8, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1130, "col_offset": 15, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1134, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 1136, "col_offset": 15, "nodeName": "issubdtype", "type": "Any"}, {"lineNumber": 1136, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1136, "col_offset": 45, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 1144, "col_offset": 23, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 1144, "col_offset": 37, "nodeName": "sequence", "type": "Union[str, Any]"}, {"lineNumber": 1146, "col_offset": 11, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 1147, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1150, "col_offset": 24, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 1150, "col_offset": 35, "nodeName": "_ascii_lowercase_boundary", "type": "int"}, {"lineNumber": 1151, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 1151, "col_offset": 22, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 1152, "col_offset": 19, "nodeName": "is_ndarray", "type": "bool"}, {"lineNumber": 1167, "col_offset": 16, "nodeName": "_validation_mask", "type": "Any"}, {"lineNumber": 1168, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 1168, "col_offset": 22, "nodeName": "invalid_characters", "type": "Any"}, {"lineNumber": 1175, "col_offset": 8, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 1178, "col_offset": 22, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 1215, "col_offset": 20, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 1265, "col_offset": 15, "nodeName": "is_gap", "type": "Callable[[Any], Any]"}, {"lineNumber": 1265, "col_offset": 27, "nodeName": "e", "type": "Any"}, {"lineNumber": 1270, "col_offset": 16, "nodeName": "non_gap_count", "type": "int"}, {"lineNumber": 1296, "col_offset": 16, "nodeName": "is_gap", "type": "Callable[[Any], Any]"}, {"lineNumber": 1296, "col_offset": 28, "nodeName": "c", "type": "Union[str, Any]"}, {"lineNumber": 1296, "col_offset": 35, "nodeName": "c", "type": "Union[str, Any]"}, {"lineNumber": 1296, "col_offset": 40, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 1330, "col_offset": 23, "nodeName": "cls", "type": "Type[IUPACSequence]"}, {"lineNumber": 1353, "col_offset": 15, "nodeName": "is_gap", "type": "Callable[[Any], Any]"}, {"lineNumber": 1353, "col_offset": 27, "nodeName": "e", "type": "Any"}, {"lineNumber": 1392, "col_offset": 29, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 1393, "col_offset": 12, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1397, "col_offset": 15, "nodeName": "char", "type": "Any"}, {"lineNumber": 1397, "col_offset": 23, "nodeName": "nonexpansion_chars", "type": "Any"}, {"lineNumber": 1409, "col_offset": 26, "nodeName": "expansions", "type": "List[Any]"}, {"lineNumber": 1410, "col_offset": 16, "nodeName": "copy", "type": "Any"}, {"lineNumber": 1410, "col_offset": 53, "nodeName": "nondegen_seq", "type": "Tuple[Any, ...]"}, {"lineNumber": 1410, "col_offset": 69, "nodeName": "result", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 1505, "col_offset": 23, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 1505, "col_offset": 32, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1509, "col_offset": 19, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 1515, "col_offset": 11, "nodeName": "has_quality", "type": "Any"}, {"lineNumber": 1516, "col_offset": 22, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1518, "col_offset": 15, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1518, "col_offset": 34, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 1518, "col_offset": 50, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1546, "col_offset": 15, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1568, "col_offset": 23, "nodeName": "reverse_complement", "type": "Any"}, {"lineNumber": 1598, "col_offset": 15, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1635, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 1635, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1635, "col_offset": 33, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 1640, "col_offset": 13, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 1641, "col_offset": 12, "nodeName": "pat_str", "type": "str"}, {"lineNumber": 1645, "col_offset": 14, "nodeName": "re", "type": "module"}, {"lineNumber": 1647, "col_offset": 20, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1649, "col_offset": 16, "nodeName": "degapped", "type": "Any"}, {"lineNumber": 1650, "col_offset": 20, "nodeName": "gap_char", "type": "Any"}, {"lineNumber": 1650, "col_offset": 32, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 1698, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1698, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1699, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1704, "col_offset": 29, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1705, "col_offset": 50, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1708, "col_offset": 8, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1751, "col_offset": 8, "nodeName": "comp_map", "type": "Dict[Union[str, Any], Union[str, Any]]"}, {"lineNumber": 1751, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 1751, "col_offset": 28, "nodeName": "c", "type": "Any"}, {"lineNumber": 1778, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1778, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1778, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1778, "col_offset": 65, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1779, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1779, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1779, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1779, "col_offset": 66, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1780, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1780, "col_offset": 34, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1780, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1783, "col_offset": 31, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 1784, "col_offset": 29, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1785, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1823, "col_offset": 8, "nodeName": "comp_map", "type": "Dict[Union[str, Any], Union[str, Any]]"}, {"lineNumber": 1823, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 1823, "col_offset": 28, "nodeName": "c", "type": "Any"}, {"lineNumber": 1850, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1850, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1850, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1850, "col_offset": 65, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1851, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1851, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1851, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1851, "col_offset": 66, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1852, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1852, "col_offset": 34, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1852, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 1855, "col_offset": 31, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 1856, "col_offset": 29, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1857, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "seq", "type": "List[Union[Any, str]]"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 671, "col_offset": 36, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 671, "col_offset": 54, "nodeName": "other", "type": "Any"}, {"lineNumber": 674, "col_offset": 34, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 674, "col_offset": 45, "nodeName": "other", "type": "Any"}, {"lineNumber": 678, "col_offset": 16, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 678, "col_offset": 36, "nodeName": "other", "type": "Any"}, {"lineNumber": 683, "col_offset": 43, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 683, "col_offset": 58, "nodeName": "quality", "type": "Any"}, {"lineNumber": 684, "col_offset": 58, "nodeName": "quality", "type": "Any"}, {"lineNumber": 687, "col_offset": 40, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 687, "col_offset": 57, "nodeName": "other", "type": "Any"}, {"lineNumber": 713, "col_offset": 15, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 843, "col_offset": 20, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 910, "col_offset": 26, "nodeName": "sequence_length", "type": "int"}, {"lineNumber": 910, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 911, "col_offset": 18, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 939, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 939, "col_offset": 40, "nodeName": "seq", "type": "Any"}, {"lineNumber": 939, "col_offset": 49, "nodeName": "seq", "type": "Any"}, {"lineNumber": 939, "col_offset": 56, "nodeName": "k_words", "type": "Generator[Any, Any, None]"}, {"lineNumber": 967, "col_offset": 36, "nodeName": "k", "type": "Any"}, {"lineNumber": 969, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 969, "col_offset": 28, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 979, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 981, "col_offset": 15, "nodeName": "quality", "type": "numpy.ndarray"}, {"lineNumber": 984, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 984, "col_offset": 37, "nodeName": "quality", "type": "numpy.ndarray"}, {"lineNumber": 986, "col_offset": 15, "nodeName": "quality", "type": "Any"}, {"lineNumber": 992, "col_offset": 22, "nodeName": "quality", "type": "Any"}, {"lineNumber": 992, "col_offset": 50, "nodeName": "cast_type", "type": "str"}, {"lineNumber": 993, "col_offset": 12, "nodeName": "quality", "type": "Any"}, {"lineNumber": 995, "col_offset": 15, "nodeName": "quality", "type": "Any"}, {"lineNumber": 996, "col_offset": 22, "nodeName": "SequenceError", "type": "Type[skbio.sequence._exception.SequenceError]"}, {"lineNumber": 998, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 998, "col_offset": 19, "nodeName": "quality", "type": "Any"}, {"lineNumber": 998, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 998, "col_offset": 35, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 999, "col_offset": 22, "nodeName": "SequenceError", "type": "Type[skbio.sequence._exception.SequenceError]"}, {"lineNumber": 1004, "col_offset": 22, "nodeName": "SequenceError", "type": "Type[skbio.sequence._exception.SequenceError]"}, {"lineNumber": 1061, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1061, "col_offset": 38, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1127, "col_offset": 19, "nodeName": "view", "type": "Any"}, {"lineNumber": 1136, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1136, "col_offset": 29, "nodeName": "sequence", "type": "Union[str, Any]"}, {"lineNumber": 1136, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 1138, "col_offset": 17, "nodeName": "issubdtype", "type": "Any"}, {"lineNumber": 1138, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1139, "col_offset": 16, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 1144, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 1144, "col_offset": 53, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 1151, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1153, "col_offset": 20, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 1156, "col_offset": 16, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 1165, "col_offset": 33, "nodeName": "bincount", "type": "Any"}, {"lineNumber": 1166, "col_offset": 16, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 1167, "col_offset": 16, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1168, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1169, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1171, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1214, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 1214, "col_offset": 28, "nodeName": "e", "type": "Any"}, {"lineNumber": 1214, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1214, "col_offset": 43, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1214, "col_offset": 52, "nodeName": "e", "type": "Any"}, {"lineNumber": 1214, "col_offset": 61, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 1265, "col_offset": 15, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1266, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1268, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1268, "col_offset": 42, "nodeName": "non_gap_count", "type": "int"}, {"lineNumber": 1269, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1269, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 1296, "col_offset": 16, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1296, "col_offset": 40, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1353, "col_offset": 15, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1392, "col_offset": 29, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1398, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1398, "col_offset": 34, "nodeName": "char", "type": "Any"}, {"lineNumber": 1405, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 1410, "col_offset": 16, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1410, "col_offset": 35, "nodeName": "nondegen_seq", "type": "Tuple[Any, ...]"}, {"lineNumber": 1508, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1515, "col_offset": 11, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1516, "col_offset": 22, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1568, "col_offset": 23, "nodeName": "other", "type": "Any"}, {"lineNumber": 1635, "col_offset": 33, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1639, "col_offset": 43, "nodeName": "acceptable", "type": "str"}, {"lineNumber": 1639, "col_offset": 55, "nodeName": "min_length", "type": "Any"}, {"lineNumber": 1643, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1649, "col_offset": 27, "nodeName": "hits", "type": "Any"}, {"lineNumber": 1650, "col_offset": 32, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1651, "col_offset": 20, "nodeName": "degapped", "type": "Any"}, {"lineNumber": 1652, "col_offset": 36, "nodeName": "min_length", "type": "Any"}, {"lineNumber": 1655, "col_offset": 22, "nodeName": "hits", "type": "Any"}, {"lineNumber": 1704, "col_offset": 39, "nodeName": "degen_char", "type": "str"}, {"lineNumber": 1706, "col_offset": 16, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 1751, "col_offset": 34, "nodeName": "c", "type": "Any"}, {"lineNumber": 1751, "col_offset": 39, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 1783, "col_offset": 31, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1784, "col_offset": 39, "nodeName": "degen_char", "type": "str"}, {"lineNumber": 1786, "col_offset": 16, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 1823, "col_offset": 34, "nodeName": "c", "type": "Any"}, {"lineNumber": 1823, "col_offset": 39, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 1855, "col_offset": 31, "nodeName": "degen_map", "type": "Dict[str, Set[str]]"}, {"lineNumber": 1856, "col_offset": 39, "nodeName": "degen_char", "type": "str"}, {"lineNumber": 1858, "col_offset": 16, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 227, "col_offset": 36, "nodeName": "i", "type": "Any"}, {"lineNumber": 228, "col_offset": 42, "nodeName": "has_quality", "type": "Callable[[], Any]"}, {"lineNumber": 228, "col_offset": 23, "nodeName": "quality", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "has_quality", "type": "Callable[[], Any]"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "qual", "type": "List[Any]"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "qual", "type": "None"}, {"lineNumber": 683, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 683, "col_offset": 58, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 684, "col_offset": 58, "nodeName": "other", "type": "Any"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 911, "col_offset": 23, "nodeName": "i", "type": "Any"}, {"lineNumber": 967, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 967, "col_offset": 28, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 974, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 974, "col_offset": 23, "nodeName": "word", "type": "Any"}, {"lineNumber": 984, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1003, "col_offset": 16, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1033, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1045, "col_offset": 25, "nodeName": "bincount", "type": "Any"}, {"lineNumber": 1127, "col_offset": 19, "nodeName": "_chars", "type": "Any"}, {"lineNumber": 1127, "col_offset": 45, "nodeName": "size", "type": "Any"}, {"lineNumber": 1138, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 1138, "col_offset": 31, "nodeName": "sequence", "type": "Union[str, Any]"}, {"lineNumber": 1139, "col_offset": 27, "nodeName": "view", "type": "Any"}, {"lineNumber": 1139, "col_offset": 41, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 1141, "col_offset": 22, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1144, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1153, "col_offset": 31, "nodeName": "copy", "type": "Any"}, {"lineNumber": 1156, "col_offset": 25, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 1165, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 1166, "col_offset": 36, "nodeName": "_number_of_extended_ascii_codes", "type": "int"}, {"lineNumber": 1266, "col_offset": 16, "nodeName": "gapped_to_degapped", "type": "List[Optional[int]]"}, {"lineNumber": 1268, "col_offset": 16, "nodeName": "gapped_to_degapped", "type": "List[Optional[int]]"}, {"lineNumber": 1269, "col_offset": 16, "nodeName": "degapped_to_gapped", "type": "List[int]"}, {"lineNumber": 1398, "col_offset": 16, "nodeName": "expansions", "type": "List[Any]"}, {"lineNumber": 1404, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1508, "col_offset": 16, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 1508, "col_offset": 30, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 1510, "col_offset": 22, "nodeName": "SequenceError", "type": "Type[skbio.sequence._exception.SequenceError]"}, {"lineNumber": 1641, "col_offset": 45, "nodeName": "acceptable", "type": "str"}, {"lineNumber": 1641, "col_offset": 57, "nodeName": "min_length", "type": "Any"}, {"lineNumber": 1643, "col_offset": 58, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 1651, "col_offset": 31, "nodeName": "replace", "type": "Any"}, {"lineNumber": 1651, "col_offset": 48, "nodeName": "gap_char", "type": "Any"}, {"lineNumber": 1652, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1652, "col_offset": 23, "nodeName": "degapped", "type": "Any"}, {"lineNumber": 1653, "col_offset": 26, "nodeName": "hits", "type": "Any"}, {"lineNumber": 1751, "col_offset": 39, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1823, "col_offset": 39, "nodeName": "cls", "type": "Any"}, {"lineNumber": 228, "col_offset": 42, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 228, "col_offset": 23, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 228, "col_offset": 36, "nodeName": "i", "type": "Any"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "sequence", "type": "Union[Any, str]"}, {"lineNumber": 230, "col_offset": 46, "nodeName": "idx", "type": "Any"}, {"lineNumber": 230, "col_offset": 53, "nodeName": "i", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 238, "col_offset": 57, "nodeName": "i", "type": "Any"}, {"lineNumber": 238, "col_offset": 60, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 911, "col_offset": 25, "nodeName": "i", "type": "Any"}, {"lineNumber": 911, "col_offset": 27, "nodeName": "k", "type": "Any"}, {"lineNumber": 1033, "col_offset": 38, "nodeName": "groups", "type": "Any"}, {"lineNumber": 1034, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 1034, "col_offset": 35, "nodeName": "g", "type": "Any"}, {"lineNumber": 1034, "col_offset": 39, "nodeName": "end", "type": "Any"}, {"lineNumber": 1034, "col_offset": 49, "nodeName": "g", "type": "Any"}, {"lineNumber": 1034, "col_offset": 53, "nodeName": "group", "type": "Any"}, {"lineNumber": 1034, "col_offset": 65, "nodeName": "g", "type": "Any"}, {"lineNumber": 1045, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 1045, "col_offset": 37, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 1047, "col_offset": 35, "nodeName": "_number_of_extended_ascii_codes", "type": "int"}, {"lineNumber": 1127, "col_offset": 19, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1127, "col_offset": 45, "nodeName": "_chars", "type": "Any"}, {"lineNumber": 1139, "col_offset": 27, "nodeName": "sequence", "type": "Union[str, Any]"}, {"lineNumber": 1139, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1153, "col_offset": 31, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 1404, "col_offset": 20, "nodeName": "expansions", "type": "List[Any]"}, {"lineNumber": 1404, "col_offset": 38, "nodeName": "degen_chars", "type": "Any"}, {"lineNumber": 1406, "col_offset": 26, "nodeName": "SequenceError", "type": "Type[skbio.sequence._exception.SequenceError]"}, {"lineNumber": 1508, "col_offset": 45, "nodeName": "base", "type": "Any"}, {"lineNumber": 1651, "col_offset": 31, "nodeName": "degapped", "type": "Any"}, {"lineNumber": 1706, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1706, "col_offset": 24, "nodeName": "nondegen_chars", "type": "Set[str]"}, {"lineNumber": 1786, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1786, "col_offset": 24, "nodeName": "nondegen_chars", "type": "Set[str]"}, {"lineNumber": 1858, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1858, "col_offset": 24, "nodeName": "nondegen_chars", "type": "Set[str]"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "idx", "type": "Any"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "quality", "type": "Any"}, {"lineNumber": 233, "col_offset": 50, "nodeName": "idx", "type": "Any"}, {"lineNumber": 233, "col_offset": 57, "nodeName": "i", "type": "Any"}, {"lineNumber": 1002, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1002, "col_offset": 25, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1002, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1002, "col_offset": 39, "nodeName": "_sequence", "type": "Union[Any, str]"}, {"lineNumber": 1033, "col_offset": 38, "nodeName": "match", "type": "Any"}, {"lineNumber": 1034, "col_offset": 23, "nodeName": "match", "type": "Any"}, {"lineNumber": 1034, "col_offset": 39, "nodeName": "match", "type": "Any"}, {"lineNumber": 1034, "col_offset": 53, "nodeName": "match", "type": "Any"}, {"lineNumber": 1045, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 1045, "col_offset": 51, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1045, "col_offset": 59, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 1046, "col_offset": 57, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 1127, "col_offset": 45, "nodeName": "self", "type": "IUPACSequence"}, {"lineNumber": 1170, "col_offset": 54, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 1173, "col_offset": 34, "nodeName": "bad", "type": "List[Any]"}, {"lineNumber": 1404, "col_offset": 50, "nodeName": "char", "type": "Any"}, {"lineNumber": 1407, "col_offset": 71, "nodeName": "char", "type": "Any"}, {"lineNumber": 1512, "col_offset": 44, "nodeName": "base", "type": "Any"}, {"lineNumber": 1512, "col_offset": 50, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 233, "col_offset": 41, "nodeName": "idx", "type": "Any"}, {"lineNumber": 1002, "col_offset": 39, "nodeName": "self", "type": "Sequence"}, {"lineNumber": 1045, "col_offset": 59, "nodeName": "cls", "type": "Any"}, {"lineNumber": 1046, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 1170, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 1173, "col_offset": 57, "nodeName": "bad", "type": "List[Any]"}, {"lineNumber": 1512, "col_offset": 50, "nodeName": "__class__", "type": "Type[NucleotideSequence]"}, {"lineNumber": 1172, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1172, "col_offset": 45, "nodeName": "bad", "type": "List[Any]"}, {"lineNumber": 1173, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1173, "col_offset": 45, "nodeName": "bad", "type": "List[Any]"}, {"lineNumber": 1512, "col_offset": 50, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 1169, "col_offset": 27, "nodeName": "where", "type": "Any"}, {"lineNumber": 1169, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1170, "col_offset": 20, "nodeName": "invalid_characters", "type": "Any"}]