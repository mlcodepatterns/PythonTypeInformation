[{"lineNumber": 31, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "filterwarnings", "type": "Callable[..., None]"}, {"lineNumber": 339, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "expected_tback_m", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, int, int, int]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "actual", "type": "Tuple[str, str, Any, Any, Any]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, int, int, int]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "actual", "type": "Tuple[str, str, Any, Any, Any]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, int, int, int]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "actual", "type": "Tuple[str, str, Any, Any, Any]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 62, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 62, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 27, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "expected_tback_m", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 239, "col_offset": 41, "nodeName": "_init_matrices_sw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 240, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 240, "col_offset": 54, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 241, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 241, "col_offset": 54, "nodeName": "expected_tback_m", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 254, "col_offset": 41, "nodeName": "_init_matrices_nw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 255, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 256, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 256, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 271, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 273, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 273, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 274, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 274, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 289, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 290, "col_offset": 33, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 291, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 292, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 292, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 307, "col_offset": 17, "nodeName": "_traceback", "type": "Callable[..., Tuple[str, str, Any, Any, Any]]"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "tback_m", "type": "List[List[int]]"}, {"lineNumber": 307, "col_offset": 37, "nodeName": "score_m", "type": "List[List[int]]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "actual", "type": "Tuple[str, str, Any, Any, Any]"}, {"lineNumber": 308, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, int, int, int]"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "_traceback", "type": "Callable[..., Tuple[str, str, Any, Any, Any]]"}, {"lineNumber": 312, "col_offset": 28, "nodeName": "tback_m", "type": "List[List[int]]"}, {"lineNumber": 312, "col_offset": 37, "nodeName": "score_m", "type": "List[List[int]]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "actual", "type": "Tuple[str, str, Any, Any, Any]"}, {"lineNumber": 313, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, int, int, int]"}, {"lineNumber": 322, "col_offset": 17, "nodeName": "_traceback", "type": "Callable[..., Tuple[str, str, Any, Any, Any]]"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "tback_m", "type": "List[List[int]]"}, {"lineNumber": 322, "col_offset": 37, "nodeName": "score_m", "type": "List[List[int]]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "actual", "type": "Tuple[str, str, Any, Any, Any]"}, {"lineNumber": 323, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, int, int, int]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 84, "col_offset": 47, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 128, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 150, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 154, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 177, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 183, "col_offset": 38, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 197, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 198, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 199, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 201, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 210, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 212, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 214, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 219, "col_offset": 44, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 222, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 223, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 230, "col_offset": 38, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 233, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 236, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 327, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 329, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 334, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "np", "type": "module"}]