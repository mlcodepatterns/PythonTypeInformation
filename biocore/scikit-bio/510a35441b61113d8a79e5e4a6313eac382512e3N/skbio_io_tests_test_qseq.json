[{"lineNumber": 25, "col_offset": 0, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "TestQSeqBase", "type": "Type[TestQSeqBase]"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "TestQSeqBase", "type": "Type[TestQSeqBase]"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "TestQSeqBase", "type": "Type[TestQSeqBase]"}, {"lineNumber": 289, "col_offset": 22, "nodeName": "TestQSeqBase", "type": "Type[TestQSeqBase]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "arg", "type": "str"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "args", "type": "Tuple[str]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 305, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "valid_files", "type": "List[Union[Tuple[str, List[Union[Dict[str, str], Dict[str, int]]], List[Tuple[str, str, List[int]]]], Tuple[str, List[Union[Dict[str, Union[int, bool, str]], Dict[str, Union[int, bool]], Dict[str, Union[functools.partial[nothing], int, bool, str]], Dict[str, Union[functools.partial[nothing], int, bool]]]], List[Tuple[str, str, List[int]]]]]]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "invalid_files", "type": "List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, List[Dict[str, str]], List[str], Type[ValueError]]]]"}, {"lineNumber": 194, "col_offset": 46, "nodeName": "invalid_files", "type": "Union[List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, List[Dict[str, str]], List[str], Type[ValueError]]]], List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, List[Dict[str, str]], List[str], Type[ValueError]]]]]"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "valid_files", "type": "List[Union[Tuple[str, List[Union[Dict[str, str], Dict[str, int]]], List[Tuple[str, str, List[int]]]], Tuple[str, List[Union[Dict[str, Union[int, bool, str]], Dict[str, Union[int, bool]], Dict[str, Union[functools.partial[nothing], int, bool, str]], Dict[str, Union[functools.partial[nothing], int, bool]]]], List[Tuple[str, str, List[int]]]]]]"}, {"lineNumber": 228, "col_offset": 46, "nodeName": "invalid_files", "type": "List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]]]]"}, {"lineNumber": 237, "col_offset": 41, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "constructor", "type": "Union[Type[skbio.sequence._rna.RNA], Type[skbio.sequence._protein.Protein], Type[skbio.sequence._sequence.Sequence], Type[skbio.sequence._dna.DNA]]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "invalid_files", "type": "List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, None, None, None]]]"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "valid_files", "type": "List[Union[Tuple[str, List[Union[Dict[str, str], Dict[str, int]]], List[Tuple[str, str, List[int]]]], Tuple[str, List[Union[Dict[str, Union[int, bool, str]], Dict[str, Union[int, bool]], Dict[str, Union[functools.partial[nothing], int, bool, str]], Dict[str, Union[functools.partial[nothing], int, bool]]]], List[Tuple[str, str, List[int]]]]]]"}, {"lineNumber": 302, "col_offset": 32, "nodeName": "invalid_files", "type": "Union[List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, None, None, None]]], List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, None, None, None]]]]"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "arg", "type": "str"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "invalid", "type": "str"}, {"lineNumber": 194, "col_offset": 21, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str]]], List[Dict[str, str]], List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]]]"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "etype", "type": "Union[Type[skbio.io._exception.QSeqFormatError], Type[ValueError]]"}, {"lineNumber": 194, "col_offset": 46, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "e", "type": "str"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "components", "type": "Any"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "invalid", "type": "str"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str]]], List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]]]"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 228, "col_offset": 37, "nodeName": "etype", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 228, "col_offset": 46, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "e", "type": "str"}, {"lineNumber": 233, "col_offset": 21, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "components", "type": "Any"}, {"lineNumber": 237, "col_offset": 41, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 258, "col_offset": 28, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 258, "col_offset": 38, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 258, "col_offset": 43, "nodeName": "RNA", "type": "Type[skbio.sequence._rna.RNA]"}, {"lineNumber": 258, "col_offset": 48, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 259, "col_offset": 50, "nodeName": "invalid_files", "type": "List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]]]]"}, {"lineNumber": 273, "col_offset": 45, "nodeName": "valid_files", "type": "List[Union[Tuple[str, List[Union[Dict[str, str], Dict[str, int]]], List[Tuple[str, str, List[int]]]], Tuple[str, List[Union[Dict[str, Union[int, bool, str]], Dict[str, Union[int, bool]], Dict[str, Union[functools.partial[nothing], int, bool, str]], Dict[str, Union[functools.partial[nothing], int, bool]]]], List[Tuple[str, str, List[int]]]]]]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "self", "type": "TestQSeqSniffer"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "_", "type": "Any"}, {"lineNumber": 298, "col_offset": 22, "nodeName": "_", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "self", "type": "TestQSeqSniffer"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "invalid", "type": "str"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "_", "type": "Optional[Union[List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[Union[Dict[nothing, nothing], Dict[str, str]]]]]"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "_", "type": "Optional[List[str]]"}, {"lineNumber": 302, "col_offset": 27, "nodeName": "_", "type": "Optional[Type[skbio.io._exception.QSeqFormatError]]"}, {"lineNumber": 302, "col_offset": 32, "nodeName": "self", "type": "TestQSeqSniffer"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "arg", "type": "str"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 195, "col_offset": 45, "nodeName": "cm", "type": "Union[unittest.case._AssertRaisesContext[ValueError], unittest.case._AssertRaisesContext[skbio.io._exception.QSeqFormatError]]"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[Union[Dict[nothing, nothing], Dict[str, str]]], List[Dict[str, str]]]"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 45, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str]]], List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]]]"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "observed", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "invalid", "type": "str"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str]]], List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]]]"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 259, "col_offset": 41, "nodeName": "etype", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 259, "col_offset": 50, "nodeName": "self", "type": "TestQSeqToSequences"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "e", "type": "str"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 270, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 270, "col_offset": 36, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 270, "col_offset": 47, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 270, "col_offset": 55, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 271, "col_offset": 36, "nodeName": "RNA", "type": "Type[skbio.sequence._rna.RNA]"}, {"lineNumber": 272, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 272, "col_offset": 36, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 273, "col_offset": 31, "nodeName": "components", "type": "Any"}, {"lineNumber": 273, "col_offset": 45, "nodeName": "self", "type": "TestQSeqToSequences"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "TestQSeqToGenerator", "type": "Type[TestQSeqToGenerator]"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "etype", "type": "Union[Type[ValueError], Type[skbio.io._exception.QSeqFormatError]]"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "e", "type": "str"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "get", "type": "Any"}, {"lineNumber": 206, "col_offset": 55, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 213, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "o", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "e", "type": "Any"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "zip", "type": "Any"}, {"lineNumber": 215, "col_offset": 32, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "TestQSeqToSequenceCollection", "type": "Type[TestQSeqToSequenceCollection]"}, {"lineNumber": 221, "col_offset": 44, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 223, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "SequenceCollection", "type": "Type[skbio.alignment._alignment.SequenceCollection]"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 229, "col_offset": 35, "nodeName": "etype", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "e", "type": "str"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "get", "type": "Any"}, {"lineNumber": 240, "col_offset": 55, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "SequenceCollection", "type": "Type[skbio.alignment._alignment.SequenceCollection]"}, {"lineNumber": 249, "col_offset": 27, "nodeName": "_qseq_to_sequence_collection", "type": "Any"}, {"lineNumber": 249, "col_offset": 56, "nodeName": "valid", "type": "Any"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "observed", "type": "Any"}, {"lineNumber": 251, "col_offset": 43, "nodeName": "expected", "type": "skbio.alignment._alignment.SequenceCollection"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "o", "type": "Any"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "e", "type": "Any"}, {"lineNumber": 252, "col_offset": 28, "nodeName": "zip", "type": "Any"}, {"lineNumber": 252, "col_offset": 32, "nodeName": "observed", "type": "Any"}, {"lineNumber": 252, "col_offset": 42, "nodeName": "expected", "type": "skbio.alignment._alignment.SequenceCollection"}, {"lineNumber": 260, "col_offset": 49, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "kwarg", "type": "Union[Dict[nothing, nothing], Dict[str, str], Dict[str, int]]"}, {"lineNumber": 261, "col_offset": 33, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str]]], List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]]]"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "seq_num", "type": "Any"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "c", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 292, "col_offset": 14, "nodeName": "TestQSeqSniffer", "type": "Type[TestQSeqSniffer]"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "self", "type": "TestQSeqSniffer"}, {"lineNumber": 294, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "self", "type": "TestQSeqSniffer"}, {"lineNumber": 299, "col_offset": 29, "nodeName": "_qseq_sniffer", "type": "Any"}, {"lineNumber": 299, "col_offset": 43, "nodeName": "valid", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "self", "type": "TestQSeqSniffer"}, {"lineNumber": 303, "col_offset": 29, "nodeName": "_qseq_sniffer", "type": "Any"}, {"lineNumber": 303, "col_offset": 43, "nodeName": "invalid", "type": "str"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 200, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "exception", "type": "Union[ValueError, skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 211, "col_offset": 37, "nodeName": "components", "type": "Any"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "_qseq_to_generator", "type": "Any"}, {"lineNumber": 213, "col_offset": 51, "nodeName": "valid", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 214, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 214, "col_offset": 52, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 33, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "_qseq_to_sequence_collection", "type": "Any"}, {"lineNumber": 232, "col_offset": 49, "nodeName": "invalid", "type": "str"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 234, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 234, "col_offset": 37, "nodeName": "exception", "type": "skbio.io._exception.QSeqFormatError"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 249, "col_offset": 65, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 260, "col_offset": 39, "nodeName": "etype", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 34, "nodeName": "e", "type": "str"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 277, "col_offset": 30, "nodeName": "get", "type": "Any"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "components", "type": "Any"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "constructor", "type": "functools.partial[nothing]"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 36, "nodeName": "valid", "type": "Any"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "_qseq_to_generator", "type": "Any"}, {"lineNumber": 198, "col_offset": 44, "nodeName": "invalid", "type": "str"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "cm", "type": "Union[unittest.case._AssertRaisesContext[ValueError], unittest.case._AssertRaisesContext[skbio.io._exception.QSeqFormatError]]"}, {"lineNumber": 213, "col_offset": 60, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 216, "col_offset": 36, "nodeName": "equals", "type": "Any"}, {"lineNumber": 216, "col_offset": 45, "nodeName": "e", "type": "Any"}, {"lineNumber": 232, "col_offset": 60, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 234, "col_offset": 37, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "c", "type": "Any"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "components", "type": "Any"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 253, "col_offset": 36, "nodeName": "equals", "type": "Any"}, {"lineNumber": 253, "col_offset": 45, "nodeName": "e", "type": "Any"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "self", "type": "TestQSeqToSequences"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[nothing, nothing], Dict[str, int]]"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 264, "col_offset": 29, "nodeName": "invalid", "type": "str"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "self", "type": "TestQSeqToSequences"}, {"lineNumber": 267, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "exception", "type": "skbio.io._exception.QSeqFormatError"}, {"lineNumber": 277, "col_offset": 30, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 280, "col_offset": 35, "nodeName": "c", "type": "Any"}, {"lineNumber": 284, "col_offset": 48, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 285, "col_offset": 67, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "self", "type": "TestQSeqToSequences"}, {"lineNumber": 286, "col_offset": 36, "nodeName": "equals", "type": "Any"}, {"lineNumber": 286, "col_offset": 52, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 198, "col_offset": 55, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 216, "col_offset": 36, "nodeName": "o", "type": "Any"}, {"lineNumber": 253, "col_offset": 36, "nodeName": "o", "type": "Any"}, {"lineNumber": 265, "col_offset": 34, "nodeName": "constructor", "type": "Union[Type[skbio.sequence._protein.Protein], Type[skbio.sequence._dna.DNA], Type[skbio.sequence._rna.RNA], Type[skbio.sequence._sequence.Sequence]]"}, {"lineNumber": 265, "col_offset": 49, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[nothing, nothing], Dict[str, int]]"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 278, "col_offset": 35, "nodeName": "seq_num", "type": "Any"}, {"lineNumber": 284, "col_offset": 48, "nodeName": "constructor", "type": "functools.partial[nothing]"}, {"lineNumber": 286, "col_offset": 36, "nodeName": "observed", "type": "Any"}, {"lineNumber": 280, "col_offset": 56, "nodeName": "c", "type": "Any"}, {"lineNumber": 281, "col_offset": 66, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 282, "col_offset": 62, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 281, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 56, "nodeName": "c", "type": "Any"}, {"lineNumber": 282, "col_offset": 62, "nodeName": "np", "type": "module"}]