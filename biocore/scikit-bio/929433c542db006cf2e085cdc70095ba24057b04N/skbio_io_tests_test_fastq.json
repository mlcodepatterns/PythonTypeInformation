[{"lineNumber": 44, "col_offset": 0, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "test_positives", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "test_negatives", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "test_fastq_to_generator_valid_files", "type": "Callable[[Any], Any]"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "test_fastq_to_generator_invalid_files_all_variants", "type": "Callable[[Any], Any]"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "test_fastq_to_generator_invalid_files_illumina", "type": "Callable[[Any], Any]"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "test_fastq_to_generator_solexa", "type": "Callable[[Any], Any]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "test_fastq_to_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "test_fastq_to_sequence_collection", "type": "Callable[[Any], Any]"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "test_fastq_to_alignment", "type": "Callable[[Any], Any]"}, {"lineNumber": 410, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "test_generator_to_fastq_kwargs_passed", "type": "Callable[[Any], Any]"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "test_sequence_to_fastq_kwargs_passed", "type": "Callable[[Any], Any]"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "test_sequence_collection_to_fastq_kwargs_passed", "type": "Callable[[Any], Any]"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "test_alignment_to_fastq_kwargs_passed", "type": "Callable[[Any], Any]"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "test_generator_to_fastq_no_qual", "type": "Callable[[Any], Any]"}, {"lineNumber": 521, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "test_conversion", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "arg", "type": "str"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "args", "type": "Tuple[str]"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 410, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "gen", "type": "Callable[[], Any]"}, {"lineNumber": 521, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 640, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "positives", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "negatives", "type": "List[Any]"}, {"lineNumber": 295, "col_offset": 47, "nodeName": "valid_configurations", "type": "List[Union[Tuple[List[Any], List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[nothing]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Tuple[str, str, str, List[int]]]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]], List[Tuple[str, str, str, List[int]]]]]]"}, {"lineNumber": 315, "col_offset": 47, "nodeName": "invalid_files", "type": "List[Tuple[Any, Any, str]]"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "fps", "type": "List[Any]"}, {"lineNumber": 371, "col_offset": 47, "nodeName": "valid_configurations", "type": "List[Union[Tuple[List[Any], List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[nothing]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Tuple[str, str, str, List[int]]]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]], List[Tuple[str, str, str, List[int]]]]]]"}, {"lineNumber": 390, "col_offset": 47, "nodeName": "valid_configurations", "type": "List[Union[Tuple[List[Any], List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[nothing]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Tuple[str, str, str, List[int]]]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]], List[Tuple[str, str, str, List[int]]]]]]"}, {"lineNumber": 436, "col_offset": 46, "nodeName": "valid_files", "type": "List[Tuple[List[Tuple[str, str, str, List[int]]], List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]]]"}, {"lineNumber": 476, "col_offset": 46, "nodeName": "valid_files", "type": "List[Tuple[List[Tuple[str, str, str, List[int]]], List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]]]"}, {"lineNumber": 494, "col_offset": 46, "nodeName": "valid_files", "type": "List[Tuple[List[Tuple[str, str, str, List[int]]], List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]]]"}, {"lineNumber": 622, "col_offset": 38, "nodeName": "conversions", "type": "List[Union[Tuple[Any, Any, List[Tuple[Dict[str, str], Dict[str, int]]]], Tuple[Any, Any, List[Union[Tuple[Dict[str, str], Dict[str, str]], Tuple[Dict[str, int], Dict[str, str]], Tuple[Dict[str, str], Dict[str, int]]]]]]]"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "arg", "type": "str"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "kwargs", "type": "Union[Dict[str, Union[str, functools.partial[nothing], int]], Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "self", "type": "TestSniffer"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "self", "type": "TestSniffer"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]]]"}, {"lineNumber": 295, "col_offset": 33, "nodeName": "components", "type": "Union[List[nothing], List[Tuple[str, str, str, List[int]]]]"}, {"lineNumber": 295, "col_offset": 47, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "error_type", "type": "Any"}, {"lineNumber": 315, "col_offset": 28, "nodeName": "error_msg_regex", "type": "str"}, {"lineNumber": 315, "col_offset": 47, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "variant", "type": "str"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "offset", "type": "int"}, {"lineNumber": 348, "col_offset": 51, "nodeName": "valid_configurations", "type": "List[Union[Tuple[List[Any], List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[nothing]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Tuple[str, str, str, List[int]]]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]], List[Tuple[str, str, str, List[int]]]]]]"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]]]"}, {"lineNumber": 371, "col_offset": 33, "nodeName": "components", "type": "Union[List[nothing], List[Tuple[str, str, str, List[int]]]]"}, {"lineNumber": 371, "col_offset": 47, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 390, "col_offset": 25, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]]]"}, {"lineNumber": 390, "col_offset": 33, "nodeName": "components", "type": "Union[List[nothing], List[Tuple[str, str, str, List[int]]]]"}, {"lineNumber": 390, "col_offset": 47, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 391, "col_offset": 25, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 436, "col_offset": 24, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 436, "col_offset": 46, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 437, "col_offset": 39, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 455, "col_offset": 28, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 458, "col_offset": 50, "nodeName": "valid_files", "type": "List[Tuple[List[Tuple[str, str, str, List[int]]], List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]]]"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 476, "col_offset": 24, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 476, "col_offset": 46, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 477, "col_offset": 39, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 494, "col_offset": 24, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 494, "col_offset": 46, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 495, "col_offset": 39, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "from_fp", "type": "Any"}, {"lineNumber": 622, "col_offset": 21, "nodeName": "to_fp", "type": "Any"}, {"lineNumber": 622, "col_offset": 28, "nodeName": "kwargs", "type": "Union[List[Tuple[Dict[str, str], Dict[str, int]]], List[Union[Tuple[Dict[str, str], Dict[str, str]], Tuple[Dict[str, int], Dict[str, str]], Tuple[Dict[str, str], Dict[str, int]]]]]"}, {"lineNumber": 622, "col_offset": 38, "nodeName": "self", "type": "TestConversions"}, {"lineNumber": 623, "col_offset": 42, "nodeName": "kwargs", "type": "Union[List[Tuple[Dict[str, str], Dict[str, int]]], List[Union[Tuple[Dict[str, str], Dict[str, str]], Tuple[Dict[str, int], Dict[str, str]], Tuple[Dict[str, str], Dict[str, int]]]]]"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "arg", "type": "str"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing]]]]"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "kwargs", "type": "Union[List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]], List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]]]"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 339, "col_offset": 31, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 345, "col_offset": 36, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 345, "col_offset": 47, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 345, "col_offset": 55, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 346, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 346, "col_offset": 36, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 347, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 347, "col_offset": 36, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 348, "col_offset": 29, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]]]"}, {"lineNumber": 348, "col_offset": 37, "nodeName": "components", "type": "Union[List[nothing], List[Tuple[str, str, str, List[int]]]]"}, {"lineNumber": 348, "col_offset": 51, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 349, "col_offset": 29, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing]]]]"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "kwargs", "type": "Union[List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]], List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]]]"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing]]]]"}, {"lineNumber": 392, "col_offset": 29, "nodeName": "kwargs", "type": "Union[List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]], List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]]]"}, {"lineNumber": 437, "col_offset": 16, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 437, "col_offset": 24, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 446, "col_offset": 16, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 455, "col_offset": 38, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 455, "col_offset": 46, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 456, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 456, "col_offset": 36, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 457, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 457, "col_offset": 36, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 458, "col_offset": 28, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 458, "col_offset": 50, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 459, "col_offset": 43, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 477, "col_offset": 16, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 477, "col_offset": 24, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 485, "col_offset": 16, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 495, "col_offset": 16, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 495, "col_offset": 24, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 501, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 503, "col_offset": 16, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 517, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 517, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "_generator_to_fastq", "type": "Any"}, {"lineNumber": 623, "col_offset": 16, "nodeName": "from_kwargs", "type": "Any"}, {"lineNumber": 623, "col_offset": 29, "nodeName": "to_kwargs", "type": "Any"}, {"lineNumber": 624, "col_offset": 16, "nodeName": "read_gen", "type": "Any"}, {"lineNumber": 625, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 632, "col_offset": 16, "nodeName": "obs", "type": "nothing"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "kwargs", "type": "Union[Dict[str, Union[str, functools.partial[nothing], int]], Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "TestSniffer"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "_fastq_sniffer", "type": "Any"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "fp", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "self", "type": "TestSniffer"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "_fastq_sniffer", "type": "Any"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "fp", "type": "Any"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 331, "col_offset": 17, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 331, "col_offset": 41, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 333, "col_offset": 17, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 333, "col_offset": 41, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 340, "col_offset": 17, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 355, "col_offset": 24, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 355, "col_offset": 33, "nodeName": "kwargs", "type": "Union[List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]], List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]]]"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "observed", "type": "Any"}, {"lineNumber": 394, "col_offset": 20, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 403, "col_offset": 20, "nodeName": "observed", "type": "Any"}, {"lineNumber": 439, "col_offset": 24, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 439, "col_offset": 29, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 444, "col_offset": 21, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 445, "col_offset": 16, "nodeName": "_generator_to_fastq", "type": "Any"}, {"lineNumber": 445, "col_offset": 43, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 446, "col_offset": 27, "nodeName": "getvalue", "type": "Callable"}, {"lineNumber": 447, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 449, "col_offset": 47, "nodeName": "f", "type": "file"}, {"lineNumber": 450, "col_offset": 20, "nodeName": "expected", "type": "str"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 452, "col_offset": 33, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 452, "col_offset": 43, "nodeName": "expected", "type": "str"}, {"lineNumber": 459, "col_offset": 20, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 459, "col_offset": 28, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 460, "col_offset": 20, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 461, "col_offset": 24, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 461, "col_offset": 29, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 467, "col_offset": 20, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 478, "col_offset": 22, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 483, "col_offset": 21, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "_sequence_collection_to_fastq", "type": "Any"}, {"lineNumber": 484, "col_offset": 46, "nodeName": "obj", "type": "Any"}, {"lineNumber": 484, "col_offset": 51, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 485, "col_offset": 27, "nodeName": "getvalue", "type": "Callable"}, {"lineNumber": 486, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 488, "col_offset": 47, "nodeName": "f", "type": "file"}, {"lineNumber": 489, "col_offset": 20, "nodeName": "expected", "type": "str"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 491, "col_offset": 33, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 491, "col_offset": 43, "nodeName": "expected", "type": "str"}, {"lineNumber": 496, "col_offset": 22, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 501, "col_offset": 21, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "_alignment_to_fastq", "type": "Any"}, {"lineNumber": 502, "col_offset": 36, "nodeName": "obj", "type": "Any"}, {"lineNumber": 502, "col_offset": 41, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 503, "col_offset": 27, "nodeName": "getvalue", "type": "Callable"}, {"lineNumber": 504, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 506, "col_offset": 47, "nodeName": "f", "type": "file"}, {"lineNumber": 507, "col_offset": 20, "nodeName": "expected", "type": "str"}, {"lineNumber": 509, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 509, "col_offset": 33, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 509, "col_offset": 43, "nodeName": "expected", "type": "str"}, {"lineNumber": 513, "col_offset": 18, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 515, "col_offset": 18, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 517, "col_offset": 13, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 518, "col_offset": 32, "nodeName": "gen", "type": "Callable[[], Any]"}, {"lineNumber": 518, "col_offset": 39, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 524, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 525, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 529, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 530, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 535, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 536, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 542, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 543, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 548, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 549, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 555, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 556, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 561, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 562, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 568, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 569, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 574, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 575, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 581, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 582, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 587, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 588, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 594, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 595, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 600, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 601, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 607, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 608, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 613, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 614, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 624, "col_offset": 27, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 624, "col_offset": 47, "nodeName": "from_fp", "type": "Any"}, {"lineNumber": 625, "col_offset": 21, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 632, "col_offset": 22, "nodeName": "getvalue", "type": "Callable"}, {"lineNumber": 633, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 635, "col_offset": 41, "nodeName": "fh", "type": "file"}, {"lineNumber": 636, "col_offset": 20, "nodeName": "exp", "type": "str"}, {"lineNumber": 637, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 637, "col_offset": 33, "nodeName": "obs", "type": "nothing"}, {"lineNumber": 637, "col_offset": 38, "nodeName": "exp", "type": "str"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 189, "col_offset": 49, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 192, "col_offset": 46, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 195, "col_offset": 47, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 201, "col_offset": 48, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 204, "col_offset": 51, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 210, "col_offset": 49, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 213, "col_offset": 49, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 216, "col_offset": 50, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 219, "col_offset": 45, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 222, "col_offset": 47, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 225, "col_offset": 37, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 230, "col_offset": 40, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 233, "col_offset": 39, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 238, "col_offset": 36, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 241, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 244, "col_offset": 40, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 247, "col_offset": 38, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 253, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 256, "col_offset": 42, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 259, "col_offset": 38, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 262, "col_offset": 39, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 271, "col_offset": 41, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 274, "col_offset": 42, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 277, "col_offset": 42, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 280, "col_offset": 43, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 283, "col_offset": 41, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 286, "col_offset": 42, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 290, "col_offset": 42, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "kwarg", "type": "Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]]]"}, {"lineNumber": 299, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 299, "col_offset": 59, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 24, "nodeName": "o", "type": "Any"}, {"lineNumber": 309, "col_offset": 27, "nodeName": "e", "type": "Any"}, {"lineNumber": 309, "col_offset": 32, "nodeName": "zip", "type": "Any"}, {"lineNumber": 309, "col_offset": 36, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 309, "col_offset": 46, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 317, "col_offset": 21, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 317, "col_offset": 45, "nodeName": "error_type", "type": "Any"}, {"lineNumber": 317, "col_offset": 57, "nodeName": "error_msg_regex", "type": "str"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 321, "col_offset": 45, "nodeName": "error_type", "type": "Any"}, {"lineNumber": 321, "col_offset": 57, "nodeName": "error_msg_regex", "type": "str"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 331, "col_offset": 17, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 332, "col_offset": 41, "nodeName": "fp", "type": "Any"}, {"lineNumber": 333, "col_offset": 17, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 334, "col_offset": 41, "nodeName": "fp", "type": "Any"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 358, "col_offset": 24, "nodeName": "seq_num", "type": "Union[str, int, functools.partial[nothing]]"}, {"lineNumber": 359, "col_offset": 24, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 374, "col_offset": 33, "nodeName": "kwarg", "type": "Union[Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, int]]"}, {"lineNumber": 375, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 375, "col_offset": 59, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 376, "col_offset": 31, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 383, "col_offset": 31, "nodeName": "_fastq_to_sequence_collection", "type": "Any"}, {"lineNumber": 383, "col_offset": 61, "nodeName": "valid", "type": "Any"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 385, "col_offset": 37, "nodeName": "observed", "type": "Any"}, {"lineNumber": 385, "col_offset": 47, "nodeName": "expected", "type": "Any"}, {"lineNumber": 386, "col_offset": 24, "nodeName": "o", "type": "Any"}, {"lineNumber": 386, "col_offset": 27, "nodeName": "e", "type": "Any"}, {"lineNumber": 386, "col_offset": 32, "nodeName": "zip", "type": "Any"}, {"lineNumber": 386, "col_offset": 36, "nodeName": "observed", "type": "Any"}, {"lineNumber": 386, "col_offset": 46, "nodeName": "expected", "type": "Any"}, {"lineNumber": 393, "col_offset": 20, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 393, "col_offset": 33, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 394, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 394, "col_offset": 59, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 395, "col_offset": 31, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 403, "col_offset": 31, "nodeName": "_fastq_to_alignment", "type": "Any"}, {"lineNumber": 403, "col_offset": 51, "nodeName": "valid", "type": "Any"}, {"lineNumber": 405, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 405, "col_offset": 37, "nodeName": "observed", "type": "Any"}, {"lineNumber": 405, "col_offset": 47, "nodeName": "expected", "type": "Any"}, {"lineNumber": 406, "col_offset": 24, "nodeName": "o", "type": "Any"}, {"lineNumber": 406, "col_offset": 27, "nodeName": "e", "type": "Any"}, {"lineNumber": 406, "col_offset": 32, "nodeName": "zip", "type": "Any"}, {"lineNumber": 406, "col_offset": 36, "nodeName": "observed", "type": "Any"}, {"lineNumber": 406, "col_offset": 46, "nodeName": "expected", "type": "Any"}, {"lineNumber": 445, "col_offset": 36, "nodeName": "gen", "type": "Callable[[], Any]"}, {"lineNumber": 445, "col_offset": 49, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 446, "col_offset": 27, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 447, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 449, "col_offset": 21, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 449, "col_offset": 26, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 450, "col_offset": 31, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 460, "col_offset": 25, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 467, "col_offset": 31, "nodeName": "getvalue", "type": "Callable"}, {"lineNumber": 468, "col_offset": 20, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 470, "col_offset": 51, "nodeName": "f", "type": "file"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "expected", "type": "str"}, {"lineNumber": 473, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 473, "col_offset": 37, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 473, "col_offset": 47, "nodeName": "expected", "type": "str"}, {"lineNumber": 484, "col_offset": 57, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 485, "col_offset": 27, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 486, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 488, "col_offset": 21, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 488, "col_offset": 26, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 489, "col_offset": 31, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 502, "col_offset": 47, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 503, "col_offset": 27, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 504, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 506, "col_offset": 21, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 506, "col_offset": 26, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 507, "col_offset": 31, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 509, "col_offset": 16, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 624, "col_offset": 58, "nodeName": "from_kwargs", "type": "Any"}, {"lineNumber": 628, "col_offset": 21, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 629, "col_offset": 20, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 630, "col_offset": 20, "nodeName": "_generator_to_fastq", "type": "Any"}, {"lineNumber": 630, "col_offset": 40, "nodeName": "read_gen", "type": "Any"}, {"lineNumber": 630, "col_offset": 50, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 632, "col_offset": 22, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 633, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 635, "col_offset": 21, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 635, "col_offset": 26, "nodeName": "to_fp", "type": "Any"}, {"lineNumber": 636, "col_offset": 26, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 637, "col_offset": 16, "nodeName": "self", "type": "TestConversions"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 174, "col_offset": 40, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 299, "col_offset": 34, "nodeName": "kwarg", "type": "Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]]]"}, {"lineNumber": 305, "col_offset": 36, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 305, "col_offset": 41, "nodeName": "components", "type": "Union[List[Tuple[str, str, str, List[int]]], List[nothing]]"}, {"lineNumber": 307, "col_offset": 36, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 307, "col_offset": 56, "nodeName": "valid", "type": "Any"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 308, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 308, "col_offset": 41, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 308, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 308, "col_offset": 56, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 310, "col_offset": 24, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 317, "col_offset": 21, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 318, "col_offset": 45, "nodeName": "fp", "type": "Any"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 322, "col_offset": 45, "nodeName": "fp", "type": "Any"}, {"lineNumber": 352, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "components", "type": "Union[List[Tuple[str, str, str, List[int]]], List[nothing]]"}, {"lineNumber": 356, "col_offset": 24, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 356, "col_offset": 37, "nodeName": "kwarg", "type": "Union[Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, str], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "components", "type": "Union[List[Tuple[str, str, str, List[int]]], List[nothing]]"}, {"lineNumber": 360, "col_offset": 35, "nodeName": "constructor", "type": "functools.partial[nothing]"}, {"lineNumber": 366, "col_offset": 35, "nodeName": "read", "type": "Any"}, {"lineNumber": 366, "col_offset": 40, "nodeName": "valid", "type": "Any"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 375, "col_offset": 34, "nodeName": "kwarg", "type": "Union[Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, int]]"}, {"lineNumber": 383, "col_offset": 70, "nodeName": "kwarg", "type": "Union[Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, int]]"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 387, "col_offset": 24, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 34, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 403, "col_offset": 60, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 405, "col_offset": 20, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 407, "col_offset": 24, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 422, "col_offset": 17, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 424, "col_offset": 17, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 426, "col_offset": 17, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 428, "col_offset": 17, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 431, "col_offset": 17, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 450, "col_offset": 31, "nodeName": "f", "type": "file"}, {"lineNumber": 462, "col_offset": 30, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 465, "col_offset": 24, "nodeName": "write", "type": "Any"}, {"lineNumber": 465, "col_offset": 30, "nodeName": "obj", "type": "Any"}, {"lineNumber": 467, "col_offset": 31, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 468, "col_offset": 20, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 470, "col_offset": 25, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 470, "col_offset": 30, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 471, "col_offset": 35, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 473, "col_offset": 20, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 481, "col_offset": 28, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 481, "col_offset": 33, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 489, "col_offset": 31, "nodeName": "f", "type": "file"}, {"lineNumber": 499, "col_offset": 32, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 499, "col_offset": 37, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 507, "col_offset": 31, "nodeName": "f", "type": "file"}, {"lineNumber": 628, "col_offset": 21, "nodeName": "warnings", "type": "module"}, {"lineNumber": 629, "col_offset": 20, "nodeName": "warnings", "type": "module"}, {"lineNumber": 630, "col_offset": 56, "nodeName": "to_kwargs", "type": "Any"}, {"lineNumber": 636, "col_offset": 26, "nodeName": "fh", "type": "file"}, {"lineNumber": 307, "col_offset": 65, "nodeName": "kwarg", "type": "Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]]]"}, {"lineNumber": 310, "col_offset": 24, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 310, "col_offset": 40, "nodeName": "equals", "type": "Any"}, {"lineNumber": 310, "col_offset": 49, "nodeName": "e", "type": "Any"}, {"lineNumber": 318, "col_offset": 57, "nodeName": "variant", "type": "str"}, {"lineNumber": 322, "col_offset": 62, "nodeName": "offset", "type": "int"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "kwarg", "type": "Union[Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, str], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]"}, {"lineNumber": 361, "col_offset": 39, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 366, "col_offset": 52, "nodeName": "func", "type": "Any"}, {"lineNumber": 367, "col_offset": 72, "nodeName": "kwarg", "type": "Union[Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, str], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 368, "col_offset": 40, "nodeName": "equals", "type": "Any"}, {"lineNumber": 368, "col_offset": 56, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 381, "col_offset": 29, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 381, "col_offset": 34, "nodeName": "components", "type": "Union[List[nothing], List[Tuple[str, str, str, List[int]]]]"}, {"lineNumber": 387, "col_offset": 24, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 387, "col_offset": 40, "nodeName": "equals", "type": "Any"}, {"lineNumber": 387, "col_offset": 49, "nodeName": "e", "type": "Any"}, {"lineNumber": 401, "col_offset": 29, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 401, "col_offset": 34, "nodeName": "components", "type": "Union[List[nothing], List[Tuple[str, str, str, List[int]]]]"}, {"lineNumber": 407, "col_offset": 24, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 407, "col_offset": 40, "nodeName": "equals", "type": "Any"}, {"lineNumber": 407, "col_offset": 49, "nodeName": "e", "type": "Any"}, {"lineNumber": 440, "col_offset": 30, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 462, "col_offset": 42, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 465, "col_offset": 40, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 465, "col_offset": 62, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 471, "col_offset": 35, "nodeName": "f", "type": "file"}, {"lineNumber": 514, "col_offset": 58, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 310, "col_offset": 40, "nodeName": "o", "type": "Any"}, {"lineNumber": 359, "col_offset": 39, "nodeName": "seq_num", "type": "Union[functools.partial[nothing], str, int]"}, {"lineNumber": 366, "col_offset": 52, "nodeName": "constructor", "type": "functools.partial[nothing]"}, {"lineNumber": 368, "col_offset": 40, "nodeName": "observed", "type": "Any"}, {"lineNumber": 387, "col_offset": 40, "nodeName": "o", "type": "Any"}, {"lineNumber": 407, "col_offset": 40, "nodeName": "o", "type": "Any"}, {"lineNumber": 441, "col_offset": 28, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 361, "col_offset": 60, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 362, "col_offset": 69, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 363, "col_offset": 70, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 462, "col_offset": 63, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 463, "col_offset": 72, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 464, "col_offset": 73, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 363, "col_offset": 70, "nodeName": "np", "type": "module"}, {"lineNumber": 363, "col_offset": 79, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 364, "col_offset": 66, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 441, "col_offset": 49, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 441, "col_offset": 69, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 442, "col_offset": 59, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 364, "col_offset": 66, "nodeName": "np", "type": "module"}]