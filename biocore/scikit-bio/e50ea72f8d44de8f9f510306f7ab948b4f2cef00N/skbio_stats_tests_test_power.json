[{"lineNumber": 24, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "test__confidence_bound_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test__confidence_bound_df", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test__confidence_bound_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "meta", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "round", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "arange", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "meta", "type": "Dict[str, Union[Dict[str, Any], Dict[str, str]]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "test", "type": "Any"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "known", "type": "float"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "arange", "type": "Any"}, {"lineNumber": 43, "col_offset": 56, "nodeName": "nan", "type": "Any"}, {"lineNumber": 48, "col_offset": 56, "nodeName": "nan", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "power", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "x", "type": "Any"}]