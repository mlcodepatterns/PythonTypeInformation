[{"lineNumber": 147, "col_offset": 0, "nodeName": "_assert_series_equal", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 247, "col_offset": 0, "nodeName": "assert_data_frame_almost_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 299, "col_offset": 0, "nodeName": "assert_series_almost_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 316, "col_offset": 0, "nodeName": "assert_index_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "callers_filename", "type": "str"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "data_path", "type": "str"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "data_path", "type": "str"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "max_idx", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "max_arr1", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "max_arr2", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "sign_arr1", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "sign_arr2", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "wrn", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "differences", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "special_cases", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "path", "type": "str"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "subfolder", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "fn", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "ignore_method_names", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "_assert_frame_equal", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "samples", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "_assert_frame_equal", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "features", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "features", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "_assert_frame_equal", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "biplot_scores", "type": "Any"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "biplot_scores", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "_assert_frame_equal", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "sample_constraints", "type": "Any"}, {"lineNumber": 134, "col_offset": 49, "nodeName": "sample_constraints", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "_assert_series_equal", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "eigvals", "type": "Any"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "eigvals", "type": "Any"}, {"lineNumber": 139, "col_offset": 54, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "_assert_series_equal", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "proportion_explained", "type": "Any"}, {"lineNumber": 142, "col_offset": 52, "nodeName": "proportion_explained", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "left_values", "type": "Any"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "right_values", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "values", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "ignore_directionality", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "arr1", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "arr2", "type": "Any"}, {"lineNumber": 213, "col_offset": 7, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "sign", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "max_arr1", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "sign", "type": "Any"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "max_arr2", "type": "Any"}, {"lineNumber": 230, "col_offset": 10, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "sign_arr1", "type": "Any"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "sign_arr2", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "differences", "type": "Any"}, {"lineNumber": 244, "col_offset": 31, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 284, "col_offset": 27, "nodeName": "left", "type": "Any"}, {"lineNumber": 284, "col_offset": 33, "nodeName": "right", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "assert_index_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "index", "type": "Any"}, {"lineNumber": 296, "col_offset": 35, "nodeName": "index", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "assert_series_equal", "type": "Any"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "left", "type": "Any"}, {"lineNumber": 302, "col_offset": 34, "nodeName": "right", "type": "Any"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "assert_index_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "index", "type": "Any"}, {"lineNumber": 313, "col_offset": 35, "nodeName": "index", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "assert_index_equal", "type": "Any"}, {"lineNumber": 317, "col_offset": 27, "nodeName": "a", "type": "Any"}, {"lineNumber": 317, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "callers_filename", "type": "str"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "short_method_name", "type": "Any"}, {"lineNumber": 117, "col_offset": 49, "nodeName": "short_method_name", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "long_method_name", "type": "Any"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "long_method_name", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "left", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "right", "type": "Any"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 122, "col_offset": 46, "nodeName": "ignore_directionality", "type": "Any"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "left", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "right", "type": "Any"}, {"lineNumber": 126, "col_offset": 39, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 127, "col_offset": 46, "nodeName": "ignore_directionality", "type": "Any"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "left", "type": "Any"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "right", "type": "Any"}, {"lineNumber": 130, "col_offset": 39, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 131, "col_offset": 46, "nodeName": "ignore_directionality", "type": "Any"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "left", "type": "Any"}, {"lineNumber": 134, "col_offset": 49, "nodeName": "right", "type": "Any"}, {"lineNumber": 135, "col_offset": 39, "nodeName": "ignore_axis_labels", "type": "Any"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "ignore_directionality", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "left", "type": "Any"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "right", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "left", "type": "Any"}, {"lineNumber": 142, "col_offset": 52, "nodeName": "right", "type": "Any"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 149, "col_offset": 7, "nodeName": "left_s", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "right_s", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "values", "type": "Any"}, {"lineNumber": 152, "col_offset": 47, "nodeName": "values", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "ignore_index", "type": "Any"}, {"lineNumber": 162, "col_offset": 7, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "left_values", "type": "Any"}, {"lineNumber": 170, "col_offset": 45, "nodeName": "right_values", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "ignore_index", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "ignore_columns", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "float64", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "float64", "type": "Any"}, {"lineNumber": 213, "col_offset": 7, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 214, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "wrn", "type": "Any"}, {"lineNumber": 239, "col_offset": 51, "nodeName": "differences", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "special_cases", "type": "Any"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 18, "nodeName": "differences", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "pdt", "type": "Any"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "left", "type": "Any"}, {"lineNumber": 296, "col_offset": 35, "nodeName": "right", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "pdt", "type": "Any"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "left", "type": "Any"}, {"lineNumber": 313, "col_offset": 35, "nodeName": "right", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "pdt", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "ReallyEqualMixin"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "getouterframes", "type": "Callable[..., List[inspect.FrameInfo]]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "left", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "right", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "npt", "type": "module"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "left", "type": "Any"}, {"lineNumber": 117, "col_offset": 49, "nodeName": "right", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "npt", "type": "module"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "left", "type": "Any"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "right", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "left_s", "type": "Any"}, {"lineNumber": 150, "col_offset": 34, "nodeName": "right_s", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "npt", "type": "module"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "left_s", "type": "Any"}, {"lineNumber": 152, "col_offset": 47, "nodeName": "right_s", "type": "Any"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "assert_index_equal", "type": "Any"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "index", "type": "Any"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "index", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "left_values", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "right_values", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 40, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 57, "nodeName": "left_values", "type": "Any"}, {"lineNumber": 169, "col_offset": 57, "nodeName": "right_values", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "npt", "type": "module"}, {"lineNumber": 170, "col_offset": 67, "nodeName": "decimal", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "assert_index_equal", "type": "Any"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "index", "type": "Any"}, {"lineNumber": 173, "col_offset": 50, "nodeName": "index", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "assert_index_equal", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "columns", "type": "Any"}, {"lineNumber": 175, "col_offset": 52, "nodeName": "columns", "type": "Any"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 215, "col_offset": 67, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 216, "col_offset": 67, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "abs", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "max_idx", "type": "Any"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "max_idx", "type": "Any"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "isfinite", "type": "Any"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "differences", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "inspect", "type": "module"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "currentframe", "type": "Callable[[], Optional[types.FrameType]]"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "pdt", "type": "Any"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "left_s", "type": "Any"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "right_s", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "pdt", "type": "Any"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 173, "col_offset": 50, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "pdt", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "left_df", "type": "Any"}, {"lineNumber": 175, "col_offset": 52, "nodeName": "right_df", "type": "Any"}, {"lineNumber": 215, "col_offset": 67, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 216, "col_offset": 67, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "inspect", "type": "module"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "arr2", "type": "numpy.ndarray"}]