[{"lineNumber": 19, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 61, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 61, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "make_nt_substitution_matrix", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "make_nt_substitution_matrix", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "make_nt_substitution_matrix", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "make_nt_substitution_matrix", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "make_nt_substitution_matrix", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 83, "col_offset": 70, "nodeName": "m", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 104, "col_offset": 70, "nodeName": "m", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 114, "col_offset": 70, "nodeName": "m", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}]