[{"lineNumber": 24, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 221, "col_offset": 18, "nodeName": "GenbankIOTests", "type": "Type[GenbankIOTests]"}, {"lineNumber": 356, "col_offset": 18, "nodeName": "GenbankIOTests", "type": "Type[GenbankIOTests]"}, {"lineNumber": 409, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "positive_fps", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "negative_fps", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "single_fp", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "single_lower_fp", "type": "str"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "multi_fp", "type": "str"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "locus", "type": "Tuple[Tuple[List[str], Dict[str, Union[int, str, datetime.datetime]]], Tuple[List[str], Dict[str, Optional[Union[int, str, datetime.datetime]]]], Tuple[List[str], Dict[str, Optional[Union[int, str, datetime.datetime]]]]]"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "line", "type": "List[str]"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "lines", "type": "List[List[str]]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "length", "type": "int"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "c", "type": "Union[Type[skbio.sequence._sequence.Sequence], Type[skbio.sequence._protein.Protein]]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "exp", "type": "Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Dict[str, Union[str, bool, int]]]]], Any, Any]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "exp", "type": "Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Union[Dict[str, Union[str, bool, int]], Dict[str, Union[str, int, bool, List[str]]]]]]], Any, Any]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "exp", "type": "Tuple[str, Dict[str, Union[str, Dict[str, str], List[Dict[str, str]], Dict[str, Optional[Union[str, int, datetime.datetime]]], List[Dict[str, Union[str, bool, int]]]]], Any, Type[skbio.sequence._protein.Protein]]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "locus", "type": "Tuple[Tuple[List[str], Dict[str, Union[int, str, datetime.datetime]]], Tuple[List[str], Dict[str, Optional[Union[int, str, datetime.datetime]]]], Tuple[List[str], Dict[str, Optional[Union[int, str, datetime.datetime]]]]]"}, {"lineNumber": 363, "col_offset": 36, "nodeName": "single", "type": "Tuple[str, Dict[str, Dict[str, Optional[Union[str, int, datetime.datetime]]]], None, Type[skbio.sequence._protein.Protein]]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "obj", "type": "skbio.sequence._protein.Protein"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "fh", "type": "io.StringIO"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "fh", "type": "io.StringIO"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "fh", "type": "io.StringIO"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "self", "type": "SnifferTests"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "self", "type": "SnifferTests"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "GenbankIOTests"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "GenbankIOTests"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "GenbankIOTests"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 229, "col_offset": -1, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 50, "nodeName": "exp", "type": "Dict[str, str]"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "serialized", "type": "Any"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "j", "type": "Any"}, {"lineNumber": 274, "col_offset": 18, "nodeName": "k", "type": "Any"}, {"lineNumber": 274, "col_offset": 23, "nodeName": "zip", "type": "Any"}, {"lineNumber": 274, "col_offset": 27, "nodeName": "lines", "type": "List[List[str]]"}, {"lineNumber": 274, "col_offset": 34, "nodeName": "kwargs", "type": "List[Dict[str, Union[bool, str]]]"}, {"lineNumber": 274, "col_offset": 42, "nodeName": "expects", "type": "List[Union[str, Tuple[str, str]]]"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 304, "col_offset": 21, "nodeName": "expect", "type": "Any"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "zip", "type": "Any"}, {"lineNumber": 304, "col_offset": 35, "nodeName": "examples", "type": "List[str]"}, {"lineNumber": 304, "col_offset": 45, "nodeName": "expects", "type": "List[Tuple[Dict[str, bool], numpy.ndarray]]"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "parsed", "type": "Tuple[Dict[str, bool], Any]"}, {"lineNumber": 311, "col_offset": 18, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "obs", "type": "Any"}, {"lineNumber": 318, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "exp", "type": "nothing"}, {"lineNumber": 325, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 325, "col_offset": 32, "nodeName": "multi", "type": "Tuple[Tuple[str, Dict[str, Union[str, Dict[str, str], List[Dict[str, str]], Dict[str, Optional[Union[str, int, datetime.datetime]]], List[Dict[str, Union[str, bool, int]]]]], Any, Type[skbio.sequence._protein.Protein]], Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Union[Dict[str, Union[str, bool, int]], Dict[str, Union[str, int, bool, List[str]]]]]]], Any, Any], Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Dict[str, Union[str, bool, int]]]]], Any, Any]]"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 333, "col_offset": 14, "nodeName": "multi", "type": "Tuple[Tuple[str, Dict[str, Union[str, Dict[str, str], List[Dict[str, str]], Dict[str, Optional[Union[str, int, datetime.datetime]]], List[Dict[str, Union[str, bool, int]]]]], Any, Type[skbio.sequence._protein.Protein]], Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Union[Dict[str, Union[str, bool, int]], Dict[str, Union[str, int, bool, List[str]]]]]]], Any, Any], Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Dict[str, Union[str, bool, int]]]]], Any, Any]]"}, {"lineNumber": 334, "col_offset": 14, "nodeName": "_genbank_to_dna", "type": "Any"}, {"lineNumber": 334, "col_offset": 30, "nodeName": "multi_fp", "type": "str"}, {"lineNumber": 335, "col_offset": 14, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "exp", "type": "Any"}, {"lineNumber": 337, "col_offset": 30, "nodeName": "obs", "type": "Any"}, {"lineNumber": 341, "col_offset": 14, "nodeName": "multi", "type": "Tuple[Tuple[str, Dict[str, Union[str, Dict[str, str], List[Dict[str, str]], Dict[str, Optional[Union[str, int, datetime.datetime]]], List[Dict[str, Union[str, bool, int]]]]], Any, Type[skbio.sequence._protein.Protein]], Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Union[Dict[str, Union[str, bool, int]], Dict[str, Union[str, int, bool, List[str]]]]]]], Any, Any], Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Dict[str, Union[str, bool, int]]]]], Any, Any]]"}, {"lineNumber": 342, "col_offset": 14, "nodeName": "_genbank_to_rna", "type": "Any"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "multi_fp", "type": "str"}, {"lineNumber": 343, "col_offset": 14, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "exp", "type": "Any"}, {"lineNumber": 345, "col_offset": 30, "nodeName": "obs", "type": "Any"}, {"lineNumber": 349, "col_offset": 14, "nodeName": "multi", "type": "Tuple[Tuple[str, Dict[str, Union[str, Dict[str, str], List[Dict[str, str]], Dict[str, Optional[Union[str, int, datetime.datetime]]], List[Dict[str, Union[str, bool, int]]]]], Any, Type[skbio.sequence._protein.Protein]], Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Union[Dict[str, Union[str, bool, int]], Dict[str, Union[str, int, bool, List[str]]]]]]], Any, Any], Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Dict[str, Union[str, bool, int]]]]], Any, Any]]"}, {"lineNumber": 350, "col_offset": 14, "nodeName": "_genbank_to_protein", "type": "Any"}, {"lineNumber": 350, "col_offset": 34, "nodeName": "multi_fp", "type": "str"}, {"lineNumber": 351, "col_offset": 14, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "exp", "type": "skbio.sequence._protein.Protein"}, {"lineNumber": 353, "col_offset": 30, "nodeName": "obs", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "serialized", "type": "Any"}, {"lineNumber": 358, "col_offset": 24, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "seq", "type": "str"}, {"lineNumber": 363, "col_offset": 13, "nodeName": "md", "type": "Dict[str, Dict[str, Optional[Union[str, int, datetime.datetime]]]]"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "pmd", "type": "None"}, {"lineNumber": 363, "col_offset": 22, "nodeName": "constructor", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 363, "col_offset": 36, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 364, "col_offset": 14, "nodeName": "constructor", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 364, "col_offset": 26, "nodeName": "seq", "type": "str"}, {"lineNumber": 364, "col_offset": 31, "nodeName": "md", "type": "Dict[str, Dict[str, Optional[Union[str, int, datetime.datetime]]]]"}, {"lineNumber": 364, "col_offset": 35, "nodeName": "pmd", "type": "Any"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "_generator_to_genbank", "type": "Any"}, {"lineNumber": 366, "col_offset": 37, "nodeName": "fh", "type": "io.StringIO"}, {"lineNumber": 367, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 370, "col_offset": 46, "nodeName": "fh", "type": "TextIO"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "exp", "type": "str"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 373, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 373, "col_offset": 30, "nodeName": "exp", "type": "str"}, {"lineNumber": 376, "col_offset": 13, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 377, "col_offset": 46, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 377, "col_offset": 56, "nodeName": "multi", "type": "Tuple[Tuple[str, Dict[str, Union[str, Dict[str, str], List[Dict[str, str]], Dict[str, Optional[Union[str, int, datetime.datetime]]], List[Dict[str, Union[str, bool, int]]]]], Any, Type[skbio.sequence._protein.Protein]], Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Union[Dict[str, Union[str, bool, int]], Dict[str, Union[str, int, bool, List[str]]]]]]], Any, Any], Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Dict[str, Union[str, bool, int]]]]], Any, Any]]"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "obj", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "obs", "type": "str"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 383, "col_offset": 39, "nodeName": "fh", "type": "TextIO"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "exp", "type": "str"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "_protein_to_genbank", "type": "Any"}, {"lineNumber": 390, "col_offset": 19, "nodeName": "_rna_to_genbank", "type": "Any"}, {"lineNumber": 391, "col_offset": 19, "nodeName": "_dna_to_genbank", "type": "Any"}, {"lineNumber": 392, "col_offset": 13, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 393, "col_offset": 46, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 393, "col_offset": 56, "nodeName": "multi", "type": "Tuple[Tuple[str, Dict[str, Union[str, Dict[str, str], List[Dict[str, str]], Dict[str, Optional[Union[str, int, datetime.datetime]]], List[Dict[str, Union[str, bool, int]]]]], Any, Type[skbio.sequence._protein.Protein]], Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Union[Dict[str, Union[str, bool, int]], Dict[str, Union[str, int, bool, List[str]]]]]]], Any, Any], Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Dict[str, Union[str, bool, int]]]]], Any, Any]]"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "obs", "type": "str"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 403, "col_offset": 39, "nodeName": "fh", "type": "TextIO"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "exp", "type": "str"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "map", "type": "Any"}, {"lineNumber": 26, "col_offset": 37, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "map", "type": "Any"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "_parse_reference", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 237, "col_offset": 42, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 241, "col_offset": 55, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "_parse_loc_str", "type": "Callable[[Any, Any], Tuple[Dict[str, bool], Any]]"}, {"lineNumber": 305, "col_offset": 36, "nodeName": "example", "type": "Any"}, {"lineNumber": 305, "col_offset": 45, "nodeName": "length", "type": "int"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 312, "col_offset": 18, "nodeName": "next", "type": "Callable"}, {"lineNumber": 313, "col_offset": 18, "nodeName": "c", "type": "Union[Type[skbio.sequence._protein.Protein], Type[skbio.sequence._sequence.Sequence]]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 29, "nodeName": "exp", "type": "Union[skbio.sequence._protein.Protein, skbio.sequence._sequence.Sequence]"}, {"lineNumber": 315, "col_offset": 34, "nodeName": "obs", "type": "Any"}, {"lineNumber": 318, "col_offset": 32, "nodeName": "_genbank_to_generator", "type": "Any"}, {"lineNumber": 318, "col_offset": 54, "nodeName": "multi_fp", "type": "str"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "seq", "type": "Any"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "md", "type": "Any"}, {"lineNumber": 319, "col_offset": 21, "nodeName": "pmd", "type": "Any"}, {"lineNumber": 319, "col_offset": 26, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 319, "col_offset": 40, "nodeName": "multi", "type": "Tuple[Tuple[str, Dict[str, Union[str, Dict[str, str], List[Dict[str, str]], Dict[str, Optional[Union[str, int, datetime.datetime]]], List[Dict[str, Union[str, bool, int]]]]], Any, Type[skbio.sequence._protein.Protein]], Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Union[Dict[str, Union[str, bool, int]], Dict[str, Union[str, int, bool, List[str]]]]]]], Any, Any], Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Dict[str, Union[str, bool, int]]]]], Any, Any]]"}, {"lineNumber": 320, "col_offset": 18, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 320, "col_offset": 30, "nodeName": "seq", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 322, "col_offset": 29, "nodeName": "exp", "type": "Any"}, {"lineNumber": 322, "col_offset": 34, "nodeName": "obs", "type": "Any"}, {"lineNumber": 325, "col_offset": 32, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 326, "col_offset": 18, "nodeName": "_genbank_to_biological_sequence", "type": "Any"}, {"lineNumber": 326, "col_offset": 50, "nodeName": "multi_fp", "type": "str"}, {"lineNumber": 327, "col_offset": 18, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "exp", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 329, "col_offset": 34, "nodeName": "obs", "type": "Any"}, {"lineNumber": 333, "col_offset": 14, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 334, "col_offset": 30, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 335, "col_offset": 18, "nodeName": "exp", "type": "Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Dict[str, Union[str, bool, int]]]]], Any, Any]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 341, "col_offset": 14, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 343, "col_offset": 18, "nodeName": "exp", "type": "Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Union[Dict[str, Union[str, bool, int]], Dict[str, Union[str, int, bool, List[str]]]]]]], Any, Any]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 349, "col_offset": 14, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 350, "col_offset": 34, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 351, "col_offset": 22, "nodeName": "exp", "type": "Tuple[str, Dict[str, Union[str, Dict[str, str], List[Dict[str, str]], Dict[str, Optional[Union[str, int, datetime.datetime]]], List[Dict[str, Union[str, bool, int]]]]], Any, Type[skbio.sequence._protein.Protein]]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "io", "type": "module"}, {"lineNumber": 366, "col_offset": 31, "nodeName": "obj", "type": "skbio.sequence._protein.Protein"}, {"lineNumber": 367, "col_offset": 14, "nodeName": "fh", "type": "io.StringIO"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "fh", "type": "io.StringIO"}, {"lineNumber": 370, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 370, "col_offset": 21, "nodeName": "single_lower_fp", "type": "str"}, {"lineNumber": 371, "col_offset": 18, "nodeName": "read", "type": "Callable"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 376, "col_offset": 13, "nodeName": "io", "type": "module"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "seq", "type": "nothing"}, {"lineNumber": 377, "col_offset": 21, "nodeName": "md", "type": "nothing"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "pmd", "type": "nothing"}, {"lineNumber": 377, "col_offset": 30, "nodeName": "constructor", "type": "nothing"}, {"lineNumber": 377, "col_offset": 56, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 378, "col_offset": 18, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "seq", "type": "nothing"}, {"lineNumber": 378, "col_offset": 32, "nodeName": "md", "type": "nothing"}, {"lineNumber": 378, "col_offset": 36, "nodeName": "pmd", "type": "nothing"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "_biological_sequence_to_genbank", "type": "Any"}, {"lineNumber": 379, "col_offset": 44, "nodeName": "obj", "type": "skbio.sequence._sequence.Sequence"}, {"lineNumber": 379, "col_offset": 49, "nodeName": "fh", "type": "io.StringIO"}, {"lineNumber": 380, "col_offset": 18, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "fh", "type": "io.StringIO"}, {"lineNumber": 383, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 383, "col_offset": 21, "nodeName": "multi_fp", "type": "str"}, {"lineNumber": 384, "col_offset": 18, "nodeName": "read", "type": "Callable"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 386, "col_offset": 25, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 386, "col_offset": 38, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 392, "col_offset": 13, "nodeName": "io", "type": "module"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "seq", "type": "nothing"}, {"lineNumber": 393, "col_offset": 21, "nodeName": "md", "type": "nothing"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "pmd", "type": "nothing"}, {"lineNumber": 393, "col_offset": 30, "nodeName": "constructor", "type": "nothing"}, {"lineNumber": 393, "col_offset": 56, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 396, "col_offset": 16, "nodeName": "seq", "type": "nothing"}, {"lineNumber": 397, "col_offset": 16, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 397, "col_offset": 30, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 398, "col_offset": 18, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 398, "col_offset": 30, "nodeName": "seq", "type": "nothing"}, {"lineNumber": 398, "col_offset": 35, "nodeName": "md", "type": "nothing"}, {"lineNumber": 398, "col_offset": 39, "nodeName": "pmd", "type": "nothing"}, {"lineNumber": 399, "col_offset": 23, "nodeName": "obj", "type": "Any"}, {"lineNumber": 399, "col_offset": 28, "nodeName": "fh", "type": "io.StringIO"}, {"lineNumber": 400, "col_offset": 18, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "fh", "type": "io.StringIO"}, {"lineNumber": 403, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 403, "col_offset": 21, "nodeName": "multi_fp", "type": "str"}, {"lineNumber": 404, "col_offset": 18, "nodeName": "read", "type": "Callable"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 406, "col_offset": 25, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 406, "col_offset": 38, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "SnifferTests"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "_genbank_sniffer", "type": "Any"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "fp", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "SnifferTests"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "_genbank_sniffer", "type": "Any"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "fp", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 241, "col_offset": 29, "nodeName": "_parse_locus", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 241, "col_offset": 42, "nodeName": "serialized", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "GenbankFormatError", "type": "Type[skbio.io._exception.GenbankFormatError]"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "_parse_locus", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 257, "col_offset": 29, "nodeName": "line", "type": "List[str]"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 275, "col_offset": 32, "nodeName": "_parse_section_default", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 55, "nodeName": "i", "type": "Any"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 293, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 295, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 306, "col_offset": 33, "nodeName": "parsed", "type": "Tuple[Dict[str, bool], Any]"}, {"lineNumber": 306, "col_offset": 44, "nodeName": "expect", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "nptest", "type": "Any"}, {"lineNumber": 307, "col_offset": 32, "nodeName": "parsed", "type": "Tuple[Dict[str, bool], Any]"}, {"lineNumber": 307, "col_offset": 43, "nodeName": "expect", "type": "Any"}, {"lineNumber": 312, "col_offset": 23, "nodeName": "_genbank_to_generator", "type": "Any"}, {"lineNumber": 312, "col_offset": 45, "nodeName": "single_fp", "type": "str"}, {"lineNumber": 313, "col_offset": 20, "nodeName": "single", "type": "Tuple[str, Dict[str, Dict[str, Optional[Union[str, int, datetime.datetime]]]], None, Type[skbio.sequence._protein.Protein]]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 318, "col_offset": 54, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 319, "col_offset": 40, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 319, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 320, "col_offset": 44, "nodeName": "md", "type": "Any"}, {"lineNumber": 321, "col_offset": 50, "nodeName": "pmd", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 326, "col_offset": 50, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 327, "col_offset": 27, "nodeName": "exp", "type": "nothing"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 334, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 335, "col_offset": 35, "nodeName": "exp", "type": "Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Dict[str, Union[str, bool, int]]]]], Any, Any]"}, {"lineNumber": 336, "col_offset": 38, "nodeName": "exp", "type": "Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Dict[str, Union[str, bool, int]]]]], Any, Any]"}, {"lineNumber": 342, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 343, "col_offset": 35, "nodeName": "exp", "type": "Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Union[Dict[str, Union[str, bool, int]], Dict[str, Union[str, int, bool, List[str]]]]]]], Any, Any]"}, {"lineNumber": 344, "col_offset": 54, "nodeName": "exp", "type": "Tuple[str, Dict[str, Union[str, Dict[str, str], Dict[str, Union[str, int, datetime.datetime]], List[Union[Dict[str, Union[str, bool, int]], Dict[str, Union[str, int, bool, List[str]]]]]]], Any, Any]"}, {"lineNumber": 350, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 351, "col_offset": 39, "nodeName": "exp", "type": "Tuple[str, Dict[str, Union[str, Dict[str, str], List[Dict[str, str]], Dict[str, Optional[Union[str, int, datetime.datetime]]], List[Dict[str, Union[str, bool, int]]]]], Any, Type[skbio.sequence._protein.Protein]]"}, {"lineNumber": 352, "col_offset": 58, "nodeName": "exp", "type": "Tuple[str, Dict[str, Union[str, Dict[str, str], List[Dict[str, str]], Dict[str, Optional[Union[str, int, datetime.datetime]]], List[Dict[str, Union[str, bool, int]]]]], Any, Type[skbio.sequence._protein.Protein]]"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "_serialize_locus", "type": "Callable[..., str]"}, {"lineNumber": 360, "col_offset": 42, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 370, "col_offset": 13, "nodeName": "io", "type": "module"}, {"lineNumber": 370, "col_offset": 21, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 371, "col_offset": 18, "nodeName": "fh", "type": "TextIO"}, {"lineNumber": 380, "col_offset": 18, "nodeName": "fh", "type": "io.StringIO"}, {"lineNumber": 383, "col_offset": 13, "nodeName": "io", "type": "module"}, {"lineNumber": 383, "col_offset": 21, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 384, "col_offset": 18, "nodeName": "fh", "type": "TextIO"}, {"lineNumber": 386, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 386, "col_offset": 38, "nodeName": "exp", "type": "str"}, {"lineNumber": 396, "col_offset": 22, "nodeName": "replace", "type": "nothing"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "writers", "type": "List[Any]"}, {"lineNumber": 400, "col_offset": 18, "nodeName": "fh", "type": "io.StringIO"}, {"lineNumber": 403, "col_offset": 13, "nodeName": "io", "type": "module"}, {"lineNumber": 403, "col_offset": 21, "nodeName": "self", "type": "WriterTests"}, {"lineNumber": 404, "col_offset": 18, "nodeName": "fh", "type": "TextIO"}, {"lineNumber": 406, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 406, "col_offset": 38, "nodeName": "exp", "type": "str"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 275, "col_offset": 60, "nodeName": "j", "type": "Any"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 291, "col_offset": 66, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 293, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 66, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 295, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 66, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 297, "col_offset": 66, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 299, "col_offset": 66, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 301, "col_offset": 66, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 303, "col_offset": 66, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 312, "col_offset": 45, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 312, "col_offset": 73, "nodeName": "c", "type": "Union[Type[skbio.sequence._protein.Protein], Type[skbio.sequence._sequence.Sequence]]"}, {"lineNumber": 313, "col_offset": 20, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 313, "col_offset": 45, "nodeName": "single", "type": "Tuple[str, Dict[str, Dict[str, Optional[Union[str, int, datetime.datetime]]]], None, Type[skbio.sequence._protein.Protein]]"}, {"lineNumber": 314, "col_offset": 40, "nodeName": "single", "type": "Tuple[str, Dict[str, Dict[str, Optional[Union[str, int, datetime.datetime]]]], None, Type[skbio.sequence._protein.Protein]]"}, {"lineNumber": 326, "col_offset": 73, "nodeName": "i", "type": "int"}, {"lineNumber": 327, "col_offset": 44, "nodeName": "exp", "type": "nothing"}, {"lineNumber": 328, "col_offset": 47, "nodeName": "exp", "type": "nothing"}, {"lineNumber": 360, "col_offset": 51, "nodeName": "serialized", "type": "Any"}, {"lineNumber": 396, "col_offset": 22, "nodeName": "seq", "type": "nothing"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "ones", "type": "Any"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "ones", "type": "Any"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 174, "col_offset": 30, "nodeName": "ones", "type": "Any"}, {"lineNumber": 175, "col_offset": 30, "nodeName": "ones", "type": "Any"}, {"lineNumber": 204, "col_offset": 32, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 313, "col_offset": 45, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 314, "col_offset": 40, "nodeName": "self", "type": "ReaderTests"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 47, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 47, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 174, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 48, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 175, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 48, "nodeName": "bool", "type": "Type[bool]"}]