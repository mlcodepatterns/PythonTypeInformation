[{"lineNumber": 16, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "test_nondegenerate_chars", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "test_degenerate_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "test_complement_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_motif_purine_run", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test_motif_pyrimidine_run", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "unittest", "type": "module"}, {"lineNumber": 69, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "exp", "type": "Set[str]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "seq", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "seq", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "seq", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "seq", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "seq", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "seq", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 19, "col_offset": 54, "nodeName": "exp", "type": "Set[str]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 20, "col_offset": 50, "nodeName": "exp", "type": "Set[str]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 30, "col_offset": 49, "nodeName": "exp", "type": "Dict[str, Set[str]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 31, "col_offset": 45, "nodeName": "exp", "type": "Dict[str, Set[str]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "exp", "type": "Dict[str, str]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 40, "col_offset": 45, "nodeName": "exp", "type": "Dict[str, str]"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestDNA"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestDNA"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 24, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 25, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 27, "col_offset": 39, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 27, "col_offset": 61, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 28, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestDNA"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestDNA"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestDNA"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestDNA"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestDNA"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestDNA"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestDNA"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestDNA"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestDNA"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestDNA"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "find_motifs", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "seq", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "seq", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "seq", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "seq", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "seq", "type": "Any"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "seq", "type": "Any"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 65, "col_offset": 53, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "seq", "type": "Any"}, {"lineNumber": 65, "col_offset": 53, "nodeName": "seq", "type": "Any"}]