[{"lineNumber": 19, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_is_clustal_seq_line", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "test_last_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "test_delete_trailing_number", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "test_null", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "test_minimal", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_two", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "test_real", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_bad", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "test_space_labels", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "MINIMAL", "type": "str"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "TWO", "type": "List[str]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "BAD", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 0, "nodeName": "SPACE_LABELS", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 120, "col_offset": -1, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 127, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "ic", "type": "Any"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "_is_clustal_seq_line", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "dtn", "type": "Any"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "_delete_trailing_number", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "ic", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "ic", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "parse_clustal", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "parse_clustal", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "parse_clustal", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "TWO", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "parse_clustal", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "REAL", "type": "List[str]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "parse_clustal", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "BAD", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "parse_clustal", "type": "Any"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "SPACE_LABELS", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "ic", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "ic", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "ic", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "ic", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "ic", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "ClustalTests"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "last_space", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "ClustalTests"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "last_space", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "ClustalTests"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "last_space", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "ClustalTests"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "dtn", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "ClustalTests"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "dtn", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "ClustalTests"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "dtn", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "ClustalTests"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "dtn", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "ClustalTests"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "dtn", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "ClustalParserTests"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "result", "type": "Any"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "MINIMAL", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "ClustalParserTests"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "result", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "ClustalParserTests"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "result", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "ClustalParserTests"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "ClustalParserTests"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "result", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "RecordError", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "ClustalParserTests"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "result", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "self", "type": "ClustalParserTests"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "parse_clustal", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "BAD", "type": "List[str]"}]