[{"lineNumber": 20, "col_offset": 25, "nodeName": "with_metaclass", "type": "Any"}, {"lineNumber": 20, "col_offset": 40, "nodeName": "ABCMeta", "type": "Type[abc.ABCMeta]"}, {"lineNumber": 20, "col_offset": 49, "nodeName": "IUPACSequence", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "seq_iterator", "type": "Union[reversed[Any], NucleotideSequence]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "quality", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "quality", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "gaps", "type": "str"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "acceptable", "type": "str"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "pat", "type": "Pattern[str]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "hits", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "quality", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "_to", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "_string", "type": "Any"}, {"lineNumber": 114, "col_offset": 53, "nodeName": "_string", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "complement", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "escape", "type": "Callable"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "allow_gaps", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "gaps", "type": "str"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "pat_str", "type": "str"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "pat_str", "type": "str"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "slices_from_regex", "type": "Any"}, {"lineNumber": 192, "col_offset": 43, "nodeName": "pat", "type": "Pattern[str]"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "allow_gaps", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "base", "type": "Any"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "seq_iterator", "type": "Union[NucleotideSequence, reversed[Any]]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "_has_quality", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "quality", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "quality", "type": "Any"}, {"lineNumber": 114, "col_offset": 53, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 185, "col_offset": 13, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "pat_str", "type": "str"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "re", "type": "module"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "degapped", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "reverse_complement", "type": "Any"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 184, "col_offset": 43, "nodeName": "acceptable", "type": "str"}, {"lineNumber": 184, "col_offset": 55, "nodeName": "min_length", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "degap", "type": "Any"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "min_length", "type": "Any"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "hits", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "base", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "other", "type": "Any"}, {"lineNumber": 186, "col_offset": 45, "nodeName": "acceptable", "type": "str"}, {"lineNumber": 186, "col_offset": 57, "nodeName": "min_length", "type": "Any"}, {"lineNumber": 188, "col_offset": 58, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "degapped", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "hits", "type": "Any"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "self", "type": "NucleotideSequence"}, {"lineNumber": 194, "col_offset": 32, "nodeName": "hits", "type": "Any"}]