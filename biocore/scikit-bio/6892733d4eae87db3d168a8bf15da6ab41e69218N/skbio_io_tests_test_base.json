[{"lineNumber": 24, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 255, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 273, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 255, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 273, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 354, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "all_sanger_ascii", "type": "str"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "all_illumina13_ascii", "type": "str"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "all_illumina18_ascii", "type": "str"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "ascii_chars", "type": "str"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "all_sanger_ascii", "type": "str"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "all_illumina13_ascii", "type": "str"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "all_illumina18_ascii", "type": "str"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "ascii_chars", "type": "str"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "obs", "type": "str"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "gen", "type": "Generator[str, Any, None]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "obs", "type": "Tuple[Any, Any]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "obs", "type": "Tuple[Any, Any]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "obs", "type": "Tuple[Any, Any]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "obs", "type": "Tuple[Any, Any]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "gen", "type": "Generator[Union[skbio.sequence._sequence.Sequence, skbio.sequence._rna.RNA, skbio.sequence._dna.DNA], Any, None]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "obs", "type": "List[Tuple[Any, str, Any]]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "obs", "type": "List[Tuple[Any, str, Any]]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "obs", "type": "List[Tuple[Any, str, Any]]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 55, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[NotImplementedError]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "all_sanger_ascii", "type": "str"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "all_illumina13_ascii", "type": "str"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "all_illumina18_ascii", "type": "str"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 112, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "ascii_chars", "type": "str"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 121, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[NotImplementedError]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "all_sanger_ascii", "type": "str"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 177, "col_offset": 44, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "all_illumina13_ascii", "type": "str"}, {"lineNumber": 188, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 193, "col_offset": 44, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "all_illumina18_ascii", "type": "str"}, {"lineNumber": 204, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 14, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 209, "col_offset": 44, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "obs", "type": "str"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "ascii_chars", "type": "str"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 223, "col_offset": 44, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "TestGetNthSequence"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "generator", "type": "Callable[[], Any]"}, {"lineNumber": 237, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "_get_nth_sequence", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 251, "col_offset": 34, "nodeName": "gen", "type": "Generator[str, Any, None]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "_parse_fasta_like_header", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "obs", "type": "Tuple[Any, Any]"}, {"lineNumber": 261, "col_offset": 14, "nodeName": "_parse_fasta_like_header", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "obs", "type": "Tuple[Any, Any]"}, {"lineNumber": 265, "col_offset": 14, "nodeName": "_parse_fasta_like_header", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "obs", "type": "Tuple[Any, Any]"}, {"lineNumber": 269, "col_offset": 14, "nodeName": "_parse_fasta_like_header", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "obs", "type": "Tuple[Any, Any]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "TestFormatFASTALikeRecords"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "generator", "type": "Callable[[], Any]"}, {"lineNumber": 291, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 294, "col_offset": 20, "nodeName": "zip", "type": "Any"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "obs", "type": "List[Tuple[Any, str, Any]]"}, {"lineNumber": 294, "col_offset": 29, "nodeName": "exp", "type": "List[Union[Tuple[str, str, Any], Tuple[str, str, None], Tuple[str, str, List[int]]]]"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "zip", "type": "Any"}, {"lineNumber": 307, "col_offset": 24, "nodeName": "obs", "type": "List[Tuple[Any, str, Any]]"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "exp", "type": "List[Union[Tuple[str, str, Any], Tuple[str, str, None], Tuple[str, str, List[int]]]]"}, {"lineNumber": 317, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 320, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 320, "col_offset": 20, "nodeName": "zip", "type": "Any"}, {"lineNumber": 320, "col_offset": 24, "nodeName": "obs", "type": "List[Tuple[Any, str, Any]]"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "exp", "type": "List[Union[Tuple[str, str, Any], Tuple[str, str, None], Tuple[str, str, List[int]]]]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "ChunkStrTests"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "_chunk_str", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "ChunkStrTests"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "_chunk_str", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "ChunkStrTests"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "_chunk_str", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "ChunkStrTests"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "_chunk_str", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "ChunkStrTests"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "_chunk_str", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "ChunkStrTests"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "_chunk_str", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "ChunkStrTests"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "_chunk_str", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "ChunkStrTests"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "_chunk_str", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "ChunkStrTests"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "_chunk_str", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "ChunkStrTests"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "_chunk_str", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "ChunkStrTests"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "_chunk_str", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "ChunkStrTests"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "_chunk_str", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "_chunk_str", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "_chunk_str", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "exception", "type": "NotImplementedError"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "ascii_chars", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "ascii_chars", "type": "str"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "_decode_qual_to_phred", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "ascii_chars", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 132, "col_offset": 44, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 133, "col_offset": 39, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 142, "col_offset": 36, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 149, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 149, "col_offset": 44, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "exception", "type": "NotImplementedError"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 174, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "npt", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "npt", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 201, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 209, "col_offset": 14, "nodeName": "npt", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 215, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "_encode_phred_to_qual", "type": "Callable[..., str]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 220, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 220, "col_offset": 32, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 221, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 221, "col_offset": 37, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "npt", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "range", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "_get_nth_sequence", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "gen", "type": "Generator[str, Any, None]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "TestGetNthSequence"}, {"lineNumber": 240, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 240, "col_offset": 43, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "TestGetNthSequence"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 241, "col_offset": 31, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 244, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "_get_nth_sequence", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "gen", "type": "Generator[str, Any, None]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "TestGetNthSequence"}, {"lineNumber": 247, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TestGetNthSequence"}, {"lineNumber": 248, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 248, "col_offset": 33, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 251, "col_offset": 34, "nodeName": "self", "type": "TestGetNthSequence"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "TestGetNthSequence"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "TestParseFASTALikeHeader"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TestParseFASTALikeHeader"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "TestParseFASTALikeHeader"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "TestParseFASTALikeHeader"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "_format_fasta_like_records", "type": "Callable[[Any, Any, Any, Any], Generator[Tuple[Any, str, Any], Any, None]]"}, {"lineNumber": 291, "col_offset": 46, "nodeName": "gen", "type": "Generator[Union[skbio.sequence._sequence.Sequence, skbio.sequence._rna.RNA, skbio.sequence._dna.DNA], Any, None]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "self", "type": "TestFormatFASTALikeRecords"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 293, "col_offset": 29, "nodeName": "obs", "type": "List[Tuple[Any, str, Any]]"}, {"lineNumber": 293, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 293, "col_offset": 39, "nodeName": "exp", "type": "List[Union[Tuple[str, str, Any], Tuple[str, str, None], Tuple[str, str, List[int]]]]"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "o", "type": "Any"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "e", "type": "Any"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "_format_fasta_like_records", "type": "Callable[[Any, Any, Any, Any], Generator[Tuple[Any, str, Any], Any, None]]"}, {"lineNumber": 304, "col_offset": 46, "nodeName": "gen", "type": "Generator[Union[skbio.sequence._sequence.Sequence, skbio.sequence._rna.RNA, skbio.sequence._dna.DNA], Any, None]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "TestFormatFASTALikeRecords"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "obs", "type": "List[Tuple[Any, str, Any]]"}, {"lineNumber": 306, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 306, "col_offset": 39, "nodeName": "exp", "type": "List[Union[Tuple[str, str, Any], Tuple[str, str, None], Tuple[str, str, List[int]]]]"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 308, "col_offset": 29, "nodeName": "o", "type": "Any"}, {"lineNumber": 308, "col_offset": 32, "nodeName": "e", "type": "Any"}, {"lineNumber": 317, "col_offset": 19, "nodeName": "_format_fasta_like_records", "type": "Callable[[Any, Any, Any, Any], Generator[Tuple[Any, str, Any], Any, None]]"}, {"lineNumber": 317, "col_offset": 46, "nodeName": "gen", "type": "Generator[Union[skbio.sequence._sequence.Sequence, skbio.sequence._rna.RNA, skbio.sequence._dna.DNA], Any, None]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "TestFormatFASTALikeRecords"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 319, "col_offset": 29, "nodeName": "obs", "type": "List[Tuple[Any, str, Any]]"}, {"lineNumber": 319, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 319, "col_offset": 39, "nodeName": "exp", "type": "List[Union[Tuple[str, str, Any], Tuple[str, str, None], Tuple[str, str, List[int]]]]"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "o", "type": "Any"}, {"lineNumber": 321, "col_offset": 32, "nodeName": "e", "type": "Any"}, {"lineNumber": 324, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 324, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 328, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 328, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 337, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 348, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "self", "type": "ChunkStrTests"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "self", "type": "ChunkStrTests"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[NotImplementedError]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "self", "type": "PhredDecoderTests"}, {"lineNumber": 132, "col_offset": 44, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 133, "col_offset": 39, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 142, "col_offset": 36, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 149, "col_offset": 44, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[NotImplementedError]"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 169, "col_offset": 41, "nodeName": "range", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "range", "type": "Any"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 201, "col_offset": 41, "nodeName": "range", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 215, "col_offset": 41, "nodeName": "range", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "self", "type": "PhredEncoderTests"}, {"lineNumber": 220, "col_offset": 32, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 221, "col_offset": 37, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "self", "type": "TestGetNthSequence"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "self", "type": "TestGetNthSequence"}, {"lineNumber": 240, "col_offset": 43, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 241, "col_offset": 31, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "self", "type": "TestGetNthSequence"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "self", "type": "TestGetNthSequence"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 248, "col_offset": 33, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 278, "col_offset": 18, "nodeName": "RNA", "type": "Type[skbio.sequence._rna.RNA]"}, {"lineNumber": 279, "col_offset": 18, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 280, "col_offset": 18, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "range", "type": "Any"}, {"lineNumber": 291, "col_offset": 46, "nodeName": "self", "type": "TestFormatFASTALikeRecords"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "npt", "type": "Any"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "range", "type": "Any"}, {"lineNumber": 304, "col_offset": 46, "nodeName": "self", "type": "TestFormatFASTALikeRecords"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "npt", "type": "Any"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "range", "type": "Any"}, {"lineNumber": 317, "col_offset": 46, "nodeName": "self", "type": "TestFormatFASTALikeRecords"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "npt", "type": "Any"}, {"lineNumber": 324, "col_offset": 13, "nodeName": "self", "type": "TestFormatFASTALikeRecords"}, {"lineNumber": 325, "col_offset": 17, "nodeName": "_format_fasta_like_records", "type": "Callable[[Any, Any, Any, Any], Generator[Tuple[Any, str, Any], Any, None]]"}, {"lineNumber": 325, "col_offset": 44, "nodeName": "gen", "type": "Generator[Union[skbio.sequence._sequence.Sequence, skbio.sequence._rna.RNA, skbio.sequence._dna.DNA], Any, None]"}, {"lineNumber": 328, "col_offset": 13, "nodeName": "self", "type": "TestFormatFASTALikeRecords"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "_format_fasta_like_records", "type": "Callable[[Any, Any, Any, Any], Generator[Tuple[Any, str, Any], Any, None]]"}, {"lineNumber": 329, "col_offset": 44, "nodeName": "gen", "type": "Generator[Union[skbio.sequence._sequence.Sequence, skbio.sequence._rna.RNA, skbio.sequence._dna.DNA], Any, None]"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 333, "col_offset": 34, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 334, "col_offset": 24, "nodeName": "RNA", "type": "Type[skbio.sequence._rna.RNA]"}, {"lineNumber": 335, "col_offset": 22, "nodeName": "seq", "type": "Union[skbio.sequence._dna.DNA, skbio.sequence._rna.RNA, skbio.sequence._sequence.Sequence]"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "self", "type": "TestFormatFASTALikeRecords"}, {"lineNumber": 338, "col_offset": 17, "nodeName": "_format_fasta_like_records", "type": "Callable[[Any, Any, Any, Any], Generator[Tuple[Any, str, Any], Any, None]]"}, {"lineNumber": 343, "col_offset": 24, "nodeName": "RNA", "type": "Type[skbio.sequence._rna.RNA]"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "Sequence", "type": "Type[skbio.sequence._sequence.Sequence]"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "DNA", "type": "Type[skbio.sequence._dna.DNA]"}, {"lineNumber": 346, "col_offset": 22, "nodeName": "seq", "type": "Union[skbio.sequence._rna.RNA, skbio.sequence._dna.DNA, skbio.sequence._sequence.Sequence]"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "self", "type": "TestFormatFASTALikeRecords"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "_format_fasta_like_records", "type": "Callable[[Any, Any, Any, Any], Generator[Tuple[Any, str, Any], Any, None]]"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 325, "col_offset": 44, "nodeName": "self", "type": "TestFormatFASTALikeRecords"}, {"lineNumber": 329, "col_offset": 44, "nodeName": "self", "type": "TestFormatFASTALikeRecords"}, {"lineNumber": 338, "col_offset": 44, "nodeName": "blank_seq_gen", "type": "Callable[[], Any]"}, {"lineNumber": 350, "col_offset": 44, "nodeName": "missing_qual_gen", "type": "Callable[[], Any]"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 232, "col_offset": 43, "nodeName": "i", "type": "Any"}, {"lineNumber": 277, "col_offset": 35, "nodeName": "range", "type": "Any"}]