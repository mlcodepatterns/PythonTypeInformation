[{"lineNumber": 28, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "test_make_power_curves_keyword_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "test_make_power_curves_unsupported_mode_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "test_make_power_curves_no_meta_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "test_make_power_curves_no_control_cats", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "test_make_power_curves_random_no_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "test_make_power_curve_labels_off", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "test_make_power_curves_all", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "test_make_power_curves_significant", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "test_make_power_curves_paired", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "test_get_paired_effect_runtime_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "test_get_paired_effects", "type": "Callable[[Any], Any]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "test_get_unpaired_effect_runtime_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "test_get_unpaired_effects_all_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "test_get_unpaired_effects_signifigant_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "test_plot_effects_2d_effects_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "test_plot_effects_effects_and_bounds_or_labels_different_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "test_plot_effects_size_returns", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "test_plot_effects_kwargs_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "test_collate_effect_size_counts_shape_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "test_collate_effect_size_unmatched_size_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "test_collate_effect_size_differnt_counts_and_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "test_collate_effect_size_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "test_collate_effect_size_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "test_collate_effect_size_array_nans_2d", "type": "Callable[[Any], Any]"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "test_collate_effect_size_under_power_1d", "type": "Callable[[Any], Any]"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "test_collate_effect_size_nans_1d", "type": "Callable[[Any], Any]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "test_collate_effect_size_1d_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "test__check_strs_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "test__check_strs_num", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "test__check_str_nan", "type": "Callable[[Any], Any]"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "test__check_str_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "test__confidence_bound_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "test__confidence_bound_df", "type": "Callable[[Any], Any]"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "test__confidence_bound_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "test__confidence_bound_nan", "type": "Callable[[Any], Any]"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "test__confidence_bound_axis_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "test__calculate_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "test_compare_distributions_count_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "test_compare_distributions", "type": "Callable[[Any], Any]"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "test_calculate_power_curve_ratio_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "test_calculate_power_curve_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "test_calculate_power_curve_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "test_calculate_power_curve_ratio", "type": "Callable[[Any], Any]"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "test_bootstrap_power_curve", "type": "Callable[[Any], Any]"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "test_get_signifigant_subsample_no_tests", "type": "Callable[[Any], Any]"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "test_get_signifigant_subsample_no_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "test_get_signfigiant_subsample_no_iteration", "type": "Callable[[Any], Any]"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "test_get_signifigant_subsample_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "test_get_paired_subsamples_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "test_get_paired_subsamples_break", "type": "Callable[[Any], Any]"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "test_get_paired_subsample_fewer", "type": "Callable[[Any], Any]"}, {"lineNumber": 601, "col_offset": 4, "nodeName": "test_get_paired_subsamples_not_strict", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "test_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "test_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 613, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "meta", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "known_labels", "type": "List[str]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "known_labels", "type": "List[str]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "known_c", "type": "numpy.ndarray"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "known_m", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "known_b", "type": "Any"}, {"lineNumber": 316, "col_offset": 31, "nodeName": "nan", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "known_m", "type": "numpy.ndarray"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "known_b", "type": "numpy.ndarray"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "known_m", "type": "numpy.ndarray"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "known_b", "type": "numpy.ndarray"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "crit", "type": "float"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "known", "type": "float"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "known", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "round", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "arange", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "meta", "type": "Dict[str, Union[Dict[str, Any], Dict[str, Union[str, float]]]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 43, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 148, "col_offset": 61, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 156, "col_offset": 39, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "test_l", "type": "Any"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "known_labels", "type": "List[str]"}, {"lineNumber": 165, "col_offset": 43, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 168, "col_offset": 61, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "test_l", "type": "Any"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "known_labels", "type": "List[str]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "tests", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 187, "col_offset": 47, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "test_fig", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "known_shape_out", "type": "Tuple[int]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "test_l", "type": "Any"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 212, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "get_paired_effect", "type": "Any"}, {"lineNumber": 217, "col_offset": 43, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 56, "nodeName": "meta", "type": "Any"}, {"lineNumber": 217, "col_offset": 67, "nodeName": "cat", "type": "str"}, {"lineNumber": 218, "col_offset": 43, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "known_p", "type": "numpy.ndarray"}, {"lineNumber": 222, "col_offset": 36, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "known_c", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 36, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "get_unpaired_effect", "type": "Any"}, {"lineNumber": 232, "col_offset": 52, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 60, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 234, "col_offset": 47, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "get_unpaired_effect", "type": "Any"}, {"lineNumber": 238, "col_offset": 60, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 238, "col_offset": 68, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 240, "col_offset": 47, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 244, "col_offset": 38, "nodeName": "plot_effects", "type": "Any"}, {"lineNumber": 244, "col_offset": 66, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 245, "col_offset": 26, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 250, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 250, "col_offset": 38, "nodeName": "plot_effects", "type": "Any"}, {"lineNumber": 250, "col_offset": 52, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 253, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 253, "col_offset": 38, "nodeName": "plot_effects", "type": "Any"}, {"lineNumber": 253, "col_offset": 52, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 253, "col_offset": 66, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 259, "col_offset": 14, "nodeName": "plot_effects", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 259, "col_offset": 41, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 259, "col_offset": 54, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 266, "col_offset": 38, "nodeName": "plot_effects", "type": "Any"}, {"lineNumber": 266, "col_offset": 52, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 266, "col_offset": 66, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 294, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 295, "col_offset": 45, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 296, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 298, "col_offset": 28, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 298, "col_offset": 42, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 299, "col_offset": 41, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 304, "col_offset": 18, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 305, "col_offset": 18, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 307, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 309, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "known_m", "type": "Any"}, {"lineNumber": 311, "col_offset": 37, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 312, "col_offset": 28, "nodeName": "known_b", "type": "Any"}, {"lineNumber": 312, "col_offset": 37, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 317, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 318, "col_offset": 45, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 319, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 321, "col_offset": 28, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 321, "col_offset": 42, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 322, "col_offset": 41, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 328, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 329, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 331, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 332, "col_offset": 45, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 333, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "known_m", "type": "numpy.ndarray"}, {"lineNumber": 335, "col_offset": 37, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 336, "col_offset": 28, "nodeName": "known_b", "type": "numpy.ndarray"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 341, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 342, "col_offset": 45, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 343, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 350, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 351, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 352, "col_offset": 45, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 353, "col_offset": 45, "nodeName": "powers", "type": "List[Any]"}, {"lineNumber": 354, "col_offset": 45, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 356, "col_offset": 28, "nodeName": "known_m", "type": "numpy.ndarray"}, {"lineNumber": 356, "col_offset": 37, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 357, "col_offset": 28, "nodeName": "known_b", "type": "numpy.ndarray"}, {"lineNumber": 357, "col_offset": 37, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 380, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 380, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "test", "type": "Any"}, {"lineNumber": 381, "col_offset": 34, "nodeName": "known", "type": "float"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 386, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 387, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 392, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 393, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 393, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 398, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 404, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 406, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 406, "col_offset": 33, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 407, "col_offset": 28, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 407, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 412, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "_confidence_bound", "type": "Any"}, {"lineNumber": 420, "col_offset": 33, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 421, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 421, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "_calculate_power", "type": "Any"}, {"lineNumber": 430, "col_offset": 32, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 430, "col_offset": 44, "nodeName": "crit", "type": "float"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 432, "col_offset": 28, "nodeName": "known", "type": "float"}, {"lineNumber": 432, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "compare_distributions", "type": "Any"}, {"lineNumber": 443, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 443, "col_offset": 45, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 444, "col_offset": 24, "nodeName": "known", "type": "Any"}, {"lineNumber": 444, "col_offset": 31, "nodeName": "test", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 453, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 453, "col_offset": 38, "nodeName": "calculate_power_curve", "type": "Any"}, {"lineNumber": 453, "col_offset": 61, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 454, "col_offset": 26, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 454, "col_offset": 36, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "calculate_power_curve", "type": "Any"}, {"lineNumber": 465, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 466, "col_offset": 37, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 467, "col_offset": 37, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 470, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 470, "col_offset": 30, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 479, "col_offset": 15, "nodeName": "calculate_power_curve", "type": "Any"}, {"lineNumber": 479, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 480, "col_offset": 37, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 481, "col_offset": 37, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 486, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 486, "col_offset": 30, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "calculate_power_curve", "type": "Any"}, {"lineNumber": 495, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 496, "col_offset": 37, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 497, "col_offset": 37, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 502, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 502, "col_offset": 30, "nodeName": "known", "type": "numpy.ndarray"}, {"lineNumber": 507, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 509, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 512, "col_offset": 32, "nodeName": "bootstrap_power_curve", "type": "Any"}, {"lineNumber": 512, "col_offset": 54, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 513, "col_offset": 54, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 514, "col_offset": 54, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 517, "col_offset": 24, "nodeName": "test_mean", "type": "Any"}, {"lineNumber": 517, "col_offset": 35, "nodeName": "known_mean", "type": "numpy.ndarray"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 518, "col_offset": 24, "nodeName": "test_bound", "type": "Any"}, {"lineNumber": 518, "col_offset": 36, "nodeName": "known_bound", "type": "numpy.ndarray"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 560, "col_offset": 19, "nodeName": "get_signifigant_subsample", "type": "Any"}, {"lineNumber": 560, "col_offset": 55, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 574, "col_offset": 21, "nodeName": "get_paired_subsamples", "type": "Any"}, {"lineNumber": 574, "col_offset": 43, "nodeName": "meta", "type": "Any"}, {"lineNumber": 574, "col_offset": 54, "nodeName": "cat", "type": "str"}, {"lineNumber": 574, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 575, "col_offset": 27, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 575, "col_offset": 40, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 585, "col_offset": 21, "nodeName": "get_paired_subsamples", "type": "Any"}, {"lineNumber": 585, "col_offset": 43, "nodeName": "meta", "type": "Any"}, {"lineNumber": 585, "col_offset": 54, "nodeName": "cat", "type": "str"}, {"lineNumber": 585, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 586, "col_offset": 27, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 586, "col_offset": 40, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 597, "col_offset": 21, "nodeName": "get_paired_subsamples", "type": "Any"}, {"lineNumber": 597, "col_offset": 43, "nodeName": "meta", "type": "Any"}, {"lineNumber": 597, "col_offset": 54, "nodeName": "cat", "type": "str"}, {"lineNumber": 597, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 599, "col_offset": 27, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 599, "col_offset": 40, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 609, "col_offset": 21, "nodeName": "get_paired_subsamples", "type": "Any"}, {"lineNumber": 609, "col_offset": 43, "nodeName": "meta", "type": "Any"}, {"lineNumber": 609, "col_offset": 54, "nodeName": "cat", "type": "str"}, {"lineNumber": 609, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 611, "col_offset": 27, "nodeName": "known_array", "type": "List[numpy.ndarray]"}, {"lineNumber": 611, "col_offset": 40, "nodeName": "test_array", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "arange", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "nan", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "nan", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "meta", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 46, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 120, "col_offset": 40, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 53, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 45, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 127, "col_offset": 45, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 53, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "cat", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "make_power_curves", "type": "Any"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "tests", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 62, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 61, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "test_fig", "type": "Any"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "Figure", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 166, "col_offset": 62, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 61, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "test_fig", "type": "Any"}, {"lineNumber": 174, "col_offset": 45, "nodeName": "Figure", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "cat", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 47, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 187, "col_offset": 63, "nodeName": "meta", "type": "Any"}, {"lineNumber": 188, "col_offset": 43, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 61, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "astype", "type": "Any"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "get_paired_effect", "type": "Any"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "meta", "type": "Any"}, {"lineNumber": 206, "col_offset": 49, "nodeName": "cat", "type": "str"}, {"lineNumber": 206, "col_offset": 54, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 217, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 217, "col_offset": 56, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "get_unpaired_effect", "type": "Any"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 52, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 232, "col_offset": 60, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "arange", "type": "Any"}, {"lineNumber": 238, "col_offset": 60, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 238, "col_offset": 68, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 240, "col_offset": 27, "nodeName": "arange", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 244, "col_offset": 52, "nodeName": "ones", "type": "Any"}, {"lineNumber": 244, "col_offset": 66, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 245, "col_offset": 26, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 245, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 250, "col_offset": 52, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 250, "col_offset": 66, "nodeName": "ones", "type": "Any"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 253, "col_offset": 52, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 253, "col_offset": 66, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 254, "col_offset": 40, "nodeName": "arange", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 259, "col_offset": 41, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 259, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "arange", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 262, "col_offset": 35, "nodeName": "fig", "type": "Any"}, {"lineNumber": 262, "col_offset": 40, "nodeName": "Figure", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 266, "col_offset": 52, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 266, "col_offset": 66, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 267, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 271, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 271, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 274, "col_offset": 32, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 278, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 278, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 281, "col_offset": 32, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 286, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 286, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "collate_effect_size", "type": "Any"}, {"lineNumber": 289, "col_offset": 32, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 294, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 295, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 296, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 298, "col_offset": 28, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 304, "col_offset": 18, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 305, "col_offset": 18, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 307, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 308, "col_offset": 45, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 309, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 317, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 318, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 319, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 321, "col_offset": 28, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 327, "col_offset": 18, "nodeName": "power", "type": "numpy.ndarray"}, {"lineNumber": 327, "col_offset": 34, "nodeName": "power", "type": "numpy.ndarray"}, {"lineNumber": 327, "col_offset": 43, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 331, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 333, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 340, "col_offset": 28, "nodeName": "nan", "type": "Any"}, {"lineNumber": 341, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 343, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 349, "col_offset": 18, "nodeName": "power", "type": "numpy.ndarray"}, {"lineNumber": 349, "col_offset": 34, "nodeName": "power", "type": "numpy.ndarray"}, {"lineNumber": 349, "col_offset": 43, "nodeName": "powers", "type": "List[numpy.ndarray]"}, {"lineNumber": 352, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 354, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 365, "col_offset": 24, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 369, "col_offset": 37, "nodeName": "nan", "type": "Any"}, {"lineNumber": 373, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 373, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "_check_strs", "type": "Any"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 380, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 386, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 392, "col_offset": 33, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 430, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 436, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 436, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "compare_distributions", "type": "Any"}, {"lineNumber": 437, "col_offset": 34, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 437, "col_offset": 42, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 442, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 443, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 443, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 453, "col_offset": 61, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 454, "col_offset": 26, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 454, "col_offset": 36, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 465, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 466, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 467, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 479, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 480, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 481, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 495, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 496, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 497, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 512, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 513, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 514, "col_offset": 54, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 523, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 523, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "get_signifigant_subsample", "type": "Any"}, {"lineNumber": 524, "col_offset": 46, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 536, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 536, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "get_signifigant_subsample", "type": "Any"}, {"lineNumber": 537, "col_offset": 48, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 550, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 550, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 551, "col_offset": 12, "nodeName": "get_signifigant_subsample", "type": "Any"}, {"lineNumber": 551, "col_offset": 48, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 556, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 556, "col_offset": 33, "nodeName": "arange", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 558, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 558, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 560, "col_offset": 46, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 562, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 562, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 568, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 569, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 574, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 581, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 581, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 585, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 591, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 592, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 597, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 598, "col_offset": 49, "nodeName": "order", "type": "List[str]"}, {"lineNumber": 603, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 604, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 609, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "loc", "type": "Any"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "id_", "type": "Any"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "ids", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "power", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 104, "col_offset": 64, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 110, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 110, "col_offset": 65, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 120, "col_offset": 40, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 120, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 120, "col_offset": 69, "nodeName": "meta", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 125, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 127, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 127, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 45, "nodeName": "meta", "type": "Any"}, {"lineNumber": 131, "col_offset": 56, "nodeName": "cat", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 134, "col_offset": 63, "nodeName": "meta", "type": "Any"}, {"lineNumber": 135, "col_offset": 43, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 62, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 166, "col_offset": 62, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "meta", "type": "Any"}, {"lineNumber": 183, "col_offset": 56, "nodeName": "cat", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 187, "col_offset": 63, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 188, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 188, "col_offset": 61, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 190, "col_offset": 51, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 271, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 274, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 278, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 281, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 286, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 289, "col_offset": 32, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 308, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 327, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 349, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 373, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 402, "col_offset": 29, "nodeName": "nan", "type": "Any"}, {"lineNumber": 416, "col_offset": 29, "nodeName": "nan", "type": "Any"}, {"lineNumber": 436, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 437, "col_offset": 34, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 437, "col_offset": 42, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 455, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 498, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 523, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 524, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 531, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 536, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 537, "col_offset": 39, "nodeName": "test_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 537, "col_offset": 48, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 550, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 551, "col_offset": 39, "nodeName": "test_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 551, "col_offset": 48, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 558, "col_offset": 32, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 558, "col_offset": 45, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 560, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 562, "col_offset": 29, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 562, "col_offset": 47, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 563, "col_offset": 24, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 563, "col_offset": 31, "nodeName": "test_ids", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 104, "col_offset": 64, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 110, "col_offset": 65, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 120, "col_offset": 69, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 131, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 134, "col_offset": 63, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 135, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 137, "col_offset": 51, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 228, "col_offset": 48, "nodeName": "ones", "type": "Any"}, {"lineNumber": 228, "col_offset": 59, "nodeName": "ones", "type": "Any"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 272, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 273, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 273, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 279, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 279, "col_offset": 44, "nodeName": "ones", "type": "Any"}, {"lineNumber": 280, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 280, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 287, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 288, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 344, "col_offset": 30, "nodeName": "test_m", "type": "Any"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 345, "col_offset": 30, "nodeName": "test_b", "type": "Any"}, {"lineNumber": 531, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 545, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 563, "col_offset": 24, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "id_", "type": "Any"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "div", "type": "Any"}]