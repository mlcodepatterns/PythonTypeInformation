[{"lineNumber": 40, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "test_one_seq", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "test_two_seq", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "test_phred33", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "test_phred_offset_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "test_invalid_record", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "IterableData", "type": "Type[IterableData]"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "ParseQseqTests", "type": "Type[ParseQseqTests]"}, {"lineNumber": 163, "col_offset": 66, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 170, "col_offset": 38, "nodeName": "FileData", "type": "Type[FileData]"}, {"lineNumber": 170, "col_offset": 48, "nodeName": "ParseQseqTests", "type": "Type[ParseQseqTests]"}, {"lineNumber": 170, "col_offset": 64, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 177, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "tmp_files", "type": "List[tempfile._TemporaryFileWrapper]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "_tmp_files", "type": "List[tempfile._TemporaryFileWrapper]"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "tmp_files", "type": "List[tempfile._TemporaryFileWrapper]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "tmp_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "_tmp_files", "type": "List[tempfile._TemporaryFileWrapper]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "f", "type": "List[Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "f", "type": "List[Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "f", "type": "List[Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "f", "type": "List[Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "attr", "type": "str"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "val", "type": "str"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "attr", "type": "str"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "val", "type": "str"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "tmp_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "FileData"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "self", "type": "FileData"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "f", "type": "List[Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "machine_name", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "run", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "lane", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "index", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "read", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "b", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "machine_name", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "run", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "lane", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "index", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "read", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "b", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "machine_name", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "run", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "lane", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "index", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "read", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "f", "type": "List[Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "machine_name", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "run", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "lane", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "index", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "read", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "QSEQ_PARSERS_DATA", "type": "Dict[str, str]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "self", "type": "IterableData"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "attr", "type": "str"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "QSEQ_PARSERS_DATA", "type": "Dict[str, str]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "val", "type": "str"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "self", "type": "FileData"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "attr", "type": "str"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "tmp_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "parse_qseq", "type": "Callable[..., Generator[Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`], Any, None]]"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "one_seq", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "f", "type": "List[Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "parse_qseq", "type": "Callable[..., Generator[Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`], Any, None]]"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "two_seq", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "f", "type": "List[Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "b", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "b", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "b", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "parse_qseq", "type": "Callable[..., Generator[Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`], Any, None]]"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "one_seq", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "f", "type": "List[Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "a", "type": "Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "record", "type": "skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "QseqParseError", "type": "Type[skbio.parse.sequences._exception.QseqParseError]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "tmp_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "tmp_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "tmp_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "tmp_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "tmp_files", "type": "List[tempfile._TemporaryFileWrapper]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "tmp_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "parse_qseq", "type": "Callable[..., Generator[Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`], Any, None]]"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "one_seq", "type": "Any"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "parse_qseq", "type": "Callable[..., Generator[Tuple[str, Any, Any, skbio.parse.sequences.qseq.`namedtuple-Record-machine_name-run-lane-tile-x-y-index-read-filtered`], Any, None]]"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "missing", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "val", "type": "str"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "self", "type": "ParseQseqTests"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "self", "type": "ParseQseqTests"}]