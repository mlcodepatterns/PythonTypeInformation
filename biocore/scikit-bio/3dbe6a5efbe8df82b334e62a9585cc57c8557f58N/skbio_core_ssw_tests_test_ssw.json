[{"lineNumber": 26, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 660, "col_offset": 36, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 683, "col_offset": 29, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 824, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "attribute", "type": "str"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "align_attributes", "type": "List[str]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "iterable_kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "default_kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "default", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "query_sequence", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "query_sequences", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "query_sequence", "type": "Any"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "query_sequences", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "expected_alignments", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 381, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 401, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 438, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 446, "col_offset": 30, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 466, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 504, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 542, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 558, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 575, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 592, "col_offset": 27, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 634, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, Union[str, int]], bool]]"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "align1", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "align1", "type": "Any"}, {"lineNumber": 686, "col_offset": 37, "nodeName": "AlignmentStructure", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 696, "col_offset": 12, "nodeName": "accessible", "type": "str"}, {"lineNumber": 696, "col_offset": 26, "nodeName": "align_attributes", "type": "List[str]"}, {"lineNumber": 715, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, str], bool]]"}, {"lineNumber": 736, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, str], bool]]"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "generic_sequence", "type": "str"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}, {"lineNumber": 794, "col_offset": 20, "nodeName": "tests", "type": "List[Dict[str, Union[str, int, List[Tuple[int, str]]]]]"}, {"lineNumber": 810, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "self", "type": "TestAlignStripedSmithWaterman"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "default_kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "target_sequence", "type": "Any"}, {"lineNumber": 160, "col_offset": 35, "nodeName": "target_sequences", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "target_sequence", "type": "Any"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "target_sequences", "type": "Any"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 277, "col_offset": 37, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "result", "type": "nothing"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 283, "col_offset": 32, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 283, "col_offset": 36, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 283, "col_offset": 45, "nodeName": "expected_alignments", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 316, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 316, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 337, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 337, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 353, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 354, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 354, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 370, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 371, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 371, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "_check_argument_with_inequality_on_optimal_align_score", "type": "Callable[..., Any]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "_check_argument_with_inequality_on_optimal_align_score", "type": "Callable[..., Any]"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 427, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 428, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 428, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 447, "col_offset": 16, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 447, "col_offset": 35, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "_check_argument_with_inequality_on_optimal_align_score", "type": "Callable[..., Any]"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 493, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 494, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 494, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "_check_argument_with_inequality_on_optimal_align_score", "type": "Callable[..., Any]"}, {"lineNumber": 529, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 531, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 532, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 532, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "_check_bit_flag_sets_properties_falsy_or_negative", "type": "Callable[..., Any]"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "_check_bit_flag_sets_properties_falsy_or_negative", "type": "Callable[..., Any]"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "_check_bit_flag_sets_properties_falsy_or_negative", "type": "Callable[..., Any]"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "_check_bit_flag_sets_properties_falsy_or_negative", "type": "Callable[..., Any]"}, {"lineNumber": 634, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 634, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 653, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 656, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 657, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 657, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 664, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 664, "col_offset": 37, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 665, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 665, "col_offset": 23, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 666, "col_offset": 17, "nodeName": "align_striped_smith_waterman", "type": "Any"}, {"lineNumber": 666, "col_offset": 46, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 667, "col_offset": 46, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 668, "col_offset": 30, "nodeName": "align2", "type": "Any"}, {"lineNumber": 668, "col_offset": 38, "nodeName": "align1", "type": "Any"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 676, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 676, "col_offset": 37, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 677, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 677, "col_offset": 23, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 678, "col_offset": 17, "nodeName": "align_striped_smith_waterman", "type": "Any"}, {"lineNumber": 678, "col_offset": 46, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 679, "col_offset": 46, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 680, "col_offset": 30, "nodeName": "align2", "type": "Any"}, {"lineNumber": 680, "col_offset": 38, "nodeName": "align1", "type": "Any"}, {"lineNumber": 690, "col_offset": 15, "nodeName": "MockAlignmentStructure", "type": "Type[Any]"}, {"lineNumber": 694, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 694, "col_offset": 37, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 695, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 696, "col_offset": 26, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 715, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 715, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 718, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 736, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 736, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 739, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 795, "col_offset": 12, "nodeName": "mock_object", "type": "Any"}, {"lineNumber": 810, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 811, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 818, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 820, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "arg", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "i_range", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 197, "col_offset": 36, "nodeName": "arg_settings", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "query", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "prop", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "properties_to_null", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "prop", "type": "str"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 236, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 248, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 273, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 274, "col_offset": 35, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 280, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 281, "col_offset": 27, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 284, "col_offset": 34, "nodeName": "result", "type": "nothing"}, {"lineNumber": 284, "col_offset": 42, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 299, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 333, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 335, "col_offset": 57, "nodeName": "blosum50", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 336, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 352, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 353, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 369, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 370, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 383, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 384, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 23, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 403, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 409, "col_offset": 23, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 410, "col_offset": 23, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 426, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 427, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 448, "col_offset": 16, "nodeName": "query1", "type": "Any"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "align1", "type": "Any"}, {"lineNumber": 453, "col_offset": 16, "nodeName": "align2", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 468, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 469, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 474, "col_offset": 23, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 475, "col_offset": 23, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 491, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 493, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 506, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 507, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 512, "col_offset": 23, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 513, "col_offset": 23, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 529, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 531, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 544, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 545, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 560, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 561, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 577, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 578, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 594, "col_offset": 28, "nodeName": "query_sequences", "type": "List[str]"}, {"lineNumber": 595, "col_offset": 29, "nodeName": "target_sequences", "type": "List[str]"}, {"lineNumber": 635, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 637, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 638, "col_offset": 34, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 638, "col_offset": 45, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "self", "type": "TestAlignStripedSmithWaterman"}, {"lineNumber": 676, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 679, "col_offset": 65, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "self", "type": "TestAlignStripedSmithWaterman"}, {"lineNumber": 688, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 688, "col_offset": 27, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 697, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 716, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 718, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 719, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 719, "col_offset": 29, "nodeName": "z", "type": "bool"}, {"lineNumber": 737, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 739, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 740, "col_offset": 12, "nodeName": "set_zero_based", "type": "Any"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 795, "col_offset": 26, "nodeName": "mock_object_factory", "type": "Callable[[Any], Any]"}, {"lineNumber": 803, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 813, "col_offset": 25, "nodeName": "get_aligned_target_sequence", "type": "Any"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 815, "col_offset": 25, "nodeName": "get_aligned_query_sequence", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 821, "col_offset": 31, "nodeName": "get_aligned_target_sequence", "type": "Any"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 822, "col_offset": 31, "nodeName": "get_aligned_query_sequence", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "self", "type": "TestAlignStripedSmithWaterman"}, {"lineNumber": 162, "col_offset": 42, "nodeName": "i", "type": "Any"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "align1", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "align2", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "arg", "type": "Any"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "setting", "type": "Any"}, {"lineNumber": 198, "col_offset": 33, "nodeName": "setting", "type": "Any"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 199, "col_offset": 45, "nodeName": "query_sequence", "type": "Any"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "query", "type": "Any"}, {"lineNumber": 200, "col_offset": 34, "nodeName": "target_sequence", "type": "Any"}, {"lineNumber": 280, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 335, "col_offset": 57, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 387, "col_offset": 20, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 389, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 407, "col_offset": 20, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 409, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 410, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 448, "col_offset": 46, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 449, "col_offset": 25, "nodeName": "query1", "type": "Any"}, {"lineNumber": 449, "col_offset": 32, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 451, "col_offset": 25, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 451, "col_offset": 46, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 453, "col_offset": 25, "nodeName": "query2", "type": "Any"}, {"lineNumber": 453, "col_offset": 32, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 455, "col_offset": 36, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 456, "col_offset": 36, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 472, "col_offset": 20, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 474, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 475, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 510, "col_offset": 20, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 512, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 513, "col_offset": 23, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 635, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 636, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 637, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 697, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 697, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 697, "col_offset": 37, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 697, "col_offset": 48, "nodeName": "accessible", "type": "str"}, {"lineNumber": 698, "col_offset": 29, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 716, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 717, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 718, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 719, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 719, "col_offset": 32, "nodeName": "is_zero_based", "type": "Any"}, {"lineNumber": 737, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 738, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 739, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 740, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 740, "col_offset": 41, "nodeName": "z", "type": "bool"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 741, "col_offset": 33, "nodeName": "z", "type": "bool"}, {"lineNumber": 741, "col_offset": 36, "nodeName": "is_zero_based", "type": "Any"}, {"lineNumber": 795, "col_offset": 26, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 802, "col_offset": 16, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 803, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 803, "col_offset": 29, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}, {"lineNumber": 804, "col_offset": 29, "nodeName": "_get_aligned_sequence", "type": "Any"}, {"lineNumber": 805, "col_offset": 33, "nodeName": "mock_object", "type": "Any"}, {"lineNumber": 805, "col_offset": 46, "nodeName": "generic_sequence", "type": "str"}, {"lineNumber": 807, "col_offset": 33, "nodeName": "end", "type": "int"}, {"lineNumber": 813, "col_offset": 25, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 815, "col_offset": 25, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 821, "col_offset": 31, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 822, "col_offset": 31, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "iterable_kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "query_sequence", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "query1", "type": "Any"}, {"lineNumber": 165, "col_offset": 36, "nodeName": "target_sequence", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 167, "col_offset": 50, "nodeName": "query_sequence", "type": "Any"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "query2", "type": "Any"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "target_sequence", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "i", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "default", "type": "Any"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "i", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "default", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "i", "type": "Any"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "default", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 199, "col_offset": 63, "nodeName": "kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 35, "nodeName": "p", "type": "str"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "align_attributes", "type": "List[str]"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 452, "col_offset": 66, "nodeName": "matrix", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 455, "col_offset": 36, "nodeName": "align1", "type": "Any"}, {"lineNumber": 456, "col_offset": 36, "nodeName": "align2", "type": "Any"}, {"lineNumber": 689, "col_offset": 20, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 689, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 689, "col_offset": 34, "nodeName": "key", "type": "Any"}, {"lineNumber": 698, "col_offset": 39, "nodeName": "accessible", "type": "str"}, {"lineNumber": 719, "col_offset": 32, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 741, "col_offset": 36, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 801, "col_offset": 48, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}, {"lineNumber": 804, "col_offset": 29, "nodeName": "AlignmentStructure", "type": "Any"}, {"lineNumber": 806, "col_offset": 33, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}, {"lineNumber": 806, "col_offset": 55, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}, {"lineNumber": 807, "col_offset": 38, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}, {"lineNumber": 143, "col_offset": 39, "nodeName": "attribute", "type": "str"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "attribute", "type": "str"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "arg", "type": "Any"}, {"lineNumber": 164, "col_offset": 52, "nodeName": "iterable_kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 168, "col_offset": 52, "nodeName": "default_kwarg", "type": "Dict[Any, Any]"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 41, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 173, "col_offset": 41, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "compare_lt", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 176, "col_offset": 35, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "compare_gt", "type": "Any"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "optimal_alignment_score", "type": "Any"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "prop", "type": "Any"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "prop", "type": "Any"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "prop", "type": "Any"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "arg", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 202, "col_offset": 36, "nodeName": "falsy_or_negative", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 202, "col_offset": 54, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 202, "col_offset": 65, "nodeName": "prop", "type": "Any"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "p", "type": "str"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "properties_to_null", "type": "Any"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 206, "col_offset": 37, "nodeName": "falsy_or_negative", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 206, "col_offset": 55, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 206, "col_offset": 66, "nodeName": "prop", "type": "str"}, {"lineNumber": 689, "col_offset": 39, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 801, "col_offset": 18, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}, {"lineNumber": 802, "col_offset": 21, "nodeName": "le", "type": "int"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 172, "col_offset": 41, "nodeName": "align1", "type": "Any"}, {"lineNumber": 173, "col_offset": 41, "nodeName": "align2", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "align1", "type": "Any"}, {"lineNumber": 176, "col_offset": 35, "nodeName": "align2", "type": "Any"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "align1", "type": "Any"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "align2", "type": "Any"}, {"lineNumber": 689, "col_offset": 50, "nodeName": "key", "type": "Any"}, {"lineNumber": 802, "col_offset": 27, "nodeName": "t", "type": "str"}, {"lineNumber": 802, "col_offset": 47, "nodeName": "le", "type": "int"}, {"lineNumber": 802, "col_offset": 51, "nodeName": "t", "type": "str"}, {"lineNumber": 802, "col_offset": 56, "nodeName": "test", "type": "Dict[str, Union[str, int, List[Tuple[int, str]]]]"}]