[{"lineNumber": 26, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "test_validate", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "test_validate_invalid_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "test_berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "test_brillouin_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "test_dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "test_doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "test_enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "test_equitability", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "test_esty_ci", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "test_faith_pd_none_observed", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "test_faith_pd_all_observed", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "test_faith_pd", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "test_fisher_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "test_goods_coverage", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "test_heip_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "test_kempton_taylor_q", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "test_margalef", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "test_mcintosh_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "test_mcintosh_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "test_menhinick", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "test_michaelis_menten_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "test_observed_otus", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "test_osd", "type": "Callable[[Any], Any]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "test_robbins", "type": "Callable[[Any], Any]"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "test_shannon", "type": "Callable[[Any], Any]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "test_simpson", "type": "Callable[[Any], Any]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "test_simpson_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "test_singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "test_strong", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "_diversity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 344, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "sids1", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "oids1", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "expected", "type": "float"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "expected", "type": "float"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "expected", "type": "float"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "expected", "type": "float"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "expected", "type": "float"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "expected", "type": "float"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "exp", "type": "float"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "counts", "type": "List[int]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "den", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "obs_few", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "obs_many", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "freq_arr", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "D", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "D", "type": "float"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "exp", "type": "float"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "read", "type": "Any"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 123, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "result", "type": "List[Union[int, Tuple[Any, Any]]]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "max_size", "type": "int"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "observed_lower", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "observed_upper", "type": "Any"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "observed_lower", "type": "Any"}, {"lineNumber": 164, "col_offset": 54, "nodeName": "expected_lower", "type": "numpy.ndarray"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 165, "col_offset": 38, "nodeName": "observed_upper", "type": "Any"}, {"lineNumber": 165, "col_offset": 54, "nodeName": "expected_upper", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "faith_pd", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "t1", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "actual", "type": "Any"}, {"lineNumber": 171, "col_offset": 39, "nodeName": "expected", "type": "float"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "faith_pd", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "oids1", "type": "List[str]"}, {"lineNumber": 172, "col_offset": 55, "nodeName": "t1", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "actual", "type": "Any"}, {"lineNumber": 174, "col_offset": 39, "nodeName": "expected", "type": "float"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "faith_pd", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "oids1", "type": "List[str]"}, {"lineNumber": 177, "col_offset": 55, "nodeName": "t1", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "actual", "type": "Any"}, {"lineNumber": 180, "col_offset": 39, "nodeName": "expected", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "faith_pd", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 43, "nodeName": "oids1", "type": "List[str]"}, {"lineNumber": 182, "col_offset": 55, "nodeName": "t1", "type": "Any"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "actual", "type": "Any"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "expected", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "faith_pd", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "oids1", "type": "List[str]"}, {"lineNumber": 191, "col_offset": 50, "nodeName": "t1", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "actual", "type": "Any"}, {"lineNumber": 193, "col_offset": 39, "nodeName": "expected", "type": "float"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "faith_pd", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "oids1", "type": "List[str]"}, {"lineNumber": 194, "col_offset": 50, "nodeName": "t1", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "actual", "type": "Any"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "expected", "type": "float"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "faith_pd", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "oids1", "type": "List[str]"}, {"lineNumber": 197, "col_offset": 50, "nodeName": "t1", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "actual", "type": "Any"}, {"lineNumber": 199, "col_offset": 39, "nodeName": "expected", "type": "float"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "faith_pd", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "oids1", "type": "List[str]"}, {"lineNumber": 200, "col_offset": 50, "nodeName": "t1", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "actual", "type": "Any"}, {"lineNumber": 202, "col_offset": 39, "nodeName": "expected", "type": "float"}, {"lineNumber": 206, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 207, "col_offset": 14, "nodeName": "fisher_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 27, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 208, "col_offset": 36, "nodeName": "exp", "type": "float"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "fisher_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 213, "col_offset": 36, "nodeName": "exp", "type": "float"}, {"lineNumber": 217, "col_offset": 14, "nodeName": "fisher_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 222, "col_offset": 14, "nodeName": "fisher_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "goods_coverage", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "counts", "type": "List[int]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 244, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 247, "col_offset": 54, "nodeName": "exp", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 250, "col_offset": 26, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 251, "col_offset": 54, "nodeName": "exp", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 261, "col_offset": 14, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 263, "col_offset": 14, "nodeName": "num", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "den", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 61, "nodeName": "exp", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 277, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 278, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 280, "col_offset": 14, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 281, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 283, "col_offset": 18, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "michaelis_menten_fit", "type": "Callable[..., Any]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 286, "col_offset": 31, "nodeName": "obs_many", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 14, "nodeName": "observed_otus", "type": "Callable[[Any], Any]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "observed_otus", "type": "Callable[[Any], Any]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 297, "col_offset": 14, "nodeName": "observed_otus", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 28, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 319, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 320, "col_offset": 19, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 321, "col_offset": 13, "nodeName": "sum", "type": "Any"}, {"lineNumber": 323, "col_offset": 14, "nodeName": "simpson_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 324, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 324, "col_offset": 30, "nodeName": "exp", "type": "Any"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 332, "col_offset": 41, "nodeName": "exp", "type": "float"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "TreeNode", "type": "Type[skbio.tree._tree.TreeNode]"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "StringIO", "type": "Type[skbio.io._fileobject.StringIO]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "obs", "type": "Any"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "_validate", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "brillouin_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 38, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "equitability", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "equitability", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "max_size", "type": "int"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "result", "type": "List[Union[int, Tuple[Any, Any]]]"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 168, "col_offset": 51, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 172, "col_offset": 55, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 177, "col_offset": 55, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 182, "col_offset": 43, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 182, "col_offset": 55, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "b1", "type": "numpy.ndarray"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 191, "col_offset": 50, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "b1", "type": "numpy.ndarray"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 194, "col_offset": 50, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "b1", "type": "numpy.ndarray"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 197, "col_offset": 50, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "b1", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 200, "col_offset": 50, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 206, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "e", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "heip_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 32, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 239, "col_offset": 31, "nodeName": "heip_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "heip_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "log", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "kempton_taylor_q", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 251, "col_offset": 31, "nodeName": "kempton_taylor_q", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 48, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "margalef", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 34, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 257, "col_offset": 31, "nodeName": "mcintosh_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 261, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "mcintosh_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "menhinick", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "obs_few", "type": "Any"}, {"lineNumber": 288, "col_offset": 34, "nodeName": "obs_many", "type": "Any"}, {"lineNumber": 291, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 297, "col_offset": 28, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "osd", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 304, "col_offset": 25, "nodeName": "robbins", "type": "Callable[[Any], Any]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 312, "col_offset": 31, "nodeName": "simpson", "type": "Callable[[Any], Any]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 313, "col_offset": 31, "nodeName": "simpson", "type": "Callable[[Any], Any]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "simpson_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "D", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "D", "type": "float"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "simpson_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 332, "col_offset": 35, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 335, "col_offset": 33, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 338, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 341, "col_offset": 31, "nodeName": "strong", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 98, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "max", "type": "Callable"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "bincount", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "curr", "type": "Tuple[Any, Any]"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "curr", "type": "Union[Tuple[Any, Any], int]"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "_diversity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 57, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 155, "col_offset": 63, "nodeName": "esty_ci", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 168, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 70, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "n", "type": "Any"}, {"lineNumber": 183, "col_offset": 36, "nodeName": "n", "type": "Any"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 20, "nodeName": "exp", "type": "Any"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "h", "type": "Any"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 34, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 254, "col_offset": 52, "nodeName": "log", "type": "Any"}, {"lineNumber": 257, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 264, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 268, "col_offset": 53, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 283, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "arange", "type": "Any"}, {"lineNumber": 291, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 307, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 308, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 309, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 312, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 313, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 317, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 321, "col_offset": 13, "nodeName": "freq_arr", "type": "Any"}, {"lineNumber": 335, "col_offset": 33, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 336, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 337, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 338, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 341, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 145, "col_offset": 65, "nodeName": "max_size", "type": "int"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "f", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "freqs", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "ZeroDivisionError", "type": "Type[ZeroDivisionError]"}, {"lineNumber": 148, "col_offset": 43, "nodeName": "FloatingPointError", "type": "Type[FloatingPointError]"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "curr", "type": "int"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "result", "type": "List[Union[int, Tuple[Any, Any]]]"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "traverse", "type": "Any"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "length", "type": "Any"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "traverse", "type": "Any"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "length", "type": "Any"}, {"lineNumber": 234, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 264, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 283, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 308, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 309, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 312, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 313, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 317, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 336, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 338, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 341, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "t1", "type": "Any"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "t1", "type": "Any"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 145, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "self", "type": "BaseTests"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "arr", "type": "numpy.ndarray"}]