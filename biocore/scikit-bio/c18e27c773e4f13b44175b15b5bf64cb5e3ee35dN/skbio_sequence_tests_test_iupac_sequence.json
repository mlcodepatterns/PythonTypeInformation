[{"lineNumber": 20, "col_offset": 27, "nodeName": "IUPACSequence", "type": "Type[skbio.sequence._iupac_sequence.IUPACSequence]"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 415, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 42, "col_offset": 52, "nodeName": "IUPACSequence", "type": "Type[skbio.sequence._iupac_sequence.IUPACSequence]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "validate", "type": "bool"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "validate", "type": "bool"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "validate", "type": "bool"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "seq", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "seq", "type": "str"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "bytes", "type": "numpy.ndarray"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "expected", "type": "Dict[str, Set[str]]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "seq", "type": "ExampleMotifsTester"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "seq", "type": "ExampleMotifsTester"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[TypeError]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "case_insensitive", "type": "bool"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "case_insensitive", "type": "bool"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "case_insensitive", "type": "bool"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "seq", "type": "str"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "seq", "type": "str"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "s", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "s", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "s", "type": "str"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 151, "col_offset": 35, "nodeName": "bytes", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "_bytes", "type": "Any"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "bytes", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "bytes", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 67, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 164, "col_offset": 64, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 167, "col_offset": 64, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 169, "col_offset": 68, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "degenerate_chars", "type": "Set[str]"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 176, "col_offset": 67, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 179, "col_offset": 67, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "nondegenerate_chars", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "nondegenerate_chars", "type": "Set[str]"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 60, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 190, "col_offset": 57, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 193, "col_offset": 57, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 195, "col_offset": 61, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "gap_chars", "type": "Set[str]"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 59, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 203, "col_offset": 56, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 206, "col_offset": 56, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 208, "col_offset": 60, "nodeName": "expected", "type": "Set[str]"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "alphabet", "type": "Set[str]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 215, "col_offset": 62, "nodeName": "expected", "type": "Dict[str, Set[str]]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 217, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 218, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 219, "col_offset": 62, "nodeName": "expected", "type": "Dict[str, Set[str]]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "degenerate_map", "type": "Any"}, {"lineNumber": 221, "col_offset": 66, "nodeName": "expected", "type": "Dict[str, Set[str]]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "degenerate_map", "type": "Dict[str, str]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 227, "col_offset": 61, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 65, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 66, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 68, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 72, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 73, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 307, "col_offset": 22, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 369, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 378, "col_offset": 14, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 379, "col_offset": 25, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 379, "col_offset": 30, "nodeName": "exp", "type": "List[ExampleIUPACSequence]"}, {"lineNumber": 395, "col_offset": 14, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 25, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 397, "col_offset": 30, "nodeName": "exp", "type": "List[ExampleIUPACSequence]"}, {"lineNumber": 400, "col_offset": 14, "nodeName": "ExampleMotifsTester", "type": "Type[ExampleMotifsTester]"}, {"lineNumber": 401, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 405, "col_offset": 14, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 406, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 411, "col_offset": 14, "nodeName": "ExampleMotifsTester", "type": "Type[ExampleMotifsTester]"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 23, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 23, "col_offset": 53, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "IUPACSequenceSubclassNoImplementation", "type": "Type[Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "exception", "type": "TypeError"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "exception", "type": "TypeError"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 50, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "exception", "type": "TypeError"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "has_positional_metadata", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "has_positional_metadata", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "positional_metadata", "type": "Any"}, {"lineNumber": 68, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "seq", "type": "str"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "seq", "type": "str"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 128, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 140, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 45, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 148, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 149, "col_offset": 33, "nodeName": "bytes", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 172, "col_offset": 56, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "degenerate_chars", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 185, "col_offset": 59, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 198, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 210, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 211, "col_offset": 48, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 214, "col_offset": 41, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 214, "col_offset": 57, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 223, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 227, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 228, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "gaps", "type": "Callable[[], Any]"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 230, "col_offset": 45, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "gaps", "type": "Callable[[], Any]"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 233, "col_offset": 43, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "gaps", "type": "Callable[[], Any]"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "gaps", "type": "Callable[[], Any]"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "gaps", "type": "Callable[[], Any]"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "has_gaps", "type": "Callable[[], bool]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "has_gaps", "type": "Callable[[], bool]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "has_gaps", "type": "Callable[[], bool]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "has_gaps", "type": "Callable[[], bool]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 255, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "degenerates", "type": "Callable[[], Any]"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 260, "col_offset": 45, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "degenerates", "type": "Callable[[], Any]"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 263, "col_offset": 43, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "degenerates", "type": "Callable[[], Any]"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "degenerates", "type": "Callable[[], Any]"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "degenerates", "type": "Callable[[], Any]"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 275, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "has_degenerates", "type": "Callable[[], bool]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "has_degenerates", "type": "Callable[[], bool]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "has_degenerates", "type": "Callable[[], bool]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "has_degenerates", "type": "Callable[[], bool]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 285, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "nondegenerates", "type": "Callable[[], Any]"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 291, "col_offset": 45, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "nondegenerates", "type": "Callable[[], Any]"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 294, "col_offset": 43, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "nondegenerates", "type": "Callable[[], Any]"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "nondegenerates", "type": "Callable[[], Any]"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "nondegenerates", "type": "Callable[[], Any]"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 306, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 308, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "has_nondegenerates", "type": "Callable[[], bool]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "has_nondegenerates", "type": "Callable[[], bool]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 314, "col_offset": 24, "nodeName": "has_nondegenerates", "type": "Callable[[], bool]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "has_nondegenerates", "type": "Callable[[], bool]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 329, "col_offset": 26, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 335, "col_offset": 26, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 344, "col_offset": 26, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 353, "col_offset": 26, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 362, "col_offset": 26, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 370, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 370, "col_offset": 58, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 373, "col_offset": 44, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 374, "col_offset": 44, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 375, "col_offset": 44, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 376, "col_offset": 44, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "expand_degenerates", "type": "Callable[[], Any]"}, {"lineNumber": 378, "col_offset": 75, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 393, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 395, "col_offset": 21, "nodeName": "expand_degenerates", "type": "Callable[[], Any]"}, {"lineNumber": 396, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 401, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 401, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "find_motifs", "type": "Callable[..., Any]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 403, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 403, "col_offset": 43, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 406, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "find_motifs", "type": "Callable[..., Any]"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 408, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 408, "col_offset": 43, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 412, "col_offset": 25, "nodeName": "find_motifs", "type": "Callable[..., Any]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 413, "col_offset": 25, "nodeName": "find_motifs", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[TypeError]"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[TypeError]"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[TypeError]"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 68, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 70, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 146, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 61, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 223, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "gaps", "type": "Callable[[], Any]"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "gaps", "type": "Callable[[], Any]"}, {"lineNumber": 228, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 52, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 55, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 60, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "has_gaps", "type": "Callable[[], bool]"}, {"lineNumber": 246, "col_offset": 27, "nodeName": "has_gaps", "type": "Callable[[], bool]"}, {"lineNumber": 255, "col_offset": 27, "nodeName": "degenerates", "type": "Callable[[], Any]"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "degenerates", "type": "Callable[[], Any]"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 52, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 55, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 60, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 275, "col_offset": 27, "nodeName": "has_degenerates", "type": "Callable[[], bool]"}, {"lineNumber": 276, "col_offset": 27, "nodeName": "has_degenerates", "type": "Callable[[], bool]"}, {"lineNumber": 285, "col_offset": 27, "nodeName": "nondegenerates", "type": "Callable[[], Any]"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "nondegenerates", "type": "Callable[[], Any]"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 297, "col_offset": 52, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 55, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 303, "col_offset": 60, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 306, "col_offset": 27, "nodeName": "has_nondegenerates", "type": "Callable[[], bool]"}, {"lineNumber": 308, "col_offset": 27, "nodeName": "has_nondegenerates", "type": "Callable[[], bool]"}, {"lineNumber": 329, "col_offset": 53, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 338, "col_offset": 32, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 347, "col_offset": 32, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 356, "col_offset": 32, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 366, "col_offset": 32, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 370, "col_offset": 30, "nodeName": "expand_degenerates", "type": "Callable[[], Any]"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "arange", "type": "Any"}, {"lineNumber": 391, "col_offset": 45, "nodeName": "kw", "type": "Dict[str, Union[Dict[str, Any], Dict[str, str]]]"}, {"lineNumber": 392, "col_offset": 45, "nodeName": "kw", "type": "Dict[str, Union[Dict[str, Any], Dict[str, str]]]"}, {"lineNumber": 393, "col_offset": 45, "nodeName": "kw", "type": "Dict[str, Union[Dict[str, Any], Dict[str, str]]]"}, {"lineNumber": 394, "col_offset": 45, "nodeName": "kw", "type": "Dict[str, Union[Dict[str, Any], Dict[str, str]]]"}, {"lineNumber": 401, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "seq", "type": "ExampleMotifsTester"}, {"lineNumber": 403, "col_offset": 43, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 408, "col_offset": 43, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 412, "col_offset": 25, "nodeName": "seq", "type": "ExampleMotifsTester"}, {"lineNumber": 413, "col_offset": 25, "nodeName": "seq", "type": "ExampleMotifsTester"}, {"lineNumber": 62, "col_offset": 67, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 77, "col_offset": 56, "nodeName": "validate", "type": "bool"}, {"lineNumber": 78, "col_offset": 60, "nodeName": "case_insensitive", "type": "bool"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 84, "col_offset": 57, "nodeName": "validate", "type": "bool"}, {"lineNumber": 85, "col_offset": 60, "nodeName": "case_insensitive", "type": "bool"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 91, "col_offset": 68, "nodeName": "validate", "type": "bool"}, {"lineNumber": 92, "col_offset": 60, "nodeName": "case_insensitive", "type": "bool"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "self", "type": "TestIUPACSequence"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 159, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 314, "col_offset": 24, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 325, "col_offset": 26, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 331, "col_offset": 26, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 340, "col_offset": 26, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 349, "col_offset": 26, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 358, "col_offset": 26, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 370, "col_offset": 30, "nodeName": "seq", "type": "ExampleIUPACSequence"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 395, "col_offset": 21, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 246, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 255, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 276, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 285, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 308, "col_offset": 27, "nodeName": "ExampleIUPACSequence", "type": "Type[ExampleIUPACSequence]"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 334, "col_offset": 32, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 337, "col_offset": 59, "nodeName": "arange", "type": "Any"}, {"lineNumber": 343, "col_offset": 32, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 352, "col_offset": 32, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 361, "col_offset": 32, "nodeName": "kw", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 364, "col_offset": 62, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 395, "col_offset": 51, "nodeName": "kw", "type": "Dict[str, Union[Dict[str, Any], Dict[str, str]]]"}, {"lineNumber": 337, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 364, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 365, "col_offset": 57, "nodeName": "int64", "type": "Any"}, {"lineNumber": 333, "col_offset": 59, "nodeName": "arange", "type": "Any"}, {"lineNumber": 342, "col_offset": 59, "nodeName": "arange", "type": "Any"}, {"lineNumber": 351, "col_offset": 59, "nodeName": "arange", "type": "Any"}, {"lineNumber": 360, "col_offset": 62, "nodeName": "arange", "type": "Any"}, {"lineNumber": 365, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 333, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 342, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 351, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 62, "nodeName": "np", "type": "module"}]