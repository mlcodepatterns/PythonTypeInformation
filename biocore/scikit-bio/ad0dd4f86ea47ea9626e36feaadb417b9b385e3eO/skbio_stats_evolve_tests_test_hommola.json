[{"lineNumber": 19, "col_offset": 0, "nodeName": "test_hommola_cospeciation_sig", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "test_hommola_cospeciation_no_sig", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "test_get_dist", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "test_gen_lists", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "exp_p", "type": "float"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "exp_r", "type": "float"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "exp_p", "type": "float"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "exp_r", "type": "float"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "index", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "expected_vec", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "actual_vec", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "exp_pars_k_labels", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "exp_pars_t_labels", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "exp_host_k_labels", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "exp_host_t_labels", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "hommola_cospeciation", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "hdist", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "pdist", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "matrix", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "obs_p", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "exp_p", "type": "float"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "obs_r", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "exp_r", "type": "float"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "obs_perm_stats", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "exp_perm_stats", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "hommola_cospeciation", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "hdist", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "pdist", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "randomized_matrix", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "obs_p", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "exp_p", "type": "float"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "obs_r", "type": "Any"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "exp_r", "type": "float"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "obs_perm_stats", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "exp_perm_stats", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "k_labels", "type": "Any"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "t_labels", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "_gen_lists", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "_get_dist", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "k_labels", "type": "Any"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "t_labels", "type": "Any"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 54, "nodeName": "index", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "actual_vec", "type": "Any"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "expected_vec", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "pars", "type": "Any"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "hosts", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "nonzero", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "matrix", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "obs_pars_k_labels", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "obs_pars_t_labels", "type": "Any"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "_gen_lists", "type": "Any"}, {"lineNumber": 88, "col_offset": 54, "nodeName": "pars", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "obs_hosts_k_labels", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "obs_hosts_t_labels", "type": "Any"}, {"lineNumber": 89, "col_offset": 45, "nodeName": "_gen_lists", "type": "Any"}, {"lineNumber": 89, "col_offset": 56, "nodeName": "hosts", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "exp_pars_k_labels", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "obs_pars_k_labels", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "exp_pars_t_labels", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "obs_pars_t_labels", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "exp_host_k_labels", "type": "numpy.ndarray"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "obs_hosts_k_labels", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "exp_host_t_labels", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "obs_hosts_t_labels", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "runmodule", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "nose", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "np", "type": "module"}]