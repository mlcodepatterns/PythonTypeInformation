[{"lineNumber": 43, "col_offset": 0, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "test_positives", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "test_negatives", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "test_fastq_to_generator_valid_files", "type": "Callable[[Any], Any]"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "test_fastq_to_generator_invalid_files_all_variants", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "test_fastq_to_generator_invalid_files_illumina", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "test_fastq_to_generator_solexa", "type": "Callable[[Any], Any]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "test_fastq_to_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "test_fastq_to_sequence_collection", "type": "Callable[[Any], Any]"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "test_fastq_to_alignment", "type": "Callable[[Any], Any]"}, {"lineNumber": 397, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "test_generator_to_fastq_kwargs_passed", "type": "Callable[[Any], Any]"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "test_sequence_to_fastq_kwargs_passed", "type": "Callable[[Any], Any]"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "test_sequence_collection_to_fastq_kwargs_passed", "type": "Callable[[Any], Any]"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "test_alignment_to_fastq_kwargs_passed", "type": "Callable[[Any], Any]"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "test_generator_to_fastq_no_qual", "type": "Callable[[Any], Any]"}, {"lineNumber": 504, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "test_conversion", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "arg", "type": "str"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "args", "type": "Tuple[str]"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 397, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "gen", "type": "Callable[[], Any]"}, {"lineNumber": 504, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 623, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "positives", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "negatives", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 47, "nodeName": "valid_configurations", "type": "List[Union[Tuple[List[Any], List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[nothing]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Tuple[str, str, str, List[int]]]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]], List[Tuple[str, str, str, List[int]]]]]]"}, {"lineNumber": 310, "col_offset": 47, "nodeName": "invalid_files", "type": "List[Tuple[Any, Any, str]]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 325, "col_offset": 18, "nodeName": "fps", "type": "List[Any]"}, {"lineNumber": 363, "col_offset": 47, "nodeName": "valid_configurations", "type": "List[Union[Tuple[List[Any], List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[nothing]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Tuple[str, str, str, List[int]]]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]], List[Tuple[str, str, str, List[int]]]]]]"}, {"lineNumber": 380, "col_offset": 47, "nodeName": "valid_configurations", "type": "List[Union[Tuple[List[Any], List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[nothing]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Tuple[str, str, str, List[int]]]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]], List[Tuple[str, str, str, List[int]]]]]]"}, {"lineNumber": 423, "col_offset": 46, "nodeName": "valid_files", "type": "List[Tuple[List[Tuple[str, str, str, List[int]]], List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]]]"}, {"lineNumber": 461, "col_offset": 46, "nodeName": "valid_files", "type": "List[Tuple[List[Tuple[str, str, str, List[int]]], List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]]]"}, {"lineNumber": 478, "col_offset": 46, "nodeName": "valid_files", "type": "List[Tuple[List[Tuple[str, str, str, List[int]]], List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]]]"}, {"lineNumber": 605, "col_offset": 38, "nodeName": "conversions", "type": "List[Union[Tuple[Any, Any, List[Tuple[Dict[str, str], Dict[str, int]]]], Tuple[Any, Any, List[Union[Tuple[Dict[str, str], Dict[str, str]], Tuple[Dict[str, int], Dict[str, str]], Tuple[Dict[str, str], Dict[str, int]]]]]]]"}, {"lineNumber": 624, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "arg", "type": "str"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, int], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing]]"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "self", "type": "TestSniffer"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "self", "type": "TestSniffer"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]]]"}, {"lineNumber": 294, "col_offset": 33, "nodeName": "components", "type": "Union[List[nothing], List[Tuple[str, str, str, List[int]]]]"}, {"lineNumber": 294, "col_offset": 47, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "error_type", "type": "Any"}, {"lineNumber": 310, "col_offset": 28, "nodeName": "error_msg_regex", "type": "str"}, {"lineNumber": 310, "col_offset": 47, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "variant", "type": "str"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "offset", "type": "int"}, {"lineNumber": 343, "col_offset": 51, "nodeName": "valid_configurations", "type": "List[Union[Tuple[List[Any], List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[nothing]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Tuple[str, str, str, List[int]]]], Tuple[List[Any], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]], List[Tuple[str, str, str, List[int]]]]]]"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 363, "col_offset": 25, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]]]"}, {"lineNumber": 363, "col_offset": 33, "nodeName": "components", "type": "Union[List[nothing], List[Tuple[str, str, str, List[int]]]]"}, {"lineNumber": 363, "col_offset": 47, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 364, "col_offset": 25, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 380, "col_offset": 25, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]]]"}, {"lineNumber": 380, "col_offset": 33, "nodeName": "components", "type": "Union[List[nothing], List[Tuple[str, str, str, List[int]]]]"}, {"lineNumber": 380, "col_offset": 47, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 381, "col_offset": 25, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 423, "col_offset": 24, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 423, "col_offset": 46, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 424, "col_offset": 39, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 441, "col_offset": 28, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 444, "col_offset": 50, "nodeName": "valid_files", "type": "List[Tuple[List[Tuple[str, str, str, List[int]]], List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]]]"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 461, "col_offset": 24, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 461, "col_offset": 46, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 462, "col_offset": 39, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 478, "col_offset": 24, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 478, "col_offset": 46, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 479, "col_offset": 39, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 605, "col_offset": 12, "nodeName": "from_fp", "type": "Any"}, {"lineNumber": 605, "col_offset": 21, "nodeName": "to_fp", "type": "Any"}, {"lineNumber": 605, "col_offset": 28, "nodeName": "kwargs", "type": "Union[List[Tuple[Dict[str, str], Dict[str, int]]], List[Union[Tuple[Dict[str, str], Dict[str, str]], Tuple[Dict[str, int], Dict[str, str]], Tuple[Dict[str, str], Dict[str, int]]]]]"}, {"lineNumber": 605, "col_offset": 38, "nodeName": "self", "type": "TestConversions"}, {"lineNumber": 606, "col_offset": 42, "nodeName": "kwargs", "type": "Union[List[Union[Tuple[Dict[str, str], Dict[str, str]], Tuple[Dict[str, int], Dict[str, str]], Tuple[Dict[str, str], Dict[str, int]]]], List[Tuple[Dict[str, str], Dict[str, int]]]]"}, {"lineNumber": 624, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "arg", "type": "str"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "kwarg", "type": "Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]]]"}, {"lineNumber": 296, "col_offset": 29, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]]]"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 334, "col_offset": 31, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 340, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 340, "col_offset": 36, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 340, "col_offset": 47, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 340, "col_offset": 55, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 341, "col_offset": 36, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 342, "col_offset": 36, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 343, "col_offset": 29, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]]]"}, {"lineNumber": 343, "col_offset": 37, "nodeName": "components", "type": "Union[List[nothing], List[Tuple[str, str, str, List[int]]]]"}, {"lineNumber": 343, "col_offset": 51, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 344, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 344, "col_offset": 29, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "kwarg", "type": "Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]]]"}, {"lineNumber": 365, "col_offset": 29, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]]]"}, {"lineNumber": 382, "col_offset": 20, "nodeName": "kwarg", "type": "Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]]]"}, {"lineNumber": 382, "col_offset": 29, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]]]"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 424, "col_offset": 24, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 432, "col_offset": 16, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 441, "col_offset": 38, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 441, "col_offset": 46, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 442, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 442, "col_offset": 36, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 443, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 443, "col_offset": 36, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 444, "col_offset": 50, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 445, "col_offset": 43, "nodeName": "kwargs_expected_fp", "type": "List[Union[Tuple[Dict[str, str], Any], Tuple[Dict[str, int], Any]]]"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 462, "col_offset": 24, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 467, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 469, "col_offset": 16, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 479, "col_offset": 16, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 486, "col_offset": 16, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 500, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 500, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "_generator_to_fastq", "type": "Any"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "from_kwargs", "type": "Any"}, {"lineNumber": 606, "col_offset": 29, "nodeName": "to_kwargs", "type": "Any"}, {"lineNumber": 607, "col_offset": 16, "nodeName": "read_gen", "type": "Any"}, {"lineNumber": 608, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 615, "col_offset": 16, "nodeName": "obs", "type": "nothing"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, int], Dict[str, Union[int, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing]]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "TestSniffer"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "_fastq_sniffer", "type": "Any"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "fp", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "TestSniffer"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "_fastq_sniffer", "type": "Any"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "fp", "type": "Any"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 17, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 326, "col_offset": 41, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 328, "col_offset": 41, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 335, "col_offset": 17, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 350, "col_offset": 24, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 350, "col_offset": 33, "nodeName": "kwargs", "type": "Union[List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]], List[Union[Dict[str, str], Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]]]], List[Union[Dict[nothing, nothing], Dict[str, str], Dict[str, Union[int, functools.partial[nothing]]]]]]"}, {"lineNumber": 367, "col_offset": 20, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "observed", "type": "Any"}, {"lineNumber": 384, "col_offset": 20, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 390, "col_offset": 20, "nodeName": "observed", "type": "Any"}, {"lineNumber": 426, "col_offset": 24, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 426, "col_offset": 29, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 430, "col_offset": 21, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 431, "col_offset": 16, "nodeName": "_generator_to_fastq", "type": "Any"}, {"lineNumber": 431, "col_offset": 43, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 432, "col_offset": 27, "nodeName": "getvalue", "type": "Callable"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 435, "col_offset": 47, "nodeName": "f", "type": "file"}, {"lineNumber": 436, "col_offset": 20, "nodeName": "expected", "type": "str"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 438, "col_offset": 33, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 438, "col_offset": 43, "nodeName": "expected", "type": "str"}, {"lineNumber": 445, "col_offset": 20, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 445, "col_offset": 28, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 446, "col_offset": 20, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 447, "col_offset": 24, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 447, "col_offset": 29, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 452, "col_offset": 20, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 463, "col_offset": 22, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 467, "col_offset": 21, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "_sequence_collection_to_fastq", "type": "Any"}, {"lineNumber": 468, "col_offset": 46, "nodeName": "obj", "type": "Any"}, {"lineNumber": 468, "col_offset": 51, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 469, "col_offset": 27, "nodeName": "getvalue", "type": "Callable"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 472, "col_offset": 47, "nodeName": "f", "type": "file"}, {"lineNumber": 473, "col_offset": 20, "nodeName": "expected", "type": "str"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 475, "col_offset": 33, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 475, "col_offset": 43, "nodeName": "expected", "type": "str"}, {"lineNumber": 480, "col_offset": 22, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 484, "col_offset": 21, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 485, "col_offset": 16, "nodeName": "_alignment_to_fastq", "type": "Any"}, {"lineNumber": 485, "col_offset": 36, "nodeName": "obj", "type": "Any"}, {"lineNumber": 485, "col_offset": 41, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 486, "col_offset": 27, "nodeName": "getvalue", "type": "Callable"}, {"lineNumber": 487, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 489, "col_offset": 47, "nodeName": "f", "type": "file"}, {"lineNumber": 490, "col_offset": 20, "nodeName": "expected", "type": "str"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 492, "col_offset": 33, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 492, "col_offset": 43, "nodeName": "expected", "type": "str"}, {"lineNumber": 496, "col_offset": 18, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 498, "col_offset": 18, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 500, "col_offset": 13, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 501, "col_offset": 32, "nodeName": "gen", "type": "Callable[[], Any]"}, {"lineNumber": 501, "col_offset": 39, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 507, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 508, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 512, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 513, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 518, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 519, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 525, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 526, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 531, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 538, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 539, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 544, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 545, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 551, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 552, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 557, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 558, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 564, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 565, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 570, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 571, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 577, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 578, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 583, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 584, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 590, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 591, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 596, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 597, "col_offset": 13, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 607, "col_offset": 27, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 607, "col_offset": 47, "nodeName": "from_fp", "type": "Any"}, {"lineNumber": 608, "col_offset": 21, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 615, "col_offset": 22, "nodeName": "getvalue", "type": "Callable"}, {"lineNumber": 616, "col_offset": 16, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 618, "col_offset": 41, "nodeName": "fh", "type": "file"}, {"lineNumber": 619, "col_offset": 20, "nodeName": "exp", "type": "str"}, {"lineNumber": 620, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 620, "col_offset": 33, "nodeName": "obs", "type": "nothing"}, {"lineNumber": 620, "col_offset": 38, "nodeName": "exp", "type": "str"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 191, "col_offset": 46, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 194, "col_offset": 47, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 197, "col_offset": 47, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 200, "col_offset": 48, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 203, "col_offset": 51, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 206, "col_offset": 48, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 209, "col_offset": 49, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 212, "col_offset": 49, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 215, "col_offset": 50, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 218, "col_offset": 45, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 221, "col_offset": 47, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 229, "col_offset": 40, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 235, "col_offset": 38, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 237, "col_offset": 36, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 240, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 243, "col_offset": 40, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 249, "col_offset": 39, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 252, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 255, "col_offset": 42, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 258, "col_offset": 38, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 264, "col_offset": 35, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 270, "col_offset": 41, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 273, "col_offset": 42, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 276, "col_offset": 42, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 279, "col_offset": 43, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 282, "col_offset": 41, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 285, "col_offset": 42, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 289, "col_offset": 42, "nodeName": "FASTQFormatError", "type": "Any"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "kwarg", "type": "Union[Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]], Dict[str, str], Dict[str, Union[str, functools.partial[nothing]]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 298, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 298, "col_offset": 59, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 302, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "o", "type": "Any"}, {"lineNumber": 304, "col_offset": 27, "nodeName": "e", "type": "Any"}, {"lineNumber": 304, "col_offset": 32, "nodeName": "zip", "type": "Any"}, {"lineNumber": 304, "col_offset": 36, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 304, "col_offset": 46, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 312, "col_offset": 21, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 312, "col_offset": 45, "nodeName": "error_type", "type": "Any"}, {"lineNumber": 312, "col_offset": 57, "nodeName": "error_msg_regex", "type": "str"}, {"lineNumber": 313, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 316, "col_offset": 45, "nodeName": "error_type", "type": "Any"}, {"lineNumber": 316, "col_offset": 57, "nodeName": "error_msg_regex", "type": "str"}, {"lineNumber": 317, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 326, "col_offset": 17, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 327, "col_offset": 21, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 327, "col_offset": 41, "nodeName": "fp", "type": "Any"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 329, "col_offset": 21, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 329, "col_offset": 41, "nodeName": "fp", "type": "Any"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "seq_num", "type": "Union[str, int, functools.partial[nothing]]"}, {"lineNumber": 354, "col_offset": 24, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 366, "col_offset": 33, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[str, Union[str, functools.partial[nothing], int]], Dict[str, Union[int, functools.partial[nothing]]], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]"}, {"lineNumber": 367, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 367, "col_offset": 59, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 368, "col_offset": 31, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 373, "col_offset": 31, "nodeName": "_fastq_to_sequence_collection", "type": "Any"}, {"lineNumber": 373, "col_offset": 61, "nodeName": "valid", "type": "Any"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 375, "col_offset": 37, "nodeName": "observed", "type": "Any"}, {"lineNumber": 375, "col_offset": 47, "nodeName": "expected", "type": "Any"}, {"lineNumber": 376, "col_offset": 24, "nodeName": "o", "type": "Any"}, {"lineNumber": 376, "col_offset": 27, "nodeName": "e", "type": "Any"}, {"lineNumber": 376, "col_offset": 32, "nodeName": "zip", "type": "Any"}, {"lineNumber": 376, "col_offset": 36, "nodeName": "observed", "type": "Any"}, {"lineNumber": 376, "col_offset": 46, "nodeName": "expected", "type": "Any"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 383, "col_offset": 33, "nodeName": "kwarg", "type": "Union[Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, str], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 384, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 384, "col_offset": 59, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 385, "col_offset": 31, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 390, "col_offset": 31, "nodeName": "_fastq_to_alignment", "type": "Any"}, {"lineNumber": 390, "col_offset": 51, "nodeName": "valid", "type": "Any"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 392, "col_offset": 37, "nodeName": "observed", "type": "Any"}, {"lineNumber": 392, "col_offset": 47, "nodeName": "expected", "type": "Any"}, {"lineNumber": 393, "col_offset": 24, "nodeName": "o", "type": "Any"}, {"lineNumber": 393, "col_offset": 27, "nodeName": "e", "type": "Any"}, {"lineNumber": 393, "col_offset": 32, "nodeName": "zip", "type": "Any"}, {"lineNumber": 393, "col_offset": 36, "nodeName": "observed", "type": "Any"}, {"lineNumber": 393, "col_offset": 46, "nodeName": "expected", "type": "Any"}, {"lineNumber": 431, "col_offset": 36, "nodeName": "gen", "type": "Callable[[], Any]"}, {"lineNumber": 431, "col_offset": 49, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 432, "col_offset": 27, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 435, "col_offset": 21, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 435, "col_offset": 26, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 436, "col_offset": 31, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 446, "col_offset": 25, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 452, "col_offset": 31, "nodeName": "getvalue", "type": "Callable"}, {"lineNumber": 453, "col_offset": 20, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 455, "col_offset": 51, "nodeName": "f", "type": "file"}, {"lineNumber": 456, "col_offset": 24, "nodeName": "expected", "type": "str"}, {"lineNumber": 458, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 458, "col_offset": 37, "nodeName": "observed", "type": "nothing"}, {"lineNumber": 458, "col_offset": 47, "nodeName": "expected", "type": "str"}, {"lineNumber": 468, "col_offset": 57, "nodeName": "kwargs", "type": "Union[Dict[str, int], Dict[str, str]]"}, {"lineNumber": 469, "col_offset": 27, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 472, "col_offset": 26, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 473, "col_offset": 31, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 485, "col_offset": 47, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 486, "col_offset": 27, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 487, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 489, "col_offset": 21, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 489, "col_offset": 26, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 490, "col_offset": 31, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 607, "col_offset": 58, "nodeName": "from_kwargs", "type": "Any"}, {"lineNumber": 611, "col_offset": 21, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 612, "col_offset": 20, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 613, "col_offset": 20, "nodeName": "_generator_to_fastq", "type": "Any"}, {"lineNumber": 613, "col_offset": 40, "nodeName": "read_gen", "type": "Any"}, {"lineNumber": 613, "col_offset": 50, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 615, "col_offset": 22, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 616, "col_offset": 16, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 618, "col_offset": 21, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 618, "col_offset": 26, "nodeName": "to_fp", "type": "Any"}, {"lineNumber": 619, "col_offset": 26, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 620, "col_offset": 16, "nodeName": "self", "type": "TestConversions"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "Protein", "type": "Any"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 298, "col_offset": 34, "nodeName": "kwarg", "type": "Union[Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]], Dict[str, str], Dict[str, Union[str, functools.partial[nothing]]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 300, "col_offset": 50, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 300, "col_offset": 55, "nodeName": "components", "type": "Union[List[Tuple[str, str, str, List[int]]], List[nothing]]"}, {"lineNumber": 302, "col_offset": 36, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 302, "col_offset": 56, "nodeName": "valid", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 303, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 303, "col_offset": 41, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 303, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 303, "col_offset": 56, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 21, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 313, "col_offset": 45, "nodeName": "fp", "type": "Any"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 317, "col_offset": 45, "nodeName": "fp", "type": "Any"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 347, "col_offset": 27, "nodeName": "components", "type": "Union[List[Tuple[str, str, str, List[int]]], List[nothing]]"}, {"lineNumber": 351, "col_offset": 24, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 37, "nodeName": "kwarg", "type": "Union[Dict[str, Union[str, functools.partial[nothing], int]], Dict[str, str], Dict[str, int], Dict[nothing, nothing], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 353, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 354, "col_offset": 28, "nodeName": "components", "type": "Union[List[Tuple[str, str, str, List[int]]], List[nothing]]"}, {"lineNumber": 355, "col_offset": 35, "nodeName": "constructor", "type": "functools.partial[nothing]"}, {"lineNumber": 358, "col_offset": 35, "nodeName": "read", "type": "Any"}, {"lineNumber": 358, "col_offset": 40, "nodeName": "valid", "type": "Any"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 367, "col_offset": 34, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[str, Union[str, functools.partial[nothing], int]], Dict[str, Union[int, functools.partial[nothing]]], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]"}, {"lineNumber": 373, "col_offset": 70, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[str, Union[str, functools.partial[nothing], int]], Dict[str, Union[int, functools.partial[nothing]]], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]]]"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 384, "col_offset": 34, "nodeName": "kwarg", "type": "Union[Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, str], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 390, "col_offset": 60, "nodeName": "kwarg", "type": "Union[Dict[str, int], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, str], Dict[str, Union[str, functools.partial[nothing], int]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 394, "col_offset": 24, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 409, "col_offset": 17, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 411, "col_offset": 17, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 413, "col_offset": 17, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 415, "col_offset": 17, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 418, "col_offset": 17, "nodeName": "get_data_path", "type": "Any"}, {"lineNumber": 436, "col_offset": 31, "nodeName": "f", "type": "file"}, {"lineNumber": 448, "col_offset": 30, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 450, "col_offset": 24, "nodeName": "write", "type": "Any"}, {"lineNumber": 450, "col_offset": 30, "nodeName": "obj", "type": "Any"}, {"lineNumber": 452, "col_offset": 31, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 453, "col_offset": 20, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 455, "col_offset": 25, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 455, "col_offset": 30, "nodeName": "expected_fp", "type": "Any"}, {"lineNumber": 456, "col_offset": 35, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 458, "col_offset": 20, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 465, "col_offset": 57, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 465, "col_offset": 62, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 473, "col_offset": 31, "nodeName": "f", "type": "file"}, {"lineNumber": 482, "col_offset": 54, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 482, "col_offset": 59, "nodeName": "components", "type": "List[Tuple[str, str, str, List[int]]]"}, {"lineNumber": 490, "col_offset": 31, "nodeName": "f", "type": "file"}, {"lineNumber": 497, "col_offset": 45, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 611, "col_offset": 21, "nodeName": "warnings", "type": "module"}, {"lineNumber": 612, "col_offset": 20, "nodeName": "warnings", "type": "module"}, {"lineNumber": 613, "col_offset": 56, "nodeName": "to_kwargs", "type": "Any"}, {"lineNumber": 619, "col_offset": 26, "nodeName": "fh", "type": "file"}, {"lineNumber": 302, "col_offset": 65, "nodeName": "kwarg", "type": "Union[Dict[str, int], Dict[str, Union[str, functools.partial[nothing], int]], Dict[str, str], Dict[str, Union[str, functools.partial[nothing]]], Dict[nothing, nothing], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 305, "col_offset": 40, "nodeName": "equals", "type": "Any"}, {"lineNumber": 305, "col_offset": 49, "nodeName": "e", "type": "Any"}, {"lineNumber": 313, "col_offset": 57, "nodeName": "variant", "type": "str"}, {"lineNumber": 317, "col_offset": 62, "nodeName": "offset", "type": "int"}, {"lineNumber": 353, "col_offset": 34, "nodeName": "kwarg", "type": "Union[Dict[str, Union[str, functools.partial[nothing], int]], Dict[str, str], Dict[str, int], Dict[nothing, nothing], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 355, "col_offset": 47, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 358, "col_offset": 52, "nodeName": "func", "type": "Any"}, {"lineNumber": 359, "col_offset": 72, "nodeName": "kwarg", "type": "Union[Dict[str, Union[str, functools.partial[nothing], int]], Dict[str, str], Dict[str, int], Dict[nothing, nothing], Dict[str, Union[str, functools.partial[nothing]]], Dict[str, Union[int, functools.partial[nothing]]]]"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 360, "col_offset": 40, "nodeName": "equals", "type": "Any"}, {"lineNumber": 360, "col_offset": 56, "nodeName": "expected", "type": "Any"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 371, "col_offset": 34, "nodeName": "components", "type": "Union[List[Tuple[str, str, str, List[int]]], List[nothing]]"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 377, "col_offset": 40, "nodeName": "equals", "type": "Any"}, {"lineNumber": 377, "col_offset": 49, "nodeName": "e", "type": "Any"}, {"lineNumber": 388, "col_offset": 29, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 388, "col_offset": 34, "nodeName": "components", "type": "Union[List[Tuple[str, str, str, List[int]]], List[nothing]]"}, {"lineNumber": 394, "col_offset": 24, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 394, "col_offset": 40, "nodeName": "equals", "type": "Any"}, {"lineNumber": 394, "col_offset": 49, "nodeName": "e", "type": "Any"}, {"lineNumber": 427, "col_offset": 30, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 448, "col_offset": 42, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 450, "col_offset": 40, "nodeName": "fh", "type": "StringIO.StringIO[nothing]"}, {"lineNumber": 450, "col_offset": 62, "nodeName": "kwargs", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 456, "col_offset": 35, "nodeName": "f", "type": "file"}, {"lineNumber": 300, "col_offset": 40, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 305, "col_offset": 40, "nodeName": "o", "type": "Any"}, {"lineNumber": 354, "col_offset": 39, "nodeName": "seq_num", "type": "Union[functools.partial[nothing], str, int]"}, {"lineNumber": 355, "col_offset": 56, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 356, "col_offset": 59, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 356, "col_offset": 73, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 358, "col_offset": 52, "nodeName": "constructor", "type": "functools.partial[nothing]"}, {"lineNumber": 360, "col_offset": 40, "nodeName": "observed", "type": "Any"}, {"lineNumber": 377, "col_offset": 40, "nodeName": "o", "type": "Any"}, {"lineNumber": 394, "col_offset": 40, "nodeName": "o", "type": "Any"}, {"lineNumber": 428, "col_offset": 28, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 448, "col_offset": 51, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 448, "col_offset": 69, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 449, "col_offset": 50, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 465, "col_offset": 47, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 482, "col_offset": 44, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 428, "col_offset": 37, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 428, "col_offset": 55, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}, {"lineNumber": 428, "col_offset": 69, "nodeName": "c", "type": "Tuple[str, str, str, List[int]]"}]