[{"lineNumber": 22, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "test_positives", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_negatives", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "test_phylip_to_alignment_invalid_files", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "test_phylip_to_alignment_valid_files", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "test_write", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "test_write_invalid_alignment", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 249, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "positives", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "negatives", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "invalid_files", "type": "List[Tuple[Any, Type[skbio.io._exception.PhylipFormatError], str]]"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "valid_configurations", "type": "List[Tuple[List[Any], List[Tuple[str, str]]]]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "single_seq_short", "type": "Any"}, {"lineNumber": 236, "col_offset": 45, "nodeName": "invalid_objs", "type": "List[Tuple[Any, str]]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "self", "type": "TestSniffer"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "self", "type": "TestSniffer"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "error_type", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "error_msg_regex", "type": "str"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "components", "type": "List[Tuple[str, str]]"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "dna_3_seqs", "type": "Any"}, {"lineNumber": 200, "col_offset": 33, "nodeName": "variable_length_ids", "type": "Any"}, {"lineNumber": 200, "col_offset": 54, "nodeName": "two_chunks", "type": "Any"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "single_seq_long", "type": "Any"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "single_seq_short", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "map", "type": "Callable"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "fp", "type": "nothing"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "obj", "type": "nothing"}, {"lineNumber": 224, "col_offset": 23, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "fps", "type": "List[Any]"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "objs", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "obs", "type": "unicode"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "invalid_obj", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "error_msg_regexp", "type": "str"}, {"lineNumber": 236, "col_offset": 45, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "obs", "type": "unicode"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "map", "type": "Callable"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "observed", "type": "Any"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "_alignment_to_phylip", "type": "Any"}, {"lineNumber": 226, "col_offset": 33, "nodeName": "obj", "type": "nothing"}, {"lineNumber": 226, "col_offset": 38, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 230, "col_offset": 32, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "obs", "type": "unicode"}, {"lineNumber": 233, "col_offset": 34, "nodeName": "exp", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 244, "col_offset": 18, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "obs", "type": "unicode"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "TestSniffer"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "_phylip_sniffer", "type": "Any"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "fp", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "TestSniffer"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "_phylip_sniffer", "type": "Any"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "fp", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "error_type", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 155, "col_offset": 57, "nodeName": "error_msg_regex", "type": "str"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "_phylip_to_alignment", "type": "Any"}, {"lineNumber": 156, "col_offset": 37, "nodeName": "fp", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "_phylip_to_alignment", "type": "Any"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "valid", "type": "Any"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "observed", "type": "Any"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "expected", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "fp", "type": "nothing"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "read", "type": "Callable"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 238, "col_offset": 45, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 239, "col_offset": 39, "nodeName": "error_msg_regexp", "type": "str"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "_alignment_to_phylip", "type": "Any"}, {"lineNumber": 240, "col_offset": 37, "nodeName": "invalid_obj", "type": "Any"}, {"lineNumber": 240, "col_offset": 50, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 244, "col_offset": 18, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "fh", "type": "_io.StringIO"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "self", "type": "TestWriters"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "get_data_path", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 117, "col_offset": 56, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 120, "col_offset": 55, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 123, "col_offset": 47, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 126, "col_offset": 48, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 132, "col_offset": 44, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "PhylipFormatError", "type": "Type[skbio.io._exception.PhylipFormatError]"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "self", "type": "TestReaders"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "fh", "type": "IO[Any]"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 163, "col_offset": 55, "nodeName": "components", "type": "List[Tuple[str, str]]"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "seq", "type": "str"}, {"lineNumber": 163, "col_offset": 48, "nodeName": "ID", "type": "str"}]