[{"lineNumber": 19, "col_offset": 29, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "_format_lines", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "_sorted_keys_grouped_by_type", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "_type_sort_key", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "_format_metadata_key_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "_format_key", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "_wrap_text_with_indent", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "_format_positional_metadata_column", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "_msa", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "seq", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "_width", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "width", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "_indent", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "_chunk_size", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "chunk_size", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "cls_name", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "dtype_class_name", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "num_lines", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "num_chars_at_end", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "line_index", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "line_indices", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "type_sorted", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "type_and_value_sorted", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "type_and_value_sorted", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "key_fmt", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "supported_type", "type": "bool"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "key_fmt", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "key_fmt", "type": "str"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "dtype_fmt", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "indent", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "ElasticLines", "type": "Type[skbio.sequence._base.ElasticLines]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "add_line", "type": "Callable[[Any], None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "add_separator", "type": "Callable[[], None]"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "has_metadata", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "has_positional_metadata", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "add_line", "type": "Callable[[Any], None]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "label", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "_repr_stats", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "add_separator", "type": "Callable[[], None]"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "num_lines", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "to_str", "type": "Callable[[], str]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "seq_str", "type": "str"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "dict_", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "group", "type": "Iterator[Any]"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "groupby", "type": "Callable"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "type_sorted", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 55, "nodeName": "_type_sort_key", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "_format_key", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "value_repr", "type": "str"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "extra_indent", "type": "int"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "value_repr", "type": "str"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "extra_indent", "type": "int"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "_wrap_text_with_indent", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "value_repr", "type": "str"}, {"lineNumber": 136, "col_offset": 55, "nodeName": "key_fmt", "type": "str"}, {"lineNumber": 136, "col_offset": 64, "nodeName": "extra_indent", "type": "int"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "_indent", "type": "str"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "text_type", "type": "Type[unicode]"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "binary_type", "type": "Type[str]"}, {"lineNumber": 147, "col_offset": 59, "nodeName": "Number", "type": "Type[numbers.Number]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "key_fmt", "type": "str"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "key_fmt", "type": "str"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "wrap", "type": "Callable"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "_format_key", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "_wrap_text_with_indent", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "dtype_fmt", "type": "str"}, {"lineNumber": 176, "col_offset": 54, "nodeName": "key_fmt", "type": "str"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "_msa", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "_msa", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "add_line", "type": "Callable[[Any], None]"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "_sorted_keys_grouped_by_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "_msa", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "add_line", "type": "Callable[[Any], None]"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "_msa", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "add_line", "type": "Callable[[Any], None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "_msa", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "add_lines", "type": "Callable[[Any], None]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "add_lines", "type": "Callable[[Any], None]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "add_line", "type": "Callable[[Any], None]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "add_lines", "type": "Callable[[Any], None]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "formatted_seq", "type": "str"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "_type_sort_key", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "itertools", "type": "module"}, {"lineNumber": 97, "col_offset": 55, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "key", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "text_type", "type": "Type[unicode]"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "binary_type", "type": "Type[str]"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "extra_indent", "type": "int"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "value_repr", "type": "str"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "extra_indent", "type": "int"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "supported_type", "type": "bool"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "supported_type", "type": "bool"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "key", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "six", "type": "module"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "six", "type": "module"}, {"lineNumber": 147, "col_offset": 59, "nodeName": "numbers", "type": "module"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "_indent", "type": "str"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "_width", "type": "Any"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "initial_text", "type": "str"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "_seqs", "type": "Any"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "dtype_class_name", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "_msa", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "add_lines", "type": "Callable[[Any], None]"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "values", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "add_lines", "type": "Callable[[Any], None]"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "_format_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "_format_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "_format_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "_seqs", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "seq_str", "type": "str"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "type_and_value_sorted", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "group", "type": "Iterator[Any]"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "six", "type": "module"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "six", "type": "module"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "value", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "value", "type": "Any"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "Number", "type": "Type[numbers.Number]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 128, "col_offset": 37, "nodeName": "value_repr", "type": "str"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "key_fmt", "type": "str"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "_width", "type": "Any"}, {"lineNumber": 149, "col_offset": 51, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 149, "col_offset": 62, "nodeName": "key", "type": "Any"}, {"lineNumber": 150, "col_offset": 62, "nodeName": "supported_types", "type": "Tuple[Type[unicode], Type[str], Type[numbers.Number], Type[None]]"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "_msa", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "cls_name", "type": "Any"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "_msa", "type": "Any"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "key", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "_format_metadata_key_value", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 64, "nodeName": "key", "type": "Any"}, {"lineNumber": 55, "col_offset": 69, "nodeName": "value", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "columns", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "positional_metadata", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "lines", "type": "skbio.sequence._base.ElasticLines"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "_format_positional_metadata_column", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 60, "nodeName": "key", "type": "Any"}, {"lineNumber": 62, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "_indent", "type": "str"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "label", "type": "Any"}, {"lineNumber": 66, "col_offset": 62, "nodeName": "value", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 74, "col_offset": 53, "nodeName": "num_lines", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 76, "col_offset": 47, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "num_lines", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "_msa", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "line_index", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "seq_str", "type": "str"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "numbers", "type": "module"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 151, "col_offset": 46, "nodeName": "key", "type": "Any"}, {"lineNumber": 171, "col_offset": 57, "nodeName": "extra_indent", "type": "int"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "positional_metadata", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "_msa", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "key", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 78, "col_offset": 53, "nodeName": "num_lines", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "num_chars_at_end", "type": "int"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "value_repr", "type": "str"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "value_repr", "type": "str"}, {"lineNumber": 171, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 171, "col_offset": 41, "nodeName": "initial_text", "type": "str"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "_msa", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "self", "type": "_TabularMSAReprBuilder"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "num_chars_at_end", "type": "int"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "self", "type": "_TabularMSAReprBuilder"}]