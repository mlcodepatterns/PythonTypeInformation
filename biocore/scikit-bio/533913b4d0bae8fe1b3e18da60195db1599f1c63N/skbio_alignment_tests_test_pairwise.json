[{"lineNumber": 27, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "test_make_identity_substitution_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "test_global_pairwise_align_protein", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "test_global_pairwise_align_protein_penalize_terminal_gaps", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "test_global_pairwise_align_nucleotide_penalize_terminal_gaps", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "test_local_pairwise_align_protein", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "test_global_pairwise_align_nucleotide", "type": "Callable[[Any], Any]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "test_local_pairwise_align_nucleotide", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "test_nucleotide_aligners_use_substitution_matrices", "type": "Callable[[Any], Any]"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "test_init_matrices_sw", "type": "Callable[[Any], Any]"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "test_init_matrices_nw", "type": "Callable[[Any], Any]"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "test_compute_substitution_score", "type": "Callable[[Any], Any]"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "test_compute_score_and_traceback_matrices", "type": "Callable[[Any], Any]"}, {"lineNumber": 510, "col_offset": 4, "nodeName": "test_compute_score_and_traceback_matrices_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "test_traceback", "type": "Callable[[Any], Any]"}, {"lineNumber": 593, "col_offset": 4, "nodeName": "test_get_seq_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "test_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 616, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "seq1", "type": "str"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "seq2", "type": "str"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "aln1", "type": "str"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "aln2", "type": "str"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "aln1", "type": "str"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "aln2", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "alt_sub", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "subs_m", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "subs_m", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "score_m", "type": "numpy.ndarray"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "tback_m", "type": "numpy.ndarray"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "resetwarnings", "type": "Callable[[], None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 67, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 67, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "aln1", "type": "str"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "aln2", "type": "str"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "seq1", "type": "str"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "seq2", "type": "str"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "aln1", "type": "str"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "aln2", "type": "str"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "seq1", "type": "str"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "seq2", "type": "str"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 216, "col_offset": 37, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 236, "col_offset": 37, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 238, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 238, "col_offset": 37, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 300, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 300, "col_offset": 37, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 302, "col_offset": 37, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 307, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 340, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 340, "col_offset": 37, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 346, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 346, "col_offset": 37, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 354, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 362, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 362, "col_offset": 37, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 364, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 364, "col_offset": 37, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 368, "col_offset": 18, "nodeName": "make_identity_substitution_matrix", "type": "Callable[[Callable[..., Any]], Callable[..., Any]]"}, {"lineNumber": 371, "col_offset": 24, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 374, "col_offset": 25, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 385, "col_offset": 24, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 25, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 398, "col_offset": 27, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 404, "col_offset": 41, "nodeName": "_init_matrices_sw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 407, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 407, "col_offset": 54, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 408, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 408, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 421, "col_offset": 41, "nodeName": "_init_matrices_nw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 424, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 424, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 425, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 425, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 429, "col_offset": 17, "nodeName": "make_identity_substitution_matrix", "type": "Callable[[Callable[..., Any]], Callable[..., Any]]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 446, "col_offset": 17, "nodeName": "make_identity_substitution_matrix", "type": "Callable[[Callable[..., Any]], Callable[..., Any]]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 463, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable[[Callable[..., Any]], Callable[..., Any]]"}, {"lineNumber": 464, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 466, "col_offset": 67, "nodeName": "m", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 467, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 467, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 468, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 468, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable[[Callable[..., Any]], Callable[..., Any]]"}, {"lineNumber": 483, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 485, "col_offset": 67, "nodeName": "m", "type": "Any"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 486, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 486, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 487, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 487, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable[[Callable[..., Any]], Callable[..., Any]]"}, {"lineNumber": 502, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 506, "col_offset": 67, "nodeName": "m", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 507, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 507, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 508, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 508, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "make_identity_substitution_matrix", "type": "Callable[[Callable[..., Any]], Callable[..., Any]]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 514, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 514, "col_offset": 38, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 517, "col_offset": 32, "nodeName": "m", "type": "Any"}, {"lineNumber": 525, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 525, "col_offset": 27, "nodeName": "score_m", "type": "List[List[int]]"}, {"lineNumber": 531, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 531, "col_offset": 27, "nodeName": "tback_m", "type": "List[List[int]]"}, {"lineNumber": 535, "col_offset": 17, "nodeName": "_traceback", "type": "Callable[..., Any]"}, {"lineNumber": 535, "col_offset": 28, "nodeName": "tback_m", "type": "numpy.ndarray"}, {"lineNumber": 535, "col_offset": 37, "nodeName": "score_m", "type": "numpy.ndarray"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "make_identity_substitution_matrix", "type": "Callable[[Callable[..., Any]], Callable[..., Any]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "make_identity_substitution_matrix", "type": "Callable[[Callable[..., Any]], Callable[..., Any]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 123, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 168, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 179, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 180, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 188, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 191, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 197, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 198, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 199, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 201, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 209, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 210, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 233, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 246, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 248, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 256, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 257, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 258, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 260, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 269, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 270, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 271, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 284, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 285, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 286, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 287, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, str, float, int, int]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 297, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 310, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 311, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 312, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 314, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 320, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 321, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 322, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 324, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 324, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 333, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 334, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 334, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 335, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 341, "col_offset": 26, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 343, "col_offset": 26, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 347, "col_offset": 26, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 348, "col_offset": 26, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 359, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 359, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 377, "col_offset": 32, "nodeName": "alt_sub", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 378, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 378, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 379, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 379, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 380, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 391, "col_offset": 32, "nodeName": "alt_sub", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 392, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 392, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 393, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 393, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 394, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 395, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 398, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 431, "col_offset": 54, "nodeName": "subs_m", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 433, "col_offset": 59, "nodeName": "subs_m", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 435, "col_offset": 59, "nodeName": "subs_m", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 437, "col_offset": 64, "nodeName": "subs_m", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 440, "col_offset": 64, "nodeName": "subs_m", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 443, "col_offset": 64, "nodeName": "subs_m", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "_compute_substitution_score", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 448, "col_offset": 64, "nodeName": "subs_m", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 484, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 515, "col_offset": 26, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 516, "col_offset": 26, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 525, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 531, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 536, "col_offset": 28, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 537, "col_offset": 28, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 594, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 595, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 597, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 599, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 604, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 604, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 606, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 606, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 608, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 608, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 611, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 611, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 247, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 257, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 286, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 311, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 324, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 333, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 334, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 359, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 378, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 378, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 379, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 379, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 380, "col_offset": 28, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 392, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 392, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 393, "col_offset": 32, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 393, "col_offset": 55, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 394, "col_offset": 28, "nodeName": "actual_no_sub", "type": "Any"}, {"lineNumber": 395, "col_offset": 28, "nodeName": "actual_alt_sub", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 533, "col_offset": 21, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 594, "col_offset": 37, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 595, "col_offset": 37, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 597, "col_offset": 37, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 599, "col_offset": 37, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 217, "col_offset": 37, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "Protein", "type": "Type[skbio.sequence._protein.Protein]"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 280, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 341, "col_offset": 37, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 348, "col_offset": 37, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 406, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 422, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 465, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 466, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 484, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 485, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 503, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 504, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 505, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 506, "col_offset": 23, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 515, "col_offset": 37, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 516, "col_offset": 37, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 536, "col_offset": 39, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 537, "col_offset": 39, "nodeName": "DNA", "type": "Any"}]