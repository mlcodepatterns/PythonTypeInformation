[{"lineNumber": 22, "col_offset": 0, "nodeName": "test_get_data_path", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "test_assert_ordination_results_equal", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "fn", "type": "str"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "data_path", "type": "str"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "data_path_2", "type": "str"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "attr", "type": "str"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "proportion_explained", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "proportion_explained", "type": "None"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "proportion_explained", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "proportion_explained", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "proportion_explained", "type": "None"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "proportion_explained", "type": "None"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "proportion_explained", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "proportion_explained", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "proportion_explained", "type": "None"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "proportion_explained", "type": "None"}, {"lineNumber": 165, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "path", "type": "str"}, {"lineNumber": 25, "col_offset": 43, "nodeName": "fn", "type": "str"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "fn", "type": "str"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "assert_string_equal", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "data_path_2", "type": "str"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "data_path", "type": "str"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "OrdinationResults", "type": "Type[skbio._base.OrdinationResults]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "assert_ordination_results_equal", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 35, "col_offset": 46, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "OrdinationResults", "type": "Type[skbio._base.OrdinationResults]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "assert_ordination_results_equal", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "Series", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "Series", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "Series", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "Series", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "Series", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "assert_ordination_results_equal", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "runmodule", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 24, "col_offset": 43, "nodeName": "__file__", "type": "str"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "npt", "type": "Any"}, {"lineNumber": 31, "col_offset": 47, "nodeName": "Series", "type": "Any"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assert_ordination_results_equal", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "attr", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "attr", "type": "str"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "attr", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "attr", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "attr", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "attr", "type": "str"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "attr", "type": "str"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "attr", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assert_ordination_results_equal", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "attr", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "attr", "type": "str"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "pd", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assert_ordination_results_equal", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 75, "col_offset": 50, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "pd", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "pd", "type": "Any"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assert_ordination_results_equal", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "pd", "type": "Any"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "pd", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "copy", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "nose", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 47, "nodeName": "pd", "type": "Any"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "pd", "type": "Any"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "npt", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "assert_ordination_results_equal", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "assert_ordination_results_equal", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "almost_minimal1", "type": "skbio._base.OrdinationResults"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "npt", "type": "Any"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "npt", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "pd", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "npt", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "pd", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "pd", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "npt", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "pd", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "pd", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "npt", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "npt", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "npt", "type": "Any"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 114, "col_offset": 43, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 46, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 120, "col_offset": 43, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "b", "type": "Any"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 46, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 134, "col_offset": 43, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 148, "col_offset": 50, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 148, "col_offset": 53, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 155, "col_offset": 43, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 162, "col_offset": 50, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 53, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "_normalize_signs", "type": "Callable[[Any, Any], Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 107, "col_offset": 47, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "b", "type": "numpy.ndarray"}]