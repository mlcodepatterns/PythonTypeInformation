[{"lineNumber": 25, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "filterwarnings", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "expected_tback_m", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 61, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 61, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "expected_tback_m", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "_init_matrices_sw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 121, "col_offset": 54, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 122, "col_offset": 54, "nodeName": "expected_tback_m", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "_init_matrices_nw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 136, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 137, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 88, "col_offset": 70, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 96, "col_offset": 70, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 106, "col_offset": 69, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 113, "col_offset": 69, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "np", "type": "module"}]