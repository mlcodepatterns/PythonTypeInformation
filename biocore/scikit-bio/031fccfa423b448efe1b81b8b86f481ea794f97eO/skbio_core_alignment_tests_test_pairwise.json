[{"lineNumber": 32, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "filterwarnings", "type": "Callable[..., None]"}, {"lineNumber": 361, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "expected_tback_m", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "score_m", "type": "numpy.ndarray"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "tback_m", "type": "numpy.ndarray"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "expected", "type": "Tuple[str, str, int, int, int]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 62, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 62, "nodeName": "expected", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "global_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "local_pairwise_align_protein", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "global_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "local_pairwise_align_nucleotide", "type": "Callable[..., Any]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "expected_tback_m", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 240, "col_offset": 41, "nodeName": "_init_matrices_sw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 241, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 241, "col_offset": 54, "nodeName": "expected_score_m", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 242, "col_offset": 54, "nodeName": "expected_tback_m", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 255, "col_offset": 41, "nodeName": "_init_matrices_nw", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 256, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 256, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 257, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 257, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 272, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 273, "col_offset": 33, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 274, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 274, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 275, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 275, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 291, "col_offset": 33, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 292, "col_offset": 38, "nodeName": "actual_score_m", "type": "Any"}, {"lineNumber": 292, "col_offset": 54, "nodeName": "expected_score_m", "type": "List[List[int]]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 293, "col_offset": 38, "nodeName": "actual_tback_m", "type": "Any"}, {"lineNumber": 293, "col_offset": 54, "nodeName": "expected_tback_m", "type": "List[List[int]]"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 299, "col_offset": 38, "nodeName": "_compute_score_and_traceback_matrices", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 300, "col_offset": 47, "nodeName": "m", "type": "Dict[Any, Dict[Any, int]]"}, {"lineNumber": 308, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 308, "col_offset": 27, "nodeName": "score_m", "type": "List[List[int]]"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 314, "col_offset": 27, "nodeName": "tback_m", "type": "List[List[int]]"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "_traceback", "type": "Callable[..., Any]"}, {"lineNumber": 317, "col_offset": 28, "nodeName": "tback_m", "type": "numpy.ndarray"}, {"lineNumber": 317, "col_offset": 37, "nodeName": "score_m", "type": "numpy.ndarray"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "_make_nt_substitution_matrix", "type": "Callable"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 81, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 126, "col_offset": 46, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "Protein", "type": "Type[skbio.core.sequence.ProteinSequence]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 177, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 184, "col_offset": 38, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 187, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 198, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 199, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 200, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 202, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 212, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 213, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 215, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 220, "col_offset": 44, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 223, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "score", "type": "Any"}, {"lineNumber": 225, "col_offset": 41, "nodeName": "expected", "type": "Tuple[str, str, float, int, int]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "start_end_positions", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 231, "col_offset": 38, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 234, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 308, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 338, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 339, "col_offset": 25, "nodeName": "_get_seq_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 342, "col_offset": 25, "nodeName": "_get_seq_ids", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "_get_seq_ids", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 344, "col_offset": 25, "nodeName": "_get_seq_ids", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 349, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 351, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 353, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "self", "type": "PairwiseAlignmentTests"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "_first_largest", "type": "Callable[[Any], Any]"}, {"lineNumber": 356, "col_offset": 40, "nodeName": "l", "type": "List[Tuple[int, str]]"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "actual", "type": "Any"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 338, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 339, "col_offset": 37, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 343, "col_offset": 38, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 343, "col_offset": 50, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 344, "col_offset": 38, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}, {"lineNumber": 344, "col_offset": 56, "nodeName": "DNA", "type": "Type[skbio.core.sequence.DNASequence]"}]