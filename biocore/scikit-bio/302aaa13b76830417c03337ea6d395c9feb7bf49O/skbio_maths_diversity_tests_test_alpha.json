[{"lineNumber": 20, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 57, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "observed_species", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "observed_species", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "observed_species", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "brillouin_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "osd", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 26, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 26, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "np", "type": "module"}]