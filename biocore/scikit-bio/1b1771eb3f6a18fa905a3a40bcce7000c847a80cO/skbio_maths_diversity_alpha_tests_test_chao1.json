[{"lineNumber": 19, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 78, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "no_singles", "type": "numpy.ndarray"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "no_doubles", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "chao1_confidence", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "obs", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "chao1_confidence", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "obs", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "chao1_confidence", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "no_singles", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "obs", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "chao1_confidence", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "no_singles", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "obs", "type": "Any"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "chao1_confidence", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "no_doubles", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 51, "col_offset": 38, "nodeName": "obs", "type": "Any"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "chao1_confidence", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "no_doubles", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "obs", "type": "Any"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "_chao1_var", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "obs", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "_chao1_var", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "obs", "type": "Any"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "_chao1_var", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "no_singles", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "_chao1_var", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "no_singles", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "_chao1_var", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "no_doubles", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "_chao1_var", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "no_doubles", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "obs", "type": "Any"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "chao1", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "chao1", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "chao1", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "no_singles", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "chao1", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "no_singles", "type": "numpy.ndarray"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "chao1", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "no_doubles", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "chao1", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "no_doubles", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "self", "type": "Chao1Tests"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "self", "type": "Chao1Tests"}]