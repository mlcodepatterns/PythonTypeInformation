[{"lineNumber": 27, "col_offset": 0, "nodeName": "_get_alpha_diversity_metric_map", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "get_alpha_diversity_metrics", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "get_beta_diversity_metrics", "type": "Callable[[], Any]"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "_partial_pw", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "metric_map", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 7, "nodeName": "validate", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "all_ids_in_pairs", "type": "Set[Any]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "hashes", "type": "Set[Any]"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "dm", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "id_index", "type": "Dict[Any, int]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "id_pairs_indexed", "type": "Generator[Tuple[int, int], Any, None]"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "id_pairs_indexed", "type": "Generator[Tuple[int, int], Any, None]"}, {"lineNumber": 309, "col_offset": 7, "nodeName": "validate", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "distances", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "ace", "type": "Any"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "chao1", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "chao1_ci", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "berger_parker_d", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "brillouin_d", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "dominance", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "doubles", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "enspie", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "esty_ci", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "faith_pd", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "fisher_alpha", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "goods_coverage", "type": "Any"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "heip_e", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "kempton_taylor_q", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "margalef", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "mcintosh_d", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "mcintosh_e", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "menhinick", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "michaelis_menten_fit", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "observed_otus", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "osd", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "pielou_e", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "robbins", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "shannon", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "simpson", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "simpson_e", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "singles", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "strong", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "gini_index", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "lladser_pe", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "lladser_ci", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "_get_alpha_diversity_metric_map", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "_get_alpha_diversity_metric_map", "type": "Callable[[], Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 7, "nodeName": "metric", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "counts", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "counts_by_node", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "metric", "type": "functools.partial[nothing]"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "Series", "type": "Any"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 7, "nodeName": "ids", "type": "Any"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "union", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 229, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "metric", "type": "Any"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 234, "col_offset": 9, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "id_", "type": "Any"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "idx", "type": "int"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "u", "type": "int"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "v", "type": "int"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "dm", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "T", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 312, "col_offset": 7, "nodeName": "metric", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "counts", "type": "Any"}, {"lineNumber": 316, "col_offset": 17, "nodeName": "counts_by_node", "type": "Any"}, {"lineNumber": 337, "col_offset": 7, "nodeName": "id_pairs", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "pairwise_func", "type": "functools.partial[nothing]"}, {"lineNumber": 344, "col_offset": 7, "nodeName": "pairwise_func", "type": "Union[functools.partial[nothing], Any]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "pairwise_func", "type": "Any"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "pdist", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "pairwise_func", "type": "Any"}, {"lineNumber": 347, "col_offset": 30, "nodeName": "counts", "type": "Any"}, {"lineNumber": 348, "col_offset": 11, "nodeName": "DistanceMatrix", "type": "Type[skbio.stats.distance._base.DistanceMatrix]"}, {"lineNumber": 348, "col_offset": 26, "nodeName": "distances", "type": "Any"}, {"lineNumber": 348, "col_offset": 37, "nodeName": "ids", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "alpha", "type": "module"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "alpha", "type": "module"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "alpha", "type": "module"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "alpha", "type": "module"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "alpha", "type": "module"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "alpha", "type": "module"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "alpha", "type": "module"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "alpha", "type": "module"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "alpha", "type": "module"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "alpha", "type": "module"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "alpha", "type": "module"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "alpha", "type": "module"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "alpha", "type": "module"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "alpha", "type": "module"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "alpha", "type": "module"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "alpha", "type": "module"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "alpha", "type": "module"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "alpha", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "alpha", "type": "module"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "alpha", "type": "module"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "alpha", "type": "module"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "alpha", "type": "module"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "alpha", "type": "module"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "alpha", "type": "module"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "alpha", "type": "module"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "alpha", "type": "module"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "alpha", "type": "module"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "alpha", "type": "module"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "alpha", "type": "module"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "alpha", "type": "module"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "alpha", "type": "module"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "_validate_counts_matrix", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "counts", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "otu_ids", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "tree", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "_get_phylogenetic_kwargs", "type": "Callable[..., Tuple[Any, Any, Dict[str, Any]]]"}, {"lineNumber": 168, "col_offset": 57, "nodeName": "counts", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "counts_by_node", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "branch_lengths", "type": "Any"}, {"lineNumber": 169, "col_offset": 41, "nodeName": "_setup_faith_pd", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "counts", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "otu_ids", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "tree", "type": "Any"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "validate", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 172, "col_offset": 35, "nodeName": "_faith_pd", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "metric", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "metric", "type": "functools.partial[nothing]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "c", "type": "Any"}, {"lineNumber": 181, "col_offset": 44, "nodeName": "counts", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "ids", "type": "Any"}, {"lineNumber": 219, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "from_iterable", "type": "Callable"}, {"lineNumber": 221, "col_offset": 57, "nodeName": "id_pairs", "type": "Any"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "ids", "type": "Any"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "hashes", "type": "Set[Any]"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 234, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 236, "col_offset": 63, "nodeName": "id_pairs", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "dm", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "metric", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "dm", "type": "Any"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "_validate_counts_matrix", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 310, "col_offset": 41, "nodeName": "counts", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "otu_ids", "type": "Any"}, {"lineNumber": 313, "col_offset": 17, "nodeName": "tree", "type": "Any"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 313, "col_offset": 32, "nodeName": "_get_phylogenetic_kwargs", "type": "Callable[..., Tuple[Any, Any, Dict[str, Any]]]"}, {"lineNumber": 313, "col_offset": 57, "nodeName": "counts", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "metric", "type": "functools.partial[nothing]"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "counts_by_node", "type": "Any"}, {"lineNumber": 314, "col_offset": 33, "nodeName": "_setup_multiple_unweighted_unifrac", "type": "Callable[[Any, Any, Any, Any], Tuple[functools.partial[Any], Any]]"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "counts", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 317, "col_offset": 9, "nodeName": "metric", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "normalized", "type": "Union[Any, bool]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "counts", "type": "Any"}, {"lineNumber": 326, "col_offset": 17, "nodeName": "counts_by_node", "type": "Any"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "pairwise_func", "type": "Any"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 342, "col_offset": 42, "nodeName": "_partial_pw", "type": "Callable[..., Any]"}, {"lineNumber": 342, "col_offset": 55, "nodeName": "ids", "type": "Any"}, {"lineNumber": 342, "col_offset": 60, "nodeName": "id_pairs", "type": "Any"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "distance", "type": "Any"}, {"lineNumber": 347, "col_offset": 45, "nodeName": "metric", "type": "Union[functools.partial[nothing], Any, Callable[[Any, Any], Any]]"}, {"lineNumber": 347, "col_offset": 55, "nodeName": "kwargs", "type": "Union[Dict[nothing, nothing], Dict[str, Any]]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "diversity", "type": "module"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "diversity", "type": "module"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "diversity", "type": "module"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "diversity", "type": "module"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "diversity", "type": "module"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "diversity", "type": "module"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "diversity", "type": "module"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "diversity", "type": "module"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "diversity", "type": "module"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "diversity", "type": "module"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "diversity", "type": "module"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "diversity", "type": "module"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "diversity", "type": "module"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "diversity", "type": "module"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "diversity", "type": "module"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "diversity", "type": "module"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "diversity", "type": "module"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "diversity", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "diversity", "type": "module"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "diversity", "type": "module"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "diversity", "type": "module"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "diversity", "type": "module"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "diversity", "type": "module"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "diversity", "type": "module"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "diversity", "type": "module"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "diversity", "type": "module"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "diversity", "type": "module"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "diversity", "type": "module"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "diversity", "type": "module"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "diversity", "type": "module"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "diversity", "type": "module"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 165, "col_offset": 53, "nodeName": "ids", "type": "Any"}, {"lineNumber": 168, "col_offset": 67, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "functools", "type": "module"}, {"lineNumber": 172, "col_offset": 61, "nodeName": "branch_lengths", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "metric", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "metric", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "metric_map", "type": "Dict[str, Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "metric", "type": "functools.partial[nothing]"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "all_ids_in_pairs", "type": "Set[Any]"}, {"lineNumber": 225, "col_offset": 14, "nodeName": "i", "type": "Any"}, {"lineNumber": 225, "col_offset": 42, "nodeName": "i", "type": "Any"}, {"lineNumber": 225, "col_offset": 54, "nodeName": "i", "type": "Any"}, {"lineNumber": 225, "col_offset": 59, "nodeName": "id_pairs", "type": "Any"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "id_pairs", "type": "Any"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 234, "col_offset": 23, "nodeName": "ids", "type": "Any"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 234, "col_offset": 33, "nodeName": "ids", "type": "Any"}, {"lineNumber": 235, "col_offset": 29, "nodeName": "idx", "type": "int"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "id_", "type": "Any"}, {"lineNumber": 235, "col_offset": 41, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 235, "col_offset": 51, "nodeName": "ids", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "id_index", "type": "Dict[Any, int]"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "id_index", "type": "Dict[Any, int]"}, {"lineNumber": 236, "col_offset": 55, "nodeName": "u", "type": "Any"}, {"lineNumber": 236, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "counts", "type": "Any"}, {"lineNumber": 239, "col_offset": 37, "nodeName": "counts", "type": "Any"}, {"lineNumber": 239, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 310, "col_offset": 53, "nodeName": "ids", "type": "Any"}, {"lineNumber": 313, "col_offset": 67, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 315, "col_offset": 32, "nodeName": "otu_ids", "type": "Any"}, {"lineNumber": 315, "col_offset": 46, "nodeName": "tree", "type": "Any"}, {"lineNumber": 315, "col_offset": 61, "nodeName": "validate", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 321, "col_offset": 32, "nodeName": "_normalize_weighted_unifrac_by_default", "type": "bool"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "otu_ids", "type": "Any"}, {"lineNumber": 322, "col_offset": 17, "nodeName": "tree", "type": "Any"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 322, "col_offset": 32, "nodeName": "_get_phylogenetic_kwargs", "type": "Callable[..., Tuple[Any, Any, Dict[str, Any]]]"}, {"lineNumber": 322, "col_offset": 57, "nodeName": "counts", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "counts_by_node", "type": "Any"}, {"lineNumber": 323, "col_offset": 33, "nodeName": "_setup_multiple_weighted_unifrac", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Callable[[Any, Any], Any], Any]]"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "counts", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 327, "col_offset": 9, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 327, "col_offset": 18, "nodeName": "metric", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "metric", "type": "functools.partial[nothing]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 339, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "functools", "type": "module"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "spatial", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "skbio", "type": "module"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "skbio", "type": "module"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "skbio", "type": "module"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "skbio", "type": "module"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "skbio", "type": "module"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "skbio", "type": "module"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "skbio", "type": "module"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "skbio", "type": "module"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "skbio", "type": "module"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "skbio", "type": "module"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "skbio", "type": "module"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "skbio", "type": "module"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "skbio", "type": "module"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "skbio", "type": "module"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "skbio", "type": "module"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "skbio", "type": "module"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "skbio", "type": "module"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "skbio", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "skbio", "type": "module"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "skbio", "type": "module"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "skbio", "type": "module"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "skbio", "type": "module"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "skbio", "type": "module"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "skbio", "type": "module"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "skbio", "type": "module"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "skbio", "type": "module"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "skbio", "type": "module"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "skbio", "type": "module"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "skbio", "type": "module"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "skbio", "type": "module"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "skbio", "type": "module"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "functools", "type": "module"}, {"lineNumber": 174, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "itertools", "type": "module"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "id_pairs", "type": "Any"}, {"lineNumber": 236, "col_offset": 34, "nodeName": "u", "type": "Any"}, {"lineNumber": 236, "col_offset": 47, "nodeName": "v", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "u", "type": "int"}, {"lineNumber": 239, "col_offset": 14, "nodeName": "v", "type": "int"}, {"lineNumber": 239, "col_offset": 33, "nodeName": "u", "type": "int"}, {"lineNumber": 239, "col_offset": 44, "nodeName": "v", "type": "int"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 322, "col_offset": 67, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 324, "col_offset": 32, "nodeName": "otu_ids", "type": "Any"}, {"lineNumber": 324, "col_offset": 46, "nodeName": "tree", "type": "Any"}, {"lineNumber": 324, "col_offset": 63, "nodeName": "normalized", "type": "Union[Any, bool]"}, {"lineNumber": 325, "col_offset": 25, "nodeName": "validate", "type": "Any"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 328, "col_offset": 35, "nodeName": "metric", "type": "Any"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "functools", "type": "module"}, {"lineNumber": 176, "col_offset": 35, "nodeName": "metric_map", "type": "Dict[str, Any]"}, {"lineNumber": 176, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 178, "col_offset": 58, "nodeName": "metric", "type": "Any"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "functools", "type": "module"}, {"lineNumber": 328, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "metric", "type": "Any"}]