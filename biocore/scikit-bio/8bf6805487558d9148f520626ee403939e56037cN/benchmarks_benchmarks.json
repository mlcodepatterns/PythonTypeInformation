[{"lineNumber": 29, "col_offset": 0, "nodeName": "consume_iterator", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "num_bases", "type": "int"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "size", "type": "int"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "short_len", "type": "int"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "dna_template_bytes", "type": "List[int]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "dna_template_bytes_gapped", "type": "List[int]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "rna_template_bytes", "type": "List[int]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "dna_bytes", "type": "numpy.ndarray"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "dna_bytes_short", "type": "Any"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "dna_bytes_gapped", "type": "numpy.ndarray"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "rna_bytes", "type": "numpy.ndarray"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "dna_seq", "type": "Any"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "dna_seq_short", "type": "Any"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "dna_gapped", "type": "Any"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "rna_seq", "type": "Any"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "motif_1", "type": "str"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "motif_1_regex", "type": "str"}, {"lineNumber": 8, "col_offset": 7, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "dna_bytes", "type": "numpy.ndarray"}, {"lineNumber": 17, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 20, "col_offset": 10, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "dna_bytes", "type": "numpy.ndarray"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "dna_bytes_short", "type": "Any"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "dna_bytes_gapped", "type": "numpy.ndarray"}, {"lineNumber": 23, "col_offset": 10, "nodeName": "RNA", "type": "Any"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "rna_bytes", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 8, "col_offset": 11, "nodeName": "num_bases", "type": "int"}, {"lineNumber": 11, "col_offset": 22, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 11, "col_offset": 26, "nodeName": "x", "type": "str"}, {"lineNumber": 11, "col_offset": 33, "nodeName": "x", "type": "str"}, {"lineNumber": 12, "col_offset": 29, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 12, "col_offset": 33, "nodeName": "x", "type": "str"}, {"lineNumber": 12, "col_offset": 40, "nodeName": "x", "type": "str"}, {"lineNumber": 13, "col_offset": 22, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "x", "type": "str"}, {"lineNumber": 13, "col_offset": 33, "nodeName": "x", "type": "str"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "dna_template_bytes", "type": "List[int]"}, {"lineNumber": 15, "col_offset": 42, "nodeName": "size", "type": "int"}, {"lineNumber": 15, "col_offset": 54, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "short_len", "type": "int"}, {"lineNumber": 17, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "dna_template_bytes_gapped", "type": "List[int]"}, {"lineNumber": 17, "col_offset": 56, "nodeName": "size", "type": "int"}, {"lineNumber": 17, "col_offset": 68, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "rna_template_bytes", "type": "List[int]"}, {"lineNumber": 18, "col_offset": 42, "nodeName": "size", "type": "int"}, {"lineNumber": 18, "col_offset": 54, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "motif_1", "type": "str"}, {"lineNumber": 15, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "dna_bytes", "type": "numpy.ndarray"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "DNA", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "dna_bytes", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "reverse_complement", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "degap", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "translate", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "consume_iterator", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "kmer_frequencies", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "kmer_frequencies", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "gc_content", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "consume_iterator", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "dna_seq", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "dna_seq", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "rna_seq", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "find_with_regex", "type": "Any"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "motif_1_regex", "type": "str"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "dna_seq_short", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "dna_seq_short", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "dna_seq", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "find_with_regex", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "motif_1_regex", "type": "str"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "dna_seq", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "dna_seq", "type": "Any"}, {"lineNumber": 65, "col_offset": 58, "nodeName": "gaps", "type": "Any"}, {"lineNumber": 65, "col_offset": 58, "nodeName": "dna_seq", "type": "Any"}]