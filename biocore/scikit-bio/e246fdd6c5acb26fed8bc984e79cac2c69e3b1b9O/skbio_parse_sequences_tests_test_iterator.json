[{"lineNumber": 19, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 413, "col_offset": 0, "nodeName": "qseq2", "type": "str"}, {"lineNumber": 415, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "rev_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "rev_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "state", "type": "Union[Dict[str, None], Dict[str, str]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "state", "type": "Union[Dict[str, Any], Dict[str, str]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "state", "type": "Union[Dict[str, Any], Dict[str, str]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "state", "type": "Union[Dict[str, None], Dict[str, str]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "state", "type": "Union[Dict[str, Any], Dict[str, str]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "state", "type": "Union[Dict[str, Any], Dict[str, str]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "state", "type": "Union[Dict[str, None], Dict[str, str]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "state", "type": "Union[Dict[str, Any], Dict[str, str]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "state", "type": "Union[Dict[str, Any], Dict[str, str]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "state", "type": "Union[Dict[str, None], Dict[str, str]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "state", "type": "Union[Dict[str, Any], Dict[str, str]]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "state", "type": "Union[Dict[str, Any], Dict[str, str]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "state", "type": "Union[Dict[str, Any], Dict[str, str]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "fastas", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "quals", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "obs4", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "obs5", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "obs4", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "obs5", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "exp_ids", "type": "List[str]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "obs_ids", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "exp_ids", "type": "List[str]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "obs_ids", "type": "List[Any]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "fastqs", "type": "List[Any]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastqIterator"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "qseqs", "type": "List[Any]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.QseqIterator"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.QseqIterator"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "SequenceIterator", "type": "Type[skbio.parse.sequences.iterator.SequenceIterator]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "validate_ids", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "validate_ids", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "validate_ids", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "failed", "type": "bool"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "SequenceIterator", "type": "Type[skbio.parse.sequences.iterator.SequenceIterator]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "validate_ids", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "validate_ids", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "validate_ids", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "SequenceIterator", "type": "Type[skbio.parse.sequences.iterator.SequenceIterator]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "valid_lengths", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "valid_lengths", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "valid_lengths", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "failed", "type": "bool"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "SequenceIterator", "type": "Type[skbio.parse.sequences.iterator.SequenceIterator]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "valid_lengths", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "valid_lengths", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "valid_lengths", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "SequenceIterator", "type": "Type[skbio.parse.sequences.iterator.SequenceIterator]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "FastaIterator", "type": "Type[skbio.parse.sequences.iterator.FastaIterator]"}, {"lineNumber": 140, "col_offset": 14, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "exp1", "type": "Dict[str, Optional[str]]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "exp2", "type": "Dict[str, Optional[str]]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "exp3", "type": "Dict[str, Optional[str]]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "obs4", "type": "Any"}, {"lineNumber": 166, "col_offset": 31, "nodeName": "exp4", "type": "Dict[str, Optional[str]]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "obs5", "type": "Any"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "exp5", "type": "Dict[str, Optional[str]]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "FastaIterator", "type": "Type[skbio.parse.sequences.iterator.FastaIterator]"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "exp1", "type": "Dict[str, Any]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "exp2", "type": "Dict[str, Any]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "exp3", "type": "Dict[str, Any]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "obs4", "type": "Any"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "exp4", "type": "Dict[str, Any]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "obs5", "type": "Any"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "exp5", "type": "Dict[str, Any]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "failed", "type": "bool"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "FastaIterator", "type": "Type[skbio.parse.sequences.iterator.FastaIterator]"}, {"lineNumber": 225, "col_offset": 14, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "obs_ids", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 34, "nodeName": "exp_ids", "type": "List[str]"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "FastaIterator", "type": "Type[skbio.parse.sequences.iterator.FastaIterator]"}, {"lineNumber": 235, "col_offset": 14, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "obs_ids", "type": "List[Any]"}, {"lineNumber": 241, "col_offset": 34, "nodeName": "exp_ids", "type": "List[str]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "FastqTests"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "FastqIterator", "type": "Type[skbio.parse.sequences.iterator.FastqIterator]"}, {"lineNumber": 250, "col_offset": 14, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastqIterator"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "exp1", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "exp2", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "exp3", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 283, "col_offset": 13, "nodeName": "QseqIterator", "type": "Type[skbio.parse.sequences.iterator.QseqIterator]"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.QseqIterator"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 303, "col_offset": 31, "nodeName": "exp1", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 309, "col_offset": 31, "nodeName": "exp2", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 311, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 315, "col_offset": 31, "nodeName": "exp3", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 318, "col_offset": 13, "nodeName": "QseqIterator", "type": "Type[skbio.parse.sequences.iterator.QseqIterator]"}, {"lineNumber": 319, "col_offset": 14, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.QseqIterator"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 338, "col_offset": 25, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 338, "col_offset": 31, "nodeName": "exp1", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 344, "col_offset": 25, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 344, "col_offset": 31, "nodeName": "exp2", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 350, "col_offset": 25, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "exp3", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "arange", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "arange", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "st", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "st", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "seq_ok", "type": "Dict[str, Optional[str]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "seqqual_ok", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "seqqual_bad_id", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "seq_ok", "type": "Dict[str, Optional[str]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "seqqual_ok", "type": "Dict[str, Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "seqqual_bad_id", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "seq_ok", "type": "Dict[str, Optional[str]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "seqqual_ok", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "seqqual_bad_qual", "type": "Dict[str, Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "seq_ok", "type": "Dict[str, Optional[str]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "seqqual_ok", "type": "Dict[str, Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "seqqual_bad_qual", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 113, "col_offset": 52, "nodeName": "rev_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "seqqual_ok", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "state", "type": "Union[Dict[str, Any], Dict[str, str]]"}, {"lineNumber": 116, "col_offset": 47, "nodeName": "seqqual_ok", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "state", "type": "Union[Dict[str, Any], Dict[str, str]]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "SequenceIterator", "type": "Type[skbio.parse.sequences.iterator.SequenceIterator]"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "fasta1", "type": "str"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 130, "col_offset": 50, "nodeName": "fasta2", "type": "str"}, {"lineNumber": 130, "col_offset": 59, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 130, "col_offset": 68, "nodeName": "fasta3", "type": "str"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "qual1", "type": "str"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "qual2", "type": "str"}, {"lineNumber": 131, "col_offset": 56, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 131, "col_offset": 65, "nodeName": "qual3", "type": "str"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "qual1", "type": "str"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 133, "col_offset": 55, "nodeName": "qual_bad_val", "type": "str"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "qual3", "type": "str"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "qual1", "type": "str"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 135, "col_offset": 54, "nodeName": "qual_bad_id", "type": "str"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "qual3", "type": "str"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "fastas", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "fastas", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "quals", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "arange", "type": "Any"}, {"lineNumber": 181, "col_offset": 63, "nodeName": "arange", "type": "Any"}, {"lineNumber": 183, "col_offset": 65, "nodeName": "arange", "type": "Any"}, {"lineNumber": 185, "col_offset": 64, "nodeName": "arange", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "exp1", "type": "Dict[str, Any]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "exp2", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "exp3", "type": "Dict[str, Any]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "obs4", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "exp4", "type": "Dict[str, Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "obs5", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "exp5", "type": "Dict[str, Any]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.FastaIterator"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "fastas", "type": "List[Any]"}, {"lineNumber": 224, "col_offset": 49, "nodeName": "bad_qual_val", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "r", "type": "Any"}, {"lineNumber": 229, "col_offset": 39, "nodeName": "r", "type": "Any"}, {"lineNumber": 229, "col_offset": 44, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "fastas", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 49, "nodeName": "bad_qual_id", "type": "List[Any]"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "r", "type": "Any"}, {"lineNumber": 239, "col_offset": 39, "nodeName": "r", "type": "Any"}, {"lineNumber": 239, "col_offset": 44, "nodeName": "gen", "type": "Generator[Any, Any, None]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 246, "col_offset": 32, "nodeName": "fastq1", "type": "str"}, {"lineNumber": 246, "col_offset": 41, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 246, "col_offset": 50, "nodeName": "fastq2", "type": "str"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "fastqs", "type": "List[Any]"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 257, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "FastqTests"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "exp1", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "FastqTests"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "FastqTests"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "exp2", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "FastqTests"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "FastqTests"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "exp3", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "FastqTests"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "qseq1", "type": "str"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 280, "col_offset": 48, "nodeName": "qseq2", "type": "str"}, {"lineNumber": 283, "col_offset": 30, "nodeName": "qseqs", "type": "List[Any]"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 293, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "exp1", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "exp2", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "exp3", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 318, "col_offset": 30, "nodeName": "qseqs", "type": "List[Any]"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "exp1", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "exp2", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "exp3", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "st", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 113, "col_offset": 52, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 116, "col_offset": 47, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "seqqual_ok", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "arange", "type": "Any"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 224, "col_offset": 49, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 234, "col_offset": 49, "nodeName": "self", "type": "FastaTests"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "self", "type": "FastqTests"}, {"lineNumber": 283, "col_offset": 30, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 318, "col_offset": 30, "nodeName": "self", "type": "QseqTests"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "st", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "st", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "self", "type": "SeqIterTests"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "state", "type": "Union[Dict[str, Any], Dict[str, str]]"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "exp1", "type": "Dict[str, Any]"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "exp2", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "exp3", "type": "Dict[str, Any]"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "obs4", "type": "Any"}, {"lineNumber": 210, "col_offset": 41, "nodeName": "exp4", "type": "Dict[str, Any]"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "obs5", "type": "Any"}, {"lineNumber": 217, "col_offset": 41, "nodeName": "exp5", "type": "Dict[str, Any]"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 260, "col_offset": 41, "nodeName": "exp1", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "exp2", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 272, "col_offset": 41, "nodeName": "exp3", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 300, "col_offset": 41, "nodeName": "exp1", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 306, "col_offset": 41, "nodeName": "exp2", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 312, "col_offset": 41, "nodeName": "exp3", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 335, "col_offset": 41, "nodeName": "exp1", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 341, "col_offset": 41, "nodeName": "exp2", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "obs3", "type": "Any"}, {"lineNumber": 347, "col_offset": 41, "nodeName": "exp3", "type": "Dict[str, Union[numpy.ndarray, str]]"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "wk", "type": "skbio.parse.sequences.iterator.SequenceIterator"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "seqqual_ok", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "self", "type": "SeqIterTests"}]