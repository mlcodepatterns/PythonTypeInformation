[{"lineNumber": 23, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 96, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "bv_dm_88soils", "type": "skbio.core.distance.DistanceMatrix"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "bv_map_88soils", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "obs", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "BIOENVTests"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "from_file", "type": "Callable"}, {"lineNumber": 38, "col_offset": 54, "nodeName": "bv_dm_88soils_str", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "BIOENVTests"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "bv_map_88soils_str", "type": "Any"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "bioenv", "type": "Callable[[Any, Any, Any], Dict[str, Any]]"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "bv_dm_88soils", "type": "skbio.core.distance.DistanceMatrix"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "bv_map_88soils", "type": "Any"}, {"lineNumber": 59, "col_offset": 62, "nodeName": "cats", "type": "List[str]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "j", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "DistanceMatrix", "type": "Type[skbio.core.distance.DistanceMatrix]"}, {"lineNumber": 38, "col_offset": 54, "nodeName": "self", "type": "BIOENVTests"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "join", "type": "Callable"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "pd", "type": "Any"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "self", "type": "BIOENVTests"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "self", "type": "BIOENVTests"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "self", "type": "BIOENVTests"}, {"lineNumber": 59, "col_offset": 62, "nodeName": "self", "type": "BIOENVTests"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "BIOENVTests"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "exp", "type": "Dict[str, Union[List[str], int, List[Tuple[float, str]], str]]"}, {"lineNumber": 86, "col_offset": 45, "nodeName": "obs", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "BIOENVTests"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "exp", "type": "Dict[str, Union[List[str], int, List[Tuple[float, str]], str]]"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "obs", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "BIOENVTests"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "exp", "type": "Dict[str, Union[List[str], int, List[Tuple[float, str]], str]]"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "obs", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "exp", "type": "Dict[str, Union[List[str], int, List[Tuple[float, str]], str]]"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "obs", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "BIOENVTests"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "BIOENVTests"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "i", "type": "Any"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "j", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "BIOENVTests"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "j", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "exp", "type": "Dict[str, Union[List[str], int, List[Tuple[float, str]], str]]"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "obs", "type": "Dict[str, Any]"}]