[{"lineNumber": 17, "col_offset": 32, "nodeName": "NucleotideSequence", "type": "Type[skbio.sequence._nucleotide_sequence.NucleotideSequence]"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 260, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "comp_map", "type": "Dict[Union[str, Any], Union[str, Any]]"}, {"lineNumber": 41, "col_offset": 57, "nodeName": "NucleotideSequence", "type": "Type[skbio.sequence._nucleotide_sequence.NucleotideSequence]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[TypeError]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 62, "col_offset": 67, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 66, "col_offset": 67, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "complement_map", "type": "Any"}, {"lineNumber": 68, "col_offset": 71, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "complement_map", "type": "Dict[str, str]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 20, "col_offset": 53, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "comp_map", "type": "Dict[Union[str, Any], Union[str, Any]]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "c", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "NucleotideSequenceSubclassNoImplementation", "type": "Type[Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "exception", "type": "TypeError"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "exception", "type": "TypeError"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "exception", "type": "TypeError"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 50, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "exception", "type": "TypeError"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "ExampleNucleotideSequence", "type": "Type[ExampleNucleotideSequence]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "ExampleNucleotideSequence", "type": "Type[ExampleNucleotideSequence]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "ExampleNucleotideSequence", "type": "Type[ExampleNucleotideSequence]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "ExampleNucleotideSequence", "type": "Type[ExampleNucleotideSequence]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "c", "type": "Any"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "gap_chars", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[TypeError]"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[TypeError]"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[TypeError]"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[TypeError]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "ExampleNucleotideSequence", "type": "Type[ExampleNucleotideSequence]"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "self", "type": "TestNucelotideSequence"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "ExampleNucleotideSequence", "type": "Type[ExampleNucleotideSequence]"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "cls", "type": "Any"}]