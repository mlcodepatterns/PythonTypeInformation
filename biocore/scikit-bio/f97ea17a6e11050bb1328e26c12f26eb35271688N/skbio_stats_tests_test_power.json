[{"lineNumber": 24, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_get_subsampled_power_paired_error_meta_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test_get_subsampled_power_paired_error_cat_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_get_subsampled_power_paired_error_ctrl_cats_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "test_get_subsampled_power_sig_error_no_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "test_get_subsampled_power_all_error_no_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "test_get_subsampled_power_bad_mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "test_get_subsampled_power_min_counts_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "test_get_subsampled_power_interval_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "test_get_subsampled_power_paired", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "test_get_subsampled_power_all_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "test_get_get_subsampled_power_significant_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 434, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "s1", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "samps", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "num_samps", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "meta", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "power_alpha", "type": "float"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "effects", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "known_c", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "cat", "type": "str"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "round", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "arange", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "meta", "type": "Dict[str, Union[Dict[str, Any], Dict[str, Union[str, float]]]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 153, "col_offset": 56, "nodeName": "meta_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "known_p", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "known_c", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 167, "col_offset": 53, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 171, "col_offset": 46, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 175, "col_offset": 53, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 178, "col_offset": 47, "nodeName": "test_c", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "arange", "type": "Any"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "nan", "type": "Any"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "nan", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "meta", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "test_meta", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "get_subsampled_power", "type": "Any"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 56, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 154, "col_offset": 51, "nodeName": "meta", "type": "Any"}, {"lineNumber": 155, "col_offset": 50, "nodeName": "cat", "type": "str"}, {"lineNumber": 156, "col_offset": 59, "nodeName": "control_cats", "type": "List[str]"}, {"lineNumber": 167, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 167, "col_offset": 69, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "arange", "type": "Any"}, {"lineNumber": 175, "col_offset": 53, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 175, "col_offset": 69, "nodeName": "pop", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "test_p", "type": "Any"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "arange", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "loc", "type": "Any"}, {"lineNumber": 31, "col_offset": 42, "nodeName": "id_", "type": "Any"}, {"lineNumber": 31, "col_offset": 49, "nodeName": "ids", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "power", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "kruskal", "type": "Any"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 101, "col_offset": 63, "nodeName": "cat", "type": "str"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 107, "col_offset": 64, "nodeName": "meta", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "cats", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 113, "col_offset": 64, "nodeName": "meta", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "cat", "type": "str"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 154, "col_offset": 51, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 167, "col_offset": 69, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 175, "col_offset": 69, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "meta", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 63, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 107, "col_offset": 64, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 113, "col_offset": 64, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "self", "type": "PowerAnalysisTest"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "id_", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "div", "type": "Any"}, {"lineNumber": 135, "col_offset": 57, "nodeName": "ones", "type": "Any"}, {"lineNumber": 135, "col_offset": 68, "nodeName": "ones", "type": "Any"}, {"lineNumber": 141, "col_offset": 57, "nodeName": "ones", "type": "Any"}, {"lineNumber": 141, "col_offset": 68, "nodeName": "ones", "type": "Any"}]