[{"lineNumber": 24, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 145, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "num", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "den", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "freq_arr", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "D", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "D", "type": "float"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "exp", "type": "float"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "num", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "den", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 61, "nodeName": "exp", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "observed_species", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "observed_species", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "observed_species", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "sum", "type": "Any"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "simpson_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "exp", "type": "Any"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "exp", "type": "float"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "berger_parker_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 41, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "brillouin_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "doubles", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "enspie", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "simpson_reciprocal", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "equitability", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "equitability", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "mcintosh_d", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "mcintosh_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "osd", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "shannon", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "simpson", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "simpson", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "simpson_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "D", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "D", "type": "float"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "simpson_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "counts", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "singles", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "strong", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 41, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 60, "nodeName": "dominance", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 70, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "freq_arr", "type": "Any"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "self", "type": "AlphaDiversityTests"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "arr", "type": "numpy.ndarray"}]