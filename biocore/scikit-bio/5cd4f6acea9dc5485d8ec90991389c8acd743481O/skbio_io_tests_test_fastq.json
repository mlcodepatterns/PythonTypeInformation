[{"lineNumber": 20, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 149, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "fp", "type": "str"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "positive_fps_33", "type": "Iterator[str]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "fp", "type": "str"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "positive_fps_64", "type": "Iterator[str]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "fp", "type": "str"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "negative_fps", "type": "Iterator[str]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "empty", "type": "Tuple[List[nothing], Dict[nothing, nothing], Iterator[str]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "invalid", "type": "List[nothing]"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "invalid_fps", "type": "Iterator[Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "map", "type": "Callable"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "map", "type": "Callable"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "map", "type": "Callable"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "self", "type": "FASTQSnifferTests"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "self", "type": "FASTQSnifferTests"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "self", "type": "FASTQSnifferTests"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "FASTQReaderTests"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "map", "type": "Callable"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "FASTQReaderTests"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "multi", "type": "Tuple[List[skbio.sequence._sequence.BiologicalSequence], Dict[str, int], Iterator[str]]"}, {"lineNumber": 134, "col_offset": 45, "nodeName": "empty", "type": "Tuple[List[nothing], Dict[nothing, nothing], Iterator[str]]"}, {"lineNumber": 134, "col_offset": 57, "nodeName": "single", "type": "Tuple[List[skbio.sequence._sequence.BiologicalSequence], Dict[str, int], Iterator[str]]"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "multi33", "type": "Tuple[List[skbio.sequence._sequence.BiologicalSequence], Dict[str, int], Iterator[str]]"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "multi64", "type": "Tuple[List[skbio.sequence._sequence.BiologicalSequence], Dict[str, int], Iterator[str]]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "fp", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "fps", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "error_msg_regex", "type": "Any"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "self", "type": "FASTQReaderTests"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "map", "type": "Callable"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "map", "type": "Callable"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "map", "type": "Callable"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "map", "type": "Callable"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "map", "type": "Callable"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "self", "type": "FASTQReaderTests"}, {"lineNumber": 134, "col_offset": 45, "nodeName": "self", "type": "FASTQReaderTests"}, {"lineNumber": 134, "col_offset": 57, "nodeName": "self", "type": "FASTQReaderTests"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "self", "type": "FASTQReaderTests"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "self", "type": "FASTQReaderTests"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "FASTQSnifferTests"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "_fastq_sniffer", "type": "Any"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "fp", "type": "str"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "FASTQSnifferTests"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "_fastq_sniffer", "type": "Any"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "fp", "type": "str"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "FASTQSnifferTests"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "_fastq_sniffer", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "fp", "type": "str"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence._sequence.BiologicalSequence]"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence._sequence.BiologicalSequence]"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence._sequence.BiologicalSequence]"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence._sequence.BiologicalSequence]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence._sequence.BiologicalSequence]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence._sequence.BiologicalSequence]"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence._sequence.BiologicalSequence]"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence._sequence.BiologicalSequence]"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence._sequence.BiologicalSequence]"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence._sequence.BiologicalSequence]"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence._sequence.BiologicalSequence]"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence._sequence.BiologicalSequence]"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence._sequence.BiologicalSequence]"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "BiologicalSequence", "type": "Type[skbio.sequence._sequence.BiologicalSequence]"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "o", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "e", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 37, "nodeName": "exp", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "FASTQFormatError", "type": "Type[skbio.io._exception.FASTQFormatError]"}, {"lineNumber": 145, "col_offset": 59, "nodeName": "error_msg_regex", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 124, "col_offset": 42, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 124, "col_offset": 63, "nodeName": "e", "type": "Any"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 137, "col_offset": 47, "nodeName": "fp", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "self", "type": "FASTQReaderTests"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "obs", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "exp", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "self", "type": "FASTQReaderTests"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "_fastq_to_generator", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "fp", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "ascii_to_phred64", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "ascii_to_phred64", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "ascii_to_phred64", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "ascii_to_phred64", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "ascii_to_phred64", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "ascii_to_phred64", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "ascii_to_phred33", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "ascii_to_phred33", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "ascii_to_phred64", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 40, "nodeName": "ascii_to_phred64", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "ascii_to_phred64", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "ascii_to_phred64", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "ascii_to_phred64", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "ascii_to_phred64", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 56, "nodeName": "e", "type": "Any"}, {"lineNumber": 137, "col_offset": 53, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "self", "type": "FASTQReaderTests"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "equals", "type": "Any"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "e", "type": "Any"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "o", "type": "Any"}]