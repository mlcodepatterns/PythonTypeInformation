[{"lineNumber": 31, "col_offset": 0, "nodeName": "setup", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "teardown", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_subsample_counts_nonrandom", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_subsample_counts_without_replacement", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "test_subsample_counts_with_replacement", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_subsample_counts_with_replacement_equal_n", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "test_subsample_counts_invalid_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "SubsampleCountsTests", "type": "Type[SubsampleCountsTests]"}, {"lineNumber": 126, "col_offset": 51, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "SubsampleCountsTests", "type": "Type[SubsampleCountsTests]"}, {"lineNumber": 132, "col_offset": 51, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "test_deprecated_api", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "mock_sequence_iter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "test_isubsample_simple", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "test_per_sample_sequences_min_seqs", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "test_per_sample_sequences_complex", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "test_min_gt_max", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "test_min_lt_zero", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "test_max_lt_zero", "type": "Callable[[Any], Any]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "test_binf_is_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "import_fresh_module", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "import_fresh_module", "type": "Any"}, {"lineNumber": 126, "col_offset": 51, "nodeName": "unittest", "type": "module"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "py_subsample", "type": "Any"}, {"lineNumber": 132, "col_offset": 51, "nodeName": "unittest", "type": "module"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "cy_subsample", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 253, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "resetwarnings", "type": "Callable[[], None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "a", "type": "List[int]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "maximum", "type": "int"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "bin_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "maximum", "type": "int"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "minimum", "type": "int"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "bin_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "maximum", "type": "int"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "bin_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "gen", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "gen", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "gen", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "maximum", "type": "int"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "items", "type": "List[int]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "exp", "type": "List[Tuple[bool, int]]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "obs", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "runmodule", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "warnings", "type": "module"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "warnings", "type": "module"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 47, "col_offset": 61, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 51, "col_offset": 61, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 53, "col_offset": 62, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 58, "col_offset": 61, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 59, "col_offset": 75, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "subsample_counts", "type": "Any"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 140, "col_offset": 14, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 140, "col_offset": 51, "nodeName": "subsample", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "obs", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "isubsample", "type": "Callable[..., Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 192, "col_offset": 66, "nodeName": "maximum", "type": "int"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 58, "nodeName": "exp", "type": "List[Tuple[str, Dict[str, str]]]"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "isubsample", "type": "Callable[..., Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 212, "col_offset": 66, "nodeName": "maximum", "type": "int"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "minimum", "type": "int"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 58, "nodeName": "exp", "type": "List[Tuple[str, Dict[str, str]]]"}, {"lineNumber": 219, "col_offset": 14, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 226, "col_offset": 14, "nodeName": "isubsample", "type": "Callable[..., Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 226, "col_offset": 66, "nodeName": "maximum", "type": "int"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 58, "nodeName": "exp", "type": "List[Tuple[str, Dict[str, str]]]"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "isubsample", "type": "Callable[..., Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 236, "col_offset": 14, "nodeName": "isubsample", "type": "Callable[..., Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "isubsample", "type": "Callable[..., Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "isubsample", "type": "Callable[..., Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "items", "type": "List[int]"}, {"lineNumber": 249, "col_offset": 32, "nodeName": "maximum", "type": "int"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 250, "col_offset": 36, "nodeName": "exp", "type": "List[Tuple[bool, int]]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "nose", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "subsample_counts", "type": "Any"}, {"lineNumber": 47, "col_offset": 54, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "subsample_counts", "type": "Any"}, {"lineNumber": 51, "col_offset": 54, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "subsample_counts", "type": "Any"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "subsample_counts", "type": "Any"}, {"lineNumber": 58, "col_offset": 54, "nodeName": "a", "type": "List[int]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "subsample_counts", "type": "Any"}, {"lineNumber": 59, "col_offset": 54, "nodeName": "a", "type": "List[int]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "subsample_counts", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "module", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "subsample_counts", "type": "Any"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "subsample_counts", "type": "Any"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "subsample_counts", "type": "Any"}, {"lineNumber": 103, "col_offset": 47, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "subsample_counts", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "subsample_counts", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "subsample_counts", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "subsample_counts", "type": "Any"}, {"lineNumber": 140, "col_offset": 14, "nodeName": "npt", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "assert_warns", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 147, "col_offset": 55, "nodeName": "subsample", "type": "Any"}, {"lineNumber": 147, "col_offset": 66, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "SubsampleTests"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "sid", "type": "Any"}, {"lineNumber": 173, "col_offset": 48, "nodeName": "seq", "type": "Any"}, {"lineNumber": 173, "col_offset": 69, "nodeName": "items", "type": "Any"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "mock_sequence_iter", "type": "Callable[[Any], Any]"}, {"lineNumber": 192, "col_offset": 49, "nodeName": "sequences", "type": "List[Tuple[str, str]]"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "bin_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "ISubsampleTests"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 194, "col_offset": 32, "nodeName": "obs", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "mock_sequence_iter", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 49, "nodeName": "sequences", "type": "List[Tuple[str, str]]"}, {"lineNumber": 213, "col_offset": 40, "nodeName": "bin_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "ISubsampleTests"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "obs", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "mock_sequence_iter", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 49, "nodeName": "sequences", "type": "List[Tuple[str, str]]"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "bin_f", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "ISubsampleTests"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "obs", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 232, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "next", "type": "Callable"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "gen", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "next", "type": "Callable"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "gen", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 242, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "next", "type": "Callable"}, {"lineNumber": 243, "col_offset": 17, "nodeName": "gen", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "ISubsampleTests"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 250, "col_offset": 30, "nodeName": "obs", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "obs", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "obs", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "obs", "type": "Any"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "obs", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "obs", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "obs", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "npt", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "SubsampleTests"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "obs", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "actual", "type": "Set[Tuple[Any, ...]]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 57, "nodeName": "sid", "type": "Any"}, {"lineNumber": 173, "col_offset": 62, "nodeName": "seq", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "rsplit", "type": "Any"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "self", "type": "ISubsampleTests"}, {"lineNumber": 192, "col_offset": 49, "nodeName": "self", "type": "ISubsampleTests"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "rsplit", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "self", "type": "ISubsampleTests"}, {"lineNumber": 212, "col_offset": 49, "nodeName": "self", "type": "ISubsampleTests"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "rsplit", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "self", "type": "ISubsampleTests"}, {"lineNumber": 226, "col_offset": 49, "nodeName": "self", "type": "ISubsampleTests"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "self", "type": "ISubsampleTests"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "self", "type": "ISubsampleTests"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "self", "type": "ISubsampleTests"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "obs", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "obs", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "self", "type": "SubsampleCountsTests"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "obs", "type": "Any"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 211, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 194, "col_offset": 51, "nodeName": "x", "type": "Any"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 214, "col_offset": 51, "nodeName": "x", "type": "Any"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 228, "col_offset": 51, "nodeName": "x", "type": "Any"}]