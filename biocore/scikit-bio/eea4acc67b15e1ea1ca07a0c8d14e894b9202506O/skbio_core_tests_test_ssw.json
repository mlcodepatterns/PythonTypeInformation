[{"lineNumber": 18, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 247, "col_offset": 40, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "TestSSW", "type": "Type[TestSSW]"}, {"lineNumber": 336, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "attribute", "type": "str"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "align_attributes", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "expected_alignments", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 220, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, Union[str, int]], bool]]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "align1", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "align1", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "accessible", "type": "str"}, {"lineNumber": 283, "col_offset": 26, "nodeName": "align_attributes", "type": "List[str]"}, {"lineNumber": 305, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, str], bool]]"}, {"lineNumber": 329, "col_offset": 27, "nodeName": "expected_alignments", "type": "List[Tuple[Dict[str, str], bool]]"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "result", "type": "nothing"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 45, "nodeName": "expected_alignments", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 244, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 244, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 254, "col_offset": 37, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 255, "col_offset": 23, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "striped_smith_waterman_alignment", "type": "Any"}, {"lineNumber": 256, "col_offset": 50, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 257, "col_offset": 50, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "align2", "type": "Any"}, {"lineNumber": 258, "col_offset": 38, "nodeName": "align1", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 268, "col_offset": 37, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "striped_smith_waterman_alignment", "type": "Any"}, {"lineNumber": 270, "col_offset": 50, "nodeName": "query_sequence", "type": "str"}, {"lineNumber": 271, "col_offset": 50, "nodeName": "target_sequence", "type": "str"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "align2", "type": "Any"}, {"lineNumber": 272, "col_offset": 38, "nodeName": "align1", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 281, "col_offset": 37, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "query", "type": "Any"}, {"lineNumber": 283, "col_offset": 26, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 305, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 329, "col_offset": 22, "nodeName": "z", "type": "bool"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "q_seq", "type": "str"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "result", "type": "nothing"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "expected", "type": "nothing"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "_check_alignment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 224, "col_offset": 45, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 242, "col_offset": 37, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 243, "col_offset": 26, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWatermanAlignment"}, {"lineNumber": 268, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 271, "col_offset": 69, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "TestStripedSmithWatermanAlignment"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 29, "nodeName": "z", "type": "bool"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "StripedSmithWaterman", "type": "Any"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "set_zero_based", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "self", "type": "TestSSW"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 221, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 222, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "self", "type": "TestStripedSmithWaterman"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 284, "col_offset": 48, "nodeName": "accessible", "type": "str"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 306, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 307, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 308, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 309, "col_offset": 32, "nodeName": "is_zero_based", "type": "Any"}, {"lineNumber": 330, "col_offset": 41, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 331, "col_offset": 52, "nodeName": "z", "type": "bool"}, {"lineNumber": 332, "col_offset": 30, "nodeName": "expected", "type": "Dict[str, str]"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 333, "col_offset": 41, "nodeName": "z", "type": "bool"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "self", "type": "TestAlignmentStructure"}, {"lineNumber": 334, "col_offset": 33, "nodeName": "z", "type": "bool"}, {"lineNumber": 334, "col_offset": 36, "nodeName": "is_zero_based", "type": "Any"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 285, "col_offset": 39, "nodeName": "accessible", "type": "str"}, {"lineNumber": 309, "col_offset": 32, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 334, "col_offset": 36, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "attribute", "type": "str"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "attribute", "type": "str"}]