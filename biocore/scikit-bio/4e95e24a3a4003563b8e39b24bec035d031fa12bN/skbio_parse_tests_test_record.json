[{"lineNumber": 23, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 384, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 409, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 438, "col_offset": 35, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 488, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 494, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 527, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 560, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "GenericRecord", "type": "Type[skbio.parse.record.GenericRecord]"}, {"lineNumber": 583, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "empty", "type": "List[nothing]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "s3", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "s10", "type": "range"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "g1", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "g2", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "g5", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "g_none", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "g_neg", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "g_zero", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "g_alpha", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "g", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "space", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "semicolon", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "twosplits", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "allsplits", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "lastone", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "lasttwo", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "Required", "type": "Dict[str, Union[Dict[nothing, nothing], List[nothing], str]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "X", "type": "str"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "empty", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "single", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "several", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "g", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "exp", "type": "Dict[str, int]"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "MappedRecord", "type": "Type[skbio.parse.record.MappedRecord]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "B", "type": "int"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "several", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "key", "type": "nothing"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "single", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "x", "type": "int"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "XYZ", "type": "int"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "single", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "b", "type": "int"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "Required", "type": "Dict[str, bool]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "a", "type": "int"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "single", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "single", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "single", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "Required", "type": "Dict[str, bool]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "b", "type": "int"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "single", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "b", "type": "int"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "single", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "single", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "single", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "b", "type": "int"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "d", "type": "Dict[str, int]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "single", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "t", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "u", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "MappedRecord", "type": "Type[skbio.parse.record.MappedRecord]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "ZZZ", "type": "int"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "ClassData", "type": "str"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "MappedRecord", "type": "Type[skbio.parse.record.MappedRecord]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "d", "type": "dummy"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "ident", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "d", "type": "dummy"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "i", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "d", "type": "dummy"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "d", "type": "dummy"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "l", "type": "skbio.parse.record.LineOrientedConstructor"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "data", "type": "List[str]"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "l", "type": "skbio.parse.record.LineOrientedConstructor"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 469, "col_offset": 18, "nodeName": "MappedRecord", "type": "Type[skbio.parse.record.MappedRecord]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "maps", "type": "Dict[str, Callable[[Any, Any, Any], None]]"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "label_splitter", "type": "Callable[[Any], Any]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "constructor", "type": "Type[Any]"}, {"lineNumber": 473, "col_offset": 22, "nodeName": "rec", "type": "Type[Any]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "strict", "type": "bool"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "strict", "type": "bool"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "splitter", "type": "Callable[[Any], Any]"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "splitter", "type": "Callable[[Any], Any]"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "fm", "type": "skbio.parse.record.FieldMorpher"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "fm", "type": "skbio.parse.record.FieldMorpher"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "fm", "type": "skbio.parse.record.FieldMorpher"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "FieldError", "type": "Type[skbio.parse.record.FieldError]"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "raise_unknown_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "Grouper", "type": "Type[skbio.parse.record.Grouper]"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "Grouper", "type": "Type[skbio.parse.record.Grouper]"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "Grouper", "type": "Type[skbio.parse.record.Grouper]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "Grouper", "type": "Type[skbio.parse.record.Grouper]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "Grouper", "type": "Type[skbio.parse.record.Grouper]"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "Grouper", "type": "Type[skbio.parse.record.Grouper]"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "Grouper", "type": "Type[skbio.parse.record.Grouper]"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "g_none", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "g_neg", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "g_zero", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "g_alpha", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "iterator", "type": "Generator[List[Any], Any, None]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "DelimitedSplitter", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "DelimitedSplitter", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "DelimitedSplitter", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "DelimitedSplitter", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "DelimitedSplitter", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "DelimitedSplitter", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "DelimitedSplitter", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "GenericRecord", "type": "Type[skbio.parse.record.GenericRecord]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "gr", "type": "Type[Any]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "GenericRecord", "type": "Type[skbio.parse.record.GenericRecord]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "gr", "type": "Type[Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "g", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "g", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "g", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 132, "col_offset": 42, "nodeName": "__delitem__", "type": "Callable[[Any], None]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "gr", "type": "Type[Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "g", "type": "Any"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "h", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "gr", "type": "Type[Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "X", "type": "str"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "h", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "MappedRecord", "type": "Type[skbio.parse.record.MappedRecord]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "MappedRecord", "type": "Type[skbio.parse.record.MappedRecord]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "MappedRecord", "type": "Type[skbio.parse.record.MappedRecord]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "MappedRecord", "type": "Type[skbio.parse.record.MappedRecord]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "g", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 57, "nodeName": "exp", "type": "Dict[str, int]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 49, "nodeName": "exp", "type": "Dict[str, int]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 61, "nodeName": "exp", "type": "Dict[str, int]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "Required", "type": "Dict[str, Union[int, str, Dict[nothing, nothing]]]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "rec", "type": "Type[Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "r", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "s", "type": "Any"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "rec", "type": "Type[Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "s", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "Aliases", "type": "Dict[nothing, nothing]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "xyz", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "b", "type": "int"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "a", "type": "int"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "a", "type": "int"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "Required", "type": "Dict[str, bool]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 28, "nodeName": "Required", "type": "Dict[str, bool]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 274, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 274, "col_offset": 37, "nodeName": "__setitem__", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "Required", "type": "Dict[str, bool]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "b", "type": "int"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "b", "type": "int"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 300, "col_offset": 22, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 303, "col_offset": 22, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 305, "col_offset": 26, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 307, "col_offset": 22, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "setdefault", "type": "Callable[..., Any]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 324, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 325, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 326, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 326, "col_offset": 37, "nodeName": "setdefault", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "d", "type": "Dict[str, int]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 341, "col_offset": 26, "nodeName": "t", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 341, "col_offset": 29, "nodeName": "MappedRecord", "type": "Type[skbio.parse.record.MappedRecord]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 25, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "Aliases", "type": "Dict[str, str]"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "DefaultValue", "type": "int"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "ClassData", "type": "str"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "ret3", "type": "Type[Any]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "ZZZ", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "ABC", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "DEF", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 359, "col_offset": 25, "nodeName": "ClassData", "type": "str"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 361, "col_offset": 25, "nodeName": "ZZZ", "type": "int"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "ZZ", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 364, "col_offset": 25, "nodeName": "ClassData", "type": "str"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 365, "col_offset": 25, "nodeName": "ClassData", "type": "str"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "DefaultValue", "type": "List[nothing]"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "m", "type": "Type[Any]"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "m", "type": "Type[Any]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "dummy", "type": "Type[dummy]"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "TypeSetter", "type": "Callable[..., Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "ident", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 392, "col_offset": 14, "nodeName": "d", "type": "dummy"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "ident", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 394, "col_offset": 14, "nodeName": "d", "type": "dummy"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 395, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "ident", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 396, "col_offset": 14, "nodeName": "d", "type": "dummy"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "dummy", "type": "Type[dummy]"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "TypeSetter", "type": "Callable[..., Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 402, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "i", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 403, "col_offset": 10, "nodeName": "d", "type": "dummy"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 404, "col_offset": 25, "nodeName": "zz", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "i", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 405, "col_offset": 10, "nodeName": "d", "type": "dummy"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 406, "col_offset": 25, "nodeName": "xx", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "dummy", "type": "Type[dummy]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "list_adder", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 416, "col_offset": 19, "nodeName": "d", "type": "dummy"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "list_adder", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 418, "col_offset": 19, "nodeName": "d", "type": "dummy"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "list_adder", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 420, "col_offset": 19, "nodeName": "d", "type": "dummy"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 421, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 422, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "dummy", "type": "Type[dummy]"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "dict_adder", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 427, "col_offset": 19, "nodeName": "d", "type": "dummy"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 428, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "dict_adder", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 429, "col_offset": 19, "nodeName": "d", "type": "dummy"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 430, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "dict_adder", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 431, "col_offset": 19, "nodeName": "d", "type": "dummy"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 432, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "dict_adder", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 433, "col_offset": 19, "nodeName": "d", "type": "dummy"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 434, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "LineOrientedConstructor", "type": "Type[skbio.parse.record.LineOrientedConstructor]"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 445, "col_offset": 25, "nodeName": "Lines", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "FieldMap", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "Constructor", "type": "Callable[[], Any]"}, {"lineNumber": 448, "col_offset": 40, "nodeName": "MappedRecord", "type": "Type[skbio.parse.record.MappedRecord]"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 449, "col_offset": 25, "nodeName": "Strict", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "LineOrientedConstructor", "type": "Type[skbio.parse.record.LineOrientedConstructor]"}, {"lineNumber": 455, "col_offset": 17, "nodeName": "l", "type": "skbio.parse.record.LineOrientedConstructor"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 456, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 457, "col_offset": 17, "nodeName": "l", "type": "skbio.parse.record.LineOrientedConstructor"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 458, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 459, "col_offset": 17, "nodeName": "l", "type": "skbio.parse.record.LineOrientedConstructor"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 460, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "l", "type": "skbio.parse.record.LineOrientedConstructor"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "data", "type": "List[str]"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 462, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "Required", "type": "Dict[str, List[nothing]]"}, {"lineNumber": 471, "col_offset": 23, "nodeName": "list_adder", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 471, "col_offset": 40, "nodeName": "int_setter", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 471, "col_offset": 59, "nodeName": "bool_setter", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 472, "col_offset": 25, "nodeName": "DelimitedSplitter", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 475, "col_offset": 18, "nodeName": "LineOrientedConstructor", "type": "Type[skbio.parse.record.LineOrientedConstructor]"}, {"lineNumber": 475, "col_offset": 42, "nodeName": "data", "type": "List[str]"}, {"lineNumber": 475, "col_offset": 48, "nodeName": "label_splitter", "type": "Callable[[Any], Any]"}, {"lineNumber": 475, "col_offset": 64, "nodeName": "maps", "type": "Dict[str, Callable[[Any, Any, Any], None]]"}, {"lineNumber": 476, "col_offset": 42, "nodeName": "constructor", "type": "Type[Any]"}, {"lineNumber": 476, "col_offset": 55, "nodeName": "strict", "type": "bool"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "FieldError", "type": "Type[skbio.parse.record.FieldError]"}, {"lineNumber": 477, "col_offset": 38, "nodeName": "loc_bad", "type": "skbio.parse.record.LineOrientedConstructor"}, {"lineNumber": 479, "col_offset": 19, "nodeName": "LineOrientedConstructor", "type": "Type[skbio.parse.record.LineOrientedConstructor]"}, {"lineNumber": 479, "col_offset": 43, "nodeName": "data", "type": "List[str]"}, {"lineNumber": 479, "col_offset": 49, "nodeName": "label_splitter", "type": "Callable[[Any], Any]"}, {"lineNumber": 479, "col_offset": 65, "nodeName": "maps", "type": "Dict[str, Callable[[Any, Any, Any], None]]"}, {"lineNumber": 480, "col_offset": 43, "nodeName": "constructor", "type": "Type[Any]"}, {"lineNumber": 480, "col_offset": 56, "nodeName": "strict", "type": "bool"}, {"lineNumber": 481, "col_offset": 17, "nodeName": "loc_good", "type": "skbio.parse.record.LineOrientedConstructor"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 482, "col_offset": 26, "nodeName": "result", "type": "Any"}, {"lineNumber": 482, "col_offset": 34, "nodeName": "rec", "type": "Type[Any]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 483, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 500, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "FieldWrapper", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 501, "col_offset": 25, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 510, "col_offset": 19, "nodeName": "DelimitedSplitter", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "FieldWrapper", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 511, "col_offset": 25, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 511, "col_offset": 33, "nodeName": "splitter", "type": "Callable[[Any], Any]"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 521, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "FieldWrapper", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 522, "col_offset": 25, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 524, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 524, "col_offset": 36, "nodeName": "fake_dict", "type": "Type[fake_dict]"}, {"lineNumber": 533, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "StrictFieldWrapper", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 534, "col_offset": 31, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 537, "col_offset": 26, "nodeName": "FieldError", "type": "Type[skbio.parse.record.FieldError]"}, {"lineNumber": 537, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 538, "col_offset": 26, "nodeName": "FieldError", "type": "Type[skbio.parse.record.FieldError]"}, {"lineNumber": 538, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 543, "col_offset": 19, "nodeName": "DelimitedSplitter", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "StrictFieldWrapper", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 544, "col_offset": 31, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 544, "col_offset": 39, "nodeName": "splitter", "type": "Callable[[Any], Any]"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 550, "col_offset": 26, "nodeName": "FieldError", "type": "Type[skbio.parse.record.FieldError]"}, {"lineNumber": 550, "col_offset": 38, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 554, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 555, "col_offset": 12, "nodeName": "StrictFieldWrapper", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 555, "col_offset": 31, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 557, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 557, "col_offset": 36, "nodeName": "fake_dict", "type": "Type[fake_dict]"}, {"lineNumber": 566, "col_offset": 13, "nodeName": "FieldMorpher", "type": "Type[skbio.parse.record.FieldMorpher]"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 571, "col_offset": 13, "nodeName": "FieldMorpher", "type": "Type[skbio.parse.record.FieldMorpher]"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 572, "col_offset": 26, "nodeName": "FieldError", "type": "Type[skbio.parse.record.FieldError]"}, {"lineNumber": 572, "col_offset": 38, "nodeName": "fm", "type": "skbio.parse.record.FieldMorpher"}, {"lineNumber": 577, "col_offset": 13, "nodeName": "FieldMorpher", "type": "Type[skbio.parse.record.FieldMorpher]"}, {"lineNumber": 577, "col_offset": 46, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "recordsTests"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "string_and_strip", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "recordsTests"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "string_and_strip", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "recordsTests"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "string_and_strip", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "recordsTests"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "GrouperTests"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "GrouperTests"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "GrouperTests"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "GrouperTests"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "GrouperTests"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "GrouperTests"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "GrouperTests"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "GrouperTests"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "GrouperTests"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "g", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "iterator", "type": "Generator[List[Any], Any, None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "DelimitedSplitterTests"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "DelimitedSplitterTests"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "DelimitedSplitterTests"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "DelimitedSplitterTests"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "space", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "DelimitedSplitterTests"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "semicolon", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "DelimitedSplitterTests"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "twosplits", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "DelimitedSplitterTests"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "allsplits", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "DelimitedSplitterTests"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "lastone", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "DelimitedSplitterTests"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "lasttwo", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "DelimitedSplitterTests"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "lasttwo", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "DelimitedSplitterTests"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "lasttwo", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "DelimitedSplitterTests"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "lasttwo", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "GenericRecord", "type": "Type[skbio.parse.record.GenericRecord]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "GenericRecord", "type": "Type[skbio.parse.record.GenericRecord]"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "GenericRecord", "type": "Type[skbio.parse.record.GenericRecord]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "gr", "type": "Type[Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "gr", "type": "Type[Any]"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "gr", "type": "Type[Any]"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "gr", "type": "Type[Any]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 132, "col_offset": 42, "nodeName": "g", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "g", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "g", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "h", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "MappedRecord", "type": "Type[skbio.parse.record.MappedRecord]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "MappedRecord", "type": "Type[skbio.parse.record.MappedRecord]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "MappedRecord", "type": "Type[skbio.parse.record.MappedRecord]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 270, "col_offset": 28, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 274, "col_offset": 37, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 274, "col_offset": 52, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 290, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 316, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 326, "col_offset": 37, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "u", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 346, "col_offset": 25, "nodeName": "t", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "u", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 359, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 361, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 364, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 365, "col_offset": 25, "nodeName": "ret3", "type": "Type[Any]"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 374, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 375, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "TypeSetterTests"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "d", "type": "dummy"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "self", "type": "TypeSetterTests"}, {"lineNumber": 395, "col_offset": 25, "nodeName": "d", "type": "dummy"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "TypeSetterTests"}, {"lineNumber": 397, "col_offset": 25, "nodeName": "d", "type": "dummy"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "self", "type": "TypeSetterTests"}, {"lineNumber": 404, "col_offset": 25, "nodeName": "d", "type": "dummy"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "self", "type": "TypeSetterTests"}, {"lineNumber": 406, "col_offset": 25, "nodeName": "d", "type": "dummy"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "self", "type": "TypeSetterLikeTests"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "d", "type": "dummy"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "self", "type": "TypeSetterLikeTests"}, {"lineNumber": 419, "col_offset": 25, "nodeName": "d", "type": "dummy"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "self", "type": "TypeSetterLikeTests"}, {"lineNumber": 421, "col_offset": 25, "nodeName": "d", "type": "dummy"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "self", "type": "TypeSetterLikeTests"}, {"lineNumber": 422, "col_offset": 25, "nodeName": "d", "type": "dummy"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "self", "type": "TypeSetterLikeTests"}, {"lineNumber": 428, "col_offset": 25, "nodeName": "d", "type": "dummy"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "self", "type": "TypeSetterLikeTests"}, {"lineNumber": 430, "col_offset": 25, "nodeName": "d", "type": "dummy"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "self", "type": "TypeSetterLikeTests"}, {"lineNumber": 432, "col_offset": 25, "nodeName": "d", "type": "dummy"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "self", "type": "TypeSetterLikeTests"}, {"lineNumber": 434, "col_offset": 25, "nodeName": "d", "type": "dummy"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "self", "type": "TypeSetterLikeTests"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "d", "type": "dummy"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "self", "type": "LineOrientedConstructorTests"}, {"lineNumber": 445, "col_offset": 25, "nodeName": "l", "type": "skbio.parse.record.LineOrientedConstructor"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "self", "type": "LineOrientedConstructorTests"}, {"lineNumber": 446, "col_offset": 25, "nodeName": "LabelSplitter", "type": "Callable[[Any], Any]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "self", "type": "LineOrientedConstructorTests"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "l", "type": "skbio.parse.record.LineOrientedConstructor"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "self", "type": "LineOrientedConstructorTests"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "l", "type": "skbio.parse.record.LineOrientedConstructor"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "self", "type": "LineOrientedConstructorTests"}, {"lineNumber": 449, "col_offset": 25, "nodeName": "l", "type": "skbio.parse.record.LineOrientedConstructor"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "self", "type": "LineOrientedConstructorTests"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "self", "type": "LineOrientedConstructorTests"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "self", "type": "LineOrientedConstructorTests"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "self", "type": "LineOrientedConstructorTests"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "self", "type": "LineOrientedConstructorTests"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "self", "type": "LineOrientedConstructorTests"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "self", "type": "FieldWrapperTests"}, {"lineNumber": 502, "col_offset": 25, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "self", "type": "FieldWrapperTests"}, {"lineNumber": 503, "col_offset": 25, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "self", "type": "FieldWrapperTests"}, {"lineNumber": 504, "col_offset": 25, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "self", "type": "FieldWrapperTests"}, {"lineNumber": 512, "col_offset": 25, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "self", "type": "FieldWrapperTests"}, {"lineNumber": 513, "col_offset": 25, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "self", "type": "FieldWrapperTests"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 522, "col_offset": 45, "nodeName": "fake_dict", "type": "Type[fake_dict]"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "self", "type": "FieldWrapperTests"}, {"lineNumber": 523, "col_offset": 25, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 524, "col_offset": 26, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "self", "type": "StrictFieldWrapperTests"}, {"lineNumber": 535, "col_offset": 25, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "self", "type": "StrictFieldWrapperTests"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "self", "type": "StrictFieldWrapperTests"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "self", "type": "StrictFieldWrapperTests"}, {"lineNumber": 546, "col_offset": 12, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "self", "type": "StrictFieldWrapperTests"}, {"lineNumber": 549, "col_offset": 25, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "self", "type": "StrictFieldWrapperTests"}, {"lineNumber": 555, "col_offset": 51, "nodeName": "fake_dict", "type": "Type[fake_dict]"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "self", "type": "StrictFieldWrapperTests"}, {"lineNumber": 556, "col_offset": 25, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 557, "col_offset": 26, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 566, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 566, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "self", "type": "FieldMorpherTests"}, {"lineNumber": 567, "col_offset": 25, "nodeName": "fm", "type": "skbio.parse.record.FieldMorpher"}, {"lineNumber": 571, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 571, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "self", "type": "FieldMorpherTests"}, {"lineNumber": 577, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 577, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "self", "type": "FieldMorpherTests"}, {"lineNumber": 579, "col_offset": 25, "nodeName": "fm", "type": "skbio.parse.record.FieldMorpher"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "self", "type": "FieldMorpherTests"}, {"lineNumber": 581, "col_offset": 25, "nodeName": "fm", "type": "skbio.parse.record.FieldMorpher"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "g1", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "empty", "type": "List[nothing]"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "g2", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "empty", "type": "List[nothing]"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "g5", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "empty", "type": "List[nothing]"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "g1", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "s3", "type": "str"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "g2", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "s3", "type": "str"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "g5", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "s3", "type": "str"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "g1", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "s10", "type": "range"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "g2", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "s10", "type": "range"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "g5", "type": "skbio.parse.record.Grouper"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "s10", "type": "range"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "GrouperTests"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "self", "type": "GenericRecordTests"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "self", "type": "MappedRecordTests"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "key", "type": "nothing"}, {"lineNumber": 200, "col_offset": 46, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 316, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "s", "type": "skbio.parse.record.MappedRecord"}, {"lineNumber": 446, "col_offset": 25, "nodeName": "l", "type": "skbio.parse.record.LineOrientedConstructor"}, {"lineNumber": 576, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 576, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 54, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 200, "col_offset": 48, "nodeName": "key", "type": "nothing"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 576, "col_offset": 37, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 576, "col_offset": 43, "nodeName": "y", "type": "Any"}]