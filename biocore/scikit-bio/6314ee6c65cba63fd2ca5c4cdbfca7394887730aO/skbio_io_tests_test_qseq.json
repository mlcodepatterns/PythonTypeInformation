[{"lineNumber": 24, "col_offset": 0, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "TestQSeqBase", "type": "Type[TestQSeqBase]"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "TestQSeqBase", "type": "Type[TestQSeqBase]"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "TestQSeqBase", "type": "Type[TestQSeqBase]"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "TestQSeqBase", "type": "Type[TestQSeqBase]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "arg", "type": "str"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "args", "type": "Tuple[str]"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 294, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "valid_files", "type": "List[Union[Tuple[str, List[Union[Dict[str, str], Dict[str, int]]], List[Tuple[str, str, List[int]]]], Tuple[str, List[Union[Dict[str, Union[int, bool, str]], Dict[str, Union[int, bool]], Dict[str, Any]]], List[Tuple[str, str, List[int]]]]]]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "invalid_files", "type": "List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, List[Dict[str, str]], List[str], Type[ValueError]]]]"}, {"lineNumber": 193, "col_offset": 46, "nodeName": "invalid_files", "type": "Union[List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, List[Dict[str, str]], List[str], Type[ValueError]]]], List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, List[Dict[str, str]], List[str], Type[ValueError]]]]]"}, {"lineNumber": 202, "col_offset": 41, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "valid_files", "type": "List[Union[Tuple[str, List[Union[Dict[str, str], Dict[str, int]]], List[Tuple[str, str, List[int]]]], Tuple[str, List[Union[Dict[str, Union[int, bool, str]], Dict[str, Union[int, bool]], Dict[str, Any]]], List[Tuple[str, str, List[int]]]]]]"}, {"lineNumber": 224, "col_offset": 46, "nodeName": "invalid_files", "type": "List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]]]]"}, {"lineNumber": 233, "col_offset": 41, "nodeName": "valid_files", "type": "List[Any]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "invalid_files", "type": "List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, None, None, None]]]"}, {"lineNumber": 287, "col_offset": 27, "nodeName": "valid_files", "type": "List[Union[Tuple[str, List[Union[Dict[str, str], Dict[str, int]]], List[Tuple[str, str, List[int]]]], Tuple[str, List[Union[Dict[str, Union[int, bool, str]], Dict[str, Union[int, bool]], Dict[str, Any]]], List[Tuple[str, str, List[int]]]]]]"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "invalid_files", "type": "Union[List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, None, None, None]]], List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, None, None, None]]]]"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "arg", "type": "str"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "invalid", "type": "str"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str]]], List[Dict[str, str]], List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]]]"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "etype", "type": "Union[Type[skbio.io._exception.QSeqFormatError], Type[ValueError]]"}, {"lineNumber": 193, "col_offset": 46, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "e", "type": "str"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "components", "type": "Any"}, {"lineNumber": 202, "col_offset": 41, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "invalid", "type": "str"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str]]], List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]]]"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "etype", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 224, "col_offset": 46, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "e", "type": "str"}, {"lineNumber": 229, "col_offset": 21, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 233, "col_offset": 19, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "components", "type": "Any"}, {"lineNumber": 233, "col_offset": 41, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 250, "col_offset": 28, "nodeName": "BiologicalSequence", "type": "Any"}, {"lineNumber": 250, "col_offset": 48, "nodeName": "NucleotideSequence", "type": "Any"}, {"lineNumber": 251, "col_offset": 28, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 251, "col_offset": 41, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 251, "col_offset": 54, "nodeName": "ProteinSequence", "type": "Any"}, {"lineNumber": 252, "col_offset": 50, "nodeName": "invalid_files", "type": "List[Union[Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]], Tuple[str, List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[str], Type[skbio.io._exception.QSeqFormatError]]]]"}, {"lineNumber": 263, "col_offset": 28, "nodeName": "BiologicalSequence", "type": "Any"}, {"lineNumber": 263, "col_offset": 48, "nodeName": "NucleotideSequence", "type": "Any"}, {"lineNumber": 264, "col_offset": 28, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 264, "col_offset": 41, "nodeName": "RNASequence", "type": "Any"}, {"lineNumber": 264, "col_offset": 54, "nodeName": "ProteinSequence", "type": "Any"}, {"lineNumber": 265, "col_offset": 45, "nodeName": "valid_files", "type": "List[Union[Tuple[str, List[Union[Dict[str, str], Dict[str, int]]], List[Tuple[str, str, List[int]]]], Tuple[str, List[Union[Dict[str, Union[int, bool, str]], Dict[str, Union[int, bool]], Dict[str, Any]]], List[Tuple[str, str, List[int]]]]]]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "TestQSeqSniffer"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "_", "type": "Any"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "_", "type": "Any"}, {"lineNumber": 287, "col_offset": 27, "nodeName": "self", "type": "TestQSeqSniffer"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "invalid", "type": "str"}, {"lineNumber": 291, "col_offset": 21, "nodeName": "_", "type": "Optional[Union[List[Union[Dict[nothing, nothing], Dict[str, str]]], List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]]]]"}, {"lineNumber": 291, "col_offset": 24, "nodeName": "_", "type": "Optional[List[str]]"}, {"lineNumber": 291, "col_offset": 27, "nodeName": "_", "type": "Optional[Type[skbio.io._exception.QSeqFormatError]]"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "self", "type": "TestQSeqSniffer"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "arg", "type": "str"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "QSeqFormatError", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 194, "col_offset": 45, "nodeName": "cm", "type": "Union[unittest.case._AssertRaisesContext[ValueError], unittest.case._AssertRaisesContext[skbio.io._exception.QSeqFormatError]]"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str]]], List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[Dict[str, str]]]"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 45, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str]]], List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]]]"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "observed", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "invalid", "type": "str"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, str]]], List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]]]"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 252, "col_offset": 41, "nodeName": "etype", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 252, "col_offset": 50, "nodeName": "self", "type": "TestQSeqToSequences"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "e", "type": "str"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 265, "col_offset": 31, "nodeName": "components", "type": "Any"}, {"lineNumber": 265, "col_offset": 45, "nodeName": "self", "type": "TestQSeqToSequences"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "TestQSeqToGenerator", "type": "Type[TestQSeqToGenerator]"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "etype", "type": "Union[Type[ValueError], Type[skbio.io._exception.QSeqFormatError]]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "e", "type": "str"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "get", "type": "Any"}, {"lineNumber": 205, "col_offset": 55, "nodeName": "BiologicalSequence", "type": "Any"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "o", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "e", "type": "Any"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "zip", "type": "Any"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 211, "col_offset": 42, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 217, "col_offset": 14, "nodeName": "TestQSeqToSequenceCollection", "type": "Type[TestQSeqToSequenceCollection]"}, {"lineNumber": 217, "col_offset": 44, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "etype", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 30, "nodeName": "e", "type": "str"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 29, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 236, "col_offset": 30, "nodeName": "get", "type": "Any"}, {"lineNumber": 236, "col_offset": 55, "nodeName": "BiologicalSequence", "type": "Any"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "SequenceCollection", "type": "Any"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "_qseq_to_sequence_collection", "type": "Any"}, {"lineNumber": 241, "col_offset": 56, "nodeName": "valid", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "observed", "type": "Any"}, {"lineNumber": 243, "col_offset": 43, "nodeName": "expected", "type": "Any"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "o", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "e", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "zip", "type": "Any"}, {"lineNumber": 244, "col_offset": 32, "nodeName": "observed", "type": "Any"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "expected", "type": "Any"}, {"lineNumber": 253, "col_offset": 49, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "kwarg", "type": "Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]"}, {"lineNumber": 254, "col_offset": 33, "nodeName": "kwargs", "type": "Union[List[Union[Dict[nothing, nothing], Dict[str, int], Dict[str, str]]], List[Union[Dict[nothing, nothing], Dict[str, str]]]]"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "seq_num", "type": "Any"}, {"lineNumber": 270, "col_offset": 20, "nodeName": "c", "type": "Any"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "expected", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 281, "col_offset": 14, "nodeName": "TestQSeqSniffer", "type": "Type[TestQSeqSniffer]"}, {"lineNumber": 281, "col_offset": 31, "nodeName": "self", "type": "TestQSeqSniffer"}, {"lineNumber": 283, "col_offset": 13, "nodeName": "get_data_path", "type": "Callable[..., str]"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "self", "type": "TestQSeqSniffer"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "_qseq_sniffer", "type": "Any"}, {"lineNumber": 288, "col_offset": 43, "nodeName": "valid", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "self", "type": "TestQSeqSniffer"}, {"lineNumber": 292, "col_offset": 29, "nodeName": "_qseq_sniffer", "type": "Any"}, {"lineNumber": 292, "col_offset": 43, "nodeName": "invalid", "type": "str"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "ProteinSequence", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "DNASequence", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 199, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 199, "col_offset": 37, "nodeName": "exception", "type": "Union[skbio.io._exception.QSeqFormatError, ValueError]"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "c", "type": "Any"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "components", "type": "Any"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "_qseq_to_generator", "type": "Any"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "valid", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 210, "col_offset": 37, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 210, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 210, "col_offset": 52, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "_qseq_to_sequence_collection", "type": "Any"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "invalid", "type": "str"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 230, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "exception", "type": "skbio.io._exception.QSeqFormatError"}, {"lineNumber": 236, "col_offset": 30, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 241, "col_offset": 65, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 245, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 253, "col_offset": 39, "nodeName": "etype", "type": "Type[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "e", "type": "str"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "get", "type": "Any"}, {"lineNumber": 270, "col_offset": 24, "nodeName": "components", "type": "Any"}, {"lineNumber": 271, "col_offset": 31, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 273, "col_offset": 31, "nodeName": "read", "type": "Any"}, {"lineNumber": 273, "col_offset": 36, "nodeName": "valid", "type": "Any"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "_qseq_to_generator", "type": "Any"}, {"lineNumber": 197, "col_offset": 44, "nodeName": "invalid", "type": "str"}, {"lineNumber": 199, "col_offset": 37, "nodeName": "cm", "type": "Union[unittest.case._AssertRaisesContext[skbio.io._exception.QSeqFormatError], unittest.case._AssertRaisesContext[ValueError]]"}, {"lineNumber": 209, "col_offset": 60, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "self", "type": "TestQSeqToGenerator"}, {"lineNumber": 212, "col_offset": 36, "nodeName": "equals", "type": "Any"}, {"lineNumber": 212, "col_offset": 45, "nodeName": "e", "type": "Any"}, {"lineNumber": 228, "col_offset": 60, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 238, "col_offset": 65, "nodeName": "c", "type": "Any"}, {"lineNumber": 239, "col_offset": 47, "nodeName": "components", "type": "Any"}, {"lineNumber": 245, "col_offset": 20, "nodeName": "self", "type": "TestQSeqToSequenceCollection"}, {"lineNumber": 245, "col_offset": 36, "nodeName": "equals", "type": "Any"}, {"lineNumber": 245, "col_offset": 45, "nodeName": "e", "type": "Any"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "self", "type": "TestQSeqToSequences"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "_drop_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 255, "col_offset": 37, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[str, int], Dict[nothing, nothing]]"}, {"lineNumber": 257, "col_offset": 24, "nodeName": "read", "type": "Any"}, {"lineNumber": 257, "col_offset": 29, "nodeName": "invalid", "type": "str"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "self", "type": "TestQSeqToSequences"}, {"lineNumber": 260, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 260, "col_offset": 41, "nodeName": "exception", "type": "skbio.io._exception.QSeqFormatError"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 271, "col_offset": 43, "nodeName": "c", "type": "Any"}, {"lineNumber": 273, "col_offset": 48, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 274, "col_offset": 52, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "self", "type": "TestQSeqToSequences"}, {"lineNumber": 275, "col_offset": 36, "nodeName": "equals", "type": "Any"}, {"lineNumber": 275, "col_offset": 52, "nodeName": "expected", "type": "Any"}, {"lineNumber": 197, "col_offset": 55, "nodeName": "kwarg", "type": "Any"}, {"lineNumber": 212, "col_offset": 36, "nodeName": "o", "type": "Any"}, {"lineNumber": 245, "col_offset": 36, "nodeName": "o", "type": "Any"}, {"lineNumber": 258, "col_offset": 34, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 258, "col_offset": 49, "nodeName": "kwarg", "type": "Union[Dict[str, str], Dict[str, int], Dict[nothing, nothing]]"}, {"lineNumber": 260, "col_offset": 41, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[skbio.io._exception.QSeqFormatError]"}, {"lineNumber": 270, "col_offset": 35, "nodeName": "seq_num", "type": "Any"}, {"lineNumber": 271, "col_offset": 52, "nodeName": "c", "type": "Any"}, {"lineNumber": 271, "col_offset": 66, "nodeName": "c", "type": "Any"}, {"lineNumber": 275, "col_offset": 36, "nodeName": "observed", "type": "Any"}, {"lineNumber": 238, "col_offset": 55, "nodeName": "c", "type": "Any"}]