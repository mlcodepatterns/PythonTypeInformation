[{"lineNumber": 14, "col_offset": 0, "nodeName": "test_enforces_variable_id_is_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "test_no_column_default_datetime", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "test_text_depreciation", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "error_text", "type": "str"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "variable", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "variable", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "es", "type": "featuretools.entityset.entityset.EntitySet"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "match", "type": "str"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "es", "type": "featuretools.entityset.entityset.EntitySet"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "Categorical", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "Datetime", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "Timedelta", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "EntitySet", "type": "Type[featuretools.entityset.entityset.EntitySet]"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "EntitySet", "type": "Type[featuretools.entityset.entityset.EntitySet]"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "record", "type": "Any"}, {"lineNumber": 15, "col_offset": 28, "nodeName": "es", "type": "Any"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "Categorical", "type": "Any"}, {"lineNumber": 23, "col_offset": 36, "nodeName": "es", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "interesting_values", "type": "Any"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "es", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "interesting_values", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "ft", "type": "module"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "entity_from_dataframe", "type": "Callable"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "ft", "type": "module"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "entity_from_dataframe", "type": "Callable"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 18, "col_offset": 45, "nodeName": "error_text", "type": "str"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "es", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "variable", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "variable", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "match", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "es", "type": "featuretools.entityset.entityset.EntitySet"}, {"lineNumber": 38, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "es", "type": "featuretools.entityset.entityset.EntitySet"}, {"lineNumber": 42, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "record", "type": "Any"}, {"lineNumber": 39, "col_offset": 64, "nodeName": "Text", "type": "Any"}, {"lineNumber": 43, "col_offset": 64, "nodeName": "NaturalLanguage", "type": "Any"}]