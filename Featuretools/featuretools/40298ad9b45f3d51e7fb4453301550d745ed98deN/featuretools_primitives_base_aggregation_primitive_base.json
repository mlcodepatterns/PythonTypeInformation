[{"lineNumber": 9, "col_offset": 27, "nodeName": "PrimitiveBase", "type": "Any"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "stack_on", "type": "None"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "stack_on_exclude", "type": "None"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "base_of", "type": "None"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "base_of_exclude", "type": "None"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "stack_on_self", "type": "bool"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "allow_where", "type": "bool"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "cls", "type": "Dict[Any, Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "input_types", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "input_types", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "stack_on", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "stack_on", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "stack_on_exclude", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "stack_on_exclude", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "stack_on_self", "type": "Any"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "stack_on_self", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "base_of", "type": "Any"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "base_of", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "base_of_exclude", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "base_of_exclude", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "commutative", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "commutative", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "number_output_features", "type": "Any"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "number_output_features", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "base_features_str", "type": "str"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "description", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "default_description", "type": "str"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "doc", "type": "Optional[str]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "description", "type": "Optional[str]"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "description", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "cls_attributes", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "cls", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "inspect_function_args", "type": "Any"}, {"lineNumber": 121, "col_offset": 54, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 122, "col_offset": 54, "nodeName": "function", "type": "Any"}, {"lineNumber": 123, "col_offset": 54, "nodeName": "uses_calc_time", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "default_kwargs", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "default_kwargs", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "new_class_init", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "get_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "get_function", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "default_value", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "default_value", "type": "Any"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "default_value", "type": "Any"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 19, "col_offset": 38, "nodeName": "base_feature_names", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "getdoc", "type": "Callable[[object], Optional[str]]"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "function", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "doc", "type": "Optional[str]"}, {"lineNumber": 105, "col_offset": 50, "nodeName": "default_description", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "cls_attributes", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "function", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "AggregationPrimitive", "type": "Type[AggregationPrimitive]"}, {"lineNumber": 125, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "default_kwargs", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "partial", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "f", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "default_value", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "child_entity_id", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "base_features_str", "type": "str"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "where_str", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "use_prev_str", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "inspect", "type": "module"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "doc", "type": "Optional[str]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "cls", "type": "Dict[Any, Any]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "default_kwargs", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "partial", "type": "functools.partial[nothing]"}, {"lineNumber": 131, "col_offset": 45, "nodeName": "function", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "partial", "type": "functools.partial[nothing]"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "function", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "new_class", "type": "Any"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "function", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "upper", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "get_args_string", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "copy", "type": "module"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "functools", "type": "module"}, {"lineNumber": 131, "col_offset": 57, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "self", "type": "AggregationPrimitive"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "self", "type": "AggregationPrimitive"}, {"lineNumber": 143, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 143, "col_offset": 59, "nodeName": "input_types", "type": "Any"}]