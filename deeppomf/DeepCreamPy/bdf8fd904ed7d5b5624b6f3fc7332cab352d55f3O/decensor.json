[{"lineNumber": 14, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 249, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "decensor", "type": "Decensor"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "is_mosaic", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "is_mosaic", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "mask_color", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "model", "type": "model.InpaintNN"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "color_dir", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "decensor_input_path", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "file_names", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "input_dir", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "decensor_input_path", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "decensor_output_path", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "file_names", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "has_alpha", "type": "bool"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "ori_array", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "ori_array", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "is_mosaic", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "regions", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "output_img_array", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "output_img_array", "type": "Any"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "has_alpha", "type": "bool"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "output_img", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "Decensor", "type": "Type[Decensor]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "decensor_all_images_in_folder", "type": "Callable[[], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 15, "col_offset": 46, "nodeName": "e", "type": "ImportError"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "exit", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "get_args", "type": "Callable[[], argparse.Namespace]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "load_model", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "j", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "where", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "InpaintNN", "type": "Type[model.InpaintNN]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "listdir", "type": "Callable"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "color_dir", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "file_names", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "files_removed", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "check_file", "type": "Callable[..., Tuple[List[Any], List[Tuple[Any, int]]]]"}, {"lineNumber": 51, "col_offset": 58, "nodeName": "input_dir", "type": "Any"}, {"lineNumber": 51, "col_offset": 69, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "color_file_path", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "files_removed", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "width", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "height", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "ori", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "mode", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "has_alpha", "type": "bool"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "alpha_channel", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "alpha_channel", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "ori", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "image_to_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "ori", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "ori_array", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "colored", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "color_array", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "color_array", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "mask_reshaped", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "mask_img", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "find_regions", "type": "Callable[[Any, Any], List[Any]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "copy", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "region_counter", "type": "int"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "region", "type": "Any"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 135, "col_offset": 48, "nodeName": "regions", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "bounding_box", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "crop_img", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "mask_reshaped", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "mask_img", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "crop_img", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "crop_img_array", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "mask_img", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "mask_img", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "mask_array", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "temp", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "crop_img_array", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "mask_array", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "crop_img_array", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "pred_img_array", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "pred_img_array", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "pred_img_array", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "bounding_width", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "bounding_height", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "pred_img", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "pred_img", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "pred_img_array", "type": "numpy.ndarray"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "pred_img_array", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 229, "col_offset": 27, "nodeName": "output_img_array", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "output_img_array", "type": "Any"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "fromarray", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "save_path", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "output_img", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "decensor", "type": "Decensor"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "config", "type": "module"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "mask_color_red", "type": "Any"}, {"lineNumber": 25, "col_offset": 59, "nodeName": "mask_color_green", "type": "Any"}, {"lineNumber": 25, "col_offset": 93, "nodeName": "mask_color_blue", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "decensor_output_path", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "decensor_output_path", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "colored", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 39, "col_offset": 233, "nodeName": "is_mosaic", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "file", "type": "module"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "color_dir", "type": "Any"}, {"lineNumber": 55, "col_offset": 54, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "color_bn", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "color_ext", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 56, "col_offset": 51, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "is_mosaic", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "error_messages", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "files_removed", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "ori", "type": "Any"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "alpha_channel", "type": "Any"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "convert", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "convert", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "image_to_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "colored", "type": "Any"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "color_array", "type": "numpy.ndarray"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "get_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "color_array", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "fromarray", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "get_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "ori_array", "type": "Any"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "convert", "type": "Any"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "is_mosaic", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "expand_bounding", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "ori", "type": "Any"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "region", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "crop", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "bounding_box", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "fromarray", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "resize", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "image_to_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "crop_img", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "crop", "type": "Any"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "bounding_box", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "resize", "type": "Any"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "image_to_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 40, "nodeName": "mask_img", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "is_mosaic", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "fromarray", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 179, "col_offset": 44, "nodeName": "crop_img_array", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 180, "col_offset": 40, "nodeName": "mask_array", "type": "numpy.ndarray"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "predict", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 196, "col_offset": 48, "nodeName": "crop_img_array", "type": "Any"}, {"lineNumber": 196, "col_offset": 64, "nodeName": "crop_img_array", "type": "Any"}, {"lineNumber": 196, "col_offset": 80, "nodeName": "mask_array", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "pred_img_array", "type": "Any"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 199, "col_offset": 77, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "fromarray", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "resize", "type": "Any"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "image_to_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 214, "col_offset": 44, "nodeName": "pred_img", "type": "Any"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 217, "col_offset": 44, "nodeName": "pred_img_array", "type": "numpy.ndarray"}, {"lineNumber": 220, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "col", "type": "int"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "Image", "type": "Any"}, {"lineNumber": 235, "col_offset": 37, "nodeName": "astype", "type": "Any"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 240, "col_offset": 37, "nodeName": "decensor_output_path", "type": "Any"}, {"lineNumber": 240, "col_offset": 69, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 241, "col_offset": 28, "nodeName": "save_path", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 25, "col_offset": 59, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 25, "col_offset": 93, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 45, "nodeName": "mask_color", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "j", "type": "Any"}, {"lineNumber": 39, "col_offset": 233, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "isfile", "type": "Callable[[Union[str, bytes, _PathLike[str], _PathLike[bytes]]], bool]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "color_file_path", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "colored_img", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "ori_dir", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "decensor_input_original_path", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "valid_formats", "type": "Set[str]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "test_file_name", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "file", "type": "module"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "ori", "type": "Any"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "ori", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "colored", "type": "Any"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "mask", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "Image", "type": "Any"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "astype", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "colored", "type": "Any"}, {"lineNumber": 126, "col_offset": 56, "nodeName": "v", "type": "Any"}, {"lineNumber": 126, "col_offset": 66, "nodeName": "v", "type": "Any"}, {"lineNumber": 126, "col_offset": 71, "nodeName": "mask_color", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "regions", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "ori_array", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "ori", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "mask", "type": "Any"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "Image", "type": "Any"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "astype", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "crop_img", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "mask_img", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "mask_img", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "where", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "crop_img_array", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "Image", "type": "Any"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "astype", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "crop_img_array", "type": "Any"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "model", "type": "model.InpaintNN"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 77, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "bounding_box", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 202, "col_offset": 45, "nodeName": "bounding_box", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "bounding_box", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 203, "col_offset": 46, "nodeName": "bounding_box", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "Image", "type": "Any"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "astype", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "pred_img", "type": "Any"}, {"lineNumber": 211, "col_offset": 40, "nodeName": "bounding_width", "type": "Any"}, {"lineNumber": 211, "col_offset": 56, "nodeName": "bounding_height", "type": "Any"}, {"lineNumber": 211, "col_offset": 85, "nodeName": "BICUBIC", "type": "Any"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "ori_array", "type": "Any"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 221, "col_offset": 33, "nodeName": "bounding_width", "type": "Any"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "row", "type": "int"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 47, "nodeName": "output_img_array", "type": "Any"}, {"lineNumber": 233, "col_offset": 65, "nodeName": "alpha_channel", "type": "Any"}, {"lineNumber": 235, "col_offset": 37, "nodeName": "output_img_array", "type": "Any"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 240, "col_offset": 37, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "output_img", "type": "Any"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 25, "col_offset": 59, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 25, "col_offset": 93, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "colored", "type": "Any"}, {"lineNumber": 34, "col_offset": 45, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "casefold", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "color_file_path", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "open", "type": "Any"}, {"lineNumber": 61, "col_offset": 45, "nodeName": "color_file_path", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "listdir", "type": "Callable"}, {"lineNumber": 74, "col_offset": 53, "nodeName": "ori_dir", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "decensor_image", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "colored_img", "type": "Any"}, {"lineNumber": 86, "col_offset": 53, "nodeName": "colored_img", "type": "Any"}, {"lineNumber": 86, "col_offset": 66, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "mask_reshaped", "type": "Any"}, {"lineNumber": 126, "col_offset": 71, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 127, "col_offset": 91, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 95, "nodeName": "regions", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "mask_reshaped", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "pred_img_array", "type": "Any"}, {"lineNumber": 211, "col_offset": 85, "nodeName": "Image", "type": "Any"}, {"lineNumber": 222, "col_offset": 31, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "bounding_height", "type": "Any"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "bounding_width_index", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "bounding_height_index", "type": "Any"}, {"lineNumber": 227, "col_offset": 101, "nodeName": "region_counter", "type": "int"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 240, "col_offset": 37, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 243, "col_offset": 76, "nodeName": "save_path", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "color_ext", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "Image", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "os", "type": "module"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "test_bn", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "test_ext", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 75, "col_offset": 61, "nodeName": "test_file_name", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "ori_file_path", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "ori_img", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 89, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "color_file_path", "type": "Any"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "mask_array", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "b", "type": "Any"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "crop_img_array", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 47, "nodeName": "col", "type": "int"}, {"lineNumber": 224, "col_offset": 48, "nodeName": "row", "type": "int"}, {"lineNumber": 225, "col_offset": 76, "nodeName": "region", "type": "Any"}, {"lineNumber": 227, "col_offset": 130, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 227, "col_offset": 134, "nodeName": "regions", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "files_removed", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "color_file_path", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "path", "type": "module"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "test_bn", "type": "Any"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "color_bn", "type": "Any"}, {"lineNumber": 76, "col_offset": 77, "nodeName": "valid_formats", "type": "Set[str]"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "join", "type": "Callable"}, {"lineNumber": 77, "col_offset": 57, "nodeName": "ori_dir", "type": "Any"}, {"lineNumber": 77, "col_offset": 66, "nodeName": "test_file_name", "type": "Any"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "open", "type": "Any"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "ori_file_path", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "decensor_image", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "ori_img", "type": "Any"}, {"lineNumber": 80, "col_offset": 57, "nodeName": "colored_img", "type": "Any"}, {"lineNumber": 80, "col_offset": 70, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 83, "col_offset": 95, "nodeName": "color_file_path", "type": "Any"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "pred_img_array", "type": "Any"}, {"lineNumber": 223, "col_offset": 53, "nodeName": "bounding_box", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 224, "col_offset": 54, "nodeName": "bounding_box", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "bounding_width_index", "type": "Any"}, {"lineNumber": 225, "col_offset": 50, "nodeName": "bounding_height_index", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "os", "type": "module"}, {"lineNumber": 76, "col_offset": 54, "nodeName": "casefold", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "path", "type": "module"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "Image", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "self", "type": "Decensor"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "output_img_array", "type": "Any"}, {"lineNumber": 226, "col_offset": 68, "nodeName": "bounding_width_index", "type": "Any"}, {"lineNumber": 226, "col_offset": 121, "nodeName": "col", "type": "int"}, {"lineNumber": 63, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 62, "nodeName": "color_file_path", "type": "Any"}, {"lineNumber": 76, "col_offset": 54, "nodeName": "test_ext", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "os", "type": "module"}, {"lineNumber": 226, "col_offset": 45, "nodeName": "bounding_height_index", "type": "Any"}, {"lineNumber": 226, "col_offset": 92, "nodeName": "pred_img_array", "type": "Any"}, {"lineNumber": 226, "col_offset": 116, "nodeName": "row", "type": "int"}, {"lineNumber": 226, "col_offset": 107, "nodeName": "i", "type": "int"}]