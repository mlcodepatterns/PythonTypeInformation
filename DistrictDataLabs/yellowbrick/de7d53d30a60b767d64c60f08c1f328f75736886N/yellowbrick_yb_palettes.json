[{"lineNumber": 87, "col_offset": 0, "nodeName": "color_palette", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "set_color_codes", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "pal_cycle", "type": "itertools.cycle[nothing]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "palette", "type": "List[nothing]"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "palette", "type": "_ColorPalette"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "_orig_palette", "type": "_ColorPalette"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "self", "type": "_ColorPalette"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "hex", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 7, "nodeName": "palette", "type": "None"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "palette", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "cycle", "type": "Type[itertools.cycle[Any]]"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "palette", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "palette", "type": "Iterator[Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "palette", "type": "_ColorPalette"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 190, "col_offset": 7, "nodeName": "palette", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "colors", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "code", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "color", "type": "Any"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "colors", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 198, "col_offset": 48, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "_ColorPalette"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "color_palette", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "set_palette", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "self", "type": "_ColorPalette"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "set_palette", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "_orig_palette", "type": "_ColorPalette"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "_ColorPalette", "type": "Type[_ColorPalette]"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "hex", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "get_color_cycle", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "n_colors", "type": "None"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "n_colors", "type": "int"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "palette", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "palette", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "pal_cycle", "type": "itertools.cycle[nothing]"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "_", "type": "int"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "map", "type": "Callable"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "to_rgb", "type": "Any"}, {"lineNumber": 170, "col_offset": 56, "nodeName": "palette", "type": "List[nothing]"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "_ColorPalette", "type": "Type[_ColorPalette]"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "palette", "type": "Iterator[Any]"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "to_rgb", "type": "Any"}, {"lineNumber": 196, "col_offset": 47, "nodeName": "color", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "colors", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "cache", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "self", "type": "_ColorPalette"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "rgb2hex", "type": "Any"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "rgb", "type": "nothing"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "rgb", "type": "nothing"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "self", "type": "_ColorPalette"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "palette", "type": "Any"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "palette", "type": "Any"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "n_colors", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "n_colors", "type": "int"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "n_colors", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "n_colors", "type": "int"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 166, "col_offset": 46, "nodeName": "n_colors", "type": "int"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "colorConverter", "type": "Any"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "YELLOWBRICK_PALETTES", "type": "Dict[Any, Any]"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "colorConverter", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "colorConverter", "type": "Any"}, {"lineNumber": 197, "col_offset": 41, "nodeName": "code", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "colorConverter", "type": "Any"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "code", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "colors", "type": "Any"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "palette", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "lower", "type": "Any"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "palette", "type": "Any"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "YELLOWBRICK_PALETTES", "type": "Dict[Any, Any]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "palette", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "palette", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "colors", "type": "Any"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "palette", "type": "Any"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "colors", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "colors", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "colors", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "mpl", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "palette", "type": "Any"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "YELLOWBRICK_PALETTES", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "palette", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "SEABORN_PALETTES", "type": "Dict[Any, Any]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "palette", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "mpl", "type": "Any"}, {"lineNumber": 173, "col_offset": 65, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 173, "col_offset": 69, "nodeName": "palette", "type": "List[nothing]"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "mpl", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "mpl", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "mpl", "type": "Any"}, {"lineNumber": 155, "col_offset": 43, "nodeName": "palette", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "SEABORN_PALETTES", "type": "Dict[Any, Any]"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "palette", "type": "Any"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "palette", "type": "Any"}]