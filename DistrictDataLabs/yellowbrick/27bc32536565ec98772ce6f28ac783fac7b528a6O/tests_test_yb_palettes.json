[{"lineNumber": 23, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "test_current_palette", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_palette_context", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_big_palette_context", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_yellowbrick_palettes", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_seaborn_palettes", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_bad_palette_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_terrible_palette_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_bad_palette_colors", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_palette_is_list_of_tuples", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "test_palette_cycles", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "test_color_codes", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "test_as_hex", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "test_get_color_cycle", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 146, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "pal", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "default_pal", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "context_pal", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "original_pal", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "context_pal", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "pals", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "pals", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "pals", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "pals", "type": "List[str]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "pal", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "pal_in", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "pal_out", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "accent", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "double_accent", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "colors", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "pal", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "set_palette", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "pal", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "pal", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "set", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 56, "nodeName": "default_pal", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "set_palette", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "original_pal", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 56, "nodeName": "original_pal", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "set", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "pal_out", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "pal_out", "type": "Any"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "pal_in", "type": "numpy.ndarray"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "pal_out", "type": "Any"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 45, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "double_accent", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "set_color_codes", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "color", "type": "Any"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 119, "col_offset": 42, "nodeName": "colors", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "rgb_want", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "rgb_got", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "set_color_codes", "type": "Any"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "hex", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "pal", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "yb_rcmod", "type": "module"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "get_color_cycle", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "yb_rcmod", "type": "module"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "context_pal", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 60, "nodeName": "context_pal", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "get_color_cycle", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "yb_rcmod", "type": "module"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "context_pal", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 60, "nodeName": "context_pal", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "get_color_cycle", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "yb_rcmod", "type": "module"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "name", "type": "str"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "name", "type": "str"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "pal", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "pal_out", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "accent", "type": "Any"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "accent", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "color_palette", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "to_rgb", "type": "Any"}, {"lineNumber": 120, "col_offset": 56, "nodeName": "color", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "to_rgb", "type": "Any"}, {"lineNumber": 121, "col_offset": 55, "nodeName": "code", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "rgb_want", "type": "Any"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "rgb_got", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "as_hex", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 54, "nodeName": "hex", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "get_color_cycle", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "rcParams", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "color_utils", "type": "module"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "get_color_cycle", "type": "Callable[[], Any]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "color_utils", "type": "module"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "get_color_cycle", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "color_utils", "type": "module"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "pal_out", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "pal_out", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "pal_out", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "pal_out", "type": "Any"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "yb_palettes", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "colorConverter", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "colorConverter", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "pal", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "self", "type": "TestColorPalettes"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "rgb2hex", "type": "Any"}, {"lineNumber": 129, "col_offset": 48, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "color_utils", "type": "module"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "mpl", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "color_utils", "type": "module"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "color_utils", "type": "module"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "name", "type": "str"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "colors", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "colors", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "colors", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "mpl", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "mpl", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "mpl", "type": "Any"}]