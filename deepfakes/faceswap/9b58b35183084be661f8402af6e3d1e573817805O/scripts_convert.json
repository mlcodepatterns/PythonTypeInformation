[{"lineNumber": 16, "col_offset": 14, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "arguments", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "images", "type": "scripts.fsmedia.Images"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "faces", "type": "scripts.fsmedia.Faces"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "alignments", "type": "scripts.fsmedia.Alignments"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "opts", "type": "OptionalActions"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "faces_detected", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "converter", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "batch", "type": "lib.utils.BackgroundGenerator"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "item", "type": "nothing"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "extract", "type": "scripts.extract.Extract"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "export_face", "type": "bool"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "model_dir", "type": "pathlib.Path"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "num_gpus", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "gpus", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "conv", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "converter", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "converter", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "filename", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "have_alignments", "type": "bool"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "have_alignments", "type": "bool"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "imagevars", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "image", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "input_images", "type": "Any"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "input_images", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "faces_to_swap", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "frame_ranges", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "imageidxre", "type": "Pattern[str]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "faces_to_swap", "type": "None"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "input_aligned_dir", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "input_aligned_dir", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "faces_to_swap", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "rng", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "skipframe", "type": "bool"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "skipframe", "type": "Union[str, bool]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "face_name", "type": "str"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "face_file", "type": "pathlib.Path"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "skip_face", "type": "bool"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "skip_face", "type": "bool"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "skip_face", "type": "bool"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "Convert"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "Convert"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "get_folder", "type": "Callable[[Any], pathlib.Path]"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "output_dir", "type": "pathlib.Path"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Convert"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "Images", "type": "Type[scripts.fsmedia.Images]"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Convert"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "Faces", "type": "Type[scripts.fsmedia.Faces]"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "Convert"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "Alignments", "type": "Type[scripts.fsmedia.Alignments]"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Convert"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "OptionalActions", "type": "Type[OptionalActions]"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "args", "type": "Any"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "input_images", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "set_verbosity", "type": "Callable[[Any], None]"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "faces", "type": "scripts.fsmedia.Faces"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "read_alignments", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "load_model", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "load_converter", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "BackgroundGenerator", "type": "Type[lib.utils.BackgroundGenerator]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "iterator", "type": "Callable[[], Generator[Any, Any, None]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "finalize", "type": "Callable[[Any, Any, Any], Tuple[int, int]]"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "images_found", "type": "int"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "num_faces_detected", "type": "int"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "verify_output", "type": "bool"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "Extract", "type": "Type[scripts.extract.Extract]"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "extract", "type": "scripts.extract.Extract"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "process", "type": "Callable[[], None]"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "args", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "get_folder", "type": "Callable[[Any], pathlib.Path]"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 64, "col_offset": 51, "nodeName": "model_dir", "type": "pathlib.Path"}, {"lineNumber": 64, "col_offset": 62, "nodeName": "num_gpus", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "self", "type": "Convert"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "input_images", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "faces", "type": "Generator[Tuple[int, lib.faces_detect.DetectedFace], Any, None]"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "have_face", "type": "Callable[[Any], bool]"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "filename", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "have_alignments", "type": "bool"}, {"lineNumber": 112, "col_offset": 37, "nodeName": "item", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "skip", "type": "Optional[Union[str, bool]]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "filename", "type": "Any"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "image", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "idx", "type": "Any"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "face", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "check_skipface", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "filename", "type": "Any"}, {"lineNumber": 128, "col_offset": 46, "nodeName": "idx", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "image", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "rotate_image", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "image", "type": "Any"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "r", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "patch_image", "type": "Any"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "image", "type": "Any"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "face", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "rotate_image", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "image", "type": "Any"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "r", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "get_aligned_directory", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "get_frame_ranges", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "input_aligned_dir", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "frame_ranges", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "frame_ranges", "type": "Any"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "skipframe", "type": "bool"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "discard_frames", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "skipframe", "type": "str"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "faces_to_swap", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "stem", "type": "str"}, {"lineNumber": 200, "col_offset": 58, "nodeName": "face_idx", "type": "Any"}, {"lineNumber": 200, "col_offset": 68, "nodeName": "suffix", "type": "str"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "face_file", "type": "pathlib.Path"}, {"lineNumber": 202, "col_offset": 37, "nodeName": "faces_to_swap", "type": "Any"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "self", "type": "Convert"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "self", "type": "Convert"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "self", "type": "Convert"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "self", "type": "Convert"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "images", "type": "scripts.fsmedia.Images"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "Utils", "type": "Type[scripts.fsmedia.Utils]"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "have_alignments", "type": "Callable[[], bool]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "generate_alignments", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Convert"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "alignments", "type": "scripts.fsmedia.Alignments"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "self", "type": "Convert"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "self", "type": "Convert"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "prepare_images", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "batch", "type": "lib.utils.BackgroundGenerator"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "convert", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "converter", "type": "Any"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "item", "type": "nothing"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "Utils", "type": "Type[scripts.fsmedia.Utils]"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "images", "type": "scripts.fsmedia.Images"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "faces", "type": "scripts.fsmedia.Faces"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "faces", "type": "scripts.fsmedia.Faces"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "self", "type": "Convert"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "extract", "type": "scripts.extract.Extract"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "self", "type": "Convert"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "args", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "self", "type": "Convert"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "get_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "load", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "swap_model", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "exit", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "get_converter", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "conv", "type": "Any"}, {"lineNumber": 77, "col_offset": 53, "nodeName": "converter", "type": "Any"}, {"lineNumber": 78, "col_offset": 61, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 79, "col_offset": 63, "nodeName": "blur_size", "type": "Any"}, {"lineNumber": 80, "col_offset": 68, "nodeName": "seamless_clone", "type": "Any"}, {"lineNumber": 81, "col_offset": 67, "nodeName": "sharpen_image", "type": "Any"}, {"lineNumber": 82, "col_offset": 63, "nodeName": "mask_type", "type": "Any"}, {"lineNumber": 83, "col_offset": 73, "nodeName": "erosion_kernel_size", "type": "Any"}, {"lineNumber": 84, "col_offset": 69, "nodeName": "match_histogram", "type": "Any"}, {"lineNumber": 85, "col_offset": 65, "nodeName": "smooth_mask", "type": "Any"}, {"lineNumber": 86, "col_offset": 70, "nodeName": "avg_color_adjust", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "images", "type": "scripts.fsmedia.Images"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "cv2_read_write", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "filename", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "get_faces_alignments", "type": "Callable[[Any, Any], Generator[Tuple[int, lib.faces_detect.DetectedFace], Any, None]]"}, {"lineNumber": 96, "col_offset": 52, "nodeName": "filename", "type": "Any"}, {"lineNumber": 96, "col_offset": 62, "nodeName": "image", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "faces", "type": "Generator[Tuple[int, lib.faces_detect.DetectedFace], Any, None]"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "faces", "type": "scripts.fsmedia.Faces"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "filename", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "image", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "faces", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "check_skipframe", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "filename", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "skip", "type": "Optional[Union[bool, str]]"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "faces", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "skip", "type": "Optional[Union[bool, str]]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "filename", "type": "str"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "opts", "type": "OptionalActions"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "images", "type": "scripts.fsmedia.Images"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "face", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "converter", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "images", "type": "scripts.fsmedia.Images"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "face", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "re", "type": "module"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "faces_to_swap", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "frame_ranges", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "input_aligned_dir", "type": "Any"}, {"lineNumber": 201, "col_offset": 56, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 201, "col_offset": 61, "nodeName": "face_name", "type": "str"}, {"lineNumber": 202, "col_offset": 37, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "self", "type": "Convert"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "self", "type": "Convert"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "self", "type": "Convert"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "alignments", "type": "scripts.fsmedia.Alignments"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "Convert"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "self", "type": "Convert"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "self", "type": "Convert"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "Convert"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "self", "type": "Convert"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "self", "type": "Convert"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "self", "type": "Convert"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "self", "type": "Convert"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "PluginLoader", "type": "Type[plugins.PluginLoader.PluginLoader]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "PluginLoader", "type": "Type[plugins.PluginLoader.PluginLoader]"}, {"lineNumber": 77, "col_offset": 53, "nodeName": "model", "type": "Any"}, {"lineNumber": 78, "col_offset": 61, "nodeName": "args", "type": "Any"}, {"lineNumber": 79, "col_offset": 63, "nodeName": "args", "type": "Any"}, {"lineNumber": 80, "col_offset": 68, "nodeName": "args", "type": "Any"}, {"lineNumber": 81, "col_offset": 67, "nodeName": "args", "type": "Any"}, {"lineNumber": 82, "col_offset": 63, "nodeName": "args", "type": "Any"}, {"lineNumber": 83, "col_offset": 73, "nodeName": "args", "type": "Any"}, {"lineNumber": 84, "col_offset": 69, "nodeName": "args", "type": "Any"}, {"lineNumber": 85, "col_offset": 65, "nodeName": "args", "type": "Any"}, {"lineNumber": 86, "col_offset": 70, "nodeName": "args", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "self", "type": "Convert"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "check_alignments", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "filename", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "Utils", "type": "Type[scripts.fsmedia.Utils]"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "faces", "type": "scripts.fsmedia.Faces"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "filename", "type": "Any"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "image", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "faces", "type": "Generator[Tuple[int, lib.faces_detect.DetectedFace], Any, None]"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "self", "type": "Convert"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "opts", "type": "OptionalActions"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "idx", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "face", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "image", "type": "Any"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "cv2_read_write", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "filename", "type": "str"}, {"lineNumber": 120, "col_offset": 56, "nodeName": "image", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "self", "type": "Convert"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "self", "type": "Convert"}, {"lineNumber": 136, "col_offset": 57, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "self", "type": "Convert"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "isdir", "type": "Callable[[Union[bytes, str, _PathLike[Any]]], bool]"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "input_aligned_dir", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "faces_to_swap", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "args", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "findall", "type": "Callable[..., List[Any]]"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "filename", "type": "Any"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "map", "type": "Callable"}, {"lineNumber": 191, "col_offset": 63, "nodeName": "frame_ranges", "type": "Any"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 200, "col_offset": 42, "nodeName": "filename", "type": "Any"}, {"lineNumber": 200, "col_offset": 68, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 200, "col_offset": 73, "nodeName": "filename", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "face_idx", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "self", "type": "Convert"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "self", "type": "Convert"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "self", "type": "Convert"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "self", "type": "Convert"}, {"lineNumber": 106, "col_offset": 68, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 106, "col_offset": 85, "nodeName": "filename", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "self", "type": "Convert"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "convert_one_face", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "converter", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "output_dir", "type": "pathlib.Path"}, {"lineNumber": 119, "col_offset": 49, "nodeName": "name", "type": "str"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "Utils", "type": "Type[scripts.fsmedia.Utils]"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 122, "col_offset": 67, "nodeName": "filename", "type": "Any"}, {"lineNumber": 122, "col_offset": 77, "nodeName": "err", "type": "Exception"}, {"lineNumber": 136, "col_offset": 57, "nodeName": "args", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "path", "type": "Union[str, bytes]"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "path", "type": "Union[str, bytes]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "imageidxre", "type": "Pattern[str]"}, {"lineNumber": 191, "col_offset": 63, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 205, "col_offset": 43, "nodeName": "filename", "type": "Any"}, {"lineNumber": 106, "col_offset": 68, "nodeName": "path", "type": "module"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "self", "type": "Convert"}, {"lineNumber": 117, "col_offset": 62, "nodeName": "filename", "type": "Any"}, {"lineNumber": 117, "col_offset": 72, "nodeName": "image", "type": "Any"}, {"lineNumber": 117, "col_offset": 79, "nodeName": "idx", "type": "Any"}, {"lineNumber": 117, "col_offset": 84, "nodeName": "face", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "self", "type": "Convert"}, {"lineNumber": 136, "col_offset": 57, "nodeName": "self", "type": "Convert"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 166, "col_offset": 52, "nodeName": "get_image_paths", "type": "Callable[..., List[Union[bytes, str]]]"}, {"lineNumber": 166, "col_offset": 68, "nodeName": "input_aligned_dir", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "faces_to_swap", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 191, "col_offset": 50, "nodeName": "idx", "type": "int"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 106, "col_offset": 68, "nodeName": "os", "type": "module"}, {"lineNumber": 119, "col_offset": 49, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 119, "col_offset": 54, "nodeName": "filename", "type": "Any"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 169, "col_offset": 43, "nodeName": "input_images", "type": "Any"}, {"lineNumber": 182, "col_offset": 48, "nodeName": "q", "type": "Any"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "minmax", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 182, "col_offset": 72, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 182, "col_offset": 76, "nodeName": "q", "type": "Any"}, {"lineNumber": 191, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 191, "col_offset": 57, "nodeName": "b", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 169, "col_offset": 43, "nodeName": "self", "type": "OptionalActions"}, {"lineNumber": 182, "col_offset": 53, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 182, "col_offset": 42, "nodeName": "q", "type": "Any"}, {"lineNumber": 182, "col_offset": 53, "nodeName": "minmax", "type": "Dict[str, Union[float, int]]"}]