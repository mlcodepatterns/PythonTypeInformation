[{"lineNumber": 9, "col_offset": 11, "nodeName": "Masker", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "git_model_id", "type": "None"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "model_filename", "type": "None"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "input_size", "type": "int"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "vram", "type": "int"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "vram_per_batch", "type": "int"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "batchsize", "type": "int"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "r_jaw", "type": "Tuple[Any, Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "l_jaw", "type": "Tuple[Any, Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "r_cheek", "type": "Tuple[Any, Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "l_cheek", "type": "Tuple[Any, Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "nose_ridge", "type": "Tuple[Any, Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "nose", "type": "Tuple[Any, Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "parts", "type": "List[Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "parts", "type": "List[Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "Mask"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "Mask"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "Mask"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "Mask"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "Mask"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "debug", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "face", "type": "Any"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "parts", "type": "List[Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "item", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "parts", "type": "List[Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "r_jaw", "type": "Tuple[Any, Any]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "l_jaw", "type": "Tuple[Any, Any]"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "r_cheek", "type": "Tuple[Any, Any]"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "l_cheek", "type": "Tuple[Any, Any]"}, {"lineNumber": 62, "col_offset": 49, "nodeName": "nose_ridge", "type": "Tuple[Any, Any]"}, {"lineNumber": 62, "col_offset": 61, "nodeName": "r_eye", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 62, "col_offset": 68, "nodeName": "l_eye", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 62, "col_offset": 75, "nodeName": "nose", "type": "Tuple[Any, Any]"}, {"lineNumber": 14, "col_offset": 38, "nodeName": "git_model_id", "type": "None"}, {"lineNumber": 14, "col_offset": 67, "nodeName": "model_filename", "type": "None"}, {"lineNumber": 14, "col_offset": 85, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "logger", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "batchsize", "type": "int"}, {"lineNumber": 26, "col_offset": 50, "nodeName": "input_size", "type": "int"}, {"lineNumber": 26, "col_offset": 67, "nodeName": "input_size", "type": "int"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "batch", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "parse_parts", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "item", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "hull", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "landmarks", "type": "numpy.ndarray"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "self", "type": "Mask"}, {"lineNumber": 26, "col_offset": 50, "nodeName": "self", "type": "Mask"}, {"lineNumber": 26, "col_offset": 67, "nodeName": "self", "type": "Mask"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "self", "type": "Mask"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 46, "nodeName": "feed_landmarks", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "convexHull", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "item", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "fillConvexPoly", "type": "Any"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "mask", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "hull", "type": "Any"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 46, "nodeName": "face", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 37, "col_offset": 61, "nodeName": "LINE_AA", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "rint", "type": "Any"}, {"lineNumber": 37, "col_offset": 61, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 35, "col_offset": 46, "nodeName": "item", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "np", "type": "module"}]