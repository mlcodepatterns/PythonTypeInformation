[{"lineNumber": 10, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "Action", "type": "Type[argparse.Action]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "FaceSwapArgs", "type": "Type[FaceSwapArgs]"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "ExtractConvertArgs", "type": "Type[ExtractConvertArgs]"}, {"lineNumber": 220, "col_offset": 18, "nodeName": "ExtractConvertArgs", "type": "Type[ExtractConvertArgs]"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "FaceSwapArgs", "type": "Type[FaceSwapArgs]"}, {"lineNumber": 411, "col_offset": 14, "nodeName": "FaceSwapArgs", "type": "Type[FaceSwapArgs]"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "argparse", "type": "module"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "argparse", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "command", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "subparsers", "type": "Any"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "subparsers", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "script", "type": "Optional[Union[Type[scripts.gui.Gui], Type[scripts.convert.Convert], Type[scripts.train.Train], Type[scripts.extract.Extract]]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "script", "type": "Optional[Union[Type[scripts.gui.Gui], Type[scripts.convert.Convert], Type[scripts.train.Train], Type[scripts.extract.Extract]]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "args", "type": "Union[Tuple[Any], Tuple[Any, Any]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "process", "type": "Union[scripts.train.Train, scripts.convert.Convert, scripts.gui.Gui, scripts.extract.Extract]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "args", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str, str], Callable[[str], str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "optional_arguments", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "script", "type": "ScriptExecutor"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "argument_list", "type": "List[nothing]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "argument_list", "type": "List[nothing]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "argument_list", "type": "List[nothing]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "argument_list", "type": "List[nothing]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "parser", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "option", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str, str], Callable[[str], str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str, str], Callable[[str], str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "argument_list", "type": "List[Union[Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[str, Union[str, bool, Tuple[str, str]]]]"}, {"lineNumber": 423, "col_offset": 15, "nodeName": "argument_list", "type": "List[Dict[str, Union[str, bool, Tuple[str, str]]]]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "ScriptExecutor"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "lower", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "ScriptExecutor"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "command", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "import_script", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "script", "type": "Optional[Union[Type[scripts.train.Train], Type[scripts.convert.Convert], Type[scripts.gui.Gui], Type[scripts.extract.Extract]]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "process", "type": "Callable[[], None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "dest", "type": "str"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "print_help", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "prog", "type": "str"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "message", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "get_argument_list", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "get_optional_arguments", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "create_parser", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "subparser", "type": "Any"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "command", "type": "Any"}, {"lineNumber": 61, "col_offset": 61, "nodeName": "description", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "add_arguments", "type": "Callable[[], Any]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "ScriptExecutor", "type": "Type[ScriptExecutor]"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "command", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "subparsers", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "add_parser", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "command", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str, str], Callable[[str], str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "optional_arguments", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "command", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "self", "type": "ScriptExecutor"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "command", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "self", "type": "ScriptExecutor"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "command", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "arguments", "type": "Any"}, {"lineNumber": 36, "col_offset": 60, "nodeName": "arguments", "type": "Any"}, {"lineNumber": 36, "col_offset": 71, "nodeName": "subparsers", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "args", "type": "Union[Tuple[Any], Tuple[Any, Any]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "process", "type": "Union[scripts.convert.Convert, scripts.train.Train, scripts.extract.Extract, scripts.gui.Gui]"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "self", "type": "FullPaths"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "FullHelpArgumentParser"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "sys", "type": "module"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "self", "type": "FullHelpArgumentParser"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "FullHelpArgumentParser"}, {"lineNumber": 52, "col_offset": 56, "nodeName": "args", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "execute_script", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "subparser", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "description", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "description", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "option", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "key", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str, str], Callable[[str], str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "FullPaths", "type": "Type[FullPaths]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str, str], Callable[[str], str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "FullPaths", "type": "Type[FullPaths]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str, str], Callable[[str], str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str, str], Callable[[str], str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "lower", "type": "Callable[[str], str]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str, str], Callable[[str], str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str, str], Callable[[str], str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str, str], Callable[[str], str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str, str], Callable[[str], str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 157, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str, str], Callable[[str], str], Tuple[str]]], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 181, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 230, "col_offset": 40, "nodeName": "FullPaths", "type": "Type[FullPaths]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 236, "col_offset": 40, "nodeName": "FullPaths", "type": "Type[FullPaths]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 245, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 251, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 257, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 262, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 270, "col_offset": 38, "nodeName": "lower", "type": "Callable[[str], str]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 276, "col_offset": 38, "nodeName": "lower", "type": "Callable[[str], str]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 283, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 288, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[FullPaths], Tuple[str, str]]]], Dict[str, Any], Dict[str, Union[str, Tuple[str, str], Type[str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]], Dict[str, Union[str, List[str], Callable[[str], str], Tuple[str, str]]], Dict[str, Optional[Union[str, List[str], Callable[[str], str], Tuple[str, str]]]], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 334, "col_offset": 40, "nodeName": "FullPaths", "type": "Type[FullPaths]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 340, "col_offset": 40, "nodeName": "FullPaths", "type": "Type[FullPaths]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 346, "col_offset": 40, "nodeName": "FullPaths", "type": "Type[FullPaths]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 352, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 357, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 363, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 367, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 371, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Type[FullPaths], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Any], Dict[str, Union[str, bool, Tuple[str, str]]]]]"}, {"lineNumber": 408, "col_offset": 38, "nodeName": "SUPPRESS", "type": "str"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[str, Union[str, bool, Tuple[str, str]]]]"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "self", "type": "ScriptExecutor"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "command", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "self", "type": "ScriptExecutor"}, {"lineNumber": 36, "col_offset": 71, "nodeName": "self", "type": "ScriptExecutor"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "expanduser", "type": "Callable"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "values", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "script", "type": "ScriptExecutor"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "option", "type": "Any"}, {"lineNumber": 98, "col_offset": 43, "nodeName": "key", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 99, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 99, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "get_available_models", "type": "Callable[[], Tuple[str, ...]]"}, {"lineNumber": 248, "col_offset": 41, "nodeName": "get_default_model", "type": "Callable[[], Any]"}, {"lineNumber": 270, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 276, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 358, "col_offset": 41, "nodeName": "get_available_models", "type": "Callable[[], Tuple[str, ...]]"}, {"lineNumber": 359, "col_offset": 41, "nodeName": "get_default_model", "type": "Callable[[], Any]"}, {"lineNumber": 408, "col_offset": 38, "nodeName": "argparse", "type": "module"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "self", "type": "ScriptExecutor"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "command", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "script", "type": "None"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "os", "type": "module"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "key", "type": "Any"}, {"lineNumber": 98, "col_offset": 50, "nodeName": "keys", "type": "Any"}, {"lineNumber": 98, "col_offset": 67, "nodeName": "key", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "PluginLoader", "type": "Type[plugins.PluginLoader.PluginLoader]"}, {"lineNumber": 248, "col_offset": 41, "nodeName": "PluginLoader", "type": "Type[plugins.PluginLoader.PluginLoader]"}, {"lineNumber": 358, "col_offset": 41, "nodeName": "PluginLoader", "type": "Type[plugins.PluginLoader.PluginLoader]"}, {"lineNumber": 359, "col_offset": 41, "nodeName": "PluginLoader", "type": "Type[plugins.PluginLoader.PluginLoader]"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "self", "type": "ScriptExecutor"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 98, "col_offset": 50, "nodeName": "option", "type": "Any"}]