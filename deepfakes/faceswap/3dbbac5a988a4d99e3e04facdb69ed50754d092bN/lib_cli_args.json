[{"lineNumber": 20, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "_GPUS", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "cli_devices", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "error", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "HelpFormatter", "type": "Type[argparse.HelpFormatter]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "_split_lines", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "get_info", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "get_argument_list", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "get_optional_arguments", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "_get_global_arguments", "type": "Callable[[], Any]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "_create_parser", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "_add_arguments", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "_process_suppressions", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "FaceSwapArgs", "type": "Type[FaceSwapArgs]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "get_argument_list", "type": "Callable[[], Any]"}, {"lineNumber": 317, "col_offset": 18, "nodeName": "ExtractConvertArgs", "type": "Type[ExtractConvertArgs]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "get_info", "type": "Callable[[], Any]"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "get_optional_arguments", "type": "Callable[[], Any]"}, {"lineNumber": 569, "col_offset": 18, "nodeName": "ExtractConvertArgs", "type": "Type[ExtractConvertArgs]"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "get_info", "type": "Callable[[], Any]"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "get_optional_arguments", "type": "Callable[[], Any]"}, {"lineNumber": 825, "col_offset": 16, "nodeName": "FaceSwapArgs", "type": "Type[FaceSwapArgs]"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "get_info", "type": "Callable[[], Any]"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "get_argument_list", "type": "Callable[[], Any]"}, {"lineNumber": 1078, "col_offset": 14, "nodeName": "FaceSwapArgs", "type": "Type[FaceSwapArgs]"}, {"lineNumber": 1081, "col_offset": 4, "nodeName": "get_argument_list", "type": "Callable[[], Any]"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 20, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "argparse", "type": "module"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "argparse", "type": "module"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "GPUStats", "type": "Type[lib.gpu_stats.GPUStats]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "_whitespace_matcher_limited", "type": "Pattern[str]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "global_arguments", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "info", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "optional_arguments", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "script", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "argument_list", "type": "List[nothing]"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "argument_list", "type": "List[nothing]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "argument_list", "type": "List[nothing]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "argument_list", "type": "List[nothing]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "global_args", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "_GPUS", "type": "List[str]"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "global_args", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "parser", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "options", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "option", "type": "Dict[Any, Any]"}, {"lineNumber": 244, "col_offset": 22, "nodeName": "options", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "fs_backend", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "opt_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 822, "col_offset": 15, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 850, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 1075, "col_offset": 15, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 1090, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 1097, "col_offset": 15, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "print_help", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "prog", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "indent_increment", "type": "Any"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "max_help_position", "type": "Any"}, {"lineNumber": 44, "col_offset": 68, "nodeName": "width", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "SmartFormatter"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 45, "col_offset": 69, "nodeName": "ASCII", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "output", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "txt", "type": "str"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "output", "type": "List[str]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "_split_lines", "type": "Callable[[argparse.HelpFormatter, Union[str, unicode], int], List[Union[str, unicode]]]"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "self", "type": "SmartFormatter"}, {"lineNumber": 71, "col_offset": 57, "nodeName": "text", "type": "Any"}, {"lineNumber": 71, "col_offset": 63, "nodeName": "width", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "_get_global_arguments", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "get_info", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "get_argument_list", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "get_optional_arguments", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_process_suppressions", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "subparser", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "_create_parser", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "subparser", "type": "Any"}, {"lineNumber": 100, "col_offset": 53, "nodeName": "command", "type": "Any"}, {"lineNumber": 100, "col_offset": 62, "nodeName": "description", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "_add_arguments", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "ScriptExecutor", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "command", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "add_parser", "type": "Any"}, {"lineNumber": 233, "col_offset": 38, "nodeName": "command", "type": "Any"}, {"lineNumber": 243, "col_offset": 63, "nodeName": "optional_arguments", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "get_backend", "type": "Callable[[], Any]"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "global_arguments", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 255, "col_offset": 48, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 255, "col_offset": 68, "nodeName": "optional_arguments", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "opts", "type": "Dict[Any, Any]"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "opt_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "default_detector", "type": "str"}, {"lineNumber": 348, "col_offset": 31, "nodeName": "default_aligner", "type": "str"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "default_detector", "type": "str"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "default_aligner", "type": "str"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 735, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 816, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 850, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 851, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 860, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 871, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 880, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 891, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 928, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 941, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 954, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 982, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 993, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1004, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1014, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1031, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1039, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1047, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1066, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1091, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "FullHelpArgumentParser"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "sys", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "FullHelpArgumentParser"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 28, "col_offset": 46, "nodeName": "prog", "type": "Union[str, unicode]"}, {"lineNumber": 28, "col_offset": 57, "nodeName": "message", "type": "Any"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "re", "type": "module"}, {"lineNumber": 45, "col_offset": 69, "nodeName": "re", "type": "module"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "text", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "splitlines", "type": "Callable[..., List[str]]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "indent", "type": "str"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "HelpFormatter", "type": "Type[argparse.HelpFormatter]"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "execute_script", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "global_args", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "global_args", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "global_args", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "global_args", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "global_args", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "subparser", "type": "Any"}, {"lineNumber": 234, "col_offset": 43, "nodeName": "description", "type": "Any"}, {"lineNumber": 235, "col_offset": 50, "nodeName": "description", "type": "Any"}, {"lineNumber": 237, "col_offset": 54, "nodeName": "SmartFormatter", "type": "Type[SmartFormatter]"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "global_arguments", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 243, "col_offset": 42, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 243, "col_offset": 63, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "option", "type": "Dict[Any, Any]"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "key", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 255, "col_offset": 48, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 255, "col_offset": 68, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "opt_backend", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "get_backend", "type": "Callable[[], Any]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 354, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 381, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 413, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 430, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 440, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 451, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 464, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 477, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 490, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 502, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 513, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 528, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 535, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 544, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 552, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 559, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 601, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 611, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 619, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 644, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 672, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 690, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 701, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 710, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 722, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 735, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 735, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 748, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 761, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 776, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 783, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 790, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 801, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 809, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 816, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 816, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 851, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 851, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 860, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 860, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 871, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 871, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 880, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 880, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 891, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 891, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 902, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 928, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 928, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 941, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 941, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 954, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 954, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 961, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 971, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 982, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 982, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 993, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 993, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1004, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 1004, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1014, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 1014, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 1024, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1031, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 1031, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1039, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 1039, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1047, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 1047, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 1057, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1066, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 1066, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1091, "col_offset": 8, "nodeName": "argument_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 1091, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 28, "col_offset": 46, "nodeName": "self", "type": "FullHelpArgumentParser"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "text", "type": "str"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "indent", "type": "str"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "txt", "type": "str"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "argparse", "type": "module"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "script", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "global_args", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "FileFullPaths", "type": "Any"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "upper", "type": "Callable[[str], str]"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "SaveFileFullPaths", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "SUPPRESS", "type": "str"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "SUPPRESS", "type": "str"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 243, "col_offset": 42, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 246, "col_offset": 27, "nodeName": "option", "type": "Dict[Any, Any]"}, {"lineNumber": 246, "col_offset": 43, "nodeName": "key", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 247, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 247, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 260, "col_offset": 30, "nodeName": "opt_backend", "type": "Any"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "opt_backend", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "opt_backend", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "fs_backend", "type": "Any"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "opt_backend", "type": "List[Any]"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "SUPPRESS", "type": "str"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "DirOrFileFullPaths", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "DirFullPaths", "type": "Any"}, {"lineNumber": 307, "col_offset": 19, "nodeName": "FileFullPaths", "type": "Any"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "Radio", "type": "Any"}, {"lineNumber": 357, "col_offset": 17, "nodeName": "lower", "type": "Callable[[str], str]"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "default_detector", "type": "str"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "Radio", "type": "Any"}, {"lineNumber": 373, "col_offset": 17, "nodeName": "lower", "type": "Callable[[str], str]"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "default_aligner", "type": "str"}, {"lineNumber": 383, "col_offset": 19, "nodeName": "MultiOption", "type": "Any"}, {"lineNumber": 384, "col_offset": 17, "nodeName": "lower", "type": "Callable[[str], str]"}, {"lineNumber": 415, "col_offset": 19, "nodeName": "Radio", "type": "Any"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "lower", "type": "Callable[[str], str]"}, {"lineNumber": 432, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 442, "col_offset": 19, "nodeName": "Slider", "type": "Any"}, {"lineNumber": 445, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 453, "col_offset": 19, "nodeName": "FilesFullPaths", "type": "Any"}, {"lineNumber": 466, "col_offset": 19, "nodeName": "FilesFullPaths", "type": "Any"}, {"lineNumber": 479, "col_offset": 19, "nodeName": "Slider", "type": "Any"}, {"lineNumber": 482, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 492, "col_offset": 19, "nodeName": "Slider", "type": "Any"}, {"lineNumber": 495, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 504, "col_offset": 19, "nodeName": "Slider", "type": "Any"}, {"lineNumber": 507, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "Slider", "type": "Any"}, {"lineNumber": 518, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 603, "col_offset": 19, "nodeName": "FileFullPaths", "type": "Any"}, {"lineNumber": 605, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 613, "col_offset": 19, "nodeName": "DirFullPaths", "type": "Any"}, {"lineNumber": 621, "col_offset": 19, "nodeName": "Radio", "type": "Any"}, {"lineNumber": 622, "col_offset": 17, "nodeName": "lower", "type": "Callable[[str], str]"}, {"lineNumber": 646, "col_offset": 19, "nodeName": "Radio", "type": "Any"}, {"lineNumber": 647, "col_offset": 17, "nodeName": "lower", "type": "Callable[[str], str]"}, {"lineNumber": 674, "col_offset": 19, "nodeName": "Radio", "type": "Any"}, {"lineNumber": 675, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 692, "col_offset": 19, "nodeName": "Slider", "type": "Any"}, {"lineNumber": 695, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 703, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 712, "col_offset": 19, "nodeName": "DirFullPaths", "type": "Any"}, {"lineNumber": 724, "col_offset": 19, "nodeName": "FilesFullPaths", "type": "Any"}, {"lineNumber": 737, "col_offset": 19, "nodeName": "FilesFullPaths", "type": "Any"}, {"lineNumber": 750, "col_offset": 19, "nodeName": "Slider", "type": "Any"}, {"lineNumber": 753, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 763, "col_offset": 19, "nodeName": "Slider", "type": "Any"}, {"lineNumber": 766, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 785, "col_offset": 17, "nodeName": "lower", "type": "Callable[[str], str]"}, {"lineNumber": 853, "col_offset": 19, "nodeName": "DirFullPaths", "type": "Any"}, {"lineNumber": 862, "col_offset": 19, "nodeName": "FileFullPaths", "type": "Any"}, {"lineNumber": 864, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 873, "col_offset": 19, "nodeName": "DirFullPaths", "type": "Any"}, {"lineNumber": 882, "col_offset": 19, "nodeName": "FileFullPaths", "type": "Any"}, {"lineNumber": 884, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 893, "col_offset": 19, "nodeName": "DirFullPaths", "type": "Any"}, {"lineNumber": 904, "col_offset": 19, "nodeName": "Radio", "type": "Any"}, {"lineNumber": 905, "col_offset": 17, "nodeName": "lower", "type": "Callable[[str], str]"}, {"lineNumber": 930, "col_offset": 19, "nodeName": "Slider", "type": "Any"}, {"lineNumber": 933, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 943, "col_offset": 19, "nodeName": "Slider", "type": "Any"}, {"lineNumber": 946, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 963, "col_offset": 19, "nodeName": "Slider", "type": "Any"}, {"lineNumber": 966, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 973, "col_offset": 19, "nodeName": "Slider", "type": "Any"}, {"lineNumber": 976, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 984, "col_offset": 19, "nodeName": "DirFullPaths", "type": "Any"}, {"lineNumber": 995, "col_offset": 19, "nodeName": "DirFullPaths", "type": "Any"}, {"lineNumber": 1006, "col_offset": 19, "nodeName": "DirFullPaths", "type": "Any"}, {"lineNumber": 1016, "col_offset": 19, "nodeName": "Slider", "type": "Any"}, {"lineNumber": 1019, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "txt", "type": "str"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "output", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "wrap", "type": "Callable"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "txt", "type": "str"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "width", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "MultiOption", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "lower", "type": "Callable[[str], str]"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "argparse", "type": "module"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "argparse", "type": "module"}, {"lineNumber": 246, "col_offset": 34, "nodeName": "key", "type": "Any"}, {"lineNumber": 246, "col_offset": 50, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 246, "col_offset": 67, "nodeName": "key", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "self", "type": "ConvertArgs"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "opts", "type": "Dict[Any, Any]"}, {"lineNumber": 260, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 260, "col_offset": 50, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "opts", "type": "Dict[Any, Any]"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "argparse", "type": "module"}, {"lineNumber": 357, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "get_available_extractors", "type": "Callable[..., List[Any]]"}, {"lineNumber": 373, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "get_available_extractors", "type": "Callable[..., List[Any]]"}, {"lineNumber": 384, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 622, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 625, "col_offset": 20, "nodeName": "get_available_convert_plugins", "type": "Callable[..., List[Any]]"}, {"lineNumber": 647, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 677, "col_offset": 20, "nodeName": "get_available_convert_plugins", "type": "Callable[..., List[Any]]"}, {"lineNumber": 785, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 786, "col_offset": 20, "nodeName": "get_available_models", "type": "Callable[[], List[Any]]"}, {"lineNumber": 905, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 906, "col_offset": 20, "nodeName": "get_default_model", "type": "Callable[[], Any]"}, {"lineNumber": 907, "col_offset": 20, "nodeName": "get_available_models", "type": "Callable[[], List[Any]]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 62, "col_offset": 61, "nodeName": "text", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "txt", "type": "str"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 69, "col_offset": 74, "nodeName": "indent", "type": "str"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 246, "col_offset": 50, "nodeName": "option", "type": "Dict[Any, Any]"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "opts", "type": "Dict[Any, Any]"}, {"lineNumber": 261, "col_offset": 35, "nodeName": "lower", "type": "Any"}, {"lineNumber": 261, "col_offset": 55, "nodeName": "backend", "type": "Any"}, {"lineNumber": 261, "col_offset": 66, "nodeName": "opt_backend", "type": "Any"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "lower", "type": "Any"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "PluginLoader", "type": "Type[plugins.plugin_loader.PluginLoader]"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "PluginLoader", "type": "Type[plugins.plugin_loader.PluginLoader]"}, {"lineNumber": 386, "col_offset": 30, "nodeName": "mask", "type": "Any"}, {"lineNumber": 625, "col_offset": 20, "nodeName": "PluginLoader", "type": "Type[plugins.plugin_loader.PluginLoader]"}, {"lineNumber": 650, "col_offset": 20, "nodeName": "get_available_extractors", "type": "Callable[..., List[Any]]"}, {"lineNumber": 677, "col_offset": 20, "nodeName": "PluginLoader", "type": "Type[plugins.plugin_loader.PluginLoader]"}, {"lineNumber": 786, "col_offset": 20, "nodeName": "PluginLoader", "type": "Type[plugins.plugin_loader.PluginLoader]"}, {"lineNumber": 906, "col_offset": 20, "nodeName": "PluginLoader", "type": "Type[plugins.plugin_loader.PluginLoader]"}, {"lineNumber": 907, "col_offset": 20, "nodeName": "PluginLoader", "type": "Type[plugins.plugin_loader.PluginLoader]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "_whitespace_matcher_limited", "type": "Pattern[str]"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "idx", "type": "int"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "idx", "type": "int"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 176, "col_offset": 50, "nodeName": "_GPUS", "type": "List[str]"}, {"lineNumber": 261, "col_offset": 35, "nodeName": "backend", "type": "Any"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "opt_backend", "type": "Any"}, {"lineNumber": 386, "col_offset": 38, "nodeName": "get_available_extractors", "type": "Callable[..., List[Any]]"}, {"lineNumber": 387, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 650, "col_offset": 20, "nodeName": "PluginLoader", "type": "Type[plugins.plugin_loader.PluginLoader]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "self", "type": "SmartFormatter"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 386, "col_offset": 38, "nodeName": "PluginLoader", "type": "Type[plugins.plugin_loader.PluginLoader]"}, {"lineNumber": 171, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 171, "col_offset": 55, "nodeName": "_GPUS", "type": "List[str]"}]