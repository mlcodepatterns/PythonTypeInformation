[{"lineNumber": 762, "col_offset": 0, "nodeName": "bad_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "vid_ext", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "_video_extensions", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "audio_ext", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "img_ext", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "_image_extensions", "type": "List[str]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "_actions_req_fps", "type": "List[str]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "_actions_req_ref_video", "type": "List[str]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "_actions_can_use_ref_video", "type": "List[str]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "_actions_have_dir_output", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "_actions_have_print_output", "type": "List[str]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "_actions_have_dir_input", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "_common_ffmpeg_args", "type": "str"}, {"lineNumber": 767, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 770, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 771, "col_offset": 4, "nodeName": "subparser", "type": "argparse._SubParsersAction"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "arguments", "type": "argparse.Namespace"}, {"lineNumber": 21, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "path", "type": "None"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "path", "type": "None"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "name", "type": "None"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "name", "type": "None"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "type", "type": "None"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "item_type", "type": "None"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "ext", "type": "None"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "ext", "type": "None"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "fps", "type": "None"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "fps", "type": "None"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "dirname", "type": "None"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "optional_arguments", "type": "List[nothing]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "args", "type": "None"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "input", "type": "DataItem"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "output", "type": "DataItem"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "ref_vid", "type": "DataItem"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "start", "type": "str"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "end", "type": "str"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "duration", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "print_", "type": "bool"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "option", "type": "Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]"}, {"lineNumber": 387, "col_offset": 22, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "arguments", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "ref_vid", "type": "Optional[Any]"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "end", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "_input", "type": "Dict[Any, str]"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "_output_path", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "_output", "type": "Dict[Any, str]"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "ff", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "_input_path", "type": "str"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 538, "col_offset": 11, "nodeName": "mux_audio", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "_outputs", "type": "Dict[Any, str]"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "ff", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "ff", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "_fps", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "_fps", "type": "Any"}, {"lineNumber": 560, "col_offset": 11, "nodeName": "print_", "type": "bool"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "_inputs", "type": "Dict[Any, str]"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "ff", "type": "Any"}, {"lineNumber": 572, "col_offset": 11, "nodeName": "print_", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "_inputs", "type": "Dict[Any, str]"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "_outputs", "type": "Dict[Any, str]"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "ff", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "_bilinear", "type": "str"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "_inputs", "type": "Dict[Any, str]"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "_outputs", "type": "Dict[Any, str]"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "ff", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "_ref_vid_opts", "type": "None"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "_inputs", "type": "Dict[Any, Optional[str]]"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "_outputs", "type": "Dict[Any, str]"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "ff", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "_inputs", "type": "Dict[Any, str]"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "_output", "type": "Dict[Any, str]"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "ff", "type": "Any"}, {"lineNumber": 634, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "items_to_check", "type": "List[str]"}, {"lineNumber": 660, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 660, "col_offset": 17, "nodeName": "items", "type": "Any"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "start", "type": "List[int]"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "end", "type": "List[int]"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "start", "type": "datetime.timedelta"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "end", "type": "datetime.timedelta"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "delta", "type": "datetime.timedelta"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "s", "type": "float"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "file", "type": "Any"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "filename", "type": "Any"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "img_ext", "type": "Any"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "zero_pad", "type": "Any"}, {"lineNumber": 712, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "vid_ext", "type": "str"}, {"lineNumber": 715, "col_offset": 12, "nodeName": "ve", "type": "str"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "zero_pad", "type": "str"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "filename_list", "type": "List[Any]"}, {"lineNumber": 727, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "t", "type": "str"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "clean_txt", "type": "Any"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "hours", "type": "Any"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "minutes", "type": "Any"}, {"lineNumber": 758, "col_offset": 8, "nodeName": "seconds", "type": "Any"}, {"lineNumber": 763, "col_offset": 4, "nodeName": "print_help", "type": "Callable[..., None]"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "exit", "type": "Callable[..., None]"}, {"lineNumber": 768, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 770, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 771, "col_offset": 16, "nodeName": "add_subparsers", "type": "Callable[..., argparse._SubParsersAction]"}, {"lineNumber": 772, "col_offset": 11, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 773, "col_offset": 12, "nodeName": "subparser", "type": "argparse._SubParsersAction"}, {"lineNumber": 775, "col_offset": 4, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 776, "col_offset": 16, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 777, "col_offset": 19, "nodeName": "arguments", "type": "argparse.Namespace"}, {"lineNumber": 21, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 23, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "set_type_ext", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "path", "type": "None"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "set_dirname", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "path", "type": "None"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "set_name", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "name", "type": "None"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "path", "type": "None"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "path", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "path", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "path", "type": "None"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "item_ext", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "type", "type": "str"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "item_type", "type": "str"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "ext", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "item_ext", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "item_type", "type": "str"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "fps", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "FFRuntimeError", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "get_argument_list", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 137, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "DataItem", "type": "Type[DataItem]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "DataItem", "type": "Type[DataItem]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "DataItem", "type": "Type[DataItem]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "parse_arguments", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "description", "type": "str"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "subparser", "type": "argparse._SubParsersAction"}, {"lineNumber": 146, "col_offset": 53, "nodeName": "command", "type": "str"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "prep_filetypes", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "add_parser", "type": "Callable[..., argparse.ArgumentParser]"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "command", "type": "str"}, {"lineNumber": 387, "col_offset": 22, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "args", "type": "Tuple[str, str]"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], Any], Tuple[str, str, str, str, str, str, str, str], Tuple[str, str], Dict[str, str], List[str], Tuple[str, str, str, str, str], Dict[str, Optional[Tuple[Any, ...]]], Type[lib.cli.ComboFullPaths], Type[str], str, bool]]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 398, "col_offset": 27, "nodeName": "replace", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "DataItem", "type": "Type[DataItem]"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 404, "col_offset": 31, "nodeName": "_actions_have_dir_output", "type": "List[str]"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "output", "type": "DataItem"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "ref_vid", "type": "None"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 417, "col_offset": 23, "nodeName": "DataItem", "type": "Type[DataItem]"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 438, "col_offset": 31, "nodeName": "_actions_req_ref_video", "type": "List[str]"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 451, "col_offset": 21, "nodeName": "parse_time", "type": "Callable[[Any], Any]"}, {"lineNumber": 451, "col_offset": 37, "nodeName": "start", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 452, "col_offset": 19, "nodeName": "parse_time", "type": "Callable[[Any], Any]"}, {"lineNumber": 452, "col_offset": 35, "nodeName": "end", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "duration", "type": "str"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "duration", "type": "Any"}, {"lineNumber": 459, "col_offset": 11, "nodeName": "fps", "type": "Any"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "fps", "type": "str"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "transpose", "type": "None"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "transpose", "type": "Optional[Any]"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "degrees", "type": "None"}, {"lineNumber": 495, "col_offset": 29, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 495, "col_offset": 46, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 498, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 498, "col_offset": 31, "nodeName": "_actions_have_print_output", "type": "List[str]"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "print_", "type": "bool"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "process", "type": "Callable[[], Any]"}, {"lineNumber": 504, "col_offset": 28, "nodeName": "input", "type": "DataItem"}, {"lineNumber": 505, "col_offset": 28, "nodeName": "output", "type": "DataItem"}, {"lineNumber": 506, "col_offset": 29, "nodeName": "ref_vid", "type": "DataItem"}, {"lineNumber": 507, "col_offset": 25, "nodeName": "fps", "type": "Any"}, {"lineNumber": 508, "col_offset": 33, "nodeName": "extract_ext", "type": "Any"}, {"lineNumber": 509, "col_offset": 27, "nodeName": "start", "type": "str"}, {"lineNumber": 510, "col_offset": 30, "nodeName": "duration", "type": "str"}, {"lineNumber": 511, "col_offset": 31, "nodeName": "mux_audio", "type": "Any"}, {"lineNumber": 512, "col_offset": 29, "nodeName": "degrees", "type": "Any"}, {"lineNumber": 513, "col_offset": 31, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 514, "col_offset": 27, "nodeName": "scale", "type": "Any"}, {"lineNumber": 515, "col_offset": 28, "nodeName": "print_", "type": "bool"}, {"lineNumber": 516, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 516, "col_offset": 25, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 516, "col_offset": 31, "nodeName": "action", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 522, "col_offset": 22, "nodeName": "_common_ffmpeg_args", "type": "str"}, {"lineNumber": 523, "col_offset": 18, "nodeName": "path", "type": "Any"}, {"lineNumber": 523, "col_offset": 31, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 525, "col_offset": 67, "nodeName": "extract_ext", "type": "Any"}, {"lineNumber": 526, "col_offset": 19, "nodeName": "_output_path", "type": "Any"}, {"lineNumber": 526, "col_offset": 33, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 527, "col_offset": 13, "nodeName": "FFmpeg", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "path", "type": "Any"}, {"lineNumber": 529, "col_offset": 29, "nodeName": "ff", "type": "Any"}, {"lineNumber": 534, "col_offset": 52, "nodeName": "path", "type": "Any"}, {"lineNumber": 535, "col_offset": 22, "nodeName": "_common_ffmpeg_args", "type": "str"}, {"lineNumber": 536, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 536, "col_offset": 35, "nodeName": "path", "type": "Any"}, {"lineNumber": 536, "col_offset": 48, "nodeName": "filename", "type": "str"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "_ref_vid_opts", "type": "str"}, {"lineNumber": 540, "col_offset": 12, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "_inputs", "type": "Dict[Union[str, Any], Optional[str]]"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "_inputs", "type": "Dict[str, str]"}, {"lineNumber": 544, "col_offset": 20, "nodeName": "path", "type": "Any"}, {"lineNumber": 544, "col_offset": 33, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 545, "col_offset": 13, "nodeName": "FFmpeg", "type": "Any"}, {"lineNumber": 546, "col_offset": 29, "nodeName": "ff", "type": "Any"}, {"lineNumber": 553, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "_inputs", "type": "Dict[Any, str]"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "_inputs", "type": "Dict[Any, str]"}, {"lineNumber": 557, "col_offset": 13, "nodeName": "FFprobe", "type": "Any"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "decode", "type": "Any"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "strip", "type": "Any"}, {"lineNumber": 563, "col_offset": 19, "nodeName": "_fps", "type": "Any"}, {"lineNumber": 567, "col_offset": 22, "nodeName": "_common_ffmpeg_args", "type": "str"}, {"lineNumber": 568, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 568, "col_offset": 32, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 569, "col_offset": 13, "nodeName": "FFprobe", "type": "Any"}, {"lineNumber": 575, "col_offset": 19, "nodeName": "out", "type": "Any"}, {"lineNumber": 579, "col_offset": 22, "nodeName": "_common_ffmpeg_args", "type": "str"}, {"lineNumber": 581, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 581, "col_offset": 32, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 582, "col_offset": 20, "nodeName": "path", "type": "Any"}, {"lineNumber": 582, "col_offset": 33, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 583, "col_offset": 13, "nodeName": "FFmpeg", "type": "Any"}, {"lineNumber": 584, "col_offset": 29, "nodeName": "ff", "type": "Any"}, {"lineNumber": 594, "col_offset": 22, "nodeName": "_common_ffmpeg_args", "type": "str"}, {"lineNumber": 597, "col_offset": 11, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 598, "col_offset": 12, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 605, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 605, "col_offset": 32, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 606, "col_offset": 20, "nodeName": "path", "type": "Any"}, {"lineNumber": 606, "col_offset": 33, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 607, "col_offset": 13, "nodeName": "FFmpeg", "type": "Any"}, {"lineNumber": 608, "col_offset": 29, "nodeName": "ff", "type": "Any"}, {"lineNumber": 612, "col_offset": 22, "nodeName": "_common_ffmpeg_args", "type": "str"}, {"lineNumber": 615, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 615, "col_offset": 45, "nodeName": "path", "type": "Any"}, {"lineNumber": 615, "col_offset": 32, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 615, "col_offset": 59, "nodeName": "_ref_vid_opts", "type": "None"}, {"lineNumber": 616, "col_offset": 20, "nodeName": "path", "type": "Any"}, {"lineNumber": 616, "col_offset": 33, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 617, "col_offset": 13, "nodeName": "FFmpeg", "type": "Any"}, {"lineNumber": 618, "col_offset": 29, "nodeName": "ff", "type": "Any"}, {"lineNumber": 622, "col_offset": 22, "nodeName": "_common_ffmpeg_args", "type": "str"}, {"lineNumber": 623, "col_offset": 32, "nodeName": "start", "type": "Any"}, {"lineNumber": 626, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 626, "col_offset": 32, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 627, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 627, "col_offset": 32, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 628, "col_offset": 13, "nodeName": "FFmpeg", "type": "Any"}, {"lineNumber": 629, "col_offset": 29, "nodeName": "ff", "type": "Any"}, {"lineNumber": 635, "col_offset": 12, "nodeName": "_common_ffmpeg_args", "type": "str"}, {"lineNumber": 636, "col_offset": 13, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 644, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 656, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 659, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 668, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 674, "col_offset": 15, "nodeName": "FFRuntimeError", "type": "Any"}, {"lineNumber": 681, "col_offset": 15, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 686, "col_offset": 18, "nodeName": "fps", "type": "Union[str, Any]"}, {"lineNumber": 687, "col_offset": 12, "nodeName": "_fps", "type": "Union[List[str], Any]"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "timedelta", "type": "Type[datetime.timedelta]"}, {"lineNumber": 697, "col_offset": 14, "nodeName": "timedelta", "type": "Type[datetime.timedelta]"}, {"lineNumber": 698, "col_offset": 16, "nodeName": "end", "type": "datetime.timedelta"}, {"lineNumber": 698, "col_offset": 22, "nodeName": "start", "type": "datetime.timedelta"}, {"lineNumber": 699, "col_offset": 12, "nodeName": "total_seconds", "type": "Callable[[], float]"}, {"lineNumber": 700, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 705, "col_offset": 20, "nodeName": "listdir", "type": "Callable"}, {"lineNumber": 705, "col_offset": 31, "nodeName": "path", "type": "Any"}, {"lineNumber": 709, "col_offset": 19, "nodeName": "split", "type": "Any"}, {"lineNumber": 710, "col_offset": 18, "nodeName": "filename", "type": "Any"}, {"lineNumber": 711, "col_offset": 19, "nodeName": "filename", "type": "Any"}, {"lineNumber": 712, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 721, "col_offset": 19, "nodeName": "zfill", "type": "Callable[[int], str]"}, {"lineNumber": 722, "col_offset": 25, "nodeName": "name", "type": "str"}, {"lineNumber": 722, "col_offset": 64, "nodeName": "img_ext", "type": "Any"}, {"lineNumber": 723, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 723, "col_offset": 24, "nodeName": "filename_list", "type": "List[Any]"}, {"lineNumber": 734, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 736, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 740, "col_offset": 15, "nodeName": "opts", "type": "List[str]"}, {"lineNumber": 744, "col_offset": 14, "nodeName": "replace", "type": "Any"}, {"lineNumber": 745, "col_offset": 15, "nodeName": "isdigit", "type": "Any"}, {"lineNumber": 749, "col_offset": 12, "nodeName": "replace", "type": "Any"}, {"lineNumber": 750, "col_offset": 12, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 755, "col_offset": 20, "nodeName": "replace", "type": "Any"}, {"lineNumber": 756, "col_offset": 16, "nodeName": "clean_txt", "type": "Any"}, {"lineNumber": 757, "col_offset": 18, "nodeName": "clean_txt", "type": "Any"}, {"lineNumber": 758, "col_offset": 18, "nodeName": "clean_txt", "type": "Any"}, {"lineNumber": 759, "col_offset": 45, "nodeName": "seconds", "type": "Any"}, {"lineNumber": 763, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 770, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 771, "col_offset": 16, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 775, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 775, "col_offset": 29, "nodeName": "bad_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 776, "col_offset": 16, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "arguments", "type": "argparse.Namespace"}, {"lineNumber": 23, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "sys", "type": "module"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "is_type", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "fps", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "set_fps", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "name", "type": "None"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "path", "type": "None"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "path", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "item_ext", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "vid_ext", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "item_type", "type": "str"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "path", "type": "None"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "path", "type": "None"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "path", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "type", "type": "Union[Any, str]"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "item_type", "type": "str"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "get_fps", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "path", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "fps", "type": "None"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "FileFullPaths", "type": "Type[lib.cli.FileFullPaths]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "ComboFullPaths", "type": "Type[lib.cli.ComboFullPaths]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "ComboFullPaths", "type": "Type[lib.cli.ComboFullPaths]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 233, "col_offset": 41, "nodeName": "ComboFullPaths", "type": "Type[lib.cli.ComboFullPaths]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 271, "col_offset": 42, "nodeName": "img_ext", "type": "List[str]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 282, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 293, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 304, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 345, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 352, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "arguments_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]]"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "subparser", "type": "argparse._SubParsersAction"}, {"lineNumber": 382, "col_offset": 28, "nodeName": "description", "type": "str"}, {"lineNumber": 388, "col_offset": 19, "nodeName": "option", "type": "Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]"}, {"lineNumber": 389, "col_offset": 22, "nodeName": "key", "type": "str"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 392, "col_offset": 33, "nodeName": "process_arguments", "type": "Callable[[Any], Any]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 398, "col_offset": 27, "nodeName": "action", "type": "Any"}, {"lineNumber": 401, "col_offset": 35, "nodeName": "input", "type": "DataItem"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 404, "col_offset": 31, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "DataItem", "type": "Type[DataItem]"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 406, "col_offset": 33, "nodeName": "_actions_have_vid_output", "type": "List[str]"}, {"lineNumber": 413, "col_offset": 50, "nodeName": "ref_vid", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 417, "col_offset": 37, "nodeName": "ref_vid", "type": "DataItem"}, {"lineNumber": 420, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "_actions_have_dir_input", "type": "List[str]"}, {"lineNumber": 421, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 424, "col_offset": 31, "nodeName": "_actions_have_vid_input", "type": "List[str]"}, {"lineNumber": 425, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 428, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 428, "col_offset": 31, "nodeName": "_actions_have_dir_output", "type": "List[str]"}, {"lineNumber": 429, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 432, "col_offset": 31, "nodeName": "_actions_have_vid_output", "type": "List[str]"}, {"lineNumber": 433, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 438, "col_offset": 31, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 439, "col_offset": 15, "nodeName": "is_type", "type": "Callable[..., Any]"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 444, "col_offset": 33, "nodeName": "_actions_can_use_ref_video", "type": "List[str]"}, {"lineNumber": 451, "col_offset": 21, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 451, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 452, "col_offset": 19, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 452, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 453, "col_offset": 40, "nodeName": "end", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 454, "col_offset": 48, "nodeName": "start", "type": "Any"}, {"lineNumber": 454, "col_offset": 60, "nodeName": "end", "type": "Any"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 456, "col_offset": 28, "nodeName": "parse_time", "type": "Callable[[Any], Any]"}, {"lineNumber": 459, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 460, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 463, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 463, "col_offset": 31, "nodeName": "_actions_req_fps", "type": "List[str]"}, {"lineNumber": 466, "col_offset": 16, "nodeName": "_error_str", "type": "str"}, {"lineNumber": 467, "col_offset": 16, "nodeName": "_error_str", "type": "str"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "_error_str", "type": "str"}, {"lineNumber": 478, "col_offset": 11, "nodeName": "lower", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 481, "col_offset": 34, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 484, "col_offset": 50, "nodeName": "degrees", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 486, "col_offset": 13, "nodeName": "transpose", "type": "Optional[Any]"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 495, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 495, "col_offset": 46, "nodeName": "args", "type": "Any"}, {"lineNumber": 498, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 498, "col_offset": 31, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 504, "col_offset": 28, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 505, "col_offset": 28, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 506, "col_offset": 29, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 507, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 508, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 509, "col_offset": 27, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 510, "col_offset": 30, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 511, "col_offset": 31, "nodeName": "args", "type": "Any"}, {"lineNumber": 512, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 513, "col_offset": 31, "nodeName": "args", "type": "Any"}, {"lineNumber": 514, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 515, "col_offset": 28, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 516, "col_offset": 31, "nodeName": "args", "type": "Any"}, {"lineNumber": 517, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 522, "col_offset": 22, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 523, "col_offset": 18, "nodeName": "input_", "type": "Any"}, {"lineNumber": 527, "col_offset": 27, "nodeName": "_input", "type": "Dict[Any, str]"}, {"lineNumber": 527, "col_offset": 43, "nodeName": "_output", "type": "Dict[Any, str]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 534, "col_offset": 19, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 534, "col_offset": 52, "nodeName": "input_", "type": "Any"}, {"lineNumber": 535, "col_offset": 22, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 536, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 536, "col_offset": 35, "nodeName": "input_", "type": "Any"}, {"lineNumber": 540, "col_offset": 49, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 541, "col_offset": 23, "nodeName": "_input_path", "type": "str"}, {"lineNumber": 541, "col_offset": 49, "nodeName": "path", "type": "Any"}, {"lineNumber": 541, "col_offset": 36, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 543, "col_offset": 23, "nodeName": "_input_path", "type": "str"}, {"lineNumber": 543, "col_offset": 36, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 544, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 545, "col_offset": 27, "nodeName": "_inputs", "type": "Union[Dict[str, str], Dict[Union[str, Any], Optional[str]]]"}, {"lineNumber": 545, "col_offset": 44, "nodeName": "_outputs", "type": "Dict[Any, str]"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 553, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "input_", "type": "Any"}, {"lineNumber": 554, "col_offset": 23, "nodeName": "input_", "type": "Any"}, {"lineNumber": 554, "col_offset": 31, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 556, "col_offset": 23, "nodeName": "path", "type": "Any"}, {"lineNumber": 556, "col_offset": 36, "nodeName": "_input_opts", "type": "str"}, {"lineNumber": 557, "col_offset": 28, "nodeName": "_inputs", "type": "Dict[Any, str]"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "_fps", "type": "Any"}, {"lineNumber": 561, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 561, "col_offset": 32, "nodeName": "_fps", "type": "Any"}, {"lineNumber": 567, "col_offset": 22, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 568, "col_offset": 19, "nodeName": "input_", "type": "Any"}, {"lineNumber": 569, "col_offset": 28, "nodeName": "_inputs", "type": "Dict[Any, str]"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 573, "col_offset": 18, "nodeName": "out", "type": "Any"}, {"lineNumber": 579, "col_offset": 22, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 581, "col_offset": 19, "nodeName": "input_", "type": "Any"}, {"lineNumber": 582, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 583, "col_offset": 27, "nodeName": "_inputs", "type": "Dict[Any, str]"}, {"lineNumber": 583, "col_offset": 44, "nodeName": "_outputs", "type": "Dict[Any, str]"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 589, "col_offset": 11, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 589, "col_offset": 33, "nodeName": "degrees", "type": "Any"}, {"lineNumber": 590, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 594, "col_offset": 22, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 602, "col_offset": 12, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 603, "col_offset": 12, "nodeName": "_output_opts", "type": "str"}, {"lineNumber": 605, "col_offset": 19, "nodeName": "input_", "type": "Any"}, {"lineNumber": 606, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 607, "col_offset": 27, "nodeName": "_inputs", "type": "Dict[Any, str]"}, {"lineNumber": 607, "col_offset": 44, "nodeName": "_outputs", "type": "Dict[Any, str]"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 612, "col_offset": 22, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 615, "col_offset": 19, "nodeName": "input_", "type": "Any"}, {"lineNumber": 615, "col_offset": 45, "nodeName": "ref_vid", "type": "Any"}, {"lineNumber": 616, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 617, "col_offset": 27, "nodeName": "_inputs", "type": "Dict[Any, Optional[str]]"}, {"lineNumber": 617, "col_offset": 44, "nodeName": "_outputs", "type": "Dict[Any, str]"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 622, "col_offset": 22, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 624, "col_offset": 34, "nodeName": "duration", "type": "Any"}, {"lineNumber": 626, "col_offset": 19, "nodeName": "input_", "type": "Any"}, {"lineNumber": 627, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 628, "col_offset": 27, "nodeName": "_inputs", "type": "Dict[Any, str]"}, {"lineNumber": 628, "col_offset": 44, "nodeName": "_output", "type": "Dict[Any, str]"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 635, "col_offset": 12, "nodeName": "cls", "type": "Type[Effmpeg]"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "_common_ffmpeg_args", "type": "str"}, {"lineNumber": 639, "col_offset": 12, "nodeName": "_common_ffmpeg_args", "type": "str"}, {"lineNumber": 644, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 645, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 645, "col_offset": 35, "nodeName": "_actions_have_dir_output", "type": "List[str]"}, {"lineNumber": 656, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 661, "col_offset": 15, "nodeName": "i", "type": "Any"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 687, "col_offset": 19, "nodeName": "split", "type": "Union[Callable[..., List[str]], Any]"}, {"lineNumber": 690, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 690, "col_offset": 25, "nodeName": "fps", "type": "Union[str, Any]"}, {"lineNumber": 694, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 694, "col_offset": 21, "nodeName": "i", "type": "Any"}, {"lineNumber": 694, "col_offset": 28, "nodeName": "i", "type": "Any"}, {"lineNumber": 695, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 695, "col_offset": 19, "nodeName": "i", "type": "Any"}, {"lineNumber": 695, "col_offset": 26, "nodeName": "i", "type": "Any"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "datetime", "type": "module"}, {"lineNumber": 697, "col_offset": 14, "nodeName": "datetime", "type": "module"}, {"lineNumber": 699, "col_offset": 12, "nodeName": "delta", "type": "datetime.timedelta"}, {"lineNumber": 700, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 700, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 700, "col_offset": 79, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 705, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 706, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 707, "col_offset": 16, "nodeName": "filename", "type": "Any"}, {"lineNumber": 707, "col_offset": 27, "nodeName": "file", "type": "Any"}, {"lineNumber": 709, "col_offset": 19, "nodeName": "filename", "type": "Any"}, {"lineNumber": 712, "col_offset": 24, "nodeName": "filename", "type": "Any"}, {"lineNumber": 715, "col_offset": 19, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 715, "col_offset": 43, "nodeName": "ve", "type": "str"}, {"lineNumber": 715, "col_offset": 49, "nodeName": "vid_ext", "type": "List[str]"}, {"lineNumber": 716, "col_offset": 15, "nodeName": "ve", "type": "str"}, {"lineNumber": 716, "col_offset": 21, "nodeName": "zero_pad", "type": "Any"}, {"lineNumber": 717, "col_offset": 16, "nodeName": "vid_ext", "type": "str"}, {"lineNumber": 717, "col_offset": 26, "nodeName": "ve", "type": "str"}, {"lineNumber": 718, "col_offset": 16, "nodeName": "zero_pad", "type": "int"}, {"lineNumber": 733, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 733, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 734, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 734, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 736, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 740, "col_offset": 20, "nodeName": "index", "type": "int"}, {"lineNumber": 744, "col_offset": 14, "nodeName": "value", "type": "Any"}, {"lineNumber": 745, "col_offset": 15, "nodeName": "val", "type": "Any"}, {"lineNumber": 749, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 750, "col_offset": 12, "nodeName": "time", "type": "str"}, {"lineNumber": 751, "col_offset": 15, "nodeName": "zfill", "type": "Any"}, {"lineNumber": 751, "col_offset": 29, "nodeName": "zfill", "type": "Callable[[int], str]"}, {"lineNumber": 755, "col_offset": 20, "nodeName": "txt", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "name", "type": "None"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "path", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "name", "type": "None"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "path", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "DataItem", "type": "Type[DataItem]"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "item_ext", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "audio_ext", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "item_type", "type": "str"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "item_type", "type": "str"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "path", "type": "None"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "path", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "path", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "dirname", "type": "None"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "type", "type": "Union[Any, str]"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "item_type", "type": "str"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 151, "col_offset": 50, "nodeName": "vid_ext", "type": "List[str]"}, {"lineNumber": 184, "col_offset": 46, "nodeName": "vid_files", "type": "Tuple[Any, ...]"}, {"lineNumber": 186, "col_offset": 46, "nodeName": "vid_files", "type": "Tuple[Any, ...]"}, {"lineNumber": 187, "col_offset": 47, "nodeName": "vid_files", "type": "Tuple[Any, ...]"}, {"lineNumber": 188, "col_offset": 48, "nodeName": "vid_files", "type": "Tuple[Any, ...]"}, {"lineNumber": 189, "col_offset": 46, "nodeName": "vid_files", "type": "Tuple[Any, ...]"}, {"lineNumber": 190, "col_offset": 45, "nodeName": "vid_files", "type": "Tuple[Any, ...]"}, {"lineNumber": 191, "col_offset": 44, "nodeName": "vid_files", "type": "Tuple[Any, ...]"}, {"lineNumber": 223, "col_offset": 46, "nodeName": "vid_files", "type": "Tuple[Any, ...]"}, {"lineNumber": 226, "col_offset": 48, "nodeName": "vid_files", "type": "Tuple[Any, ...]"}, {"lineNumber": 227, "col_offset": 46, "nodeName": "vid_files", "type": "Tuple[Any, ...]"}, {"lineNumber": 228, "col_offset": 45, "nodeName": "vid_files", "type": "Tuple[Any, ...]"}, {"lineNumber": 229, "col_offset": 44, "nodeName": "vid_files", "type": "Tuple[Any, ...]"}, {"lineNumber": 251, "col_offset": 46, "nodeName": "vid_files", "type": "Tuple[Any, ...]"}, {"lineNumber": 254, "col_offset": 48, "nodeName": "vid_files", "type": "Tuple[Any, ...]"}, {"lineNumber": 271, "col_offset": 42, "nodeName": "DataItem", "type": "Type[DataItem]"}, {"lineNumber": 389, "col_offset": 27, "nodeName": "option", "type": "Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]"}, {"lineNumber": 389, "col_offset": 43, "nodeName": "key", "type": "str"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 390, "col_offset": 33, "nodeName": "args", "type": "Tuple[str, str]"}, {"lineNumber": 390, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], Any], Tuple[str, str, str, str, str, str, str, str], Tuple[str, str], Dict[str, str], List[str], Tuple[str, str, str, str, str], Dict[str, Optional[Tuple[Any, ...]]], Type[lib.cli.ComboFullPaths], Type[str], str, bool]]"}, {"lineNumber": 392, "col_offset": 33, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 398, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 401, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "args", "type": "Any"}, {"lineNumber": 406, "col_offset": 33, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "output", "type": "DataItem"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "lower", "type": "Any"}, {"lineNumber": 413, "col_offset": 50, "nodeName": "args", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 417, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 420, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 420, "col_offset": 68, "nodeName": "is_type", "type": "Callable[..., Any]"}, {"lineNumber": 421, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 423, "col_offset": 41, "nodeName": "path", "type": "Any"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 424, "col_offset": 31, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 424, "col_offset": 68, "nodeName": "is_type", "type": "Callable[..., Any]"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 427, "col_offset": 41, "nodeName": "path", "type": "Any"}, {"lineNumber": 428, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 428, "col_offset": 31, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 428, "col_offset": 69, "nodeName": "is_type", "type": "Callable[..., Any]"}, {"lineNumber": 429, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 431, "col_offset": 41, "nodeName": "path", "type": "Any"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 432, "col_offset": 31, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 432, "col_offset": 69, "nodeName": "is_type", "type": "Callable[..., Any]"}, {"lineNumber": 433, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 435, "col_offset": 41, "nodeName": "path", "type": "Any"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 439, "col_offset": 15, "nodeName": "ref_vid", "type": "DataItem"}, {"lineNumber": 440, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "args", "type": "Any"}, {"lineNumber": 444, "col_offset": 33, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "is_type", "type": "Callable[..., Any]"}, {"lineNumber": 451, "col_offset": 37, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 452, "col_offset": 35, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 453, "col_offset": 40, "nodeName": "args", "type": "Any"}, {"lineNumber": 454, "col_offset": 28, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 454, "col_offset": 48, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 454, "col_offset": 60, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 456, "col_offset": 28, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 456, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 456, "col_offset": 48, "nodeName": "duration", "type": "str"}, {"lineNumber": 459, "col_offset": 11, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 463, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 463, "col_offset": 31, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 464, "col_offset": 39, "nodeName": "fps", "type": "Union[Any, str]"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 468, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 468, "col_offset": 45, "nodeName": "action", "type": "Any"}, {"lineNumber": 469, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 469, "col_offset": 33, "nodeName": "_error_str", "type": "str"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "fps", "type": "Any"}, {"lineNumber": 471, "col_offset": 32, "nodeName": "fps", "type": "Any"}, {"lineNumber": 478, "col_offset": 11, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 481, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "lower", "type": "Any"}, {"lineNumber": 484, "col_offset": 50, "nodeName": "args", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 486, "col_offset": 13, "nodeName": "args", "type": "Any"}, {"lineNumber": 489, "col_offset": 19, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 495, "col_offset": 29, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 495, "col_offset": 46, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 498, "col_offset": 11, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 507, "col_offset": 25, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 508, "col_offset": 33, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 511, "col_offset": 31, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 512, "col_offset": 29, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 513, "col_offset": 31, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 514, "col_offset": 27, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 516, "col_offset": 31, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 524, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 524, "col_offset": 44, "nodeName": "fps", "type": "Any"}, {"lineNumber": 525, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 536, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 537, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 537, "col_offset": 57, "nodeName": "fps", "type": "Any"}, {"lineNumber": 540, "col_offset": 27, "nodeName": "_ref_vid_opts", "type": "str"}, {"lineNumber": 541, "col_offset": 49, "nodeName": "ref_vid", "type": "Any"}, {"lineNumber": 556, "col_offset": 23, "nodeName": "input_", "type": "Any"}, {"lineNumber": 580, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 580, "col_offset": 46, "nodeName": "scale", "type": "Any"}, {"lineNumber": 590, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 592, "col_offset": 41, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 592, "col_offset": 52, "nodeName": "degrees", "type": "Any"}, {"lineNumber": 599, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 599, "col_offset": 17, "nodeName": "degrees", "type": "Any"}, {"lineNumber": 601, "col_offset": 16, "nodeName": "_bilinear", "type": "str"}, {"lineNumber": 603, "col_offset": 28, "nodeName": "_bilinear", "type": "str"}, {"lineNumber": 635, "col_offset": 38, "nodeName": "cls", "type": "Type[Effmpeg]"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "cls", "type": "Type[Effmpeg]"}, {"lineNumber": 639, "col_offset": 12, "nodeName": "cls", "type": "Type[Effmpeg]"}, {"lineNumber": 644, "col_offset": 11, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 645, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 645, "col_offset": 35, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 646, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 646, "col_offset": 36, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 647, "col_offset": 17, "nodeName": "action", "type": "Any"}, {"lineNumber": 647, "col_offset": 37, "nodeName": "_actions_have_vid_output", "type": "List[str]"}, {"lineNumber": 656, "col_offset": 19, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 662, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 663, "col_offset": 17, "nodeName": "i", "type": "Any"}, {"lineNumber": 668, "col_offset": 19, "nodeName": "fps", "type": "Any"}, {"lineNumber": 668, "col_offset": 52, "nodeName": "i", "type": "str"}, {"lineNumber": 668, "col_offset": 57, "nodeName": "items_to_check", "type": "List[str]"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "ff", "type": "Any"}, {"lineNumber": 673, "col_offset": 26, "nodeName": "STDOUT", "type": "int"}, {"lineNumber": 676, "col_offset": 15, "nodeName": "exit_code", "type": "Any"}, {"lineNumber": 687, "col_offset": 19, "nodeName": "fps", "type": "Union[str, Any]"}, {"lineNumber": 688, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 688, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 694, "col_offset": 33, "nodeName": "split", "type": "Any"}, {"lineNumber": 695, "col_offset": 31, "nodeName": "split", "type": "Any"}, {"lineNumber": 696, "col_offset": 41, "nodeName": "start", "type": "List[int]"}, {"lineNumber": 696, "col_offset": 59, "nodeName": "start", "type": "List[int]"}, {"lineNumber": 696, "col_offset": 77, "nodeName": "start", "type": "List[int]"}, {"lineNumber": 697, "col_offset": 39, "nodeName": "end", "type": "List[int]"}, {"lineNumber": 697, "col_offset": 55, "nodeName": "end", "type": "List[int]"}, {"lineNumber": 697, "col_offset": 71, "nodeName": "end", "type": "List[int]"}, {"lineNumber": 700, "col_offset": 46, "nodeName": "s", "type": "float"}, {"lineNumber": 700, "col_offset": 83, "nodeName": "s", "type": "float"}, {"lineNumber": 715, "col_offset": 19, "nodeName": "ve", "type": "str"}, {"lineNumber": 715, "col_offset": 49, "nodeName": "DataItem", "type": "Type[DataItem]"}, {"lineNumber": 718, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 721, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 721, "col_offset": 23, "nodeName": "zero_pad", "type": "Any"}, {"lineNumber": 722, "col_offset": 48, "nodeName": "zero_pad", "type": "str"}, {"lineNumber": 737, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 738, "col_offset": 20, "nodeName": "index", "type": "int"}, {"lineNumber": 738, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 751, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 751, "col_offset": 29, "nodeName": "t", "type": "str"}, {"lineNumber": 759, "col_offset": 29, "nodeName": "minutes", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "name", "type": "None"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "path", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "DataItem", "type": "Type[DataItem]"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "path", "type": "None"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "path", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "path", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "type", "type": "None"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "item_type", "type": "Any"}, {"lineNumber": 151, "col_offset": 50, "nodeName": "DataItem", "type": "Type[DataItem]"}, {"lineNumber": 334, "col_offset": 75, "nodeName": "v", "type": "Any"}, {"lineNumber": 389, "col_offset": 34, "nodeName": "key", "type": "str"}, {"lineNumber": 389, "col_offset": 50, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 389, "col_offset": 67, "nodeName": "key", "type": "str"}, {"lineNumber": 398, "col_offset": 27, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 401, "col_offset": 35, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 407, "col_offset": 37, "nodeName": "fps", "type": "Any"}, {"lineNumber": 408, "col_offset": 16, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 408, "col_offset": 30, "nodeName": "DataItem", "type": "Type[DataItem]"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 411, "col_offset": 30, "nodeName": "DataItem", "type": "Type[DataItem]"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "ref_vid", "type": "Any"}, {"lineNumber": 413, "col_offset": 50, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 417, "col_offset": 37, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 420, "col_offset": 11, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 420, "col_offset": 68, "nodeName": "input", "type": "DataItem"}, {"lineNumber": 423, "col_offset": 41, "nodeName": "input", "type": "DataItem"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 424, "col_offset": 68, "nodeName": "input", "type": "DataItem"}, {"lineNumber": 427, "col_offset": 41, "nodeName": "input", "type": "DataItem"}, {"lineNumber": 428, "col_offset": 11, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 428, "col_offset": 69, "nodeName": "output", "type": "DataItem"}, {"lineNumber": 431, "col_offset": 41, "nodeName": "output", "type": "DataItem"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 432, "col_offset": 69, "nodeName": "output", "type": "DataItem"}, {"lineNumber": 435, "col_offset": 41, "nodeName": "output", "type": "DataItem"}, {"lineNumber": 439, "col_offset": 15, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 440, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 443, "col_offset": 45, "nodeName": "path", "type": "Any"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "ref_vid", "type": "DataItem"}, {"lineNumber": 446, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 453, "col_offset": 40, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 456, "col_offset": 48, "nodeName": "args", "type": "Any"}, {"lineNumber": 463, "col_offset": 11, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 464, "col_offset": 20, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 464, "col_offset": 39, "nodeName": "args", "type": "Any"}, {"lineNumber": 468, "col_offset": 45, "nodeName": "args", "type": "Any"}, {"lineNumber": 470, "col_offset": 17, "nodeName": "fps", "type": "Any"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 471, "col_offset": 32, "nodeName": "output", "type": "DataItem"}, {"lineNumber": 473, "col_offset": 16, "nodeName": "fps", "type": "Any"}, {"lineNumber": 473, "col_offset": 32, "nodeName": "fps", "type": "Any"}, {"lineNumber": 478, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 481, "col_offset": 34, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "degrees", "type": "Any"}, {"lineNumber": 484, "col_offset": 50, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 486, "col_offset": 13, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 488, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 488, "col_offset": 20, "nodeName": "degrees", "type": "Optional[Any]"}, {"lineNumber": 525, "col_offset": 23, "nodeName": "path", "type": "Any"}, {"lineNumber": 525, "col_offset": 43, "nodeName": "input_", "type": "Any"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 570, "col_offset": 14, "nodeName": "run", "type": "Any"}, {"lineNumber": 598, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 598, "col_offset": 48, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 637, "col_offset": 38, "nodeName": "cls", "type": "Type[Effmpeg]"}, {"lineNumber": 639, "col_offset": 38, "nodeName": "cls", "type": "Type[Effmpeg]"}, {"lineNumber": 645, "col_offset": 15, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 646, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 646, "col_offset": 36, "nodeName": "input", "type": "DataItem"}, {"lineNumber": 647, "col_offset": 17, "nodeName": "args", "type": "Any"}, {"lineNumber": 647, "col_offset": 37, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 648, "col_offset": 19, "nodeName": "is_type", "type": "Callable[..., Any]"}, {"lineNumber": 662, "col_offset": 16, "nodeName": "items_to_check", "type": "List[str]"}, {"lineNumber": 664, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 665, "col_offset": 17, "nodeName": "i", "type": "Any"}, {"lineNumber": 673, "col_offset": 26, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 676, "col_offset": 15, "nodeName": "ffe", "type": "Any"}, {"lineNumber": 679, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 688, "col_offset": 25, "nodeName": "_fps", "type": "Union[List[str], Any]"}, {"lineNumber": 688, "col_offset": 42, "nodeName": "_fps", "type": "Union[List[str], Any]"}, {"lineNumber": 694, "col_offset": 33, "nodeName": "start_time", "type": "Any"}, {"lineNumber": 695, "col_offset": 31, "nodeName": "end_time", "type": "Any"}, {"lineNumber": 700, "col_offset": 62, "nodeName": "s", "type": "float"}, {"lineNumber": 706, "col_offset": 19, "nodeName": "i", "type": "str"}, {"lineNumber": 706, "col_offset": 24, "nodeName": "file", "type": "Any"}, {"lineNumber": 706, "col_offset": 33, "nodeName": "i", "type": "str"}, {"lineNumber": 706, "col_offset": 38, "nodeName": "img_ext", "type": "List[str]"}, {"lineNumber": 718, "col_offset": 31, "nodeName": "replace", "type": "Any"}, {"lineNumber": 718, "col_offset": 48, "nodeName": "ve", "type": "str"}, {"lineNumber": 722, "col_offset": 31, "nodeName": "vid_ext", "type": "str"}, {"lineNumber": 737, "col_offset": 28, "nodeName": "opts", "type": "List[str]"}, {"lineNumber": 759, "col_offset": 15, "nodeName": "hours", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "type", "type": "Union[Any, str]"}, {"lineNumber": 334, "col_offset": 49, "nodeName": "Effmpeg", "type": "Type[Effmpeg]"}, {"lineNumber": 389, "col_offset": 50, "nodeName": "option", "type": "Union[Dict[str, Union[str, Tuple[str, str, str, str, str, str, str, str], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], bool, str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[Dict[str, Optional[Tuple[Any, ...]]], Dict[str, str], str, Type[lib.cli.ComboFullPaths], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, List[str], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Union[str, Callable[[Any], Any], Tuple[str, str, str, str, str], Tuple[str, str]]]]"}, {"lineNumber": 405, "col_offset": 40, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 407, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 409, "col_offset": 43, "nodeName": "fps", "type": "Any"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 420, "col_offset": 68, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 423, "col_offset": 41, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 424, "col_offset": 68, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 427, "col_offset": 41, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 428, "col_offset": 69, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 431, "col_offset": 41, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 432, "col_offset": 69, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 435, "col_offset": 41, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 443, "col_offset": 45, "nodeName": "ref_vid", "type": "DataItem"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 448, "col_offset": 68, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 456, "col_offset": 48, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 464, "col_offset": 39, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 468, "col_offset": 45, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 470, "col_offset": 17, "nodeName": "output", "type": "DataItem"}, {"lineNumber": 470, "col_offset": 49, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 471, "col_offset": 32, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 472, "col_offset": 17, "nodeName": "fps", "type": "Any"}, {"lineNumber": 473, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 473, "col_offset": 32, "nodeName": "ref_vid", "type": "DataItem"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "fps", "type": "Any"}, {"lineNumber": 475, "col_offset": 32, "nodeName": "fps", "type": "Any"}, {"lineNumber": 478, "col_offset": 11, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 488, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "exit", "type": "Callable[..., None]"}, {"lineNumber": 525, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "ff", "type": "Any"}, {"lineNumber": 558, "col_offset": 29, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 570, "col_offset": 14, "nodeName": "ff", "type": "Any"}, {"lineNumber": 570, "col_offset": 28, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 571, "col_offset": 28, "nodeName": "STDOUT", "type": "int"}, {"lineNumber": 600, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 600, "col_offset": 46, "nodeName": "degrees", "type": "Any"}, {"lineNumber": 602, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 602, "col_offset": 45, "nodeName": "degrees", "type": "Any"}, {"lineNumber": 646, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 646, "col_offset": 36, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 647, "col_offset": 17, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 648, "col_offset": 19, "nodeName": "input", "type": "DataItem"}, {"lineNumber": 651, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 651, "col_offset": 40, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 654, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 654, "col_offset": 40, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 664, "col_offset": 16, "nodeName": "items_to_check", "type": "List[str]"}, {"lineNumber": 666, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 668, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 668, "col_offset": 27, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 668, "col_offset": 33, "nodeName": "i", "type": "str"}, {"lineNumber": 679, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 680, "col_offset": 45, "nodeName": "ffe", "type": "Any"}, {"lineNumber": 706, "col_offset": 38, "nodeName": "DataItem", "type": "Type[DataItem]"}, {"lineNumber": 718, "col_offset": 31, "nodeName": "zero_pad", "type": "Any"}, {"lineNumber": 737, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "lower", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "type", "type": "Union[Any, str]"}, {"lineNumber": 407, "col_offset": 37, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 409, "col_offset": 43, "nodeName": "args", "type": "Any"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 443, "col_offset": 45, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 448, "col_offset": 68, "nodeName": "sys", "type": "module"}, {"lineNumber": 470, "col_offset": 17, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 472, "col_offset": 17, "nodeName": "ref_vid", "type": "DataItem"}, {"lineNumber": 472, "col_offset": 50, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 473, "col_offset": 16, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 473, "col_offset": 32, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 474, "col_offset": 17, "nodeName": "fps", "type": "Any"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 475, "col_offset": 32, "nodeName": "input", "type": "DataItem"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 488, "col_offset": 20, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 491, "col_offset": 34, "nodeName": "degrees", "type": "Optional[Any]"}, {"lineNumber": 491, "col_offset": 59, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 558, "col_offset": 29, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 570, "col_offset": 28, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 571, "col_offset": 28, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 600, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 600, "col_offset": 19, "nodeName": "degrees", "type": "Any"}, {"lineNumber": 648, "col_offset": 19, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 651, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 651, "col_offset": 40, "nodeName": "input", "type": "DataItem"}, {"lineNumber": 654, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 654, "col_offset": 40, "nodeName": "input", "type": "DataItem"}, {"lineNumber": 666, "col_offset": 16, "nodeName": "items_to_check", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "item_type", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "self", "type": "DataItem"}, {"lineNumber": 409, "col_offset": 43, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 411, "col_offset": 44, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 472, "col_offset": 17, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 474, "col_offset": 17, "nodeName": "input", "type": "DataItem"}, {"lineNumber": 474, "col_offset": 48, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 475, "col_offset": 32, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 491, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 491, "col_offset": 59, "nodeName": "sys", "type": "module"}, {"lineNumber": 651, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 651, "col_offset": 40, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 654, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 654, "col_offset": 40, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 474, "col_offset": 17, "nodeName": "self", "type": "Effmpeg"}, {"lineNumber": 491, "col_offset": 34, "nodeName": "self", "type": "Effmpeg"}]