[{"lineNumber": 14, "col_offset": 26, "nodeName": "DirectoryProcessor", "type": "Type[lib.cli.DirectoryProcessor]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "optional_arguments", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str], Type[str], Tuple[str, str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]]]]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str], Type[str], Tuple[str, str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]]]]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str], Type[str], Tuple[str, str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]]]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "extractor_name", "type": "str"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "processes", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "processes", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "rotated_image", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "faces", "type": "Generator[Tuple[int, Any], Any, None]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "rotated_faces", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "angle", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "rotation_angles", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "faces", "type": "Generator[Tuple[int, Any], Any, None]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "process_faces", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "rvals", "type": "List[Dict[str, Any]]"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "process_faces", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "rvals", "type": "List[Dict[str, Any]]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 16, "col_offset": 34, "nodeName": "get_optional_arguments", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "add_parser", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "command", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "arguments", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "rotate_image", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "image", "type": "Any"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "angle", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "get_faces", "type": "Callable[..., Generator[Tuple[int, Any], Any, None]]"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "rotated_image", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "rotated_faces", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "rotated_image", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "rotated_faces", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "rotated_image", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "get_faces", "type": "Callable[..., Generator[Tuple[int, Any], Any, None]]"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "image", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "idx", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "face", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "debug_landmarks", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "output_file", "type": "pathlib.Path"}, {"lineNumber": 16, "col_offset": 34, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "subparser", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "description", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str], Type[str], Tuple[str, str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]]]]"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str], Type[str], Tuple[str, str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]]]]"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str], Type[str], Tuple[str, str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]]]]"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str], Type[str], Tuple[str, str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]]]]"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str], Type[str], Tuple[str, str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]]]]"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str], Type[str], Tuple[str, str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]]]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str], Type[str], Tuple[str, str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]]]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str], Type[str], Tuple[str, str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]]]]"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str], Type[str], Tuple[str, str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]]]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "argument_list", "type": "List[Union[Dict[str, Union[str, Tuple[str, str, str], Type[str], Tuple[str, str]]], Dict[str, Union[str, float, Type[float], Tuple[str, str]]], Dict[str, Union[str, Type[str], Tuple[str, str]]], Dict[str, Union[str, int, Type[int], Tuple[str, str]]], Dict[str, Union[str, bool, Tuple[str, str]]], Dict[str, Optional[Union[str, Type[str], Tuple[str, str]]]], Dict[str, Optional[Union[str, Type[int], Tuple[str, str]]]]]]"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "get_extractor", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 52, "nodeName": "extractor_name", "type": "str"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "processes", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "files", "type": "List[Union[str, bytes]]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "filename", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "write_alignments", "type": "Callable[[], None]"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "imread", "type": "Any"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "filename", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "filename", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "angle", "type": "Any"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "idx", "type": "int"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "face", "type": "Any"}, {"lineNumber": 119, "col_offset": 54, "nodeName": "faces", "type": "Generator[Tuple[int, Any], Any, None]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "rotated_faces", "type": "Any"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "rotated_image", "type": "Any"}, {"lineNumber": 125, "col_offset": 43, "nodeName": "getRotatedImageFaces", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 69, "nodeName": "image", "type": "Any"}, {"lineNumber": 125, "col_offset": 76, "nodeName": "angle", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "idx", "type": "int"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "face", "type": "Any"}, {"lineNumber": 134, "col_offset": 54, "nodeName": "faces", "type": "Generator[Tuple[int, Any], Any, None]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "rotation_angles", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "process_faces", "type": "Any"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "image", "type": "Any"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "imageRotator", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 53, "nodeName": "image", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "arguments", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "resized_image", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "t_mat", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "extract", "type": "Any"}, {"lineNumber": 147, "col_offset": 58, "nodeName": "image", "type": "Any"}, {"lineNumber": 147, "col_offset": 65, "nodeName": "face", "type": "Any"}, {"lineNumber": 147, "col_offset": 76, "nodeName": "align_eyes", "type": "Any"}, {"lineNumber": 148, "col_offset": 56, "nodeName": "stem", "type": "str"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "blur_thresh", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "aligned_landmarks", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "feature_mask", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "feature_mask", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "isolated_face", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "blurry", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "imwrite", "type": "Any"}, {"lineNumber": 165, "col_offset": 93, "nodeName": "resized_image", "type": "Any"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "r", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "h", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "f", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "PluginLoader", "type": "Type[plugins.PluginLoader.PluginLoader]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "filename", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "faces", "type": "Any"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "num_faces_detected", "type": "int"}, {"lineNumber": 93, "col_offset": 70, "nodeName": "faces", "type": "Any"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "handleImage", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "image", "type": "Any"}, {"lineNumber": 109, "col_offset": 53, "nodeName": "filename", "type": "Any"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "idx", "type": "int"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "face", "type": "Any"}, {"lineNumber": 125, "col_offset": 43, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "rotated_faces", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "arguments", "type": "Any"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "idx", "type": "int"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "face", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 52, "nodeName": "process_faces", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "landmarksAsXY", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 147, "col_offset": 76, "nodeName": "arguments", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "get_folder", "type": "Callable[[Any], pathlib.Path]"}, {"lineNumber": 148, "col_offset": 37, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "arguments", "type": "Any"}, {"lineNumber": 152, "col_offset": 36, "nodeName": "transform_points", "type": "Any"}, {"lineNumber": 152, "col_offset": 90, "nodeName": "t_mat", "type": "Any"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "get_feature_mask", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "blur", "type": "Any"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "feature_mask", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "astype", "type": "Any"}, {"lineNumber": 155, "col_offset": 95, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "blurry", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "focus_measure", "type": "Any"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "is_blurry", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 156, "col_offset": 50, "nodeName": "isolated_face", "type": "Any"}, {"lineNumber": 156, "col_offset": 65, "nodeName": "blur_thresh", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "output_file", "type": "pathlib.Path"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 165, "col_offset": 69, "nodeName": "suffix", "type": "str"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "face", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "face", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "face", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "face", "type": "Any"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "face", "type": "Any"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "landmarksAsXY", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "rvals", "type": "List[Dict[str, Any]]"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "read_directory", "type": "Callable[[], List[Union[bytes, str]]]"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "pool_process", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 91, "col_offset": 57, "nodeName": "processFiles", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 76, "nodeName": "files", "type": "List[Union[str, bytes]]"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "faces_detected", "type": "Any"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "read_directory", "type": "Callable[[], List[Union[bytes, str]]]"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "image", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "face", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "circle", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "image", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 147, "col_offset": 76, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 148, "col_offset": 37, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 148, "col_offset": 56, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 148, "col_offset": 61, "nodeName": "filename", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 152, "col_offset": 36, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 152, "col_offset": 68, "nodeName": "landmarksAsXY", "type": "Any"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 153, "col_offset": 63, "nodeName": "aligned_landmarks", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 155, "col_offset": 95, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 65, "nodeName": "arguments", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 87, "nodeName": "stem", "type": "str"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 165, "col_offset": 45, "nodeName": "output_file", "type": "pathlib.Path"}, {"lineNumber": 165, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 165, "col_offset": 63, "nodeName": "idx", "type": "Any"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "face", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 91, "col_offset": 57, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 91, "col_offset": 93, "nodeName": "processes", "type": "Any"}, {"lineNumber": 91, "col_offset": 113, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 91, "col_offset": 117, "nodeName": "files", "type": "List[Union[str, bytes]]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "imread", "type": "Any"}, {"lineNumber": 97, "col_offset": 43, "nodeName": "filename", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "faces_detected", "type": "Any"}, {"lineNumber": 98, "col_offset": 74, "nodeName": "handleImage", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 91, "nodeName": "image", "type": "Any"}, {"lineNumber": 98, "col_offset": 98, "nodeName": "filename", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 128, "col_offset": 78, "nodeName": "angle", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 152, "col_offset": 36, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 152, "col_offset": 68, "nodeName": "face", "type": "Any"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "feature_mask", "type": "Any"}, {"lineNumber": 156, "col_offset": 65, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 162, "col_offset": 111, "nodeName": "stem", "type": "str"}, {"lineNumber": 162, "col_offset": 132, "nodeName": "focus_measure", "type": "Any"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "get_folder", "type": "Callable[[Any], pathlib.Path]"}, {"lineNumber": 165, "col_offset": 69, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 165, "col_offset": 74, "nodeName": "filename", "type": "Any"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 93, "col_offset": 57, "nodeName": "filename", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 98, "col_offset": 74, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "arguments", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 155, "col_offset": 59, "nodeName": "astype", "type": "Any"}, {"lineNumber": 155, "col_offset": 80, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 163, "col_offset": 87, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 163, "col_offset": 92, "nodeName": "filename", "type": "Any"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "path", "type": "module"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 98, "col_offset": 61, "nodeName": "filename", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 59, "nodeName": "resized_image", "type": "Any"}, {"lineNumber": 162, "col_offset": 111, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 162, "col_offset": 116, "nodeName": "filename", "type": "Any"}, {"lineNumber": 163, "col_offset": 45, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 163, "col_offset": 69, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "os", "type": "module"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "path", "type": "module"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 101, "col_offset": 88, "nodeName": "filename", "type": "Any"}, {"lineNumber": 101, "col_offset": 98, "nodeName": "e", "type": "Exception"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "self", "type": "ExtractTrainingData"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "os", "type": "module"}]