[{"lineNumber": 13, "col_offset": 0, "nodeName": "avg", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 10, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 10, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 10, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "vgg_face", "type": "lib.vgg_face.VGGFace"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "retval", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "fpath", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "reference_file_paths", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "fpath", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "nreference_file_paths", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "retval", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "in_queue", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "input_queue", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "filt", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "avgs", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "mins", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "msg", "type": "Optional[str]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "retval", "type": "bool"}, {"lineNumber": 15, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "arr", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 26, "col_offset": 46, "nodeName": "reference_file_paths", "type": "Any"}, {"lineNumber": 26, "col_offset": 68, "nodeName": "nreference_file_paths", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "detector", "type": "Any"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "aligner", "type": "Any"}, {"lineNumber": 27, "col_offset": 40, "nodeName": "multiprocess", "type": "Any"}, {"lineNumber": 27, "col_offset": 54, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "VGGFace", "type": "Type[lib.vgg_face.VGGFace]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "load_images", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "reference_file_paths", "type": "Any"}, {"lineNumber": 29, "col_offset": 62, "nodeName": "nreference_file_paths", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "align_faces", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "multiprocess", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "get_filter_encodings", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "Extractor", "type": "Type[plugins.extract.pipeline.Extractor]"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "detector_name", "type": "str"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "aligner_name", "type": "str"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "masker_name", "type": "str"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "run_extractor", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "extractor", "type": "plugins.extract.pipeline.Extractor"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "load_aligned_face", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "passes", "type": "int"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "faces", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "extractor", "type": "plugins.extract.pipeline.Extractor"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "fname", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "img", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "put", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "filename", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "items", "type": "Callable"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "detected_face", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "aligned_face", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "filename", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "items", "type": "Callable"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "aligned_face", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "values", "type": "Callable"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "similarity", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "retval", "type": "bool"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "arr", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 55, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "multiprocess", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "extractor", "type": "plugins.extract.pipeline.Extractor"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "queue_images", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "extractor", "type": "plugins.extract.pipeline.Extractor"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "launch", "type": "Callable[[], None]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "detected_faces", "type": "Callable[[], Generator[Any, Any, None]]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "filename", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "detected_faces", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 62, "nodeName": "fname", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "fname", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "put", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "in_queue", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 55, "nodeName": "filename", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "load_aligned", "type": "Any"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "image", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "detected_face", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "filename", "type": "Any"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 56, "nodeName": "filename", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 68, "nodeName": "filename", "type": "Any"}, {"lineNumber": 113, "col_offset": 78, "nodeName": "shape", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 120, "col_offset": 50, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "vgg_face", "type": "lib.vgg_face.VGGFace"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "detected_face", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "find_cosine_similiarity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 81, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "similarity", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "val", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "val", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 129, "col_offset": 52, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 130, "col_offset": 84, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "retval", "type": "bool"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "msg", "type": "Optional[str]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "trace", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 168, "col_offset": 36, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "fpath", "type": "Any"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "read_image", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "fpath", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "fpath", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "read_image", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "fpath", "type": "Any"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "v", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "extractor", "type": "plugins.extract.pipeline.Extractor"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "extractor", "type": "plugins.extract.pipeline.Extractor"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "faces", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "faces", "type": "Any"}, {"lineNumber": 80, "col_offset": 58, "nodeName": "detected_faces", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 86, "col_offset": 69, "nodeName": "img", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "fname", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "img", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "img", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "in_queue", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "detected_face", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "vgg_face", "type": "lib.vgg_face.VGGFace"}, {"lineNumber": 112, "col_offset": 46, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 113, "col_offset": 78, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "vgg_face", "type": "lib.vgg_face.VGGFace"}, {"lineNumber": 123, "col_offset": 63, "nodeName": "filt", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "avg", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "val", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 51, "nodeName": "key", "type": "str"}, {"lineNumber": 126, "col_offset": 56, "nodeName": "val", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 63, "nodeName": "items", "type": "Callable"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "min", "type": "Callable"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "val", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 51, "nodeName": "key", "type": "str"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "val", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 63, "nodeName": "items", "type": "Callable"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "avgs", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 52, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 130, "col_offset": 58, "nodeName": "round", "type": "Callable"}, {"lineNumber": 130, "col_offset": 84, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 133, "col_offset": 59, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 135, "col_offset": 59, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "retval", "type": "bool"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 168, "col_offset": 36, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 55, "col_offset": 67, "nodeName": "k", "type": "Any"}, {"lineNumber": 55, "col_offset": 70, "nodeName": "v", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 75, "nodeName": "items", "type": "Callable"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "detected_faces", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 76, "nodeName": "filename", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "img", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 126, "col_offset": 63, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 127, "col_offset": 63, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 130, "col_offset": 64, "nodeName": "avgs", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 133, "col_offset": 41, "nodeName": "avgs", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 59, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 134, "col_offset": 59, "nodeName": "round", "type": "Callable"}, {"lineNumber": 135, "col_offset": 59, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "retval", "type": "bool"}, {"lineNumber": 55, "col_offset": 75, "nodeName": "retval", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "filename", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 65, "nodeName": "avgs", "type": "Dict[str, Any]"}, {"lineNumber": 138, "col_offset": 62, "nodeName": "mins", "type": "Dict[str, Any]"}, {"lineNumber": 138, "col_offset": 79, "nodeName": "mins", "type": "Dict[str, Any]"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "round", "type": "Callable"}, {"lineNumber": 140, "col_offset": 67, "nodeName": "round", "type": "Callable"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "var_k", "type": "int"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "msg", "type": "None"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "retval", "type": "bool"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "filt", "type": "Dict[str, Any]"}, {"lineNumber": 140, "col_offset": 47, "nodeName": "mins", "type": "Dict[str, Any]"}, {"lineNumber": 140, "col_offset": 73, "nodeName": "mins", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 62, "nodeName": "avgs", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 79, "nodeName": "avgs", "type": "Dict[str, Any]"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "round", "type": "Callable"}, {"lineNumber": 144, "col_offset": 71, "nodeName": "round", "type": "Callable"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "min", "type": "Callable"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "var_n", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "var_k", "type": "int"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "retval", "type": "bool"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "msg", "type": "None"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "retval", "type": "bool"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 79, "col_offset": 57, "nodeName": "filename", "type": "Any"}, {"lineNumber": 144, "col_offset": 51, "nodeName": "mins", "type": "Dict[str, Any]"}, {"lineNumber": 144, "col_offset": 77, "nodeName": "mins", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "min", "type": "Callable"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "map", "type": "Callable"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "round", "type": "Callable"}, {"lineNumber": 156, "col_offset": 46, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 148, "col_offset": 61, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 152, "col_offset": 67, "nodeName": "var_k", "type": "int"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 150, "col_offset": 50, "nodeName": "d", "type": "Any"}, {"lineNumber": 150, "col_offset": 57, "nodeName": "d", "type": "Any"}, {"lineNumber": 151, "col_offset": 50, "nodeName": "d", "type": "Any"}, {"lineNumber": 151, "col_offset": 57, "nodeName": "d", "type": "Any"}, {"lineNumber": 152, "col_offset": 59, "nodeName": "x", "type": "Any"}, {"lineNumber": 150, "col_offset": 62, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 151, "col_offset": 62, "nodeName": "distances", "type": "Dict[str, List[Any]]"}]