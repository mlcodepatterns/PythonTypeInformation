[{"lineNumber": 19, "col_offset": 0, "nodeName": "save_model_weights", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "show_sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "images_A", "type": "Any"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "images_B", "type": "Any"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "images_A", "type": "Any"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "images_B", "type": "Any"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "images_A", "type": "Any"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "epoch", "type": "int"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "figure", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "figure", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "figure", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "figure", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "get_image_paths", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "get_image_paths", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "loss_A", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "loss_B", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "key", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "load_weights", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "load_weights", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "load_weights", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "save_weights", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "save_weights", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "save_weights", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "stack", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "stack", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "stack_images", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "figure", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "imwrite", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "figure", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "load_images", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "images_A", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "load_images", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "images_B", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "mean", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "warped_A", "type": "Any"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "target_A", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "get_training_data", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "images_A", "type": "Any"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "warped_B", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "target_B", "type": "Any"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "get_training_data", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "images_B", "type": "Any"}, {"lineNumber": 60, "col_offset": 53, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 62, "col_offset": 42, "nodeName": "warped_A", "type": "Any"}, {"lineNumber": 62, "col_offset": 52, "nodeName": "target_A", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "warped_B", "type": "Any"}, {"lineNumber": 63, "col_offset": 52, "nodeName": "target_B", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "loss_A", "type": "Any"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "loss_B", "type": "Any"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "waitKey", "type": "Any"}, {"lineNumber": 71, "col_offset": 7, "nodeName": "key", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "decoder_A", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "decoder_B", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "decoder_A", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "decoder_B", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "test_A", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "test_B", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "figure_A", "type": "Any"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "figure_B", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "figure", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "images_B", "type": "Any"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "images_A", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "autoencoder_A", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "autoencoder_B", "type": "Any"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "epoch", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "save_model_weights", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "show_sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "save_model_weights", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "exit", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "predict", "type": "Any"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "test_A", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "predict", "type": "Any"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "test_A", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "predict", "type": "Any"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "test_B", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "predict", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "test_B", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "clip", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "target_A", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "target_B", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "autoencoder_A", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "autoencoder_B", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "autoencoder_B", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "autoencoder_A", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "figure", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "figure", "type": "Any"}]