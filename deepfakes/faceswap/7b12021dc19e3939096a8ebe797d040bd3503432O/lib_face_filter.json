[{"lineNumber": 19, "col_offset": 0, "nodeName": "avg", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "get_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "load_images", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "align_faces", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "run_extractor", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "queue_images", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "load_aligned_face", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "get_filter_encodings", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "predict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "resize_face", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "find_cosine_similiarity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "git_model_id", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "model_filename", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "input_size", "type": "int"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "numeric_loglevel", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "vgg_face", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "root_path", "type": "str"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "cache_path", "type": "str"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "model_path", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "vgg_face", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "vgg_face", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "retval", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "fpath", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "reference_file_paths", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "fpath", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "nreference_file_paths", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "retval", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "extractor", "type": "plugins.extract.pipeline.Extractor"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "exception", "type": "bool"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "in_queue", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "input_queue", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "preds", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "preds", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "face", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "filt", "type": "Dict[str, Any]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "avgs", "type": "Dict[str, Any]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "mins", "type": "Dict[str, Optional[Any]]"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "msg", "type": "Optional[str]"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "retval", "type": "bool"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "var_a", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "var_b", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "var_c", "type": "Any"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "arr", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 32, "col_offset": 46, "nodeName": "reference_file_paths", "type": "Any"}, {"lineNumber": 32, "col_offset": 68, "nodeName": "nreference_file_paths", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "detector", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "aligner", "type": "Any"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "loglevel", "type": "Any"}, {"lineNumber": 33, "col_offset": 50, "nodeName": "multiprocess", "type": "Any"}, {"lineNumber": 33, "col_offset": 64, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "get_loglevel", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 45, "nodeName": "loglevel", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "get_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "git_model_id", "type": "int"}, {"lineNumber": 39, "col_offset": 53, "nodeName": "model_filename", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "load_images", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "reference_file_paths", "type": "Any"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "nreference_file_paths", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "align_faces", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "detector", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "aligner", "type": "Any"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "loglevel", "type": "Any"}, {"lineNumber": 41, "col_offset": 54, "nodeName": "multiprocess", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "get_filter_encodings", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "root_path", "type": "str"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "readNetFromCaffe", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "setPreferableTarget", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "DNN_TARGET_CPU", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "Extractor", "type": "Type[plugins.extract.pipeline.Extractor]"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "detector_name", "type": "Any"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "aligner_name", "type": "Any"}, {"lineNumber": 73, "col_offset": 59, "nodeName": "loglevel", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "run_extractor", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "extractor", "type": "plugins.extract.pipeline.Extractor"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "load_aligned_face", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "passes", "type": "int"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "exception", "type": "bool"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "faces", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "extractor", "type": "plugins.extract.pipeline.Extractor"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "fname", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "img", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "put", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "filename", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "items", "type": "Callable"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "bounding_box", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "detected_face", "type": "lib.faces_detect.DetectedFace"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "landmarksXY", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "aligned_face", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "filename", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "items", "type": "Callable"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "input_size", "type": "int"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "face", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "blobFromImage", "type": "Any"}, {"lineNumber": 148, "col_offset": 37, "nodeName": "face", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "setInput", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "blob", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "input_size", "type": "int"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "interpolation", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "INTER_CUBIC", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "interpolation", "type": "Any"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "INTER_AREA", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "resize", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "face", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "aligned_face", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "values", "type": "Callable"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "similarity", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "retval", "type": "bool"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 224, "col_offset": 53, "nodeName": "test_face", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "arr", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "GetModel", "type": "Type[lib.utils.GetModel]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "model_filename", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "cache_path", "type": "str"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "git_model_id", "type": "int"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "dnn", "type": "Any"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "vgg_face", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "dnn", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 73, "col_offset": 82, "nodeName": "multiprocess", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "extractor", "type": "plugins.extract.pipeline.Extractor"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "queue_images", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "extractor", "type": "plugins.extract.pipeline.Extractor"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "launch", "type": "Callable[[], None]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "detected_faces", "type": "Callable[[], Generator[Any, Any, None]]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "exception", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "exception", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "filename", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "detected_faces", "type": "Any"}, {"lineNumber": 97, "col_offset": 59, "nodeName": "detected_faces", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "final_pass", "type": "Any"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 62, "nodeName": "fname", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "fname", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "put", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "in_queue", "type": "Any"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 55, "nodeName": "filename", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "DetectedFace", "type": "Type[lib.faces_detect.DetectedFace]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "from_bounding_box", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "bounding_box", "type": "Any"}, {"lineNumber": 127, "col_offset": 58, "nodeName": "image", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "detected_face", "type": "lib.faces_detect.DetectedFace"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "load_aligned", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "image", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "detected_face", "type": "lib.faces_detect.DetectedFace"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "filename", "type": "Any"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 56, "nodeName": "filename", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 68, "nodeName": "filename", "type": "Any"}, {"lineNumber": 140, "col_offset": 78, "nodeName": "shape", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "resize_face", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 36, "nodeName": "face", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "dnn", "type": "Any"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "input_size", "type": "int"}, {"lineNumber": 150, "col_offset": 55, "nodeName": "input_size", "type": "int"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "vgg_face", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 167, "col_offset": 40, "nodeName": "interpolation", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 173, "col_offset": 50, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "detected_face", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "find_cosine_similiarity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 176, "col_offset": 72, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "similarity", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "val", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "val", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 182, "col_offset": 52, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 183, "col_offset": 84, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "retval", "type": "bool"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "msg", "type": "Optional[str]"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "trace", "type": "Any"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 218, "col_offset": 36, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 224, "col_offset": 39, "nodeName": "source_face", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "source_face", "type": "Any"}, {"lineNumber": 225, "col_offset": 48, "nodeName": "source_face", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "test_face", "type": "Any"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "test_face", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "var_a", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 50, "col_offset": 52, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "fpath", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "imread", "type": "Any"}, {"lineNumber": 62, "col_offset": 49, "nodeName": "fpath", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "fpath", "type": "Any"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "imread", "type": "Any"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "fpath", "type": "Any"}, {"lineNumber": 67, "col_offset": 53, "nodeName": "v", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "extractor", "type": "plugins.extract.pipeline.Extractor"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "extractor", "type": "plugins.extract.pipeline.Extractor"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "get", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "faces", "type": "Any"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "faces", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "detected_faces", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "extractor", "type": "plugins.extract.pipeline.Extractor"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 102, "col_offset": 58, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 108, "col_offset": 69, "nodeName": "img", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "fname", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "img", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "img", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "in_queue", "type": "Any"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "detected_face", "type": "lib.faces_detect.DetectedFace"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "detected_face", "type": "lib.faces_detect.DetectedFace"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 140, "col_offset": 78, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "face", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 150, "col_offset": 55, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "vgg_face", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "face", "type": "Any"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "input_size", "type": "int"}, {"lineNumber": 166, "col_offset": 50, "nodeName": "input_size", "type": "int"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 176, "col_offset": 54, "nodeName": "filt", "type": "Dict[str, Any]"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "avg", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "val", "type": "List[Any]"}, {"lineNumber": 179, "col_offset": 51, "nodeName": "key", "type": "str"}, {"lineNumber": 179, "col_offset": 56, "nodeName": "val", "type": "List[Any]"}, {"lineNumber": 179, "col_offset": 63, "nodeName": "items", "type": "Callable"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "min", "type": "Callable"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "val", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 51, "nodeName": "key", "type": "str"}, {"lineNumber": 180, "col_offset": 56, "nodeName": "val", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 63, "nodeName": "items", "type": "Callable"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "avgs", "type": "Dict[str, Any]"}, {"lineNumber": 182, "col_offset": 52, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 183, "col_offset": 58, "nodeName": "round", "type": "Callable[..., float]"}, {"lineNumber": 183, "col_offset": 84, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 186, "col_offset": 59, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 188, "col_offset": 59, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "retval", "type": "bool"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 218, "col_offset": 36, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 50, "col_offset": 52, "nodeName": "sys", "type": "module"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 67, "col_offset": 67, "nodeName": "k", "type": "Any"}, {"lineNumber": 67, "col_offset": 70, "nodeName": "v", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 75, "nodeName": "items", "type": "Callable"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "faces", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "detected_faces", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 76, "nodeName": "filename", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "faces", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "img", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "face", "type": "Dict[str, Any]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 166, "col_offset": 50, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 179, "col_offset": 63, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 180, "col_offset": 63, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 183, "col_offset": 64, "nodeName": "avgs", "type": "Dict[str, Any]"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "avgs", "type": "Dict[str, Any]"}, {"lineNumber": 186, "col_offset": 59, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 187, "col_offset": 59, "nodeName": "round", "type": "Callable[..., float]"}, {"lineNumber": 188, "col_offset": 59, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "retval", "type": "bool"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 227, "col_offset": 37, "nodeName": "var_b", "type": "Any"}, {"lineNumber": 227, "col_offset": 46, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 227, "col_offset": 54, "nodeName": "var_c", "type": "Any"}, {"lineNumber": 67, "col_offset": 75, "nodeName": "retval", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "detected_faces", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "filename", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 187, "col_offset": 65, "nodeName": "avgs", "type": "Dict[str, Any]"}, {"lineNumber": 191, "col_offset": 62, "nodeName": "mins", "type": "Dict[str, Optional[Any]]"}, {"lineNumber": 191, "col_offset": 79, "nodeName": "mins", "type": "Dict[str, Optional[Any]]"}, {"lineNumber": 193, "col_offset": 41, "nodeName": "round", "type": "Callable[..., float]"}, {"lineNumber": 193, "col_offset": 67, "nodeName": "round", "type": "Callable[..., float]"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 195, "col_offset": 37, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "var_k", "type": "int"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "msg", "type": "None"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "retval", "type": "bool"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "filters", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "filename", "type": "Any"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "filt", "type": "Dict[str, Any]"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "mins", "type": "Dict[str, Optional[Any]]"}, {"lineNumber": 193, "col_offset": 73, "nodeName": "mins", "type": "Dict[str, Optional[Any]]"}, {"lineNumber": 195, "col_offset": 62, "nodeName": "avgs", "type": "Dict[str, Any]"}, {"lineNumber": 195, "col_offset": 79, "nodeName": "avgs", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 45, "nodeName": "round", "type": "Callable[..., float]"}, {"lineNumber": 197, "col_offset": 71, "nodeName": "round", "type": "Callable[..., float]"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 199, "col_offset": 37, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "min", "type": "Callable"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "var_n", "type": "Any"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "var_k", "type": "int"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "retval", "type": "bool"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "self", "type": "FaceFilter"}, {"lineNumber": 95, "col_offset": 57, "nodeName": "filename", "type": "Any"}, {"lineNumber": 197, "col_offset": 51, "nodeName": "mins", "type": "Dict[str, Optional[Any]]"}, {"lineNumber": 197, "col_offset": 77, "nodeName": "mins", "type": "Dict[str, Optional[Any]]"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "min", "type": "Callable"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "map", "type": "Callable"}, {"lineNumber": 209, "col_offset": 40, "nodeName": "round", "type": "Callable[..., float]"}, {"lineNumber": 209, "col_offset": 46, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 201, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 201, "col_offset": 61, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 202, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 205, "col_offset": 67, "nodeName": "var_k", "type": "int"}, {"lineNumber": 203, "col_offset": 38, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 203, "col_offset": 50, "nodeName": "d", "type": "Any"}, {"lineNumber": 203, "col_offset": 57, "nodeName": "d", "type": "Any"}, {"lineNumber": 204, "col_offset": 50, "nodeName": "d", "type": "Any"}, {"lineNumber": 204, "col_offset": 57, "nodeName": "d", "type": "Any"}, {"lineNumber": 205, "col_offset": 59, "nodeName": "x", "type": "Any"}, {"lineNumber": 203, "col_offset": 62, "nodeName": "distances", "type": "Dict[str, List[Any]]"}, {"lineNumber": 204, "col_offset": 62, "nodeName": "distances", "type": "Dict[str, List[Any]]"}]