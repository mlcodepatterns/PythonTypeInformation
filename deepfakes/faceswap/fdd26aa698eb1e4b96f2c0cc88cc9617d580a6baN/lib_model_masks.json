[{"lineNumber": 14, "col_offset": 0, "nodeName": "get_available_masks", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "get_default_mask", "type": "Callable[[], Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "Mask", "type": "Type[Mask]"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "Mask", "type": "Type[Mask]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "Mask", "type": "Type[Mask]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "Mask", "type": "Type[Mask]"}, {"lineNumber": 11, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 11, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "masks", "type": "List[str]"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "masks", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "masks", "type": "List[str]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "default", "type": "str"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "default", "type": "str"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "default", "type": "str"}, {"lineNumber": 11, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "masks", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "get_available_masks", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "default", "type": "str"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "default", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "face", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "face", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "channels", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "channels", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "retval", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "nose_ridge", "type": "Tuple[Any, Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "parts", "type": "List[Union[Tuple[Any, Any, Any, Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "item", "type": "Union[Tuple[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "parts", "type": "List[Union[Tuple[Any, Any, Any, Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "r_jaw", "type": "Tuple[Any, Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "l_jaw", "type": "Tuple[Any, Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "r_cheek", "type": "Tuple[Any, Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "l_cheek", "type": "Tuple[Any, Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "nose_ridge", "type": "Tuple[Any, Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "nose", "type": "Tuple[Any, Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "parts", "type": "List[Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "item", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "parts", "type": "List[Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "ml_pnt", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "mr_pnt", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "ql_pnt", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "qr_pnt", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "bot_l", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "bot_r", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "top_l", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "top_r", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "r_jaw", "type": "Tuple[Any, Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "l_jaw", "type": "Tuple[Any, Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "r_cheek", "type": "Tuple[Any, Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "l_cheek", "type": "Tuple[Any, Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "nose_ridge", "type": "Tuple[Any, Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "r_eye", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "l_eye", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "nose", "type": "Tuple[Any, Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "parts", "type": "List[Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "item", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "parts", "type": "List[Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "masks", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "default", "type": "str"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "masks", "type": "List[str]"}, {"lineNumber": 27, "col_offset": 47, "nodeName": "masks", "type": "List[str]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 43, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 58, "nodeName": "channels", "type": "Any"}, {"lineNumber": 43, "col_offset": 68, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Mask"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Mask"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Mask"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "build_mask", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "components"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "merge_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "mask", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "channels", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "channels", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "retval", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "jaw", "type": "Tuple[Any, Any, Any, Any, Any]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "nose_ridge", "type": "Tuple[Any, Any]"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "eyes", "type": "Tuple[Any, Any, Any, Any, Any]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "merged", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "r_jaw", "type": "Tuple[Any, Any]"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "l_jaw", "type": "Tuple[Any, Any]"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "r_cheek", "type": "Tuple[Any, Any]"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "l_cheek", "type": "Tuple[Any, Any]"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "nose_ridge", "type": "Tuple[Any, Any]"}, {"lineNumber": 116, "col_offset": 61, "nodeName": "r_eye", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 116, "col_offset": 68, "nodeName": "l_eye", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 116, "col_offset": 75, "nodeName": "nose", "type": "Tuple[Any, Any]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "merged", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "copy", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "top_l", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "top_r", "type": "Any"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "r_jaw", "type": "Tuple[Any, Any]"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "l_jaw", "type": "Tuple[Any, Any]"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "r_cheek", "type": "Tuple[Any, Any]"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "l_cheek", "type": "Tuple[Any, Any]"}, {"lineNumber": 160, "col_offset": 49, "nodeName": "nose_ridge", "type": "Tuple[Any, Any]"}, {"lineNumber": 160, "col_offset": 61, "nodeName": "r_eye", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 160, "col_offset": 68, "nodeName": "l_eye", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 160, "col_offset": 75, "nodeName": "nose", "type": "Tuple[Any, Any]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "merged", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "convexHull", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "fillConvexPoly", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "mask", "type": "Any"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "hull", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 43, "col_offset": 46, "nodeName": "face", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "self", "type": "Mask"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "self", "type": "components"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "mask", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "self", "type": "Mask"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "self", "type": "Mask"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "tile", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "mask", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "channels", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "retval", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "retval", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "mask", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "retval", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "item", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any, Any]]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "fillConvexPoly", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "mask", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "item", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "fillConvexPoly", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "mask", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 137, "col_offset": 34, "nodeName": "ml_pnt", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "mr_pnt", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "ql_pnt", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 86, "nodeName": "qr_pnt", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 157, "col_offset": 53, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 157, "col_offset": 71, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 158, "col_offset": 53, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 158, "col_offset": 71, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "item", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "fillConvexPoly", "type": "Any"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "mask", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 174, "col_offset": 55, "nodeName": "LINE_AA", "type": "Any"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "name", "type": "str"}, {"lineNumber": 16, "col_offset": 35, "nodeName": "obj", "type": "Any"}, {"lineNumber": 16, "col_offset": 42, "nodeName": "getmembers", "type": "Callable[..., List[Tuple[str, Any]]]"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "self", "type": "Mask"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "self", "type": "components"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "mask", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "self", "type": "Mask"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "self", "type": "dfl_full"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "self", "type": "dfl_full"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "self", "type": "dfl_full"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "self", "type": "dfl_full"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "self", "type": "dfl_full"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "dfl_full"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "self", "type": "dfl_full"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "self", "type": "dfl_full"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "self", "type": "dfl_full"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "self", "type": "dfl_full"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "self", "type": "dfl_full"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "self", "type": "dfl_full"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "convexHull", "type": "Any"}, {"lineNumber": 93, "col_offset": 52, "nodeName": "merged", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 100, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "self", "type": "components"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "self", "type": "components"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "self", "type": "components"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "self", "type": "components"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "self", "type": "components"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "self", "type": "components"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "self", "type": "components"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "self", "type": "components"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "self", "type": "components"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "self", "type": "components"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "self", "type": "components"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "self", "type": "components"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "self", "type": "components"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "self", "type": "components"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "self", "type": "components"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "self", "type": "components"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "self", "type": "components"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "self", "type": "components"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "self", "type": "components"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "self", "type": "components"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "convexHull", "type": "Any"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "merged", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 129, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "self", "type": "extended"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 141, "col_offset": 34, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 141, "col_offset": 49, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 141, "col_offset": 64, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 141, "col_offset": 79, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 142, "col_offset": 56, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 142, "col_offset": 71, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 149, "col_offset": 37, "nodeName": "top_l", "type": "Any"}, {"lineNumber": 149, "col_offset": 45, "nodeName": "bot_l", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "top_r", "type": "Any"}, {"lineNumber": 150, "col_offset": 45, "nodeName": "bot_r", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 164, "col_offset": 37, "nodeName": "convexHull", "type": "Any"}, {"lineNumber": 164, "col_offset": 52, "nodeName": "merged", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 55, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 16, "col_offset": 42, "nodeName": "inspect", "type": "module"}, {"lineNumber": 16, "col_offset": 61, "nodeName": "modules", "type": "Dict[str, module]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "isclass", "type": "Callable[[object], bool]"}, {"lineNumber": 17, "col_offset": 39, "nodeName": "obj", "type": "Any"}, {"lineNumber": 17, "col_offset": 48, "nodeName": "name", "type": "str"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "face", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "mask", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "face", "type": "Any"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "face", "type": "Any"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "face", "type": "Any"}, {"lineNumber": 164, "col_offset": 37, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "face", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "landmarks", "type": "Any"}, {"lineNumber": 16, "col_offset": 61, "nodeName": "sys", "type": "module"}, {"lineNumber": 16, "col_offset": 73, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "inspect", "type": "module"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "self", "type": "Mask"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "self", "type": "dfl_full"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "self", "type": "components"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "self", "type": "extended"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "self", "type": "facehull"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "self", "type": "facehull"}]