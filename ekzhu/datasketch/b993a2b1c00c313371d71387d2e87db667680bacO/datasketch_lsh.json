[{"lineNumber": 18, "col_offset": 0, "nodeName": "_integration", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "_false_positive_probability", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "_false_negative_probability", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "_optimal_param", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "_integration_precision", "type": "float"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 12, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "p", "type": "float"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "_integration_precision", "type": "float"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "area", "type": "float"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "_probability", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "a", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "_probability", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "a", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "min_error", "type": "float"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "opt", "type": "Tuple[int, int]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "b", "type": "int"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "opt", "type": "Tuple[int, int]"}, {"lineNumber": 22, "col_offset": 10, "nodeName": "x", "type": "Any"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "b", "type": "float"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "area", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "p", "type": "float"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "area", "type": "Union[Any, float]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "integrate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "_integration", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "err", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "integrate", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "_probability", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 42, "col_offset": 7, "nodeName": "err", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "integrate", "type": "Any"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "_probability", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "max_r", "type": "int"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "r", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "num_perm", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "num_perm", "type": "Any"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "weights", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "hashtables", "type": "List[Dict[str, List[Any]]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "hashranges", "type": "List[Tuple[int, int]]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "candidates", "type": "Set[Any]"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "p", "type": "float"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "num_perm", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "fn", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "error", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "num_perm", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "LSH"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "LSH"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "false_positive_weight", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "false_negative_weight", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "_optimal_param", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 101, "col_offset": 51, "nodeName": "num_perm", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "false_positive_weight", "type": "Any"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "false_negative_weight", "type": "Any"}, {"lineNumber": 102, "col_offset": 62, "nodeName": "precision", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "LSH"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "LSH"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "num_perm", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "hashtable", "type": "Dict[str, List[Any]]"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "hashranges", "type": "List[Tuple[int, int]]"}, {"lineNumber": 122, "col_offset": 60, "nodeName": "hashtables", "type": "List[Dict[str, List[Any]]]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "H", "type": "str"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "num_perm", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "hashtable", "type": "Dict[str, List[Any]]"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "hashranges", "type": "List[Tuple[int, int]]"}, {"lineNumber": 140, "col_offset": 60, "nodeName": "hashtables", "type": "List[Dict[str, List[Any]]]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "H", "type": "str"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "candidates", "type": "Set[Any]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "num_perm", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "b", "type": "int"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "max_r", "type": "int"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "_false_positive_probability", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 45, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "b", "type": "int"}, {"lineNumber": 57, "col_offset": 59, "nodeName": "r", "type": "int"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "_false_negative_probability", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 45, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 58, "col_offset": 56, "nodeName": "b", "type": "int"}, {"lineNumber": 58, "col_offset": 59, "nodeName": "r", "type": "int"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "error", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "min_error", "type": "float"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "min_error", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "error", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "opt", "type": "Tuple[int, int]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "weights", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "precision", "type": "Any"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "precision", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "_", "type": "int"}, {"lineNumber": 104, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "minhash", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "MinHash", "type": "Any"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "hashvalues", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "self", "type": "LSH"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "start", "type": "int"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "end", "type": "int"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "self", "type": "LSH"}, {"lineNumber": 122, "col_offset": 60, "nodeName": "self", "type": "LSH"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "_H", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "H", "type": "str"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "hashtable", "type": "Dict[str, List[Any]]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "minhash", "type": "Any"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "MinHash", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "hashvalues", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "self", "type": "LSH"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "start", "type": "int"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "end", "type": "int"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "self", "type": "LSH"}, {"lineNumber": 140, "col_offset": 60, "nodeName": "self", "type": "LSH"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "_H", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "H", "type": "str"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "hashtable", "type": "Dict[str, List[Any]]"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 35, "col_offset": 53, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 35, "col_offset": 59, "nodeName": "b", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "fp", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "false_positive_weight", "type": "Any"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "fn", "type": "Any"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "false_negative_weight", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "b", "type": "int"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "r", "type": "int"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "weights", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "b", "type": "int"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "r", "type": "int"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "r", "type": "int"}, {"lineNumber": 104, "col_offset": 61, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 104, "col_offset": 67, "nodeName": "b", "type": "int"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "t", "type": "Dict[str, List[Any]]"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "hashtables", "type": "List[Dict[str, List[Any]]]"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "h", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "h", "type": "Any"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "hs", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "minhash", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "self", "type": "LSH"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "hashvalues", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "hashtable", "type": "Dict[str, List[Any]]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "minhash", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "self", "type": "LSH"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "hashvalues", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "hashtable", "type": "Dict[str, List[Any]]"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "p", "type": "float"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "s", "type": "float"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 41, "col_offset": 64, "nodeName": "b", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "w", "type": "Any"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "w", "type": "Any"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "self", "type": "LSH"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "self", "type": "LSH"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "self", "type": "LSH"}, {"lineNumber": 104, "col_offset": 67, "nodeName": "self", "type": "LSH"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "t", "type": "Dict[str, List[Any]]"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "self", "type": "LSH"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "num_perm", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "minhash", "type": "Any"}, {"lineNumber": 123, "col_offset": 43, "nodeName": "start", "type": "int"}, {"lineNumber": 123, "col_offset": 49, "nodeName": "end", "type": "int"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "H", "type": "str"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "hashtable", "type": "Dict[str, List[Any]]"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "num_perm", "type": "Any"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "minhash", "type": "Any"}, {"lineNumber": 141, "col_offset": 43, "nodeName": "start", "type": "int"}, {"lineNumber": 141, "col_offset": 49, "nodeName": "end", "type": "int"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "H", "type": "str"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "add", "type": "Callable"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "r", "type": "Any"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "s", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "self", "type": "LSH"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "hashvalues", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "H", "type": "str"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "self", "type": "LSH"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "hashvalues", "type": "Any"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "candidates", "type": "Set[Any]"}, {"lineNumber": 41, "col_offset": 47, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 41, "col_offset": 53, "nodeName": "r", "type": "Any"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "minhash", "type": "Any"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "minhash", "type": "Any"}]