[{"lineNumber": 11, "col_offset": 0, "nodeName": "plot_with_pyvista", "type": "Callable[..., Any]"}, {"lineNumber": 5, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "point_size", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "colors", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "poly_data", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "plotter", "type": "Any"}, {"lineNumber": 6, "col_offset": 4, "nodeName": "pv", "type": "None"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "pv", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "point_size", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "point_size", "type": "Union[Any, float]"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "get_colors", "type": "Any"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "cloud", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "to_pyvista", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "Plotter", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "add_mesh", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "poly_data", "type": "Any"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "show", "type": "Any"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "cloud", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "pv", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "plotter", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "point_size", "type": "Union[Any, float]"}, {"lineNumber": 65, "col_offset": 63, "nodeName": "colors", "type": "Any"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "enable_eye_dome_lighting", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "plotter", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "plotter", "type": "Any"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}]