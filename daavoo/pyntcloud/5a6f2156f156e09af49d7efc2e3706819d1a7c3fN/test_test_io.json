[{"lineNumber": 12, "col_offset": 0, "nodeName": "assert_vertex_xyz", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "assert_vertex_color", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "assert_ply_face", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "test_read_ply_bin", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "test_read_ply_ascii", "type": "Callable[[], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "test_write_ply", "type": "Callable[[], Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "test_read_npz", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "test_write_npz", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "test_read_obj", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "test_write_obj", "type": "Callable[[], Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "data_path", "type": "str"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "chdir", "type": "Callable[[Union[int, str, bytes, _PathLike[str], _PathLike[bytes]]], None]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "ply_bin", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "ply_ascii", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "writed_ply_ascii", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "writed_ply_bin", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "npz", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "writed_npz", "type": "Dict[Any, Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "obj", "type": "Dict[str, Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "writed_obj", "type": "Dict[str, Any]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 8, "col_offset": 9, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "read_ply", "type": "Callable[[Any], Dict[str, Any]]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "assert_vertex_xyz", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "ply_bin", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "assert_vertex_color", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "ply_bin", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "assert_ply_face", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "ply_bin", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "read_ply", "type": "Callable[[Any], Dict[str, Any]]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "assert_vertex_xyz", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "ply_ascii", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "assert_vertex_color", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "ply_ascii", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assert_ply_face", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "ply_ascii", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "read_ply", "type": "Callable[[Any], Dict[str, Any]]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "write_ply", "type": "Callable[..., bool]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "write_ply", "type": "Callable[..., bool]"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "read_ply", "type": "Callable[[Any], Dict[str, Any]]"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "read_ply", "type": "Callable[[Any], Dict[str, Any]]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "read_npz", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assert_vertex_xyz", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "npz", "type": "Dict[Any, Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "assert_vertex_color", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "npz", "type": "Dict[Any, Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assert_ply_face", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "npz", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "read_ply", "type": "Callable[[Any], Dict[str, Any]]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "write_npz", "type": "Callable[..., bool]"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "read_npz", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "read_obj", "type": "Callable[[Any], Dict[str, Any]]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "assert_vertex_xyz", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "obj", "type": "Dict[str, Any]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "read_ply", "type": "Callable[[Any], Dict[str, Any]]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "write_obj", "type": "Callable[..., bool]"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "read_obj", "type": "Callable[[Any], Dict[str, Any]]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 8, "col_offset": 9, "nodeName": "path", "type": "module"}, {"lineNumber": 8, "col_offset": 25, "nodeName": "realpath", "type": "Callable"}, {"lineNumber": 8, "col_offset": 42, "nodeName": "__file__", "type": "str"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "data_path", "type": "str"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "data_path", "type": "str"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "data_path", "type": "str"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "data_path", "type": "str"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "data_path", "type": "str"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "data_path", "type": "str"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "data_path", "type": "str"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "data_path", "type": "str"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "data_path", "type": "str"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "data_path", "type": "str"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "data_path", "type": "str"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 114, "col_offset": 14, "nodeName": "data_path", "type": "str"}, {"lineNumber": 8, "col_offset": 9, "nodeName": "os", "type": "module"}, {"lineNumber": 8, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 74, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 50, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 51, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 72, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 50, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "writed_ply_ascii", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "writed_ply_bin", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "writed_ply_ascii", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "writed_ply_bin", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 72, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 50, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "writed_npz", "type": "Dict[Any, Any]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "writed_npz", "type": "Dict[Any, Any]"}, {"lineNumber": 107, "col_offset": 47, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 68, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 50, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 50, "nodeName": "writed_obj", "type": "Dict[str, Any]"}, {"lineNumber": 8, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "data", "type": "Any"}]