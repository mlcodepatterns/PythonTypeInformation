[{"lineNumber": 21, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "description", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "applyScaling", "type": "bool"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "applyColormap", "type": "bool"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "maximumValue", "type": "float"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "applyScaling", "type": "Union[bool, Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "colormap", "type": "Tuple[()]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "pixelType", "type": "str"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "applyColormap", "type": "Union[bool, Any]"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "pixelType", "type": "str"}, {"lineNumber": 101, "col_offset": 44, "nodeName": "colormap", "type": "Union[Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray], Tuple[()]]"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "inBlock", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "red", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "ir", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "outBlock", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "applyScaling", "type": "bool"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "pixelBlocks", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "keyMetadata", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "NDVI"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "NDVI"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "NDVI"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "NDVI"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "red", "type": "int"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "ir", "type": "int"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "has_key", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "red", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "has_key", "type": "Any"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "ir", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "has_key", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "method", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "applyColormap", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "applyScaling", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "self", "type": "NDVI"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "maximumValue", "type": "float"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "self", "type": "NDVI"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "pixelType", "type": "str"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "colormap", "type": "Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "pixelBlocks", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "self", "type": "NDVI"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "outBlock", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "copyto", "type": "Any"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "outBlock", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "bandIndex", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "scalars", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "scalars", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "scalars", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "scalars", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "lower", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "NDVI"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "method", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "NDVI"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "applyColormap", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 75, "nodeName": "maximumValue", "type": "float"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "inBlock", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "inBlock", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "ir", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "red", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "ir", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "red", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "pixelBlocks", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "keyMetadata", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "bandIndex", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "red", "type": "Union[Any, int]"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "ir", "type": "Union[Any, int]"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "self", "type": "NDVI"}, {"lineNumber": 82, "col_offset": 54, "nodeName": "method", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "outBlock", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "keyMetadata", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "keyMetadata", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "keyMetadata", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "np", "type": "module"}]