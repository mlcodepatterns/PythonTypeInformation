[{"lineNumber": 7, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "getParameterInfo", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "getConfiguration", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "updateRasterInfo", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "updateKeyMetadata", "type": "Callable[..., Any]"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "description", "type": "str"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "props", "type": "None"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "props", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "p", "type": "Union[Any, str]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "bandCount", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "bandProps", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "b", "type": "Union[Any, str]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "props", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "props", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "names", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "keyMetadatafor", "type": "Any"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 11, "col_offset": 21, "nodeName": "Trace", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "props", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "props", "type": "Dict[Union[Any, str], Union[Any, str, List[List[Dict[nothing, nothing]]]]]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "lower", "type": "Union[Any, Callable[[], str]]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "props", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "strip", "type": "Union[Any, Callable[..., str]]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "bandNames", "type": "Union[List[str], Any]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "k", "type": "int"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "log", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "props", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "keyMetadata", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "bandIndex", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "bandProps", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "props", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "log", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "json", "type": "module"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "get", "type": "Callable"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "p", "type": "Union[Any, str]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "props", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "get", "type": "Callable"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "props", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "bandProps", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "b", "type": "Union[str, Any]"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "split", "type": "Union[Callable[..., List[str]], Any]"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 86, "col_offset": 72, "nodeName": "props", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "keyMetadata", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "props", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "keyMetadata", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "bandProps", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 107, "col_offset": 73, "nodeName": "keyMetadata", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "p", "type": "Union[Any, str]"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "keys", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "k", "type": "int"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "b", "type": "Union[str, Any]"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "min", "type": "Callable"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "bandNames", "type": "Union[Any, List[str]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 86, "col_offset": 72, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "keys", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "bandProps", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "bandIndex", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "keys", "type": "Any"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "props", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "keyMetadata", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 105, "col_offset": 74, "nodeName": "v", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "props", "type": "Any"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "bandProps", "type": "Any"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 83, "col_offset": 54, "nodeName": "bandNames", "type": "Union[Any, List[str]]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "bandProps", "type": "Any"}, {"lineNumber": 84, "col_offset": 53, "nodeName": "k", "type": "int"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "props", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "bandProps", "type": "Any"}, {"lineNumber": 98, "col_offset": 49, "nodeName": "bandIndex", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "props", "type": "Any"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 105, "col_offset": 57, "nodeName": "v", "type": "Any"}, {"lineNumber": 105, "col_offset": 60, "nodeName": "unicode", "type": "Type[unicode]"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "v", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "bandCount", "type": "Any"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "k", "type": "int"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "self", "type": "KeyMetadata"}, {"lineNumber": 77, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 61, "nodeName": "bandProps", "type": "Any"}]