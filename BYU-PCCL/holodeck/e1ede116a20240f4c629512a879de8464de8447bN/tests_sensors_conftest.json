[{"lineNumber": 6, "col_offset": 0, "nodeName": "pytest_generate_tests", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "env_1024", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "get_abuse_world", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "abuse_world", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "agent_abuse_world", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "rotation_env", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "shared_1024_env", "type": "None"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "shared_rotation_env", "type": "None"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "shared_abuse_env", "type": "None"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "binary_path", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "shared_abuse_env", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 9, "col_offset": 23, "nodeName": "fixturenames", "type": "Any"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "shared_1024_env", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "binary_path", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "shared_1024_env", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "get_binary_path_for_package", "type": "Any"}, {"lineNumber": 78, "col_offset": 7, "nodeName": "shared_abuse_env", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "reset", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "get_abuse_world", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "get_abuse_world", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "env", "type": "Any"}, {"lineNumber": 123, "col_offset": 7, "nodeName": "shared_rotation_env", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "binary_path", "type": "Any"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "shared_rotation_env", "type": "Any"}, {"lineNumber": 9, "col_offset": 23, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "parametrize", "type": "Any"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "fixturenames", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "get_binary_path_for_package", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "HolodeckEnvironment", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "shared_1024_env", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "packagemanager", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "HolodeckEnvironment", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "shared_abuse_env", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "get_binary_path_for_package", "type": "Any"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "HolodeckEnvironment", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "shared_rotation_env", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "parametrize", "type": "Any"}, {"lineNumber": 13, "col_offset": 32, "nodeName": "fixturenames", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "packagemanager", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "environments", "type": "Any"}, {"lineNumber": 61, "col_offset": 77, "nodeName": "cfg", "type": "Dict[str, Union[str, List[Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, int]]]], int, List[float]]]], int]]"}, {"lineNumber": 62, "col_offset": 80, "nodeName": "binary_path", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "shared_1024_env", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "holodeck", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "environments", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "abuse_config", "type": "Dict[str, Union[str, List[Union[Dict[str, Union[str, List[Dict[str, str]], int, List[Union[float, int]], List[int]]], Dict[str, Union[str, List[Dict[str, str]], int, List[int]]]]]]]"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "binary_path", "type": "Any"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "packagemanager", "type": "Any"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "environments", "type": "Any"}, {"lineNumber": 125, "col_offset": 81, "nodeName": "cfg", "type": "Dict[str, Union[str, List[Dict[str, Union[str, List[Dict[str, Union[str, List[int]]]], int, List[float]]]]]]"}, {"lineNumber": 126, "col_offset": 84, "nodeName": "binary_path", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "shared_rotation_env", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 13, "col_offset": 32, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "parametrize", "type": "Any"}, {"lineNumber": 15, "col_offset": 31, "nodeName": "fixturenames", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "holodeck", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "holodeck", "type": "Any"}, {"lineNumber": 64, "col_offset": 73, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "holodeck", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "holodeck", "type": "Any"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "holodeck", "type": "Any"}, {"lineNumber": 128, "col_offset": 77, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 15, "col_offset": 31, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "parametrize", "type": "Any"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "fixturenames", "type": "Any"}, {"lineNumber": 64, "col_offset": 77, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 128, "col_offset": 81, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "parametrize", "type": "Any"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "fixturenames", "type": "Any"}, {"lineNumber": 64, "col_offset": 77, "nodeName": "uuid", "type": "module"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "uuid", "type": "module"}, {"lineNumber": 128, "col_offset": 81, "nodeName": "uuid", "type": "module"}, {"lineNumber": 16, "col_offset": 67, "nodeName": "android_joints", "type": "List[Any]"}, {"lineNumber": 16, "col_offset": 98, "nodeName": "handagent_joints", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "parametrize", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "fixturenames", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "parametrize", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "metafunc", "type": "Any"}]