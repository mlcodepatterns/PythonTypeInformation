[{"lineNumber": 24, "col_offset": 0, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 207, "col_offset": 46, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 220, "col_offset": 43, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 231, "col_offset": 41, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 275, "col_offset": 26, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 285, "col_offset": 27, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 305, "col_offset": 26, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 347, "col_offset": 44, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 376, "col_offset": 34, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 433, "col_offset": 29, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 455, "col_offset": 30, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 507, "col_offset": 31, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 539, "col_offset": 32, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 622, "col_offset": 33, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 732, "col_offset": 30, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 816, "col_offset": 29, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 950, "col_offset": 27, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 13, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "use", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "matplotlib", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "expected", "type": "imgaug.random.RNG"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "bgen", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "rs", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "seed", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "global_gen", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "dummy_bitgen", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "dummy_rs", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "state", "type": "List[Any]"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "return_value", "type": "List[str]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 727, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 792, "col_offset": 8, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 798, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 799, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 808, "col_offset": 8, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 810, "col_offset": 8, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 822, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 838, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 839, "col_offset": 35, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 853, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 854, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 856, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 869, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 870, "col_offset": 35, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 884, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 896, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 897, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 899, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 908, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 920, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 930, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 955, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 956, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 956, "col_offset": 40, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 958, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 968, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 969, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 969, "col_offset": 33, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 982, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 983, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 983, "col_offset": 40, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 985, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 998, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 999, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 999, "col_offset": 33, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1002, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1011, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1013, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1031, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1033, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1034, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1047, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1049, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1050, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 6, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 6, "col_offset": 30, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "reseed", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "SUPPORTS_NEW_NP_RNG_STYLE", "type": "bool"}, {"lineNumber": 46, "col_offset": 53, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "GLOBAL_RNG", "type": "Any"}, {"lineNumber": 55, "col_offset": 58, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "rng", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "equals", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "expected", "type": "imgaug.random.RNG"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "equals", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "CURRENT_RANDOM_STATE", "type": "Any"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "GLOBAL_RNG", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "normalize_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "generator", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 133, "col_offset": 54, "nodeName": "expected", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 47, "nodeName": "bgen", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "bit_generator", "type": "Any"}, {"lineNumber": 142, "col_offset": 39, "nodeName": "bgen", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "gen", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 47, "nodeName": "rs", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 47, "nodeName": "seed", "type": "int"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 54, "nodeName": "seed", "type": "int"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 173, "col_offset": 54, "nodeName": "expected", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "convert_seed_sequence_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 58, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 217, "col_offset": 51, "nodeName": "expected", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 222, "col_offset": 38, "nodeName": "generator", "type": "Any"}, {"lineNumber": 224, "col_offset": 14, "nodeName": "create_pseudo_random_generator_", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 228, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 228, "col_offset": 51, "nodeName": "expected", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "create_fully_random_generator", "type": "Callable[[], Any]"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "SFC64", "type": "Any"}, {"lineNumber": 254, "col_offset": 49, "nodeName": "mock_bitgen", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 255, "col_offset": 39, "nodeName": "dummy_bitgen", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 266, "col_offset": 55, "nodeName": "mock_rs", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 267, "col_offset": 35, "nodeName": "dummy_rs", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 272, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "generate_seed_", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 282, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 288, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "generate_seeds_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 290, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "gen", "type": "Any"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "SEED_MIN_VALUE", "type": "int"}, {"lineNumber": 293, "col_offset": 42, "nodeName": "SEED_MAX_VALUE", "type": "int"}, {"lineNumber": 296, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "generate_seeds_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 298, "col_offset": 41, "nodeName": "gen", "type": "Any"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "is_np_array", "type": "Callable[[Any], bool]"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 311, "col_offset": 19, "nodeName": "copy_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 311, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 314, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "copy_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 326, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "_copy_generator_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "gen", "type": "Any"}, {"lineNumber": 333, "col_offset": 26, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 334, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 334, "col_offset": 51, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 339, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 341, "col_offset": 19, "nodeName": "_copy_generator_np117", "type": "Callable[[Any], Any]"}, {"lineNumber": 341, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "gen", "type": "Any"}, {"lineNumber": 343, "col_offset": 26, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 344, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 344, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 344, "col_offset": 51, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 351, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 353, "col_offset": 43, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 353, "col_offset": 56, "nodeName": "gen", "type": "Any"}, {"lineNumber": 355, "col_offset": 17, "nodeName": "copy_generator_unless_global_rng", "type": "Any"}, {"lineNumber": 355, "col_offset": 59, "nodeName": "gen", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 359, "col_offset": 25, "nodeName": "gen", "type": "Any"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 367, "col_offset": 43, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 367, "col_offset": 56, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 369, "col_offset": 17, "nodeName": "copy_generator_unless_global_rng", "type": "Any"}, {"lineNumber": 369, "col_offset": 59, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 382, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 384, "col_offset": 17, "nodeName": "reset_generator_cache_", "type": "Callable[[Any], Any]"}, {"lineNumber": 384, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 398, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 399, "col_offset": 33, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 399, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 401, "col_offset": 16, "nodeName": "_get_generator_state_np117", "type": "Callable[[Any], Any]"}, {"lineNumber": 401, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 403, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 404, "col_offset": 38, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 404, "col_offset": 54, "nodeName": "state", "type": "Any"}, {"lineNumber": 405, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 405, "col_offset": 47, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 407, "col_offset": 26, "nodeName": "reset_generator_cache_", "type": "Callable[[Any], Any]"}, {"lineNumber": 407, "col_offset": 58, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 409, "col_offset": 46, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 410, "col_offset": 46, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 416, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "_get_generator_state_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 418, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 419, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "state", "type": "List[Any]"}, {"lineNumber": 421, "col_offset": 25, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 421, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 422, "col_offset": 38, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 423, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 423, "col_offset": 47, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 425, "col_offset": 26, "nodeName": "reset_generator_cache_", "type": "Callable[[Any], Any]"}, {"lineNumber": 425, "col_offset": 58, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 427, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 427, "col_offset": 46, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 428, "col_offset": 46, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "mock_derive_gens", "type": "Any"}, {"lineNumber": 437, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 439, "col_offset": 22, "nodeName": "derive_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 439, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 441, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 442, "col_offset": 15, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 445, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 446, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 446, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 448, "col_offset": 22, "nodeName": "derive_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 448, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 461, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 463, "col_offset": 17, "nodeName": "derive_generators_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 463, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 465, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 465, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 477, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 478, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 478, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 480, "col_offset": 17, "nodeName": "derive_generators_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 480, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 492, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 493, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 493, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 495, "col_offset": 17, "nodeName": "derive_generators_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 495, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 498, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 513, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 515, "col_offset": 17, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 515, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 517, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 517, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 517, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 529, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 530, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 534, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 535, "col_offset": 16, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 535, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 543, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 546, "col_offset": 38, "nodeName": "gen", "type": "Any"}, {"lineNumber": 546, "col_offset": 43, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 548, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 548, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 548, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 560, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 560, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 561, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 561, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "_set_generator_state_np117_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 564, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 566, "col_offset": 46, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 566, "col_offset": 52, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 567, "col_offset": 46, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 567, "col_offset": 52, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 575, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 575, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 576, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 576, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "_set_generator_state_np117_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 581, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 582, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 583, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 584, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 586, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 586, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 586, "col_offset": 37, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 587, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 587, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 587, "col_offset": 37, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 591, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 592, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 593, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 593, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 594, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 594, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "_set_generator_state_np116_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 599, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 599, "col_offset": 46, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 599, "col_offset": 52, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 600, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 600, "col_offset": 46, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 600, "col_offset": 52, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 605, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 606, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 606, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 607, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 607, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "_set_generator_state_np116_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 612, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 613, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 614, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 615, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 617, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 617, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 617, "col_offset": 37, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 618, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 618, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 618, "col_offset": 37, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 628, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 630, "col_offset": 17, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 630, "col_offset": 48, "nodeName": "gen", "type": "Any"}, {"lineNumber": 630, "col_offset": 53, "nodeName": "gen", "type": "Any"}, {"lineNumber": 632, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 632, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 632, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 644, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 646, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 646, "col_offset": 55, "nodeName": "gen", "type": "Any"}, {"lineNumber": 646, "col_offset": 60, "nodeName": "gen", "type": "Any"}, {"lineNumber": 648, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 651, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 653, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 653, "col_offset": 55, "nodeName": "gen", "type": "Any"}, {"lineNumber": 653, "col_offset": 60, "nodeName": "gen", "type": "Any"}, {"lineNumber": 655, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 660, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 661, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 663, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 663, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 663, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 665, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 668, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 669, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 671, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 671, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 671, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 673, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 678, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 680, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 680, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 683, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 688, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 688, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 691, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 696, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 697, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 699, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 699, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 699, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 701, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 704, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 705, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 707, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 707, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 707, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 709, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 714, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 715, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 716, "col_offset": 38, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 718, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 718, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 718, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 720, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 723, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 724, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 725, "col_offset": 38, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 727, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 727, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 727, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 729, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 736, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "advance_generator_", "type": "Callable[[Any], None]"}, {"lineNumber": 738, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 740, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 740, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 740, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 750, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 751, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 751, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 753, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 754, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 754, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 756, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 758, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 758, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 764, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 765, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 765, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 767, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 768, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 768, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 770, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 772, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 772, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 780, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 781, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 781, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 784, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 785, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 785, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 788, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 790, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 791, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 792, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 798, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 799, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 799, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 802, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 802, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 803, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 803, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 806, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 806, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 808, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 809, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 810, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 821, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 824, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 824, "col_offset": 44, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 827, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 838, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 840, "col_offset": 12, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 842, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 842, "col_offset": 44, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 845, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 853, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 856, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 856, "col_offset": 44, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 858, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 859, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 869, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 871, "col_offset": 12, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 873, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 873, "col_offset": 44, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 875, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 876, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 883, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 886, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 886, "col_offset": 44, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 888, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 896, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 899, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 899, "col_offset": 44, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 901, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 908, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 910, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 910, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 913, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 914, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 915, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 920, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 922, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 922, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 925, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 926, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 927, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 930, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 932, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 932, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 935, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 936, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 937, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 940, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 942, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 942, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 945, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 946, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 947, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 955, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 956, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 958, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 958, "col_offset": 42, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 960, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 968, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 969, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 970, "col_offset": 12, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 972, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 972, "col_offset": 42, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 974, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 975, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 982, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 983, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 985, "col_offset": 14, "nodeName": "empty", "type": "Any"}, {"lineNumber": 986, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 986, "col_offset": 42, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 989, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 992, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 998, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 999, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1000, "col_offset": 12, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1002, "col_offset": 14, "nodeName": "empty", "type": "Any"}, {"lineNumber": 1003, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1003, "col_offset": 42, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1006, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1007, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1011, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1013, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1013, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1015, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1016, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1017, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1022, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1024, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1024, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1026, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1027, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1028, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1031, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1033, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1034, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1034, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1036, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1037, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1038, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1040, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 1041, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1042, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1047, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1049, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1050, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1050, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1052, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1053, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1054, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1056, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 1057, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1058, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 6, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 6, "col_offset": 30, "nodeName": "sys", "type": "module"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "supports_new_numpy_rng_style", "type": "Callable[[], bool]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "rng", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "GLOBAL_RNG", "type": "Any"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "generate_seed_", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 58, "nodeName": "seed", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 163, "col_offset": 58, "nodeName": "expected", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "rs", "type": "Any"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 201, "col_offset": 55, "nodeName": "expected", "type": "Any"}, {"lineNumber": 203, "col_offset": 23, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 204, "col_offset": 55, "nodeName": "expected", "type": "Any"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "copylib", "type": "module"}, {"lineNumber": 224, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "generate_seed_", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 36, "nodeName": "global_gen", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "mock_bitgen", "type": "Any"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "_create_fully_random_generator_np117", "type": "Callable[[], Any]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "mock_bitgen", "type": "Any"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 261, "col_offset": 40, "nodeName": "dummy_bitgen", "type": "Any"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "mock_rs", "type": "Any"}, {"lineNumber": 269, "col_offset": 21, "nodeName": "_create_fully_random_generator_np116", "type": "Callable[[], Any]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "mock_rs", "type": "Any"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 272, "col_offset": 54, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "mock_seeds", "type": "Any"}, {"lineNumber": 288, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "mock_integers", "type": "Any"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 293, "col_offset": 42, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 296, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "ia", "type": "module"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 311, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 321, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 339, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 339, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 341, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 344, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 351, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 353, "col_offset": 43, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 355, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 367, "col_offset": 43, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 369, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 382, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 384, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 387, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 391, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 398, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 399, "col_offset": 33, "nodeName": "copylib", "type": "module"}, {"lineNumber": 401, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "copylib", "type": "module"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 405, "col_offset": 30, "nodeName": "copylib", "type": "module"}, {"lineNumber": 407, "col_offset": 26, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 411, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 411, "col_offset": 50, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 412, "col_offset": 50, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "copylib", "type": "module"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 421, "col_offset": 25, "nodeName": "copylib", "type": "module"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 422, "col_offset": 54, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 422, "col_offset": 60, "nodeName": "state", "type": "List[Any]"}, {"lineNumber": 423, "col_offset": 30, "nodeName": "copylib", "type": "module"}, {"lineNumber": 425, "col_offset": 26, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 427, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 429, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 429, "col_offset": 50, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 430, "col_offset": 50, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 437, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 439, "col_offset": 22, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "mock_derive_gens", "type": "Any"}, {"lineNumber": 445, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 446, "col_offset": 19, "nodeName": "copylib", "type": "module"}, {"lineNumber": 448, "col_offset": 22, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 450, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 450, "col_offset": 50, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 450, "col_offset": 63, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 452, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 452, "col_offset": 50, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 452, "col_offset": 60, "nodeName": "gen", "type": "Any"}, {"lineNumber": 461, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 463, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 466, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 468, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 470, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 472, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 477, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 478, "col_offset": 19, "nodeName": "copylib", "type": "module"}, {"lineNumber": 480, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 485, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 485, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 486, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 486, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 487, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 489, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 489, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 489, "col_offset": 55, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 492, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 493, "col_offset": 19, "nodeName": "copylib", "type": "module"}, {"lineNumber": 495, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 497, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 498, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 500, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 500, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 501, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 501, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 502, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 504, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 504, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 504, "col_offset": 55, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 513, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 515, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 517, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 518, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 520, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 522, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 523, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 524, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 529, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 531, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 531, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 531, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 531, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 534, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 535, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 536, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 536, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 536, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 536, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 543, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 548, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 549, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 549, "col_offset": 52, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 550, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 552, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 552, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 552, "col_offset": 52, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 553, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 558, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 559, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 560, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 561, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 564, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 564, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 568, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 568, "col_offset": 50, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 568, "col_offset": 56, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 573, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 574, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 575, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 576, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 579, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 579, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 581, "col_offset": 19, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 582, "col_offset": 19, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 583, "col_offset": 24, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 584, "col_offset": 24, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 586, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 587, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 588, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 588, "col_offset": 31, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 588, "col_offset": 41, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 591, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 592, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 593, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 594, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 597, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 597, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 599, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 600, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 601, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 601, "col_offset": 50, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 601, "col_offset": 56, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 605, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 606, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 607, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 610, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 610, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 612, "col_offset": 19, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 613, "col_offset": 19, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 614, "col_offset": 24, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 615, "col_offset": 24, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 617, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 618, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 619, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 619, "col_offset": 31, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 619, "col_offset": 41, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 628, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 630, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 632, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 633, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 634, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 634, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 634, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 635, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 637, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 638, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 638, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 639, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 644, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 644, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 646, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 651, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 653, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 660, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 660, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 661, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 661, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 663, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 668, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 669, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 671, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 678, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 678, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 680, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 681, "col_offset": 55, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 681, "col_offset": 72, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 688, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 689, "col_offset": 55, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 689, "col_offset": 72, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 696, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 696, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 697, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 697, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 699, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 704, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 705, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 707, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 714, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 714, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 715, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 715, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 716, "col_offset": 44, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 716, "col_offset": 73, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 718, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 723, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 724, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 725, "col_offset": 44, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 725, "col_offset": 73, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 727, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 736, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 740, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 741, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 742, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 744, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 745, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 750, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 750, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 751, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 754, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 758, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 758, "col_offset": 51, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 758, "col_offset": 68, "nodeName": "gen", "type": "Any"}, {"lineNumber": 759, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 759, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 759, "col_offset": 61, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 760, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 760, "col_offset": 50, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 760, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 761, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 761, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 761, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 764, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 765, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 768, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 772, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 772, "col_offset": 51, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 772, "col_offset": 68, "nodeName": "gen", "type": "Any"}, {"lineNumber": 773, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 773, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 773, "col_offset": 61, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 774, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 774, "col_offset": 50, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 774, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 775, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 775, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 775, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 780, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 780, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 781, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 785, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 790, "col_offset": 24, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 791, "col_offset": 23, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 792, "col_offset": 29, "nodeName": "gen", "type": "Any"}, {"lineNumber": 793, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 793, "col_offset": 30, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 793, "col_offset": 44, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 794, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 794, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 794, "col_offset": 50, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 795, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 795, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 795, "col_offset": 50, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 798, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 799, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 802, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 803, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 806, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 808, "col_offset": 24, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 809, "col_offset": 23, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 810, "col_offset": 29, "nodeName": "gen", "type": "Any"}, {"lineNumber": 811, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 811, "col_offset": 30, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 811, "col_offset": 44, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 812, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 812, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 812, "col_offset": 50, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 813, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 813, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 813, "col_offset": 50, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 821, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 824, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 838, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 842, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 853, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 856, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 859, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 869, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 873, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 876, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 883, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 886, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 896, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 899, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 908, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 908, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 910, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 913, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 914, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 914, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 915, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 915, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 920, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 920, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 922, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 925, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 926, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 926, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 927, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 927, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 930, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 932, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 935, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 936, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 936, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 937, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 937, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 940, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 942, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 945, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 946, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 946, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 947, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 947, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 953, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 955, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 956, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 958, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 960, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 968, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 969, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 972, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 975, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 980, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 982, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 983, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 985, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 986, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 987, "col_offset": 46, "nodeName": "out", "type": "Any"}, {"lineNumber": 989, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 992, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 998, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 999, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1002, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1003, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1004, "col_offset": 46, "nodeName": "out", "type": "Any"}, {"lineNumber": 1007, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1008, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 1011, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1013, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1015, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1016, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1016, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1017, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1017, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1022, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1022, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1024, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1026, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1027, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1027, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1028, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1028, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1031, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1033, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1034, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1034, "col_offset": 65, "nodeName": "out", "type": "Any"}, {"lineNumber": 1036, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1037, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1037, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1038, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1038, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1040, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1040, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1041, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1041, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1042, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1042, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1047, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1047, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1049, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1050, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1050, "col_offset": 65, "nodeName": "out", "type": "Any"}, {"lineNumber": 1052, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1053, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1053, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1054, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1054, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1056, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1056, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1057, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1057, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1058, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1058, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 203, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 222, "col_offset": 38, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 269, "col_offset": 21, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 272, "col_offset": 54, "nodeName": "random", "type": "Any"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 321, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 339, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 339, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 411, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 429, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 450, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 452, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 468, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 472, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 484, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 484, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 485, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 485, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 486, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 486, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 487, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 487, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 487, "col_offset": 61, "nodeName": "result", "type": "Any"}, {"lineNumber": 489, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 492, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 499, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 499, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 500, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 500, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 501, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 501, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 502, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 502, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 502, "col_offset": 61, "nodeName": "result", "type": "Any"}, {"lineNumber": 504, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 517, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 520, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 523, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 524, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 531, "col_offset": 33, "nodeName": "bit_generator", "type": "Any"}, {"lineNumber": 536, "col_offset": 33, "nodeName": "bit_generator", "type": "Any"}, {"lineNumber": 548, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 550, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 552, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 553, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 558, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 559, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 564, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 568, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 573, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 574, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 579, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 588, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 591, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 592, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 597, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 601, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 605, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 610, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 619, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 632, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 634, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 635, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 639, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 644, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 644, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 651, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 660, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 660, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 661, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 661, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 668, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 669, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 678, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 678, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 681, "col_offset": 55, "nodeName": "copylib", "type": "module"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 689, "col_offset": 55, "nodeName": "copylib", "type": "module"}, {"lineNumber": 696, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 696, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 697, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 697, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 704, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 705, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 714, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 714, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 715, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 715, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 716, "col_offset": 44, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 723, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 724, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 725, "col_offset": 44, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 740, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 742, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 745, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 750, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 750, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 758, "col_offset": 51, "nodeName": "copylib", "type": "module"}, {"lineNumber": 759, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 760, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 761, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 764, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 772, "col_offset": 51, "nodeName": "copylib", "type": "module"}, {"lineNumber": 773, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 774, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 775, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 780, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 780, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 793, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 794, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 795, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 798, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 811, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 812, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 813, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 859, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 876, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 908, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 908, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 913, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 920, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 920, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 925, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 930, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 935, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 940, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 945, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 953, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 960, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 975, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 980, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 989, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 992, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1007, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1011, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1015, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1022, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1022, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1026, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1031, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1036, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1047, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1047, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1052, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "random", "type": "Any"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 199, "col_offset": 39, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 203, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 222, "col_offset": 38, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 531, "col_offset": 33, "nodeName": "gen", "type": "Any"}, {"lineNumber": 536, "col_offset": 33, "nodeName": "gen", "type": "Any"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 39, "nodeName": "np", "type": "module"}]