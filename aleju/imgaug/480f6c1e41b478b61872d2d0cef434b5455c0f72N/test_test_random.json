[{"lineNumber": 23, "col_offset": 0, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 673, "col_offset": 40, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 678, "col_offset": 26, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 689, "col_offset": 16, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 745, "col_offset": 31, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 759, "col_offset": 32, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 833, "col_offset": 37, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 864, "col_offset": 46, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 877, "col_offset": 43, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 888, "col_offset": 41, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 932, "col_offset": 26, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 942, "col_offset": 27, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 962, "col_offset": 26, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1004, "col_offset": 50, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1033, "col_offset": 34, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1090, "col_offset": 29, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1112, "col_offset": 30, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1164, "col_offset": 31, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1196, "col_offset": 32, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1279, "col_offset": 33, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1389, "col_offset": 30, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1473, "col_offset": 29, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1607, "col_offset": 27, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 13, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "unittest", "type": "module"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "_", "type": "imgaug.random.RNG"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "state", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "rng2", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "return_value", "type": "int"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "return_value", "type": "List[int]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "generator", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "rngs", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "rngs", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "gen", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "rng_glob", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "generator", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "generator", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 314, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "generator", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 412, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "kwargs_subcall", "type": "Dict[str, Tuple[int]]"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 435, "col_offset": 38, "nodeName": "_side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "return_value", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 436, "col_offset": 48, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "generator", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 438, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "generator", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 459, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "kwargs_subcall", "type": "Dict[str, Union[Tuple[int], float]]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 482, "col_offset": 38, "nodeName": "_side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "return_value", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 483, "col_offset": 48, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "generator", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 485, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "generator", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 506, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "kwargs_subcall", "type": "Dict[str, Tuple[int]]"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 528, "col_offset": 38, "nodeName": "_side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "return_value", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 529, "col_offset": 48, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "generator", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 531, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "generator", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 569, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "mock_func", "type": "Union[unittest.mock.Mock, mock.Mock]"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "expected", "type": "imgaug.random.RNG"}, {"lineNumber": 695, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "images_aug", "type": "List[Any]"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 716, "col_offset": 12, "nodeName": "other_image_aug", "type": "Any"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "aug", "type": "Any"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "image_aug", "type": "Any"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "images_aug", "type": "List[Any]"}, {"lineNumber": 729, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 735, "col_offset": 12, "nodeName": "other_image_aug", "type": "Any"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "aug", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "image_aug", "type": "Any"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 768, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 795, "col_offset": 8, "nodeName": "bgen", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 808, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 813, "col_offset": 8, "nodeName": "rs", "type": "Any"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 817, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "seed", "type": "int"}, {"lineNumber": 827, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 829, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 838, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 842, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 852, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 854, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 868, "col_offset": 8, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 879, "col_offset": 8, "nodeName": "global_gen", "type": "Any"}, {"lineNumber": 881, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 892, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 893, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 895, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 897, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 909, "col_offset": 8, "nodeName": "dummy_bitgen", "type": "Any"}, {"lineNumber": 921, "col_offset": 8, "nodeName": "dummy_rs", "type": "Any"}, {"lineNumber": 935, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 937, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 945, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 947, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 953, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 955, "col_offset": 8, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 965, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 966, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 968, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 977, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 978, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 980, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 986, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 988, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 996, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 998, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1008, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1009, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1010, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 1012, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1021, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 1026, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1037, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1038, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1039, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1041, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1043, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 1055, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1056, "col_offset": 8, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 1058, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1060, "col_offset": 8, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1062, "col_offset": 8, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 1064, "col_offset": 8, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 1072, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1073, "col_offset": 8, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 1075, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1076, "col_offset": 8, "nodeName": "state", "type": "List[Any]"}, {"lineNumber": 1078, "col_offset": 8, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1080, "col_offset": 8, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 1082, "col_offset": 8, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 1093, "col_offset": 8, "nodeName": "return_value", "type": "List[str]"}, {"lineNumber": 1094, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1096, "col_offset": 8, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 1102, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1103, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1105, "col_offset": 8, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 1116, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1117, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1118, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1120, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1134, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1135, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1137, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1149, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1150, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1152, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1168, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1169, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1170, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1172, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1186, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1187, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1191, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1192, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1200, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1201, "col_offset": 8, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 1215, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1216, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1217, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1218, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1230, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1231, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1232, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1233, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1238, "col_offset": 8, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1239, "col_offset": 8, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1240, "col_offset": 8, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 1241, "col_offset": 8, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 1248, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1249, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1250, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1251, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1261, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1262, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1263, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1264, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1269, "col_offset": 8, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1270, "col_offset": 8, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1271, "col_offset": 8, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 1272, "col_offset": 8, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 1283, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1284, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1285, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1287, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1301, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1303, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1308, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1310, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 1317, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1318, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1320, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1325, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1326, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1328, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 1335, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1343, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1353, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1354, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1356, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1361, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1362, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1364, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 1371, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1372, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1375, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1380, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1381, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1384, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 1393, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1407, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1408, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1411, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1421, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1422, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1425, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1437, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1438, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1442, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1447, "col_offset": 8, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1448, "col_offset": 8, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1449, "col_offset": 8, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1455, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1456, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1460, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1465, "col_offset": 8, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1466, "col_offset": 8, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1467, "col_offset": 8, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1478, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1479, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1479, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1495, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1496, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1496, "col_offset": 35, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1510, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1511, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1511, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1513, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1526, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1527, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1527, "col_offset": 35, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1530, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1540, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1541, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1541, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1543, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1553, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1554, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1554, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1556, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1565, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1577, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1587, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1597, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1612, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1613, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1613, "col_offset": 40, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1615, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1625, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1626, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1626, "col_offset": 33, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1629, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1639, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1640, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1640, "col_offset": 40, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1642, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1655, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1656, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1656, "col_offset": 33, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1659, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1668, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1670, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1679, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1681, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1688, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1690, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1691, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1704, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1706, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1707, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 6, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 6, "col_offset": 30, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "reseed", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "SUPPORTS_NEW_NP_RNG_STYLE", "type": "bool"}, {"lineNumber": 45, "col_offset": 53, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "GLOBAL_RNG", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "generator", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "set_state_", "type": "Callable"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 85, "col_offset": 56, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "rng2", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "use_state_of_", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "rng2", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 95, "col_offset": 57, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "generator", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "generate_seed_", "type": "Callable[[], Any]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "seed", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 133, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "generate_seeds_", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "reset_cache_", "type": "Callable"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 148, "col_offset": 43, "nodeName": "generator", "type": "Any"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "mock_derive", "type": "Any"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "derive_rng_", "type": "Callable[[], Any]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 156, "col_offset": 35, "nodeName": "gen", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 157, "col_offset": 44, "nodeName": "generator", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "mock_derive", "type": "Any"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "derive_rngs_", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "generator", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "mock_equal", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "generator", "type": "Any"}, {"lineNumber": 177, "col_offset": 59, "nodeName": "generator", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "advance_", "type": "Callable"}, {"lineNumber": 202, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "advance_", "type": "Callable"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 205, "col_offset": 45, "nodeName": "generator", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "generator", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 214, "col_offset": 42, "nodeName": "generator", "type": "Any"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "mock_is_global", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "copy_unless_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "mock_is_global", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "copy_unless_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "duplicate", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "rngs", "type": "Any"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "duplicate", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "rngs", "type": "Any"}, {"lineNumber": 252, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "mock_create", "type": "Any"}, {"lineNumber": 254, "col_offset": 14, "nodeName": "create_fully_random", "type": "Callable"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 256, "col_offset": 32, "nodeName": "gen", "type": "Any"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 261, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 262, "col_offset": 33, "nodeName": "generator", "type": "Any"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "create_pseudo_random_", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 264, "col_offset": 35, "nodeName": "generator", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "integers", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "generator", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 283, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "random", "type": "Callable[..., Any]"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "generator", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[[Any], None]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "permutation", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 404, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "arr", "type": "Any"}, {"lineNumber": 409, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 411, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 417, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 423, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 424, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 427, "col_offset": 19, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 437, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 446, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 446, "col_offset": 35, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 447, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 447, "col_offset": 27, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 447, "col_offset": 36, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 452, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 454, "col_offset": 73, "nodeName": "arr", "type": "Any"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 458, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 464, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 470, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 471, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 474, "col_offset": 19, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 478, "col_offset": 25, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 481, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 484, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 493, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 493, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 493, "col_offset": 35, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 494, "col_offset": 27, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 494, "col_offset": 36, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 499, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 501, "col_offset": 59, "nodeName": "arr", "type": "Any"}, {"lineNumber": 503, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 505, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 511, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 517, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 518, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 521, "col_offset": 19, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 524, "col_offset": 59, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 527, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 530, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 539, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 539, "col_offset": 35, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 540, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 540, "col_offset": 27, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 540, "col_offset": 36, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 566, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 568, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "_test_sampling_func_alias", "type": "Callable[..., Any]"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "_test_sampling_func_alias", "type": "Callable[..., Any]"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "_test_sampling_func_alias", "type": "Callable[..., Any]"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "_test_sampling_func_alias", "type": "Callable[..., Any]"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "_test_sampling_func_alias", "type": "Callable[..., Any]"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "_test_sampling_func_alias", "type": "Callable[..., Any]"}, {"lineNumber": 599, "col_offset": 17, "nodeName": "rand", "type": "Callable[..., Any]"}, {"lineNumber": 600, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 601, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 603, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 605, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 608, "col_offset": 17, "nodeName": "randint", "type": "Callable[..., Any]"}, {"lineNumber": 609, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 612, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 613, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 614, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 617, "col_offset": 17, "nodeName": "randn", "type": "Callable[..., Any]"}, {"lineNumber": 618, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 619, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 620, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 621, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 625, "col_offset": 17, "nodeName": "random_integers", "type": "Callable[..., Any]"}, {"lineNumber": 626, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 628, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 630, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 631, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 634, "col_offset": 17, "nodeName": "random_integers", "type": "Callable[..., Any]"}, {"lineNumber": 635, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 636, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 637, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 638, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 639, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 640, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 643, "col_offset": 17, "nodeName": "random_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 644, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 645, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 646, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 647, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 648, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 649, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 652, "col_offset": 17, "nodeName": "tomaxint", "type": "Callable[..., Any]"}, {"lineNumber": 653, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 654, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 655, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 656, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 662, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 663, "col_offset": 20, "nodeName": "Mock", "type": "Union[Type[unittest.mock.Mock], Type[mock.Mock]]"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "mock_func", "type": "Union[mock.Mock, unittest.mock.Mock]"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 665, "col_offset": 16, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 665, "col_offset": 21, "nodeName": "fname_subcall", "type": "Any"}, {"lineNumber": 665, "col_offset": 36, "nodeName": "mock_func", "type": "Union[mock.Mock, unittest.mock.Mock]"}, {"lineNumber": 669, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 670, "col_offset": 15, "nodeName": "call_count", "type": "int"}, {"lineNumber": 675, "col_offset": 58, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 682, "col_offset": 14, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 684, "col_offset": 19, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 685, "col_offset": 15, "nodeName": "rng", "type": "Any"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "equals", "type": "Any"}, {"lineNumber": 686, "col_offset": 26, "nodeName": "expected", "type": "imgaug.random.RNG"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 704, "col_offset": 15, "nodeName": "equals", "type": "Any"}, {"lineNumber": 707, "col_offset": 16, "nodeName": "full", "type": "Any"}, {"lineNumber": 710, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 712, "col_offset": 12, "nodeName": "aug", "type": "Any"}, {"lineNumber": 716, "col_offset": 31, "nodeName": "images_aug", "type": "List[Any]"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 721, "col_offset": 14, "nodeName": "AdditiveGaussianNoise", "type": "Any"}, {"lineNumber": 722, "col_offset": 20, "nodeName": "aug", "type": "Any"}, {"lineNumber": 726, "col_offset": 16, "nodeName": "full", "type": "Any"}, {"lineNumber": 729, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 730, "col_offset": 12, "nodeName": "aug", "type": "Any"}, {"lineNumber": 735, "col_offset": 31, "nodeName": "images_aug", "type": "List[Any]"}, {"lineNumber": 739, "col_offset": 14, "nodeName": "AdditiveGaussianNoise", "type": "Any"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 741, "col_offset": 20, "nodeName": "aug", "type": "Any"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 751, "col_offset": 17, "nodeName": "normalize_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 751, "col_offset": 46, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 753, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 754, "col_offset": 51, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 755, "col_offset": 47, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 756, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 766, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 778, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 779, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 779, "col_offset": 25, "nodeName": "generator", "type": "Any"}, {"lineNumber": 784, "col_offset": 18, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 786, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 786, "col_offset": 47, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 788, "col_offset": 19, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 790, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 790, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 790, "col_offset": 54, "nodeName": "expected", "type": "Any"}, {"lineNumber": 795, "col_offset": 15, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 797, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 797, "col_offset": 47, "nodeName": "bgen", "type": "Any"}, {"lineNumber": 799, "col_offset": 15, "nodeName": "bit_generator", "type": "Any"}, {"lineNumber": 799, "col_offset": 39, "nodeName": "bgen", "type": "Any"}, {"lineNumber": 804, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 808, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 808, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 810, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 810, "col_offset": 25, "nodeName": "gen", "type": "Any"}, {"lineNumber": 813, "col_offset": 13, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 815, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 815, "col_offset": 47, "nodeName": "rs", "type": "Any"}, {"lineNumber": 818, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 819, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 827, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 827, "col_offset": 47, "nodeName": "seed", "type": "int"}, {"lineNumber": 829, "col_offset": 19, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 829, "col_offset": 54, "nodeName": "seed", "type": "int"}, {"lineNumber": 830, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 830, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 830, "col_offset": 54, "nodeName": "expected", "type": "Any"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 838, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 840, "col_offset": 17, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 852, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 860, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 868, "col_offset": 18, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 870, "col_offset": 14, "nodeName": "convert_seed_sequence_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 870, "col_offset": 58, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 872, "col_offset": 19, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 874, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 874, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 874, "col_offset": 51, "nodeName": "expected", "type": "Any"}, {"lineNumber": 879, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 879, "col_offset": 38, "nodeName": "generator", "type": "Any"}, {"lineNumber": 881, "col_offset": 14, "nodeName": "create_pseudo_random_generator_", "type": "Callable[[], Any]"}, {"lineNumber": 883, "col_offset": 19, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 885, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 885, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 885, "col_offset": 51, "nodeName": "expected", "type": "Any"}, {"lineNumber": 892, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 893, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 895, "col_offset": 17, "nodeName": "create_fully_random_generator", "type": "Callable[[], Any]"}, {"lineNumber": 909, "col_offset": 23, "nodeName": "SFC64", "type": "Any"}, {"lineNumber": 911, "col_offset": 49, "nodeName": "mock_bitgen", "type": "Any"}, {"lineNumber": 912, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 912, "col_offset": 39, "nodeName": "dummy_bitgen", "type": "Any"}, {"lineNumber": 914, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 916, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 917, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 918, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 921, "col_offset": 19, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 923, "col_offset": 55, "nodeName": "mock_rs", "type": "Any"}, {"lineNumber": 924, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 924, "col_offset": 35, "nodeName": "dummy_rs", "type": "Any"}, {"lineNumber": 926, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 928, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 929, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 929, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 935, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 937, "col_offset": 12, "nodeName": "generate_seed_", "type": "Callable[[Any], Any]"}, {"lineNumber": 937, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 939, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 939, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 945, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 947, "col_offset": 12, "nodeName": "generate_seeds_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 947, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 950, "col_offset": 12, "nodeName": "gen", "type": "Any"}, {"lineNumber": 950, "col_offset": 17, "nodeName": "SEED_MIN_VALUE", "type": "int"}, {"lineNumber": 950, "col_offset": 42, "nodeName": "SEED_MAX_VALUE", "type": "int"}, {"lineNumber": 953, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 955, "col_offset": 16, "nodeName": "generate_seeds_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 955, "col_offset": 41, "nodeName": "gen", "type": "Any"}, {"lineNumber": 958, "col_offset": 15, "nodeName": "is_np_array", "type": "Callable[[Any], bool]"}, {"lineNumber": 958, "col_offset": 30, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 959, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 965, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 966, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 968, "col_offset": 19, "nodeName": "copy_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 968, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 970, "col_offset": 15, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 971, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 977, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 978, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 980, "col_offset": 19, "nodeName": "copy_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 980, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 982, "col_offset": 15, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 983, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 983, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 986, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 988, "col_offset": 19, "nodeName": "_copy_generator_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 988, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 990, "col_offset": 15, "nodeName": "gen", "type": "Any"}, {"lineNumber": 990, "col_offset": 26, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 991, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 991, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 991, "col_offset": 51, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 996, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 998, "col_offset": 19, "nodeName": "_copy_generator_np117", "type": "Callable[[Any], Any]"}, {"lineNumber": 998, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1000, "col_offset": 15, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1000, "col_offset": 26, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1001, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1001, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1001, "col_offset": 51, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1008, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1009, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 1010, "col_offset": 8, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 1010, "col_offset": 43, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 1010, "col_offset": 56, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1012, "col_offset": 17, "nodeName": "copy_generator_unless_global_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1012, "col_offset": 65, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1014, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1015, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1016, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1016, "col_offset": 25, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1021, "col_offset": 15, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1022, "col_offset": 15, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 1024, "col_offset": 43, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 1024, "col_offset": 56, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1026, "col_offset": 17, "nodeName": "copy_generator_unless_global_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1026, "col_offset": 65, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1028, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1029, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1029, "col_offset": 42, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1030, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1037, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1038, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1039, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1041, "col_offset": 17, "nodeName": "reset_generator_cache_", "type": "Callable[[Any], Any]"}, {"lineNumber": 1041, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1055, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1056, "col_offset": 33, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1056, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1058, "col_offset": 16, "nodeName": "_get_generator_state_np117", "type": "Callable[[Any], Any]"}, {"lineNumber": 1058, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1059, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1060, "col_offset": 25, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1060, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1061, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1061, "col_offset": 38, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1061, "col_offset": 54, "nodeName": "state", "type": "Any"}, {"lineNumber": 1062, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1062, "col_offset": 47, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1064, "col_offset": 26, "nodeName": "reset_generator_cache_", "type": "Callable[[Any], Any]"}, {"lineNumber": 1064, "col_offset": 58, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1066, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1066, "col_offset": 46, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 1067, "col_offset": 46, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 1072, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1073, "col_offset": 33, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1073, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1075, "col_offset": 16, "nodeName": "_get_generator_state_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1075, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1076, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1076, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 1077, "col_offset": 8, "nodeName": "state", "type": "List[Any]"}, {"lineNumber": 1078, "col_offset": 25, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1078, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1079, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1079, "col_offset": 38, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1080, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1080, "col_offset": 47, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1082, "col_offset": 26, "nodeName": "reset_generator_cache_", "type": "Callable[[Any], Any]"}, {"lineNumber": 1082, "col_offset": 58, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1084, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1084, "col_offset": 46, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 1085, "col_offset": 46, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 1093, "col_offset": 8, "nodeName": "mock_derive_gens", "type": "Any"}, {"lineNumber": 1094, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1096, "col_offset": 22, "nodeName": "derive_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 1096, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1098, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1098, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1099, "col_offset": 15, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 1102, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1103, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1103, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1105, "col_offset": 22, "nodeName": "derive_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 1105, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1116, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1117, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1118, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1120, "col_offset": 17, "nodeName": "derive_generators_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1120, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1122, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1122, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1122, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1134, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1135, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1135, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1137, "col_offset": 17, "nodeName": "derive_generators_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1137, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1140, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1149, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1150, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1150, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1152, "col_offset": 17, "nodeName": "derive_generators_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1152, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1155, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1168, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1169, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1170, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1172, "col_offset": 17, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1172, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1174, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1174, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1174, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1186, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1187, "col_offset": 16, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1187, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1191, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1192, "col_offset": 16, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1192, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1200, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1203, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1203, "col_offset": 38, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1203, "col_offset": 43, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 1205, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1205, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1205, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1215, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1216, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1217, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1217, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1218, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1218, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1220, "col_offset": 8, "nodeName": "_set_generator_state_np117_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1221, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1223, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1223, "col_offset": 46, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1223, "col_offset": 52, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1224, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1224, "col_offset": 46, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1224, "col_offset": 52, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1230, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1231, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1232, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1232, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1233, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1233, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1235, "col_offset": 8, "nodeName": "_set_generator_state_np117_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1236, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1238, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 1239, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 1240, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 1241, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 1243, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1243, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1243, "col_offset": 37, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1244, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1244, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1244, "col_offset": 37, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 1248, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1249, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1250, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1250, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1251, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1251, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1253, "col_offset": 8, "nodeName": "_set_generator_state_np116_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1254, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1256, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1256, "col_offset": 46, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1256, "col_offset": 52, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1257, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1257, "col_offset": 46, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1257, "col_offset": 52, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1261, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1262, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1263, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1263, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1264, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1264, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1266, "col_offset": 8, "nodeName": "_set_generator_state_np116_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1267, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1269, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1270, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1271, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1272, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1274, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1274, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1274, "col_offset": 37, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1275, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1275, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1275, "col_offset": 37, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 1283, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1284, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1285, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1287, "col_offset": 17, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1287, "col_offset": 48, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1287, "col_offset": 53, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1289, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1289, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1289, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1301, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1303, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1303, "col_offset": 55, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1303, "col_offset": 60, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1305, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1308, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1310, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1310, "col_offset": 55, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1310, "col_offset": 60, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1312, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1317, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1318, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1320, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1320, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1320, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1322, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1325, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1326, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1328, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1328, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1328, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1330, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1335, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1337, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1337, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1340, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1343, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1345, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1345, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1348, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1353, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1354, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1356, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1356, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1356, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1358, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1361, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1362, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1364, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1364, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1364, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1366, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1371, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1372, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1373, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1373, "col_offset": 38, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1375, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1375, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1375, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1377, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1380, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1381, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1382, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1382, "col_offset": 38, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1384, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1384, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1384, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1386, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1393, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1395, "col_offset": 8, "nodeName": "advance_generator_", "type": "Callable[[Any], None]"}, {"lineNumber": 1395, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1397, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1397, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1397, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1407, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1408, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1408, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1410, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 1410, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1411, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1411, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1413, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 1413, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1415, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1415, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1421, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1422, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1422, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1424, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 1424, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1425, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1425, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1427, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 1427, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1429, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1429, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1437, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1438, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1438, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1441, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 1441, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1442, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1442, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1445, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 1445, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1447, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1448, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1449, "col_offset": 29, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1455, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1456, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1456, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1459, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 1459, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1460, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1460, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1463, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 1463, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1465, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1466, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1467, "col_offset": 29, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1478, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 1479, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1481, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1481, "col_offset": 44, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1484, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1485, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1495, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 1496, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 1497, "col_offset": 12, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1499, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1499, "col_offset": 44, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1502, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1503, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1510, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 1511, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1513, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1513, "col_offset": 44, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1515, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1516, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1526, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 1527, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 1528, "col_offset": 12, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1530, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1530, "col_offset": 44, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1532, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1533, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1540, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 1541, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1543, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1543, "col_offset": 44, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1545, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1546, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1553, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 1554, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1556, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1556, "col_offset": 44, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1558, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1559, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1565, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1567, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1567, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1570, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1571, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1572, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1577, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1579, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1579, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1582, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1583, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1584, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1587, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1589, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1589, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1592, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1593, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1594, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1597, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1599, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1599, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1602, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1603, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1604, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1612, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 1613, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 1615, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1615, "col_offset": 42, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1617, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1618, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1625, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 1626, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1627, "col_offset": 12, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1629, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1629, "col_offset": 42, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1631, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1632, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1639, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 1640, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 1642, "col_offset": 14, "nodeName": "empty", "type": "Any"}, {"lineNumber": 1643, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1643, "col_offset": 42, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1646, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1649, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1655, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[unittest.mock.MagicMock], Type[mock.MagicMock]]"}, {"lineNumber": 1656, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1657, "col_offset": 12, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1659, "col_offset": 14, "nodeName": "empty", "type": "Any"}, {"lineNumber": 1660, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1660, "col_offset": 42, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1663, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1664, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1668, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1670, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1670, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1672, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1673, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1674, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1679, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1681, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1681, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1683, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1684, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1685, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1688, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1690, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1691, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1691, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1693, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1694, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1695, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1697, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 1698, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1699, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1704, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1706, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1707, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1707, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1709, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1710, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1711, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1713, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 1714, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1715, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 6, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 6, "col_offset": 30, "nodeName": "sys", "type": "module"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "mock_norm", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "mock_set", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "mock_set", "type": "Any"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "mock", "type": "module"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "mock_set", "type": "Any"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "is_global_rng", "type": "Callable[[], bool]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "is_global_rng", "type": "Callable[[], bool]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "equals_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "equals_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 133, "col_offset": 41, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "mock_reset", "type": "Any"}, {"lineNumber": 148, "col_offset": 43, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "mock_derive", "type": "Any"}, {"lineNumber": 157, "col_offset": 44, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "mock_derive", "type": "Any"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "mock_equal", "type": "Any"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 177, "col_offset": 59, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 31, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 202, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "mock_advance", "type": "Any"}, {"lineNumber": 205, "col_offset": 45, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 214, "col_offset": 42, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "mock_is_global", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "mock_is_global", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 248, "col_offset": 29, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 252, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 254, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "mock_create", "type": "Any"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 261, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 262, "col_offset": 33, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 264, "col_offset": 35, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "rng_glob", "type": "Any"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 283, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 286, "col_offset": 60, "nodeName": "out", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 290, "col_offset": 59, "nodeName": "out", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 404, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 411, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 415, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 415, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 415, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 415, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 418, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 418, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 423, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 424, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 436, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 436, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 437, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 441, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 441, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 441, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 441, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 441, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 443, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 444, "col_offset": 59, "nodeName": "kwargs_subcall", "type": "Dict[str, Tuple[int]]"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 447, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 452, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 457, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 458, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 462, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 462, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 462, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 462, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 462, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 465, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 465, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 470, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 471, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 481, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 483, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 484, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 488, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 488, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 488, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 488, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 488, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 490, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 491, "col_offset": 59, "nodeName": "kwargs_subcall", "type": "Dict[str, Union[Tuple[int], float]]"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 493, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 499, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 503, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 504, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 504, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 505, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 509, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 509, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 509, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 509, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 509, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 512, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 512, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 517, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 518, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 527, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 529, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 529, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 530, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 534, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 534, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 534, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 534, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 534, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 536, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 537, "col_offset": 59, "nodeName": "kwargs_subcall", "type": "Dict[str, Tuple[int]]"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 540, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 566, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 567, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 567, "col_offset": 26, "nodeName": "fname", "type": "Any"}, {"lineNumber": 568, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 571, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 571, "col_offset": 30, "nodeName": "fname", "type": "Any"}, {"lineNumber": 571, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 571, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 574, "col_offset": 58, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 574, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 600, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 601, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 602, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 603, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 603, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 604, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 605, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 605, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 609, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 611, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 612, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 612, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 613, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 613, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 614, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 614, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 618, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 619, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 620, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 620, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 621, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 621, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 622, "col_offset": 15, "nodeName": "average", "type": "Any"}, {"lineNumber": 626, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 628, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 628, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 629, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 630, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 630, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 631, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 631, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 635, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 636, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 637, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 637, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 638, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 638, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 639, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 639, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 640, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 640, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 644, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 645, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 646, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 646, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 647, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 647, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 648, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 648, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 649, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 649, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 653, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 654, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 655, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 655, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 656, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 656, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 662, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 663, "col_offset": 20, "nodeName": "mock", "type": "module"}, {"lineNumber": 667, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 667, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 667, "col_offset": 30, "nodeName": "fname_alias", "type": "Any"}, {"lineNumber": 667, "col_offset": 44, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 667, "col_offset": 52, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 670, "col_offset": 15, "nodeName": "mock_func", "type": "Union[mock.Mock, unittest.mock.Mock]"}, {"lineNumber": 675, "col_offset": 15, "nodeName": "supports_new_numpy_rng_style", "type": "Callable[[], bool]"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 682, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 684, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "rng", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 696, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 697, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 699, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 700, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 704, "col_offset": 15, "nodeName": "GLOBAL_RNG", "type": "Any"}, {"lineNumber": 704, "col_offset": 42, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 707, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 707, "col_offset": 48, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 710, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 711, "col_offset": 12, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 712, "col_offset": 18, "nodeName": "AdditiveGaussianNoise", "type": "Any"}, {"lineNumber": 713, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 717, "col_offset": 19, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 717, "col_offset": 49, "nodeName": "other_image_aug", "type": "Any"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 721, "col_offset": 14, "nodeName": "iaa", "type": "module"}, {"lineNumber": 722, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 723, "col_offset": 19, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 723, "col_offset": 49, "nodeName": "image_aug", "type": "Any"}, {"lineNumber": 726, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 726, "col_offset": 48, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 729, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 730, "col_offset": 18, "nodeName": "AdditiveGaussianNoise", "type": "Any"}, {"lineNumber": 731, "col_offset": 12, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 732, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 736, "col_offset": 19, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 736, "col_offset": 49, "nodeName": "other_image_aug", "type": "Any"}, {"lineNumber": 739, "col_offset": 14, "nodeName": "iaa", "type": "module"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 741, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 742, "col_offset": 19, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 742, "col_offset": 49, "nodeName": "image_aug", "type": "Any"}, {"lineNumber": 751, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 753, "col_offset": 15, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 766, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 769, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 770, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 771, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 773, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 774, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 775, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 778, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 784, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 786, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 788, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 789, "col_offset": 12, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 790, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 795, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 795, "col_offset": 38, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 797, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 799, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 804, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 805, "col_offset": 12, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 808, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 813, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 815, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 818, "col_offset": 19, "nodeName": "generate_seed_", "type": "Callable[[Any], Any]"}, {"lineNumber": 819, "col_offset": 23, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 819, "col_offset": 58, "nodeName": "seed", "type": "Any"}, {"lineNumber": 820, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 820, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 820, "col_offset": 58, "nodeName": "expected", "type": "Any"}, {"lineNumber": 822, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 822, "col_offset": 29, "nodeName": "rs", "type": "Any"}, {"lineNumber": 827, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 829, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 830, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 840, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 843, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 844, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 845, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 847, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 848, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 849, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 852, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 855, "col_offset": 23, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 858, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 858, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 858, "col_offset": 55, "nodeName": "expected", "type": "Any"}, {"lineNumber": 860, "col_offset": 23, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 861, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 861, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 861, "col_offset": 55, "nodeName": "expected", "type": "Any"}, {"lineNumber": 868, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 870, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 872, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 873, "col_offset": 12, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 874, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 879, "col_offset": 21, "nodeName": "copylib", "type": "module"}, {"lineNumber": 881, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 883, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 884, "col_offset": 12, "nodeName": "generate_seed_", "type": "Callable[[Any], Any]"}, {"lineNumber": 884, "col_offset": 36, "nodeName": "global_gen", "type": "Any"}, {"lineNumber": 885, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 895, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 898, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 899, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 900, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 902, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 903, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 904, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 909, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 911, "col_offset": 13, "nodeName": "patch", "type": "Union[unittest.mock._patcher, mock._patcher]"}, {"lineNumber": 912, "col_offset": 12, "nodeName": "mock_bitgen", "type": "Any"}, {"lineNumber": 914, "col_offset": 21, "nodeName": "_create_fully_random_generator_np117", "type": "Callable[[], Any]"}, {"lineNumber": 916, "col_offset": 15, "nodeName": "mock_bitgen", "type": "Any"}, {"lineNumber": 917, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 918, "col_offset": 20, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 918, "col_offset": 40, "nodeName": "dummy_bitgen", "type": "Any"}, {"lineNumber": 921, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 923, "col_offset": 13, "nodeName": "patch", "type": "Union[unittest.mock._patcher, mock._patcher]"}, {"lineNumber": 924, "col_offset": 12, "nodeName": "mock_rs", "type": "Any"}, {"lineNumber": 926, "col_offset": 21, "nodeName": "_create_fully_random_generator_np116", "type": "Callable[[], Any]"}, {"lineNumber": 928, "col_offset": 15, "nodeName": "mock_rs", "type": "Any"}, {"lineNumber": 929, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 929, "col_offset": 54, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 935, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 937, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 939, "col_offset": 8, "nodeName": "mock_seeds", "type": "Any"}, {"lineNumber": 945, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 947, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "mock_integers", "type": "Any"}, {"lineNumber": 950, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 950, "col_offset": 42, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 953, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 955, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 957, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 957, "col_offset": 19, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 958, "col_offset": 15, "nodeName": "ia", "type": "module"}, {"lineNumber": 959, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 966, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 968, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 978, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 978, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 980, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 983, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 986, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 988, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 991, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 996, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 996, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 998, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1001, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1008, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1010, "col_offset": 43, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1012, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1014, "col_offset": 15, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 1015, "col_offset": 15, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 1021, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1022, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1024, "col_offset": 43, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1026, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1028, "col_offset": 15, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 1029, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 1039, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1041, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1044, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1045, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1045, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1046, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1048, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1049, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1049, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1050, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1055, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1056, "col_offset": 33, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1058, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1060, "col_offset": 25, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1061, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1062, "col_offset": 30, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1064, "col_offset": 26, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1066, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1068, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1068, "col_offset": 50, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 1069, "col_offset": 50, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 1072, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1073, "col_offset": 33, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1075, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1078, "col_offset": 25, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1079, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1079, "col_offset": 54, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1079, "col_offset": 60, "nodeName": "state", "type": "List[Any]"}, {"lineNumber": 1080, "col_offset": 30, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1082, "col_offset": 26, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1084, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1086, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1086, "col_offset": 50, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 1087, "col_offset": 50, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 1094, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1096, "col_offset": 22, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1098, "col_offset": 8, "nodeName": "mock_derive_gens", "type": "Any"}, {"lineNumber": 1102, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1103, "col_offset": 19, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1105, "col_offset": 22, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1107, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1107, "col_offset": 50, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 1107, "col_offset": 63, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1109, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1109, "col_offset": 50, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1109, "col_offset": 60, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1118, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1120, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1122, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 1123, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1124, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1124, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1125, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1127, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1128, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1128, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1129, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1134, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1135, "col_offset": 19, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1137, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1139, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1139, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1140, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1142, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1142, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1143, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1143, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1144, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1146, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1146, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1146, "col_offset": 55, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1149, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1150, "col_offset": 19, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1152, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1154, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1154, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1155, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1157, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1157, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1158, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1158, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1159, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1161, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1161, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1161, "col_offset": 55, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1170, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1172, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1174, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 1175, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1176, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1176, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1177, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1179, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1180, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1180, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1181, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1186, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1187, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1188, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1188, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 1188, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1188, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 1191, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1192, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1193, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1193, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 1193, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1200, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1203, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1205, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 1206, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1206, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1206, "col_offset": 52, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 1207, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1209, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1209, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1209, "col_offset": 52, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 1210, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1215, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1215, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1216, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1216, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1217, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1218, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1220, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1221, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1221, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1223, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1224, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1225, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1225, "col_offset": 50, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1225, "col_offset": 56, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1230, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1230, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1231, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1231, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1232, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1233, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1235, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1236, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1236, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1238, "col_offset": 19, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1239, "col_offset": 19, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1240, "col_offset": 24, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1241, "col_offset": 24, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1243, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1244, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1245, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1245, "col_offset": 31, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1245, "col_offset": 41, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 1248, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1249, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1250, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1251, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1253, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1254, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1254, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1256, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1257, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1258, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1258, "col_offset": 50, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1258, "col_offset": 56, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1261, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1262, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1263, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1264, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1266, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1267, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1267, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1269, "col_offset": 19, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1270, "col_offset": 19, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1271, "col_offset": 24, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1272, "col_offset": 24, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1274, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1275, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1276, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1276, "col_offset": 31, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1276, "col_offset": 41, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 1285, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1287, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1289, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 1290, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1291, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1291, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1291, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1292, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1294, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1295, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1295, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1295, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1296, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1301, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1301, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1303, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1308, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1310, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1317, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1317, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1318, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1318, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1320, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1325, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1326, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1328, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1335, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1335, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1337, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1338, "col_offset": 55, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1338, "col_offset": 72, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1343, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1345, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1346, "col_offset": 55, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1346, "col_offset": 72, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1353, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1353, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1354, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1354, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1356, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1361, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1362, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1364, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1371, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1371, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1372, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1372, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1373, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1373, "col_offset": 44, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1373, "col_offset": 73, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1375, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1380, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1381, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1382, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1382, "col_offset": 44, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1382, "col_offset": 73, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1384, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1393, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1395, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1397, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 1398, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1398, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1399, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1401, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1401, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1402, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1407, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1407, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1408, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1410, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1411, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1413, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1415, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1415, "col_offset": 51, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1415, "col_offset": 68, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1416, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1416, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1416, "col_offset": 61, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1417, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1417, "col_offset": 50, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1417, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1418, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1418, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1418, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1421, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1422, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1424, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1425, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1427, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1429, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1429, "col_offset": 51, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1429, "col_offset": 68, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1430, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1430, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1430, "col_offset": 61, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1431, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1431, "col_offset": 50, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1431, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1432, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1432, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1432, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1437, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1437, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1438, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1441, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1442, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1445, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1447, "col_offset": 24, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1448, "col_offset": 23, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1449, "col_offset": 29, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1450, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1450, "col_offset": 30, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1450, "col_offset": 44, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1451, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1451, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1451, "col_offset": 50, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1452, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1452, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1452, "col_offset": 50, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1455, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1456, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1459, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1460, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1463, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1465, "col_offset": 24, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1466, "col_offset": 23, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1467, "col_offset": 29, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1468, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1468, "col_offset": 30, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1468, "col_offset": 44, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1469, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1469, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1469, "col_offset": 50, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1470, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1470, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1470, "col_offset": 50, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1478, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1479, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1481, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1485, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1495, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1496, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1499, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1503, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 1510, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1511, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1513, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1516, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1526, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1527, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1530, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1533, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 1540, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1541, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1543, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1546, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1553, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1554, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1556, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1559, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1565, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1565, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1567, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1570, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1571, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1571, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1572, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1572, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1577, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1577, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1579, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1582, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1583, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1583, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1584, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1584, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1587, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1589, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1592, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1593, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1593, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1594, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1594, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1597, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1599, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1602, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1603, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1603, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1604, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1604, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1610, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1612, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1613, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1615, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1617, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1618, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 1625, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1626, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1629, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1632, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1637, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1639, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1640, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1642, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1643, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1644, "col_offset": 46, "nodeName": "out", "type": "Any"}, {"lineNumber": 1646, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1649, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 1655, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1656, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1659, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1660, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1661, "col_offset": 46, "nodeName": "out", "type": "Any"}, {"lineNumber": 1664, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1665, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 1668, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1670, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1672, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1673, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1673, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1674, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1674, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1679, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1679, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1681, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1683, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1684, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1684, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1685, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1685, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1688, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1690, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1691, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1691, "col_offset": 65, "nodeName": "out", "type": "Any"}, {"lineNumber": 1693, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1694, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1694, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1695, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1695, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1697, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1697, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1698, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1698, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1699, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1699, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1704, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1704, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1706, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1707, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1707, "col_offset": 65, "nodeName": "out", "type": "Any"}, {"lineNumber": 1709, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1710, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1710, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1711, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1711, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1713, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1713, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1714, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1714, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1715, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1715, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 254, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 418, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 443, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 443, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 465, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 465, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 490, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 512, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 512, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 536, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 536, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 574, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 574, "col_offset": 26, "nodeName": "fname", "type": "Any"}, {"lineNumber": 599, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 600, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 608, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 609, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 617, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 618, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 622, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 622, "col_offset": 26, "nodeName": "logical_or", "type": "Any"}, {"lineNumber": 625, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 626, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 634, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 635, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 643, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 644, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 652, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 653, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 675, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 696, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 697, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 699, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 700, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 704, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 704, "col_offset": 42, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 707, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 711, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 712, "col_offset": 18, "nodeName": "iaa", "type": "module"}, {"lineNumber": 713, "col_offset": 12, "nodeName": "images_aug", "type": "List[Any]"}, {"lineNumber": 713, "col_offset": 30, "nodeName": "aug", "type": "Any"}, {"lineNumber": 717, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 717, "col_offset": 34, "nodeName": "images_aug", "type": "List[Any]"}, {"lineNumber": 723, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 723, "col_offset": 34, "nodeName": "images_aug", "type": "List[Any]"}, {"lineNumber": 726, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 730, "col_offset": 18, "nodeName": "iaa", "type": "module"}, {"lineNumber": 731, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 732, "col_offset": 12, "nodeName": "images_aug", "type": "List[Any]"}, {"lineNumber": 732, "col_offset": 30, "nodeName": "aug", "type": "Any"}, {"lineNumber": 736, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 736, "col_offset": 34, "nodeName": "images_aug", "type": "List[Any]"}, {"lineNumber": 742, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 742, "col_offset": 34, "nodeName": "images_aug", "type": "List[Any]"}, {"lineNumber": 754, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 755, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 770, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 771, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 774, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 775, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 779, "col_offset": 25, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 784, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 788, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 789, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 789, "col_offset": 35, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 795, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 804, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 805, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 805, "col_offset": 35, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 813, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 818, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 818, "col_offset": 43, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 819, "col_offset": 23, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 820, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 844, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 845, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 848, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 849, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 855, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 856, "col_offset": 16, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 858, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 860, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 861, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 868, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 872, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 873, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 873, "col_offset": 35, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 879, "col_offset": 38, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 884, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 899, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 900, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 903, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 904, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 909, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 911, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 914, "col_offset": 21, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 918, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 921, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 923, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 926, "col_offset": 21, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 929, "col_offset": 54, "nodeName": "random", "type": "Any"}, {"lineNumber": 959, "col_offset": 15, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 966, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 978, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 978, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 986, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 996, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 996, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1045, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1046, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1049, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1050, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1068, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1072, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1086, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1107, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1109, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1122, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1124, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1125, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1128, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1129, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1141, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1141, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 1142, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1142, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1143, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1143, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1144, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1144, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1144, "col_offset": 61, "nodeName": "result", "type": "Any"}, {"lineNumber": 1146, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1149, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1156, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1156, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 1157, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1157, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1158, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1158, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1159, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1159, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1159, "col_offset": 61, "nodeName": "result", "type": "Any"}, {"lineNumber": 1161, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1174, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1176, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1177, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1180, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1181, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1188, "col_offset": 33, "nodeName": "bit_generator", "type": "Any"}, {"lineNumber": 1191, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1193, "col_offset": 33, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 1205, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1206, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1207, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1209, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1210, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1215, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1215, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1216, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1216, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1221, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1225, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1230, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1230, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1231, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1231, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1236, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1245, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1248, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1249, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1254, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1258, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1261, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1262, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1267, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1276, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1289, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1291, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1292, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1295, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1296, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1301, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1301, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1308, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1317, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1317, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1318, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1318, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1325, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1326, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1335, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1335, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1338, "col_offset": 55, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1343, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1346, "col_offset": 55, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1353, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1353, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1354, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1354, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1361, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1362, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1371, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1371, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1372, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1372, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1373, "col_offset": 44, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1380, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1381, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1382, "col_offset": 44, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1397, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1398, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1399, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1401, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1402, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1407, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1407, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1415, "col_offset": 51, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1416, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1417, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1418, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1421, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1429, "col_offset": 51, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1430, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1431, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1432, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1437, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1437, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1450, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1451, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1452, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1455, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1468, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1469, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1470, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1485, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1503, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1516, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1533, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1546, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1559, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1565, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1565, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1570, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1577, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1577, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1582, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1587, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1592, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1597, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1602, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1610, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1617, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1618, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1632, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1637, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1646, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1649, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1664, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1668, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1672, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1679, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1679, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1683, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1688, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1693, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1704, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1704, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1709, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 599, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 608, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 617, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 622, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 622, "col_offset": 40, "nodeName": "result", "type": "Any"}, {"lineNumber": 622, "col_offset": 54, "nodeName": "result", "type": "Any"}, {"lineNumber": 625, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 634, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 643, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 652, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 713, "col_offset": 40, "nodeName": "image", "type": "Any"}, {"lineNumber": 732, "col_offset": 40, "nodeName": "image", "type": "Any"}, {"lineNumber": 754, "col_offset": 15, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 755, "col_offset": 15, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 779, "col_offset": 25, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 789, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 795, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 805, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 818, "col_offset": 43, "nodeName": "random", "type": "Any"}, {"lineNumber": 855, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 856, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 856, "col_offset": 39, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 860, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 873, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 879, "col_offset": 38, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 918, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 929, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 1188, "col_offset": 33, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1193, "col_offset": 33, "nodeName": "gen", "type": "Any"}, {"lineNumber": 789, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 805, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 818, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 856, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 873, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 856, "col_offset": 39, "nodeName": "np", "type": "module"}]