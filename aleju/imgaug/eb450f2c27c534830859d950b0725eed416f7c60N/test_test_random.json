[{"lineNumber": 24, "col_offset": 0, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_supports_new_np_rng_style_is_true", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "test_global_rng", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "test___init___calls_normalize_mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "test___init___with_rng", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_state_getter_mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_state_setter_mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "test_set_state__mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "test_use_state_of__mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_is_global__is_global__rng_mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "test_is_global_rng__is_not_global__mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "test_equals_global_rng__is_global__mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "test_equals_global_rng__is_not_global__mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "test_generate_seed__mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "test_generate_seeds__mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "test_reset_cache__mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "test_derive_rng__mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "test_derive_rngs__mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "test_equals_mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "test_equals_identical_generators", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "test_equals_with_similar_generators", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "test_equals_with_different_generators", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "test_equals_with_advanced_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "test_advance__mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "test_copy_mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "test_duplicate", "type": "Callable[[Any], Any]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "test_duplicate_two_entries", "type": "Callable[[Any], Any]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "test_create_fully_random_mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "test_create_pseudo_random__mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "test_integers_mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "test_random_mocked", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "test_choice_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "test_bytes_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "test_shuffle_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "test_permutation_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "test_beta_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "test_binomial_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "test_chisquare_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "test_dirichlet_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "test_exponential_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "test_f_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "test_gamma_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "test_geometric_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "test_gumbel_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "test_hypergeometric_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "test_laplace_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "test_logistic_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "test_lognormal_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "test_logseries_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "test_multinomial_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "test_multivariate_normal_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "test_negative_binomial_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "test_noncentral_chisquare_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "test_noncentral_f_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "test_normal_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "test_pareto_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "test_poisson_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "test_power_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "test_rayleigh_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "test_standard_cauchy_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "test_standard_exponential_np117_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "test_standard_exponential_np116_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "test_standard_gamma_np117_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "test_standard_gamma_np116_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "test_standard_normal_np117_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "test_standard_normal_np116_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "test_standard_t_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "test_triangular_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "test_uniform_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "test_vonmises_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "test_wald_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "test_weibull_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "test_zipf_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "test_rand_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "test_randint_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "randn", "type": "Callable[[Any], Any]"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "random_integers", "type": "Callable[[Any], Any]"}, {"lineNumber": 593, "col_offset": 4, "nodeName": "random_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "tomaxint", "type": "Callable[[Any], Any]"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "test_rand", "type": "Callable[[Any], Any]"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "test_randint", "type": "Callable[[Any], Any]"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "test_randn", "type": "Callable[[Any], Any]"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "test_random_integers", "type": "Callable[[Any], Any]"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "test_random_integers__no_high", "type": "Callable[[Any], Any]"}, {"lineNumber": 643, "col_offset": 4, "nodeName": "test_random_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "test_tomaxint", "type": "Callable[[Any], Any]"}, {"lineNumber": 659, "col_offset": 4, "nodeName": "_test_sampling_func_alias", "type": "Callable[..., Any]"}, {"lineNumber": 674, "col_offset": 40, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "test_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 679, "col_offset": 26, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 680, "col_offset": 4, "nodeName": "test_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 690, "col_offset": 16, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "test_integrationtest", "type": "Callable[[Any], Any]"}, {"lineNumber": 708, "col_offset": 31, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "test_mocked_call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 722, "col_offset": 32, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 740, "col_offset": 4, "nodeName": "test_called_with_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 775, "col_offset": 4, "nodeName": "test_called_with_random_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 787, "col_offset": 4, "nodeName": "test_called_int", "type": "Callable[[Any], Any]"}, {"lineNumber": 796, "col_offset": 37, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "test_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 827, "col_offset": 46, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 840, "col_offset": 43, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "test_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 851, "col_offset": 41, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "test_np116_mocked", "type": "Callable[[Any], Any]"}, {"lineNumber": 895, "col_offset": 26, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "test_mocked_call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 905, "col_offset": 27, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 906, "col_offset": 4, "nodeName": "test_mocked_call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "test_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 925, "col_offset": 26, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 926, "col_offset": 4, "nodeName": "test_mocked_call_with_random_state", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 948, "col_offset": 4, "nodeName": "test_call_with_random_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 967, "col_offset": 50, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 996, "col_offset": 34, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1034, "col_offset": 4, "nodeName": "test_call_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1053, "col_offset": 29, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1054, "col_offset": 4, "nodeName": "test_mocked_call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1064, "col_offset": 4, "nodeName": "test_integration", "type": "Callable[[Any], Any]"}, {"lineNumber": 1075, "col_offset": 30, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1111, "col_offset": 4, "nodeName": "test_call_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1127, "col_offset": 31, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "test_call_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1159, "col_offset": 32, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1210, "col_offset": 4, "nodeName": "test_call_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1223, "col_offset": 4, "nodeName": "test_call_np116_via_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 1242, "col_offset": 33, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1270, "col_offset": 4, "nodeName": "test_generator_is_identical_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1287, "col_offset": 4, "nodeName": "test_generator_created_with_same_seed_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1305, "col_offset": 4, "nodeName": "test_generator_is_copy_of_itself_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1323, "col_offset": 4, "nodeName": "test_generator_created_with_different_seed_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1342, "col_offset": 4, "nodeName": "test_generator_modified_to_have_same_state_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1352, "col_offset": 30, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1383, "col_offset": 4, "nodeName": "test_call_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1417, "col_offset": 4, "nodeName": "test_samples_different_after_advance_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1436, "col_offset": 29, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1437, "col_offset": 4, "nodeName": "test_mocked_standard_call_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1469, "col_offset": 4, "nodeName": "test_mocked_call_with_default_values_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1499, "col_offset": 4, "nodeName": "test_mocked_call_with_default_values_and_endpoint_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1512, "col_offset": 4, "nodeName": "test_mocked_call_with_low_high_and_endpoint_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1549, "col_offset": 4, "nodeName": "test_sampled_values_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1559, "col_offset": 4, "nodeName": "test_sampled_values_with_endpoint_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1570, "col_offset": 27, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1571, "col_offset": 4, "nodeName": "test_mocked_standard_call_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1584, "col_offset": 4, "nodeName": "test_mocked_standard_call_np117", "type": "Callable[[Any], Any]"}, {"lineNumber": 1598, "col_offset": 4, "nodeName": "test_mocked_call_with_out_arg_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1614, "col_offset": 4, "nodeName": "test_mocked_call_with_out_arg_np117", "type": "Callable[[Any], Any]"}, {"lineNumber": 1630, "col_offset": 4, "nodeName": "test_sampled_values_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1650, "col_offset": 4, "nodeName": "test_sampled_values_with_out_arg_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "use", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "unittest", "type": "Any"}, {"lineNumber": 1438, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1470, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1500, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1513, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1572, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1585, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1599, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1615, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "matplotlib", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "_", "type": "imgaug.random.RNG"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "state", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "rng2", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "return_value", "type": "int"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "return_value", "type": "List[int]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "result", "type": "List[imgaug.random.RNG]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "generator", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "rngs", "type": "List[imgaug.random.RNG]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "rngs", "type": "List[imgaug.random.RNG]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 254, "col_offset": 35, "nodeName": "gen", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "rng_glob", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 306, "col_offset": 24, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 413, "col_offset": 24, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "kwargs_subcall", "type": "Dict[str, Tuple[int]]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 436, "col_offset": 38, "nodeName": "_side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 437, "col_offset": 48, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 439, "col_offset": 24, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 460, "col_offset": 24, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "kwargs_subcall", "type": "Dict[str, Union[float, Tuple[int]]]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 483, "col_offset": 38, "nodeName": "_side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 484, "col_offset": 48, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 486, "col_offset": 24, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 507, "col_offset": 24, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "kwargs_subcall", "type": "Dict[str, Tuple[int]]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 529, "col_offset": 38, "nodeName": "_side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 530, "col_offset": 48, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 532, "col_offset": 24, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 570, "col_offset": 24, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "expected", "type": "imgaug.random.RNG"}, {"lineNumber": 696, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 712, "col_offset": 8, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 727, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 731, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 758, "col_offset": 8, "nodeName": "bgen", "type": "Any"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "rs", "type": "Any"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 780, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "seed", "type": "int"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 792, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 805, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 817, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 831, "col_offset": 8, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 833, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 842, "col_offset": 8, "nodeName": "global_gen", "type": "Any"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 855, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 856, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 858, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 860, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 872, "col_offset": 8, "nodeName": "dummy_bitgen", "type": "Any"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "dummy_rs", "type": "Any"}, {"lineNumber": 898, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 900, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 908, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 910, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 916, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 918, "col_offset": 8, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 928, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 929, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 931, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 941, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 943, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 951, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 959, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 973, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 975, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 984, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 985, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 986, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 987, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 989, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1000, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1001, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1002, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1004, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1006, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 1018, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1019, "col_offset": 8, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 1021, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1025, "col_offset": 8, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 1027, "col_offset": 8, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 1035, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1036, "col_offset": 8, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 1038, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1039, "col_offset": 8, "nodeName": "state", "type": "List[Any]"}, {"lineNumber": 1041, "col_offset": 8, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1043, "col_offset": 8, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 1045, "col_offset": 8, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 1056, "col_offset": 8, "nodeName": "return_value", "type": "List[str]"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1059, "col_offset": 8, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 1065, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1066, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1068, "col_offset": 8, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 1079, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1080, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1081, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1083, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1097, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1098, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1100, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1112, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1113, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1115, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1131, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1132, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1133, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1135, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1149, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1150, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1154, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1155, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1163, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1164, "col_offset": 8, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 1178, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1179, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1180, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1181, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1193, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1194, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1195, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1196, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1201, "col_offset": 8, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1202, "col_offset": 8, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1203, "col_offset": 8, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 1204, "col_offset": 8, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 1211, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1212, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1213, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1214, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1224, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1225, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1226, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1227, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1232, "col_offset": 8, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1233, "col_offset": 8, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1234, "col_offset": 8, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 1235, "col_offset": 8, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 1246, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1247, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1248, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1250, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1264, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1266, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1271, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1273, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 1280, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1281, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1283, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1288, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1289, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1291, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 1298, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1306, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1316, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1317, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1319, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1324, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1325, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1327, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 1334, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1335, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1338, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1343, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1344, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1347, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 1356, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1370, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1371, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1374, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1384, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1385, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1388, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1400, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1401, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1405, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1410, "col_offset": 8, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1411, "col_offset": 8, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1412, "col_offset": 8, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1418, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1419, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1423, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1428, "col_offset": 8, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1429, "col_offset": 8, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1430, "col_offset": 8, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1441, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1442, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1442, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1458, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1459, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1459, "col_offset": 35, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1473, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1474, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1474, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1476, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1489, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1490, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1490, "col_offset": 35, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1493, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1503, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1504, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1504, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1506, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1516, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1517, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1517, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1519, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1528, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1540, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1550, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1560, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1575, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1576, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1576, "col_offset": 40, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1578, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1588, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1589, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1589, "col_offset": 33, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1592, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1602, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1603, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1603, "col_offset": 40, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1605, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1618, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1619, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1619, "col_offset": 33, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1622, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1631, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1633, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1642, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1644, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1651, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1653, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1654, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1667, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1669, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1670, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 6, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "reseed", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "SUPPORTS_NEW_NP_RNG_STYLE", "type": "bool"}, {"lineNumber": 46, "col_offset": 53, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "GLOBAL_RNG", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "generator", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "set_state_", "type": "Callable"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "rng2", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "use_state_of_", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "rng2", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 96, "col_offset": 57, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "generator", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "generate_seed_", "type": "Callable[[], Any]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "seed", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "generate_seeds_", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "reset_cache_", "type": "Callable"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "generator", "type": "Any"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "mock_derive", "type": "Any"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "derive_rng_", "type": "Callable[[], Any]"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "gen", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 158, "col_offset": 44, "nodeName": "generator", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "mock_derive", "type": "Any"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "derive_rngs_", "type": "Callable[[Any], List[imgaug.random.RNG]]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 168, "col_offset": 38, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "generator", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "mock_equal", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "generator", "type": "Any"}, {"lineNumber": 178, "col_offset": 59, "nodeName": "generator", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "advance_", "type": "Callable"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "advance_", "type": "Callable"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 206, "col_offset": 45, "nodeName": "generator", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "generator", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "generator", "type": "Any"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "mock_is_global", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "copy_unless_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 233, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "mock_is_global", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "copy_unless_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "duplicate", "type": "Callable[[Any], List[imgaug.random.RNG]]"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "rngs", "type": "List[imgaug.random.RNG]"}, {"lineNumber": 247, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "duplicate", "type": "Callable[[Any], List[imgaug.random.RNG]]"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "rngs", "type": "List[imgaug.random.RNG]"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "mock_create", "type": "Any"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "create_fully_random", "type": "Callable"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 257, "col_offset": 32, "nodeName": "gen", "type": "Any"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "generator", "type": "Any"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "create_pseudo_random_", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "generator", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "integers", "type": "Callable[..., Any]"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "generator", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 285, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 287, "col_offset": 17, "nodeName": "random", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "generator", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 305, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[[Any], None]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 318, "col_offset": 17, "nodeName": "permutation", "type": "Callable[[Any], Any]"}, {"lineNumber": 320, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 405, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "arr", "type": "Any"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 412, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 425, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 432, "col_offset": 25, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 438, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 447, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 447, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 447, "col_offset": 35, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 448, "col_offset": 27, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 448, "col_offset": 36, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 453, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 455, "col_offset": 73, "nodeName": "arr", "type": "Any"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 459, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 471, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 475, "col_offset": 19, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 479, "col_offset": 25, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 485, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 494, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 494, "col_offset": 35, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 495, "col_offset": 27, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 495, "col_offset": 36, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 500, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 502, "col_offset": 59, "nodeName": "arr", "type": "Any"}, {"lineNumber": 504, "col_offset": 19, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 506, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 518, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 519, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 522, "col_offset": 19, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 525, "col_offset": 59, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 531, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 540, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 540, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 540, "col_offset": 35, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 541, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 541, "col_offset": 27, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 541, "col_offset": 36, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 567, "col_offset": 19, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 569, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "_test_sampling_func_alias", "type": "Callable[..., Any]"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "_test_sampling_func_alias", "type": "Callable[..., Any]"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "_test_sampling_func_alias", "type": "Callable[..., Any]"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "_test_sampling_func_alias", "type": "Callable[..., Any]"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "_test_sampling_func_alias", "type": "Callable[..., Any]"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "_test_sampling_func_alias", "type": "Callable[..., Any]"}, {"lineNumber": 600, "col_offset": 17, "nodeName": "rand", "type": "Callable[..., Any]"}, {"lineNumber": 601, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 603, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 605, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 606, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 609, "col_offset": 17, "nodeName": "randint", "type": "Callable[..., Any]"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 612, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 613, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 614, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 618, "col_offset": 17, "nodeName": "randn", "type": "Callable[..., Any]"}, {"lineNumber": 619, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 620, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 621, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 622, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 626, "col_offset": 17, "nodeName": "random_integers", "type": "Callable[..., Any]"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 628, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 630, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 631, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 632, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 635, "col_offset": 17, "nodeName": "random_integers", "type": "Callable[..., Any]"}, {"lineNumber": 636, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 637, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 638, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 639, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 640, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 641, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 644, "col_offset": 17, "nodeName": "random_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 645, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 646, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 647, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 648, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 649, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 650, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 653, "col_offset": 17, "nodeName": "tomaxint", "type": "Callable[..., Any]"}, {"lineNumber": 654, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 655, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 656, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 657, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 663, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 664, "col_offset": 20, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 666, "col_offset": 16, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 666, "col_offset": 21, "nodeName": "fname_subcall", "type": "Any"}, {"lineNumber": 666, "col_offset": 36, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 670, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 671, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 676, "col_offset": 58, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 683, "col_offset": 14, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 685, "col_offset": 19, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "rng", "type": "Any"}, {"lineNumber": 687, "col_offset": 15, "nodeName": "equals", "type": "Any"}, {"lineNumber": 687, "col_offset": 26, "nodeName": "expected", "type": "imgaug.random.RNG"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 705, "col_offset": 15, "nodeName": "equals", "type": "Any"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 714, "col_offset": 17, "nodeName": "normalize_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 714, "col_offset": 46, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 716, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 717, "col_offset": 51, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 718, "col_offset": 47, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 719, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 727, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 729, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 741, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 742, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 742, "col_offset": 25, "nodeName": "generator", "type": "Any"}, {"lineNumber": 747, "col_offset": 18, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 749, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 749, "col_offset": 47, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 751, "col_offset": 19, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 753, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 753, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 753, "col_offset": 54, "nodeName": "expected", "type": "Any"}, {"lineNumber": 758, "col_offset": 15, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 760, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 760, "col_offset": 47, "nodeName": "bgen", "type": "Any"}, {"lineNumber": 762, "col_offset": 15, "nodeName": "bit_generator", "type": "Any"}, {"lineNumber": 762, "col_offset": 39, "nodeName": "bgen", "type": "Any"}, {"lineNumber": 767, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 771, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 771, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 773, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 773, "col_offset": 25, "nodeName": "gen", "type": "Any"}, {"lineNumber": 776, "col_offset": 13, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 778, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 778, "col_offset": 47, "nodeName": "rs", "type": "Any"}, {"lineNumber": 781, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 782, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 790, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 790, "col_offset": 47, "nodeName": "seed", "type": "int"}, {"lineNumber": 792, "col_offset": 19, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 792, "col_offset": 54, "nodeName": "seed", "type": "int"}, {"lineNumber": 793, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 793, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 793, "col_offset": 54, "nodeName": "expected", "type": "Any"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 803, "col_offset": 17, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 815, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 823, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 831, "col_offset": 18, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 833, "col_offset": 14, "nodeName": "convert_seed_sequence_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 833, "col_offset": 58, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 835, "col_offset": 19, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 837, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 837, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 837, "col_offset": 51, "nodeName": "expected", "type": "Any"}, {"lineNumber": 842, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 842, "col_offset": 38, "nodeName": "generator", "type": "Any"}, {"lineNumber": 844, "col_offset": 14, "nodeName": "create_pseudo_random_generator_", "type": "Callable[[], Any]"}, {"lineNumber": 846, "col_offset": 19, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 848, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 848, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 848, "col_offset": 51, "nodeName": "expected", "type": "Any"}, {"lineNumber": 855, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 856, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 858, "col_offset": 17, "nodeName": "create_fully_random_generator", "type": "Callable[[], Any]"}, {"lineNumber": 872, "col_offset": 23, "nodeName": "SFC64", "type": "Any"}, {"lineNumber": 874, "col_offset": 49, "nodeName": "mock_bitgen", "type": "Any"}, {"lineNumber": 875, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 875, "col_offset": 39, "nodeName": "dummy_bitgen", "type": "Any"}, {"lineNumber": 877, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 879, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 880, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 881, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 884, "col_offset": 19, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 886, "col_offset": 55, "nodeName": "mock_rs", "type": "Any"}, {"lineNumber": 887, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 887, "col_offset": 35, "nodeName": "dummy_rs", "type": "Any"}, {"lineNumber": 889, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 891, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 892, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 892, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 898, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 900, "col_offset": 12, "nodeName": "generate_seed_", "type": "Callable[[Any], Any]"}, {"lineNumber": 900, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 902, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 908, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 910, "col_offset": 12, "nodeName": "generate_seeds_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 910, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 913, "col_offset": 12, "nodeName": "gen", "type": "Any"}, {"lineNumber": 913, "col_offset": 17, "nodeName": "SEED_MIN_VALUE", "type": "int"}, {"lineNumber": 913, "col_offset": 42, "nodeName": "SEED_MAX_VALUE", "type": "Union[float, int]"}, {"lineNumber": 916, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 918, "col_offset": 16, "nodeName": "generate_seeds_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 918, "col_offset": 41, "nodeName": "gen", "type": "Any"}, {"lineNumber": 921, "col_offset": 15, "nodeName": "is_np_array", "type": "Callable[[Any], bool]"}, {"lineNumber": 921, "col_offset": 30, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 922, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 928, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 929, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 931, "col_offset": 19, "nodeName": "copy_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 931, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 933, "col_offset": 15, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 934, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 934, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 941, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 943, "col_offset": 19, "nodeName": "copy_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 943, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 945, "col_offset": 15, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 946, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 946, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 949, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 951, "col_offset": 19, "nodeName": "_copy_generator_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 951, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 953, "col_offset": 15, "nodeName": "gen", "type": "Any"}, {"lineNumber": 953, "col_offset": 26, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 954, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 954, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 954, "col_offset": 51, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 959, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 961, "col_offset": 19, "nodeName": "_copy_generator_np117", "type": "Callable[[Any], Any]"}, {"lineNumber": 961, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 963, "col_offset": 15, "nodeName": "gen", "type": "Any"}, {"lineNumber": 963, "col_offset": 26, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 964, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 964, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 964, "col_offset": 51, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 971, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 973, "col_offset": 8, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 973, "col_offset": 43, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 973, "col_offset": 56, "nodeName": "gen", "type": "Any"}, {"lineNumber": 975, "col_offset": 17, "nodeName": "copy_generator_unless_global_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 975, "col_offset": 65, "nodeName": "gen", "type": "Any"}, {"lineNumber": 977, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 978, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 979, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 979, "col_offset": 25, "nodeName": "gen", "type": "Any"}, {"lineNumber": 984, "col_offset": 15, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 985, "col_offset": 15, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 986, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 987, "col_offset": 8, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 987, "col_offset": 43, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 987, "col_offset": 56, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 989, "col_offset": 17, "nodeName": "copy_generator_unless_global_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 989, "col_offset": 65, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 991, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 992, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 992, "col_offset": 42, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 993, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1000, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1001, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1002, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1004, "col_offset": 17, "nodeName": "reset_generator_cache_", "type": "Callable[[Any], Any]"}, {"lineNumber": 1004, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1018, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1019, "col_offset": 33, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1019, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1021, "col_offset": 16, "nodeName": "_get_generator_state_np117", "type": "Callable[[Any], Any]"}, {"lineNumber": 1021, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1023, "col_offset": 25, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1023, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1024, "col_offset": 38, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1024, "col_offset": 54, "nodeName": "state", "type": "Any"}, {"lineNumber": 1025, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1025, "col_offset": 47, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1027, "col_offset": 26, "nodeName": "reset_generator_cache_", "type": "Callable[[Any], Any]"}, {"lineNumber": 1027, "col_offset": 58, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1029, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1029, "col_offset": 46, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 1030, "col_offset": 46, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 1035, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1036, "col_offset": 33, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1036, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1038, "col_offset": 16, "nodeName": "_get_generator_state_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 1038, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1039, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1039, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 1040, "col_offset": 8, "nodeName": "state", "type": "List[Any]"}, {"lineNumber": 1041, "col_offset": 25, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1041, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1042, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1042, "col_offset": 38, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1043, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1043, "col_offset": 47, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1045, "col_offset": 26, "nodeName": "reset_generator_cache_", "type": "Callable[[Any], Any]"}, {"lineNumber": 1045, "col_offset": 58, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 1047, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1047, "col_offset": 46, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 1048, "col_offset": 46, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 1056, "col_offset": 8, "nodeName": "mock_derive_gens", "type": "Any"}, {"lineNumber": 1057, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1059, "col_offset": 22, "nodeName": "derive_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 1059, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1061, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1061, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1062, "col_offset": 15, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 1065, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1066, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1066, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1068, "col_offset": 22, "nodeName": "derive_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 1068, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1079, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1080, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1081, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1083, "col_offset": 17, "nodeName": "derive_generators_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1083, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1085, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1085, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1085, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1097, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1098, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1098, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1100, "col_offset": 17, "nodeName": "derive_generators_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1100, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1103, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1112, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1113, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1113, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1115, "col_offset": 17, "nodeName": "derive_generators_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1115, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1118, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1131, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1132, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1133, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1135, "col_offset": 17, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1135, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1137, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1137, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1137, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1149, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1150, "col_offset": 16, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1150, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1154, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1155, "col_offset": 16, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1155, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1163, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1166, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1166, "col_offset": 38, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1166, "col_offset": 43, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 1168, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1168, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1168, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1178, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1179, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1180, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1180, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1181, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1181, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1183, "col_offset": 8, "nodeName": "_set_generator_state_np117_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1184, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1186, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1186, "col_offset": 46, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1186, "col_offset": 52, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1187, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1187, "col_offset": 46, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1187, "col_offset": 52, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1193, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1194, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1195, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1195, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1196, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1196, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1198, "col_offset": 8, "nodeName": "_set_generator_state_np117_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1199, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1201, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 1202, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 1203, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 1204, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 1206, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1206, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1206, "col_offset": 37, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1207, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1207, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1207, "col_offset": 37, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 1211, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1212, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1213, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1213, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1214, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1214, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1216, "col_offset": 8, "nodeName": "_set_generator_state_np116_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1217, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1219, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1219, "col_offset": 46, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1219, "col_offset": 52, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1220, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1220, "col_offset": 46, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1220, "col_offset": 52, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1224, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1225, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1226, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1226, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1227, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1227, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1229, "col_offset": 8, "nodeName": "_set_generator_state_np116_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1230, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1232, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1233, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1234, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1235, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1237, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1237, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1237, "col_offset": 37, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1238, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1238, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1238, "col_offset": 37, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 1246, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1247, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1248, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1250, "col_offset": 17, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1250, "col_offset": 48, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1250, "col_offset": 53, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1252, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1252, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1252, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1264, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1266, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1266, "col_offset": 55, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1266, "col_offset": 60, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1268, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1271, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1273, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1273, "col_offset": 55, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1273, "col_offset": 60, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1275, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1280, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1281, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1283, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1283, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1283, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1285, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1288, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1289, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1291, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1291, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1291, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1293, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1298, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1300, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1300, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1303, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1306, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1308, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1308, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1311, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1316, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1317, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1319, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1319, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1319, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1321, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1324, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1325, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1327, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1327, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1327, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1329, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1334, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1335, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1336, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1336, "col_offset": 38, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1338, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1338, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1338, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1340, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1343, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1344, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1345, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1345, "col_offset": 38, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1347, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1347, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1347, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1349, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1356, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1358, "col_offset": 8, "nodeName": "advance_generator_", "type": "Callable[[Any], None]"}, {"lineNumber": 1358, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1360, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1360, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1360, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1370, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1371, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1371, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1373, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 1373, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1374, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1374, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1376, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 1376, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1378, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1378, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1384, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1385, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1385, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1387, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 1387, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1388, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1388, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1390, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 1390, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1392, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1392, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1400, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1401, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1401, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1404, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 1404, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1405, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1405, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1408, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 1408, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1410, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1411, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1412, "col_offset": 29, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1418, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1419, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1419, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1422, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 1422, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1423, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1423, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1426, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 1426, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1428, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1429, "col_offset": 23, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1430, "col_offset": 29, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 1441, "col_offset": 14, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 1442, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1444, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1444, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1447, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1448, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1458, "col_offset": 14, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 1459, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 1460, "col_offset": 12, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1462, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1462, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1465, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1466, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1473, "col_offset": 14, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 1474, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1476, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1476, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1478, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1479, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1489, "col_offset": 14, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 1490, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 1491, "col_offset": 12, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1493, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1493, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1495, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1496, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1503, "col_offset": 14, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 1504, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1506, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1506, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1508, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1509, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1516, "col_offset": 14, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 1517, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1519, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1519, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1521, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1522, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1528, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1530, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1530, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1533, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1534, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1535, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1540, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1542, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1542, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1545, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1546, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1547, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1550, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1552, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1552, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1555, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1556, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1557, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1560, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1562, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1562, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1565, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1566, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1567, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1575, "col_offset": 14, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 1576, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 1578, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1578, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1580, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1581, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1588, "col_offset": 14, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 1589, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1590, "col_offset": 12, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1592, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1592, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1594, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1595, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1602, "col_offset": 14, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 1603, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 1605, "col_offset": 14, "nodeName": "empty", "type": "Any"}, {"lineNumber": 1606, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1606, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1609, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1612, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1618, "col_offset": 14, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 1619, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1620, "col_offset": 12, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1622, "col_offset": 14, "nodeName": "empty", "type": "Any"}, {"lineNumber": 1623, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1623, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1626, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1627, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1631, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1633, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1633, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1635, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1636, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1637, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1642, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1644, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1644, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1646, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1647, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1648, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1651, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1653, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1654, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1654, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1656, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1657, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1658, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1660, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 1661, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1662, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1667, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1669, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1670, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1670, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1672, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1673, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1674, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1676, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 1677, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1678, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 6, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "mock_norm", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "mock_set", "type": "Any"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "mock_set", "type": "Any"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "mock", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "mock_set", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "is_global_rng", "type": "Callable[[], bool]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "is_global_rng", "type": "Callable[[], bool]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "equals_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "equals_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "mock_reset", "type": "Any"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "mock_derive", "type": "Any"}, {"lineNumber": 158, "col_offset": 44, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "mock_derive", "type": "Any"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "mock_equal", "type": "Any"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 178, "col_offset": 59, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "mock_advance", "type": "Any"}, {"lineNumber": 206, "col_offset": 45, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "mock_is_global", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 233, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "mock_is_global", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 244, "col_offset": 24, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 247, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "mock_create", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "rng_glob", "type": "Any"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 285, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 287, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 287, "col_offset": 60, "nodeName": "out", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 291, "col_offset": 59, "nodeName": "out", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "mock", "type": "Any"}, {"lineNumber": 305, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "mock", "type": "Any"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 318, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 405, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "mock", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 411, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 412, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 416, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 416, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 416, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 416, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 419, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 419, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 425, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "mock", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 437, "col_offset": 16, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 437, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 438, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 442, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 442, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 442, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 442, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 444, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 445, "col_offset": 59, "nodeName": "kwargs_subcall", "type": "Dict[str, Tuple[int]]"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 447, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 453, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "mock", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 458, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 459, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 463, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 463, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 463, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 463, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 463, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 466, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 466, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 471, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "mock", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 484, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 485, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 489, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 489, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 489, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 489, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 491, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 492, "col_offset": 59, "nodeName": "kwargs_subcall", "type": "Dict[str, Union[float, Tuple[int]]]"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 500, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 504, "col_offset": 19, "nodeName": "mock", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 505, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 506, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 510, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 510, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 510, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 510, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 510, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 513, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 513, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 518, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 519, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "mock", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 530, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 531, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 535, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 535, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 535, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 535, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 535, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 537, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 538, "col_offset": 59, "nodeName": "kwargs_subcall", "type": "Dict[str, Tuple[int]]"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 540, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 541, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 567, "col_offset": 19, "nodeName": "mock", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 568, "col_offset": 16, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 568, "col_offset": 26, "nodeName": "fname", "type": "Any"}, {"lineNumber": 569, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 572, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 572, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 572, "col_offset": 30, "nodeName": "fname", "type": "Any"}, {"lineNumber": 572, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 572, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 575, "col_offset": 58, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 575, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 601, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 603, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 603, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 604, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 605, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 605, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 606, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 606, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 612, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 612, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 613, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 613, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 614, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 614, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 615, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 619, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 620, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 621, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 621, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 622, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 622, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 623, "col_offset": 15, "nodeName": "average", "type": "Any"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 628, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 629, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 630, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 630, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 631, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 631, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 632, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 632, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 636, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 637, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 638, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 638, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 639, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 639, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 640, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 640, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 641, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 641, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 645, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 646, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 647, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 647, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 648, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 648, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 649, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 649, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 650, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 650, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 654, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 655, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 656, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 656, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 657, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 657, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 663, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 664, "col_offset": 20, "nodeName": "mock", "type": "Any"}, {"lineNumber": 668, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 668, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 668, "col_offset": 30, "nodeName": "fname_alias", "type": "Any"}, {"lineNumber": 668, "col_offset": 44, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 668, "col_offset": 52, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 671, "col_offset": 15, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 676, "col_offset": 15, "nodeName": "supports_new_numpy_rng_style", "type": "Callable[[], bool]"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 683, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 685, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 687, "col_offset": 15, "nodeName": "rng", "type": "Any"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 697, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 698, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 700, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 701, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 705, "col_offset": 15, "nodeName": "GLOBAL_RNG", "type": "Any"}, {"lineNumber": 705, "col_offset": 42, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 714, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 716, "col_offset": 15, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 729, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 732, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 733, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 734, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 736, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 737, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 738, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 741, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 747, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 749, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 751, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 752, "col_offset": 12, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 753, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 758, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 758, "col_offset": 38, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 760, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 762, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 767, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 768, "col_offset": 12, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 771, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 776, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 778, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 781, "col_offset": 19, "nodeName": "generate_seed_", "type": "Callable[[Any], Any]"}, {"lineNumber": 782, "col_offset": 23, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 782, "col_offset": 58, "nodeName": "seed", "type": "Any"}, {"lineNumber": 783, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 783, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 783, "col_offset": 58, "nodeName": "expected", "type": "Any"}, {"lineNumber": 785, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 785, "col_offset": 29, "nodeName": "rs", "type": "Any"}, {"lineNumber": 790, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 792, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 793, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 803, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 806, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 807, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 808, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 810, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 811, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 812, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 815, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 818, "col_offset": 23, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 821, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 821, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 821, "col_offset": 55, "nodeName": "expected", "type": "Any"}, {"lineNumber": 823, "col_offset": 23, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 824, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 824, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 824, "col_offset": 55, "nodeName": "expected", "type": "Any"}, {"lineNumber": 831, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 833, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 835, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 836, "col_offset": 12, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 837, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 842, "col_offset": 21, "nodeName": "copylib", "type": "module"}, {"lineNumber": 844, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 846, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 847, "col_offset": 12, "nodeName": "generate_seed_", "type": "Callable[[Any], Any]"}, {"lineNumber": 847, "col_offset": 36, "nodeName": "global_gen", "type": "Any"}, {"lineNumber": 848, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 858, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 861, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 862, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 865, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 867, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 872, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 874, "col_offset": 13, "nodeName": "patch", "type": "Any"}, {"lineNumber": 875, "col_offset": 12, "nodeName": "mock_bitgen", "type": "Any"}, {"lineNumber": 877, "col_offset": 21, "nodeName": "_create_fully_random_generator_np117", "type": "Callable[[], Any]"}, {"lineNumber": 879, "col_offset": 15, "nodeName": "mock_bitgen", "type": "Any"}, {"lineNumber": 880, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 881, "col_offset": 20, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 881, "col_offset": 40, "nodeName": "dummy_bitgen", "type": "Any"}, {"lineNumber": 884, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 886, "col_offset": 13, "nodeName": "patch", "type": "Any"}, {"lineNumber": 887, "col_offset": 12, "nodeName": "mock_rs", "type": "Any"}, {"lineNumber": 889, "col_offset": 21, "nodeName": "_create_fully_random_generator_np116", "type": "Callable[[], Any]"}, {"lineNumber": 891, "col_offset": 15, "nodeName": "mock_rs", "type": "Any"}, {"lineNumber": 892, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 892, "col_offset": 54, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 898, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 900, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "mock_seeds", "type": "Any"}, {"lineNumber": 908, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 910, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "mock_integers", "type": "Any"}, {"lineNumber": 913, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 913, "col_offset": 42, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 916, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 918, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 920, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 920, "col_offset": 19, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 921, "col_offset": 15, "nodeName": "ia", "type": "module"}, {"lineNumber": 922, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 929, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 931, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 934, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 941, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 941, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 943, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 946, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 949, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 951, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 954, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 959, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 959, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 961, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 964, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 971, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 973, "col_offset": 43, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 975, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 977, "col_offset": 15, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 978, "col_offset": 15, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 984, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 985, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 987, "col_offset": 43, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 989, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 991, "col_offset": 15, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 992, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 1002, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1004, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1007, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1008, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1008, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1009, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1011, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1012, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1012, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1013, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1018, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1019, "col_offset": 33, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1021, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1023, "col_offset": 25, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1025, "col_offset": 30, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1027, "col_offset": 26, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1029, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1031, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1031, "col_offset": 50, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 1032, "col_offset": 50, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 1035, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1036, "col_offset": 33, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1038, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1041, "col_offset": 25, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1042, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1042, "col_offset": 54, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1042, "col_offset": 60, "nodeName": "state", "type": "List[Any]"}, {"lineNumber": 1043, "col_offset": 30, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1045, "col_offset": 26, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1047, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1049, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1049, "col_offset": 50, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 1050, "col_offset": 50, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 1057, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1059, "col_offset": 22, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1061, "col_offset": 8, "nodeName": "mock_derive_gens", "type": "Any"}, {"lineNumber": 1065, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1066, "col_offset": 19, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1068, "col_offset": 22, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1070, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1070, "col_offset": 50, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 1070, "col_offset": 63, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1072, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1072, "col_offset": 50, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1072, "col_offset": 60, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1081, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1083, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1085, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 1086, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1087, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1087, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1088, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1090, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1091, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1091, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1092, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1097, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1098, "col_offset": 19, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1100, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1102, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1102, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1103, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1105, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1105, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1106, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1106, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1107, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1109, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1109, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1109, "col_offset": 55, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1112, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1113, "col_offset": 19, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1115, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1117, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1117, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1118, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1120, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1120, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1121, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1121, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1122, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1124, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1124, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1124, "col_offset": 55, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1133, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1135, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1137, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 1138, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1139, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1139, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1140, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1142, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1143, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1143, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1144, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1149, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1150, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1151, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1151, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 1151, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1151, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 1154, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1155, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1156, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1156, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 1156, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1163, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1166, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1168, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 1169, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1169, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1169, "col_offset": 52, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 1170, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1172, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1172, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1172, "col_offset": 52, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 1173, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1178, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1178, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1179, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1179, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1180, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1181, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1183, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1184, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1184, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1186, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1187, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1188, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1188, "col_offset": 50, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1188, "col_offset": 56, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1193, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1193, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1194, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1194, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1195, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1196, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1198, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1199, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1199, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1201, "col_offset": 19, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1202, "col_offset": 19, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1203, "col_offset": 24, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1204, "col_offset": 24, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1206, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1207, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1208, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1208, "col_offset": 31, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1208, "col_offset": 41, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 1211, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1212, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1213, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1214, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1216, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1217, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1217, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1219, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1220, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1221, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1221, "col_offset": 50, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1221, "col_offset": 56, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1224, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1225, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1226, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1227, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1229, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1230, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1230, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1232, "col_offset": 19, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1233, "col_offset": 19, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1234, "col_offset": 24, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1235, "col_offset": 24, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1237, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1238, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1239, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1239, "col_offset": 31, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1239, "col_offset": 41, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 1248, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1250, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1252, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 1253, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1254, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1254, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1254, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1255, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1257, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1258, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1258, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1258, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1259, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1264, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1264, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1266, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1271, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1273, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1280, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1280, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1281, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1281, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1283, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1288, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1289, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1291, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1298, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1298, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1300, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1301, "col_offset": 55, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1301, "col_offset": 72, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1306, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1308, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1309, "col_offset": 55, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1309, "col_offset": 72, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1316, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1316, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1317, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1317, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1319, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1324, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1325, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1327, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1334, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1334, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1335, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1335, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1336, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1336, "col_offset": 44, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1336, "col_offset": 73, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1338, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1343, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1344, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1345, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1345, "col_offset": 44, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1345, "col_offset": 73, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1347, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1356, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1358, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1360, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 1361, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1361, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1362, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1364, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1364, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1365, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1370, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1370, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1371, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1373, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1374, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1376, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1378, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1378, "col_offset": 51, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1378, "col_offset": 68, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1379, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1379, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1379, "col_offset": 61, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1380, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1380, "col_offset": 50, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1380, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1381, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1381, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1381, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1384, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1385, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1387, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1388, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1390, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1392, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1392, "col_offset": 51, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1392, "col_offset": 68, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1393, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1393, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1393, "col_offset": 61, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1394, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1394, "col_offset": 50, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1394, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1395, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1395, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1395, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1400, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1400, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1401, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1404, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1405, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1408, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1410, "col_offset": 24, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1411, "col_offset": 23, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1412, "col_offset": 29, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1413, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1413, "col_offset": 30, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1413, "col_offset": 44, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1414, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1414, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1414, "col_offset": 50, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1415, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1415, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1415, "col_offset": 50, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1418, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1419, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1422, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1423, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1426, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1428, "col_offset": 24, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1429, "col_offset": 23, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1430, "col_offset": 29, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1431, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1431, "col_offset": 30, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1431, "col_offset": 44, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1432, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1432, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1432, "col_offset": 50, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1433, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1433, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1433, "col_offset": 50, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1441, "col_offset": 14, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1442, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1444, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1448, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1458, "col_offset": 14, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1459, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1462, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1466, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 1473, "col_offset": 14, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1474, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1476, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1479, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1489, "col_offset": 14, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1490, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1493, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1496, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 1503, "col_offset": 14, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1504, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1506, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1509, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1516, "col_offset": 14, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1517, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1519, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1522, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1528, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1528, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1530, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1533, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1534, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1534, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1535, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1535, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1540, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1540, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1542, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1545, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1546, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1546, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1547, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1547, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1550, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1552, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1555, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1556, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1556, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1557, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1557, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1560, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1562, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1565, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1566, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1566, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1567, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1567, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1573, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1575, "col_offset": 14, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1576, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1578, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1580, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1581, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 1588, "col_offset": 14, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1589, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1592, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1595, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1600, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1602, "col_offset": 14, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1603, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1605, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1606, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1607, "col_offset": 46, "nodeName": "out", "type": "Any"}, {"lineNumber": 1609, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1612, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 1618, "col_offset": 14, "nodeName": "mock", "type": "Any"}, {"lineNumber": 1619, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1622, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1623, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1624, "col_offset": 46, "nodeName": "out", "type": "Any"}, {"lineNumber": 1627, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1628, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 1631, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1633, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1635, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1636, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1636, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1637, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1637, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1642, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1642, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1644, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1646, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1647, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1647, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1648, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1648, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1651, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1653, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1654, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1654, "col_offset": 65, "nodeName": "out", "type": "Any"}, {"lineNumber": 1656, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1657, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1657, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1658, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1658, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1660, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1660, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1661, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1661, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1662, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1662, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1667, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1667, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1669, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1670, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1670, "col_offset": 65, "nodeName": "out", "type": "Any"}, {"lineNumber": 1672, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1673, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1673, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1674, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1674, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1676, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1676, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1677, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1677, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1678, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1678, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "result", "type": "List[imgaug.random.RNG]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "result", "type": "List[imgaug.random.RNG]"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 419, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 444, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 466, "col_offset": 16, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 466, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 491, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 513, "col_offset": 16, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 513, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 537, "col_offset": 16, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 537, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 575, "col_offset": 16, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 575, "col_offset": 26, "nodeName": "fname", "type": "Any"}, {"lineNumber": 600, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 601, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 609, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 618, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 619, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 623, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 623, "col_offset": 26, "nodeName": "logical_or", "type": "Any"}, {"lineNumber": 626, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 635, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 636, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 644, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 645, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 653, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 654, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 676, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 697, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 698, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 700, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 701, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 705, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 705, "col_offset": 42, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 717, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 718, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 733, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 734, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 737, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 738, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 742, "col_offset": 25, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 747, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 751, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 752, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 752, "col_offset": 35, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 758, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 767, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 768, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 768, "col_offset": 35, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 776, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 781, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 781, "col_offset": 43, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 782, "col_offset": 23, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 783, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 807, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 808, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 811, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 812, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 818, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 819, "col_offset": 16, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 821, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 823, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 824, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 831, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 835, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 836, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 836, "col_offset": 35, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 842, "col_offset": 38, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 847, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 862, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 867, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 872, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 874, "col_offset": 13, "nodeName": "mock", "type": "Any"}, {"lineNumber": 877, "col_offset": 21, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 881, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 884, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 886, "col_offset": 13, "nodeName": "mock", "type": "Any"}, {"lineNumber": 889, "col_offset": 21, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 892, "col_offset": 54, "nodeName": "random", "type": "Any"}, {"lineNumber": 922, "col_offset": 15, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 929, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 941, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 941, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 949, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 959, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 959, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1008, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1009, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1012, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1013, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1031, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1035, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1049, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1070, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1072, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1085, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1087, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1088, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1091, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1092, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1104, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1104, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 1105, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1105, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1106, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1106, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1107, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1107, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1107, "col_offset": 61, "nodeName": "result", "type": "Any"}, {"lineNumber": 1109, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1112, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1119, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1119, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 1120, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1120, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1121, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1121, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1122, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1122, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1122, "col_offset": 61, "nodeName": "result", "type": "Any"}, {"lineNumber": 1124, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1137, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1139, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1140, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1143, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1144, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1151, "col_offset": 33, "nodeName": "bit_generator", "type": "Any"}, {"lineNumber": 1154, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1156, "col_offset": 33, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 1168, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1169, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1170, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1172, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1173, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1178, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1178, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1179, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1179, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1184, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1188, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1193, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1193, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1194, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1194, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1199, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1208, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1211, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1212, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1217, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1221, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1224, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1225, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1230, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1239, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1252, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1254, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1255, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1258, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1259, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1264, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1264, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1271, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1280, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1280, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1281, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1281, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1288, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1289, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1298, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1298, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1301, "col_offset": 55, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1306, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1309, "col_offset": 55, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1316, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1316, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1317, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1317, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1324, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1325, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1334, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1334, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1335, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1335, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1336, "col_offset": 44, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1343, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1344, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1345, "col_offset": 44, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1360, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1361, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1362, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1364, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1365, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1370, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1370, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1378, "col_offset": 51, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1379, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1380, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1381, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1384, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1392, "col_offset": 51, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1393, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1394, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1395, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1400, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1400, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1413, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1414, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1415, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1418, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1431, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1432, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1433, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1448, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1466, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1479, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1496, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1509, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1522, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1528, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1528, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1533, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1540, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1540, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1545, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1550, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1555, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1560, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1565, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1573, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1580, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1581, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1595, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1600, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1609, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1612, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1627, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1631, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1635, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1642, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1642, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1646, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1651, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1656, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1667, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1667, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1672, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 600, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 609, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 618, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 623, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 623, "col_offset": 40, "nodeName": "result", "type": "Any"}, {"lineNumber": 623, "col_offset": 54, "nodeName": "result", "type": "Any"}, {"lineNumber": 626, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 635, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 644, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 653, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 717, "col_offset": 15, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 718, "col_offset": 15, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 742, "col_offset": 25, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 752, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 758, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 768, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 781, "col_offset": 43, "nodeName": "random", "type": "Any"}, {"lineNumber": 818, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 819, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 819, "col_offset": 39, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 823, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 836, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 842, "col_offset": 38, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 881, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 892, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 1151, "col_offset": 33, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1156, "col_offset": 33, "nodeName": "gen", "type": "Any"}, {"lineNumber": 752, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 768, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 781, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 819, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 836, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 819, "col_offset": 39, "nodeName": "np", "type": "module"}]