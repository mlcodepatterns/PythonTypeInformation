[{"lineNumber": 24, "col_offset": 0, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 578, "col_offset": 40, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 583, "col_offset": 26, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 594, "col_offset": 16, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 613, "col_offset": 31, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 627, "col_offset": 32, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 701, "col_offset": 37, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 732, "col_offset": 46, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 745, "col_offset": 43, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 756, "col_offset": 41, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 800, "col_offset": 26, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 810, "col_offset": 27, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 830, "col_offset": 26, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 872, "col_offset": 44, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 901, "col_offset": 34, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 958, "col_offset": 29, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 980, "col_offset": 30, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1032, "col_offset": 31, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1064, "col_offset": 32, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1147, "col_offset": 33, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1257, "col_offset": 30, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1341, "col_offset": 29, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 1475, "col_offset": 27, "nodeName": "_Base", "type": "Type[_Base]"}, {"lineNumber": 13, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "use", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "matplotlib", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "_", "type": "imgaug.random.RNG"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "state", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "rng2", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "return_value", "type": "int"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "return_value", "type": "List[int]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "generator", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "rngs", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "rngs", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 254, "col_offset": 35, "nodeName": "gen", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "rng_glob", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "generator", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 306, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "generator", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "generator", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 413, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "kwargs_subcall", "type": "Dict[str, Tuple[int]]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 436, "col_offset": 38, "nodeName": "_side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "return_value", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 437, "col_offset": 48, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "generator", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 439, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "generator", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 460, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "kwargs_subcall", "type": "Dict[str, Union[Tuple[int], float]]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 483, "col_offset": 38, "nodeName": "_side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "return_value", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 484, "col_offset": 48, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "generator", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 486, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "generator", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 507, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "kwargs_subcall", "type": "Dict[str, Tuple[int]]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 529, "col_offset": 38, "nodeName": "_side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "return_value", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 530, "col_offset": 48, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "generator", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 532, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "_is_new_rng_style", "type": "bool"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "generator", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 570, "col_offset": 24, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "expected", "type": "imgaug.random.RNG"}, {"lineNumber": 600, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 636, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "bgen", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "rs", "type": "Any"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 685, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "seed", "type": "int"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 710, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 722, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "global_gen", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 765, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 777, "col_offset": 8, "nodeName": "dummy_bitgen", "type": "Any"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "dummy_rs", "type": "Any"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 805, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 813, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 833, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 834, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 836, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 856, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 864, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 866, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 876, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 880, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 890, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 891, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 892, "col_offset": 8, "nodeName": "return_value", "type": "imgaug.random.RNG"}, {"lineNumber": 894, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 905, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 906, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 907, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 909, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 911, "col_offset": 11, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 923, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 924, "col_offset": 8, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 926, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 928, "col_offset": 8, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 930, "col_offset": 8, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 932, "col_offset": 8, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 941, "col_offset": 8, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 943, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 944, "col_offset": 8, "nodeName": "state", "type": "List[Any]"}, {"lineNumber": 946, "col_offset": 8, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 950, "col_offset": 8, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "return_value", "type": "List[str]"}, {"lineNumber": 962, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 964, "col_offset": 8, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 970, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 973, "col_offset": 8, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 984, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 985, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 986, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 988, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1002, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1003, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1005, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1017, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1018, "col_offset": 8, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1020, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1036, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1037, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1038, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1040, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1054, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1055, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1059, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1060, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1068, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1069, "col_offset": 8, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 1083, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1084, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1085, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1086, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1098, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1099, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1100, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1101, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1106, "col_offset": 8, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1107, "col_offset": 8, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1108, "col_offset": 8, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 1109, "col_offset": 8, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 1116, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1117, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1118, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1119, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1129, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1130, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1131, "col_offset": 8, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1132, "col_offset": 8, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1137, "col_offset": 8, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1138, "col_offset": 8, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1139, "col_offset": 8, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 1140, "col_offset": 8, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 1151, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1152, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 1153, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1155, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1169, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1171, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1176, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1178, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 1185, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1186, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1188, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1193, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1194, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1196, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 1203, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1211, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1221, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1222, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1224, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1229, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1230, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1232, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 1239, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1240, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1243, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1248, "col_offset": 8, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1249, "col_offset": 8, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1252, "col_offset": 8, "nodeName": "result", "type": "bool"}, {"lineNumber": 1261, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1275, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1276, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1279, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1289, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1290, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1293, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1305, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1306, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1310, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1315, "col_offset": 8, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1316, "col_offset": 8, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1317, "col_offset": 8, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1323, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1324, "col_offset": 8, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1328, "col_offset": 8, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1333, "col_offset": 8, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1334, "col_offset": 8, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1335, "col_offset": 8, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1346, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1347, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1347, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1363, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1364, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1364, "col_offset": 35, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1378, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1379, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1379, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1381, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1394, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1395, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1395, "col_offset": 35, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1398, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1408, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1409, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1409, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1411, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1421, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1422, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1422, "col_offset": 34, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1424, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1433, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1445, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1455, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1465, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1480, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1481, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1481, "col_offset": 40, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1483, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1493, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1494, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1494, "col_offset": 33, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1497, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1507, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1508, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1508, "col_offset": 40, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1510, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1523, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1524, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1524, "col_offset": 33, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 1527, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1536, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1538, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1547, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1549, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1556, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1558, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1559, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 1572, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1574, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 1575, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 6, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 6, "col_offset": 30, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "NP_VERSION", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "reseed", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "SUPPORTS_NEW_NP_RNG_STYLE", "type": "bool"}, {"lineNumber": 46, "col_offset": 53, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "GLOBAL_RNG", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "generator", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "set_state_", "type": "Callable"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "rng2", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "use_state_of_", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "rng2", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 96, "col_offset": 57, "nodeName": "state", "type": "Set[str]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "generator", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "generate_seed_", "type": "Callable[[], Any]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "seed", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "generate_seeds_", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "reset_cache_", "type": "Callable"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "generator", "type": "Any"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "mock_derive", "type": "Any"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "derive_rng_", "type": "Callable[[], Any]"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "gen", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 158, "col_offset": 44, "nodeName": "generator", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "mock_derive", "type": "Any"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "derive_rngs_", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 168, "col_offset": 38, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "generator", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "mock_equal", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "generator", "type": "Any"}, {"lineNumber": 178, "col_offset": 59, "nodeName": "generator", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "advance_", "type": "Callable"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "advance_", "type": "Callable"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 206, "col_offset": 45, "nodeName": "generator", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "generator", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "generator", "type": "Any"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "mock_is_global", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "copy_unless_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 233, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "mock_is_global", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "copy_unless_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "duplicate", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "rngs", "type": "Any"}, {"lineNumber": 247, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "duplicate", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "rngs", "type": "Any"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "mock_create", "type": "Any"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "create_fully_random", "type": "Callable"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 257, "col_offset": 32, "nodeName": "gen", "type": "Any"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "generator", "type": "Any"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "create_pseudo_random_", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "generator", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "generator", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "integers", "type": "Callable[..., Any]"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "generator", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 285, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 287, "col_offset": 17, "nodeName": "random", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "generator", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 305, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[[Any], None]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 318, "col_offset": 17, "nodeName": "permutation", "type": "Callable[[Any], Any]"}, {"lineNumber": 320, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 405, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "arr", "type": "Any"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 412, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 425, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 432, "col_offset": 25, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 438, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 447, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 447, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 447, "col_offset": 35, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 448, "col_offset": 27, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 448, "col_offset": 36, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 453, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 455, "col_offset": 73, "nodeName": "arr", "type": "Any"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 459, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 471, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 475, "col_offset": 19, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 479, "col_offset": 25, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 485, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 494, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 494, "col_offset": 35, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 495, "col_offset": 27, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 495, "col_offset": 36, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 500, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 502, "col_offset": 59, "nodeName": "arr", "type": "Any"}, {"lineNumber": 504, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 506, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 518, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 519, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 522, "col_offset": 19, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 525, "col_offset": 59, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 531, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 540, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 540, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 540, "col_offset": 35, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 541, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 541, "col_offset": 27, "nodeName": "arr_out", "type": "Any"}, {"lineNumber": 541, "col_offset": 36, "nodeName": "arr_result", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "_test_sampling_func", "type": "Callable[..., Any]"}, {"lineNumber": 567, "col_offset": 19, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 569, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 580, "col_offset": 58, "nodeName": "IS_NP_117_OR_HIGHER", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 587, "col_offset": 14, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 589, "col_offset": 19, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 590, "col_offset": 15, "nodeName": "rng", "type": "Any"}, {"lineNumber": 591, "col_offset": 15, "nodeName": "equals", "type": "Any"}, {"lineNumber": 591, "col_offset": 26, "nodeName": "expected", "type": "imgaug.random.RNG"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "seed", "type": "Callable[[Any], None]"}, {"lineNumber": 609, "col_offset": 15, "nodeName": "equals", "type": "Any"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "CURRENT_RANDOM_STATE", "type": "Any"}, {"lineNumber": 610, "col_offset": 48, "nodeName": "GLOBAL_RNG", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 619, "col_offset": 17, "nodeName": "normalize_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 619, "col_offset": 46, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 621, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 622, "col_offset": 51, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 623, "col_offset": 47, "nodeName": "inputs", "type": "List[str]"}, {"lineNumber": 624, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 634, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 646, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 647, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 647, "col_offset": 25, "nodeName": "generator", "type": "Any"}, {"lineNumber": 652, "col_offset": 18, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 654, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 654, "col_offset": 47, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 656, "col_offset": 19, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 658, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 658, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 658, "col_offset": 54, "nodeName": "expected", "type": "Any"}, {"lineNumber": 663, "col_offset": 15, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 665, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 665, "col_offset": 47, "nodeName": "bgen", "type": "Any"}, {"lineNumber": 667, "col_offset": 15, "nodeName": "bit_generator", "type": "Any"}, {"lineNumber": 667, "col_offset": 39, "nodeName": "bgen", "type": "Any"}, {"lineNumber": 672, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 676, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 676, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 678, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 678, "col_offset": 25, "nodeName": "gen", "type": "Any"}, {"lineNumber": 681, "col_offset": 13, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 683, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 683, "col_offset": 47, "nodeName": "rs", "type": "Any"}, {"lineNumber": 686, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 687, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 695, "col_offset": 17, "nodeName": "normalize_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 695, "col_offset": 47, "nodeName": "seed", "type": "int"}, {"lineNumber": 697, "col_offset": 19, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 697, "col_offset": 54, "nodeName": "seed", "type": "int"}, {"lineNumber": 698, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 698, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 698, "col_offset": 54, "nodeName": "expected", "type": "Any"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 708, "col_offset": 17, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 720, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 728, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 736, "col_offset": 18, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 738, "col_offset": 14, "nodeName": "convert_seed_sequence_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 738, "col_offset": 58, "nodeName": "seedseq", "type": "Any"}, {"lineNumber": 740, "col_offset": 19, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 742, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 742, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 742, "col_offset": 51, "nodeName": "expected", "type": "Any"}, {"lineNumber": 747, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 747, "col_offset": 38, "nodeName": "generator", "type": "Any"}, {"lineNumber": 749, "col_offset": 14, "nodeName": "create_pseudo_random_generator_", "type": "Callable[[], Any]"}, {"lineNumber": 751, "col_offset": 19, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 753, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 753, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 753, "col_offset": 51, "nodeName": "expected", "type": "Any"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 763, "col_offset": 17, "nodeName": "create_fully_random_generator", "type": "Callable[[], Any]"}, {"lineNumber": 777, "col_offset": 23, "nodeName": "SFC64", "type": "Any"}, {"lineNumber": 779, "col_offset": 49, "nodeName": "mock_bitgen", "type": "Any"}, {"lineNumber": 780, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 780, "col_offset": 39, "nodeName": "dummy_bitgen", "type": "Any"}, {"lineNumber": 782, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 785, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 786, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 789, "col_offset": 19, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 791, "col_offset": 55, "nodeName": "mock_rs", "type": "Any"}, {"lineNumber": 792, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 792, "col_offset": 35, "nodeName": "dummy_rs", "type": "Any"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 797, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 797, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 803, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 805, "col_offset": 12, "nodeName": "generate_seed_", "type": "Callable[[Any], Any]"}, {"lineNumber": 805, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 807, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 807, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 813, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 815, "col_offset": 12, "nodeName": "generate_seeds_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 815, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 818, "col_offset": 12, "nodeName": "gen", "type": "Any"}, {"lineNumber": 818, "col_offset": 17, "nodeName": "SEED_MIN_VALUE", "type": "int"}, {"lineNumber": 818, "col_offset": 42, "nodeName": "SEED_MAX_VALUE", "type": "int"}, {"lineNumber": 821, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 823, "col_offset": 16, "nodeName": "generate_seeds_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 823, "col_offset": 41, "nodeName": "gen", "type": "Any"}, {"lineNumber": 826, "col_offset": 15, "nodeName": "is_np_array", "type": "Callable[[Any], bool]"}, {"lineNumber": 826, "col_offset": 30, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 827, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 833, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 834, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 836, "col_offset": 19, "nodeName": "copy_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 836, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 838, "col_offset": 15, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 839, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 846, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 848, "col_offset": 19, "nodeName": "copy_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 848, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 850, "col_offset": 15, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 851, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 851, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 854, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 856, "col_offset": 19, "nodeName": "_copy_generator_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 856, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 858, "col_offset": 15, "nodeName": "gen", "type": "Any"}, {"lineNumber": 858, "col_offset": 26, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 859, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 859, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 859, "col_offset": 51, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 864, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 866, "col_offset": 19, "nodeName": "_copy_generator_np117", "type": "Callable[[Any], Any]"}, {"lineNumber": 866, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 868, "col_offset": 15, "nodeName": "gen", "type": "Any"}, {"lineNumber": 868, "col_offset": 26, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 869, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 869, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 869, "col_offset": 51, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 876, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 878, "col_offset": 43, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 878, "col_offset": 56, "nodeName": "gen", "type": "Any"}, {"lineNumber": 880, "col_offset": 17, "nodeName": "copy_generator_unless_global_rng", "type": "Any"}, {"lineNumber": 880, "col_offset": 59, "nodeName": "gen", "type": "Any"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 883, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 884, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 884, "col_offset": 25, "nodeName": "gen", "type": "Any"}, {"lineNumber": 889, "col_offset": 15, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 890, "col_offset": 15, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 891, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 892, "col_offset": 8, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 892, "col_offset": 43, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 892, "col_offset": 56, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 894, "col_offset": 17, "nodeName": "copy_generator_unless_global_rng", "type": "Any"}, {"lineNumber": 894, "col_offset": 59, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 896, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 898, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 905, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 906, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 907, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 909, "col_offset": 17, "nodeName": "reset_generator_cache_", "type": "Callable[[Any], Any]"}, {"lineNumber": 909, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 923, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 924, "col_offset": 33, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 924, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 926, "col_offset": 16, "nodeName": "_get_generator_state_np117", "type": "Callable[[Any], Any]"}, {"lineNumber": 926, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 927, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 928, "col_offset": 25, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 928, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 929, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 929, "col_offset": 38, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 929, "col_offset": 54, "nodeName": "state", "type": "Any"}, {"lineNumber": 930, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 930, "col_offset": 47, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 932, "col_offset": 26, "nodeName": "reset_generator_cache_", "type": "Callable[[Any], Any]"}, {"lineNumber": 932, "col_offset": 58, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 934, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 934, "col_offset": 46, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 935, "col_offset": 46, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 940, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 941, "col_offset": 33, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 941, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 943, "col_offset": 16, "nodeName": "_get_generator_state_np116", "type": "Callable[[Any], Any]"}, {"lineNumber": 943, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 944, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 944, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 945, "col_offset": 8, "nodeName": "state", "type": "List[Any]"}, {"lineNumber": 946, "col_offset": 25, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 946, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 947, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 947, "col_offset": 38, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 948, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 948, "col_offset": 47, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 950, "col_offset": 26, "nodeName": "reset_generator_cache_", "type": "Callable[[Any], Any]"}, {"lineNumber": 950, "col_offset": 58, "nodeName": "gen_with_cache", "type": "Any"}, {"lineNumber": 952, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 952, "col_offset": 46, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 953, "col_offset": 46, "nodeName": "gen_without_cache_copy", "type": "Any"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "mock_derive_gens", "type": "Any"}, {"lineNumber": 962, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 964, "col_offset": 22, "nodeName": "derive_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 964, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 966, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 966, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 967, "col_offset": 15, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 970, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 971, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 971, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 973, "col_offset": 22, "nodeName": "derive_generator_", "type": "Callable[[Any], Any]"}, {"lineNumber": 973, "col_offset": 49, "nodeName": "gen", "type": "Any"}, {"lineNumber": 984, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 985, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 986, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 988, "col_offset": 17, "nodeName": "derive_generators_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 988, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 990, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 990, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 990, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1002, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1003, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1003, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1005, "col_offset": 17, "nodeName": "derive_generators_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1005, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1008, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1017, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1018, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1018, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1020, "col_offset": 17, "nodeName": "derive_generators_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1020, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1023, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1036, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1037, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1038, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1040, "col_offset": 17, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1040, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1042, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1042, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1042, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1054, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1055, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1059, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1060, "col_offset": 16, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1060, "col_offset": 45, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1068, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1071, "col_offset": 38, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1071, "col_offset": 43, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 1073, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1073, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1073, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1083, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1084, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1085, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1085, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1086, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1086, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1088, "col_offset": 8, "nodeName": "_set_generator_state_np117_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1089, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1091, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1091, "col_offset": 46, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1091, "col_offset": 52, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1092, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1092, "col_offset": 46, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1092, "col_offset": 52, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1098, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1099, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1100, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1100, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1101, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1101, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1103, "col_offset": 8, "nodeName": "_set_generator_state_np117_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1104, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1106, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 1107, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 1108, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 1109, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 1111, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1111, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1111, "col_offset": 37, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1112, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1112, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1112, "col_offset": 37, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 1116, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1117, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1118, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1118, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1119, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1119, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1121, "col_offset": 8, "nodeName": "_set_generator_state_np116_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1122, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1124, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1124, "col_offset": 46, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1124, "col_offset": 52, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1125, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1125, "col_offset": 46, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1125, "col_offset": 52, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1129, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1130, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1131, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1131, "col_offset": 37, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1132, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1132, "col_offset": 37, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1134, "col_offset": 8, "nodeName": "_set_generator_state_np116_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1135, "col_offset": 12, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1137, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 1138, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 1139, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 1140, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 1142, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1142, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1142, "col_offset": 37, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1143, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1143, "col_offset": 27, "nodeName": "samples1", "type": "Any"}, {"lineNumber": 1143, "col_offset": 37, "nodeName": "samples1_copy", "type": "Any"}, {"lineNumber": 1151, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1152, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1153, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1155, "col_offset": 17, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1155, "col_offset": 48, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1155, "col_offset": 53, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1157, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1157, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1157, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1169, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1171, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1171, "col_offset": 55, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1171, "col_offset": 60, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1173, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1176, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1178, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1178, "col_offset": 55, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1178, "col_offset": 60, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1180, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1185, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1186, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1188, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1188, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1188, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1190, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1193, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1194, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1196, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1196, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1196, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1198, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1203, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1205, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1205, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1208, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1211, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1213, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1213, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1216, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1221, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1222, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1224, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1224, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1224, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1226, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1229, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1230, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1232, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1232, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1232, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1234, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1239, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1240, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1241, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1241, "col_offset": 38, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1243, "col_offset": 17, "nodeName": "_is_generator_equal_to_np117", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1243, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1243, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1245, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1248, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1249, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1250, "col_offset": 8, "nodeName": "set_generator_state_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1250, "col_offset": 38, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1252, "col_offset": 17, "nodeName": "_is_generator_equal_to_np116", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 1252, "col_offset": 55, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1252, "col_offset": 61, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1254, "col_offset": 15, "nodeName": "result", "type": "bool"}, {"lineNumber": 1261, "col_offset": 14, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 1263, "col_offset": 8, "nodeName": "advance_generator_", "type": "Callable[[Any], None]"}, {"lineNumber": 1263, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1265, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1265, "col_offset": 22, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1265, "col_offset": 27, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1275, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1276, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1276, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1278, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 1278, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1279, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1279, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1281, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 1281, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1283, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1283, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1289, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1290, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1290, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1292, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 1292, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1293, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1293, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1295, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 1295, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1297, "col_offset": 15, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1297, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1305, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1306, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1306, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1309, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 1309, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1310, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1310, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1313, "col_offset": 8, "nodeName": "_advance_generator_np117_", "type": "Callable[[Any], None]"}, {"lineNumber": 1313, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1315, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 1316, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 1317, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 1323, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1324, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1324, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1327, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 1327, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1328, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1328, "col_offset": 37, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1331, "col_offset": 8, "nodeName": "_advance_generator_np116_", "type": "Callable[[Any], None]"}, {"lineNumber": 1331, "col_offset": 43, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1333, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 1334, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 1335, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 1346, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 1347, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1349, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1349, "col_offset": 44, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1352, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1353, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1363, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 1364, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 1365, "col_offset": 12, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1367, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1367, "col_offset": 44, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1370, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1371, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1378, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 1379, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1381, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1381, "col_offset": 44, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1383, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1384, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1394, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 1395, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 1396, "col_offset": 12, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1398, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1398, "col_offset": 44, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1400, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1401, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1408, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 1409, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1411, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1411, "col_offset": 44, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1413, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1414, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1421, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 1422, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1424, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1424, "col_offset": 44, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1426, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1427, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1433, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1435, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1435, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1438, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1439, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1440, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1445, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1447, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1447, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1450, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1451, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1452, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1455, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1457, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1457, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1460, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1461, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1462, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1465, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1467, "col_offset": 17, "nodeName": "polyfill_integers", "type": "Callable[..., Any]"}, {"lineNumber": 1467, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1470, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1471, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1472, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1480, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 1481, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 1483, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1483, "col_offset": 42, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1485, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1486, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1493, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 1494, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1495, "col_offset": 12, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1497, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1497, "col_offset": 42, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1499, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1500, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1507, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 1508, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 1510, "col_offset": 14, "nodeName": "empty", "type": "Any"}, {"lineNumber": 1511, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1511, "col_offset": 42, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1514, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1517, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1523, "col_offset": 14, "nodeName": "MagicMock", "type": "Union[Type[mock.MagicMock], Type[unittest.mock.MagicMock]]"}, {"lineNumber": 1524, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1525, "col_offset": 12, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1527, "col_offset": 14, "nodeName": "empty", "type": "Any"}, {"lineNumber": 1528, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1528, "col_offset": 42, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1531, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1532, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1536, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1538, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1538, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1540, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1541, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1542, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1547, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1549, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1549, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1551, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1552, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1553, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1556, "col_offset": 14, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1558, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1559, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1559, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1561, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1562, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1563, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1565, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 1566, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1567, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1572, "col_offset": 14, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 1574, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1575, "col_offset": 17, "nodeName": "polyfill_random", "type": "Callable[..., Any]"}, {"lineNumber": 1575, "col_offset": 42, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1577, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 1578, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1579, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1581, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 1582, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 1583, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 6, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 6, "col_offset": 30, "nodeName": "sys", "type": "module"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "mock_norm", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "mock_set", "type": "Any"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "mock_set", "type": "Any"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "mock", "type": "module"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "mock_set", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "is_global_rng", "type": "Callable[[], bool]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "is_global_rng", "type": "Callable[[], bool]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "equals_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "equals_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "mock_gen", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "mock_reset", "type": "Any"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "mock_derive", "type": "Any"}, {"lineNumber": 158, "col_offset": 44, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "mock_derive", "type": "Any"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "mock_equal", "type": "Any"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 178, "col_offset": 59, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "equals", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "mock_advance", "type": "Any"}, {"lineNumber": 206, "col_offset": 45, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "result", "type": "imgaug.random.RNG"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "rng2", "type": "imgaug.random.RNG"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "mock_is_global", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 233, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "mock_is_global", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 244, "col_offset": 24, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 247, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "mock_create", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "rng_glob", "type": "Any"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 285, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 287, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 287, "col_offset": 60, "nodeName": "out", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "mock_func", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 291, "col_offset": 59, "nodeName": "out", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 305, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 318, "col_offset": 17, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 405, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 411, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 412, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 416, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 416, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 416, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 416, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 419, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 419, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 425, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 437, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 437, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 438, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 442, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 442, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 442, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 442, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 444, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 445, "col_offset": 59, "nodeName": "kwargs_subcall", "type": "Dict[str, Tuple[int]]"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 447, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 453, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 458, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 459, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 463, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 463, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 463, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 463, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 463, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 466, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 466, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 471, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 484, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 485, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 489, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 489, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 489, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 489, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 491, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 492, "col_offset": 59, "nodeName": "kwargs_subcall", "type": "Dict[str, Union[Tuple[int], float]]"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 500, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 504, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 505, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 506, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 510, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 510, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 510, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 510, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 510, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 513, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 513, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 518, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 519, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 530, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 531, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 535, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 535, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 535, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 535, "col_offset": 38, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 535, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 537, "col_offset": 58, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 538, "col_offset": 59, "nodeName": "kwargs_subcall", "type": "Dict[str, Tuple[int]]"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 540, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 541, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "self", "type": "TestRNG"}, {"lineNumber": 567, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 568, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 568, "col_offset": 26, "nodeName": "fname", "type": "Any"}, {"lineNumber": 569, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 572, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 572, "col_offset": 25, "nodeName": "rng", "type": "imgaug.random.RNG"}, {"lineNumber": 572, "col_offset": 30, "nodeName": "fname", "type": "Any"}, {"lineNumber": 572, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 572, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 575, "col_offset": 58, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 575, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 580, "col_offset": 15, "nodeName": "supports_new_numpy_rng_style", "type": "Callable[[], bool]"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 587, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 589, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 591, "col_offset": 15, "nodeName": "rng", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 601, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 602, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 604, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 605, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 609, "col_offset": 15, "nodeName": "GLOBAL_RNG", "type": "Any"}, {"lineNumber": 609, "col_offset": 42, "nodeName": "RNG", "type": "Type[imgaug.random.RNG]"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 610, "col_offset": 48, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 619, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 621, "col_offset": 15, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 634, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 637, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 639, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 641, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 643, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 646, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 652, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 654, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 656, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 658, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 663, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 663, "col_offset": 38, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 665, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 667, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 672, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 676, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 681, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 683, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 686, "col_offset": 19, "nodeName": "generate_seed_", "type": "Callable[[Any], Any]"}, {"lineNumber": 687, "col_offset": 23, "nodeName": "convert_seed_to_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 687, "col_offset": 58, "nodeName": "seed", "type": "Any"}, {"lineNumber": 688, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 688, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 688, "col_offset": 58, "nodeName": "expected", "type": "Any"}, {"lineNumber": 690, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 690, "col_offset": 29, "nodeName": "rs", "type": "Any"}, {"lineNumber": 695, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 697, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 698, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 708, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 711, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 712, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 713, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 715, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 716, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 717, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 720, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 723, "col_offset": 23, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 726, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 726, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 726, "col_offset": 55, "nodeName": "expected", "type": "Any"}, {"lineNumber": 728, "col_offset": 23, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 729, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 729, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 729, "col_offset": 55, "nodeName": "expected", "type": "Any"}, {"lineNumber": 736, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 738, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 740, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 742, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 747, "col_offset": 21, "nodeName": "copylib", "type": "module"}, {"lineNumber": 749, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 751, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 752, "col_offset": 12, "nodeName": "generate_seed_", "type": "Callable[[Any], Any]"}, {"lineNumber": 752, "col_offset": 36, "nodeName": "global_gen", "type": "Any"}, {"lineNumber": 753, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 763, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 766, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 767, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 768, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 770, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 772, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 777, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 779, "col_offset": 13, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 780, "col_offset": 12, "nodeName": "mock_bitgen", "type": "Any"}, {"lineNumber": 782, "col_offset": 21, "nodeName": "_create_fully_random_generator_np117", "type": "Callable[[], Any]"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "mock_bitgen", "type": "Any"}, {"lineNumber": 785, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 786, "col_offset": 20, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 786, "col_offset": 40, "nodeName": "dummy_bitgen", "type": "Any"}, {"lineNumber": 789, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 791, "col_offset": 13, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 792, "col_offset": 12, "nodeName": "mock_rs", "type": "Any"}, {"lineNumber": 794, "col_offset": 21, "nodeName": "_create_fully_random_generator_np116", "type": "Callable[[], Any]"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "mock_rs", "type": "Any"}, {"lineNumber": 797, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 797, "col_offset": 54, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 803, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 805, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 807, "col_offset": 8, "nodeName": "mock_seeds", "type": "Any"}, {"lineNumber": 813, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 815, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "mock_integers", "type": "Any"}, {"lineNumber": 818, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 818, "col_offset": 42, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 821, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 823, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 825, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 825, "col_offset": 19, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 826, "col_offset": 15, "nodeName": "ia", "type": "module"}, {"lineNumber": 827, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 834, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 836, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 846, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 846, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 848, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 851, "col_offset": 8, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 854, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 856, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 859, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 864, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 864, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 866, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 869, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 876, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 878, "col_offset": 43, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 880, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 883, "col_offset": 15, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 889, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 890, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 892, "col_offset": 43, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 894, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 896, "col_offset": 8, "nodeName": "mock_get_global_rng", "type": "Any"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "mock_copy", "type": "Any"}, {"lineNumber": 907, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 909, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 912, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 913, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 914, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 916, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 917, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 918, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 923, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 924, "col_offset": 33, "nodeName": "copylib", "type": "module"}, {"lineNumber": 926, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 928, "col_offset": 25, "nodeName": "copylib", "type": "module"}, {"lineNumber": 929, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 930, "col_offset": 30, "nodeName": "copylib", "type": "module"}, {"lineNumber": 932, "col_offset": 26, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 934, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 936, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 936, "col_offset": 50, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 937, "col_offset": 50, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 940, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 941, "col_offset": 33, "nodeName": "copylib", "type": "module"}, {"lineNumber": 943, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 946, "col_offset": 25, "nodeName": "copylib", "type": "module"}, {"lineNumber": 947, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 947, "col_offset": 54, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 947, "col_offset": 60, "nodeName": "state", "type": "List[Any]"}, {"lineNumber": 948, "col_offset": 30, "nodeName": "copylib", "type": "module"}, {"lineNumber": 950, "col_offset": 26, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 952, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 954, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 954, "col_offset": 50, "nodeName": "gen_cache_reset", "type": "Any"}, {"lineNumber": 955, "col_offset": 50, "nodeName": "gen_with_cache_copy", "type": "Any"}, {"lineNumber": 962, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 964, "col_offset": 22, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 966, "col_offset": 8, "nodeName": "mock_derive_gens", "type": "Any"}, {"lineNumber": 970, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 971, "col_offset": 19, "nodeName": "copylib", "type": "module"}, {"lineNumber": 973, "col_offset": 22, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 975, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 975, "col_offset": 50, "nodeName": "gen_derived", "type": "Any"}, {"lineNumber": 975, "col_offset": 63, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 977, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 977, "col_offset": 50, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 977, "col_offset": 60, "nodeName": "gen", "type": "Any"}, {"lineNumber": 986, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 988, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 990, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 991, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 992, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 993, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 995, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 996, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 997, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1002, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1003, "col_offset": 19, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1005, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1007, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1007, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1008, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1010, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1010, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1011, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1011, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1012, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1014, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1014, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1014, "col_offset": 55, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1017, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1018, "col_offset": 19, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1020, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1022, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1022, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1023, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1025, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1025, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1026, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1026, "col_offset": 61, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1027, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1029, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1029, "col_offset": 50, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1029, "col_offset": 55, "nodeName": "gen_copy", "type": "Any"}, {"lineNumber": 1038, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1040, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1042, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 1043, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1044, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 1045, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1047, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1048, "col_offset": 12, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 1049, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1054, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1056, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1056, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 1056, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1056, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 1059, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1060, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1061, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1061, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 1061, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1061, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 1068, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1073, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 1074, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1074, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1074, "col_offset": 52, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 1075, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1077, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1077, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1077, "col_offset": 52, "nodeName": "state", "type": "Dict[str, int]"}, {"lineNumber": 1078, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1083, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1083, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1084, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1084, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1085, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1086, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1088, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1089, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1089, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1091, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1092, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1093, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1093, "col_offset": 50, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1093, "col_offset": 56, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1098, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1098, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1099, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1099, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1100, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1101, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1103, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1104, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1104, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1106, "col_offset": 19, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1107, "col_offset": 19, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1108, "col_offset": 24, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1109, "col_offset": 24, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1111, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1112, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1113, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1113, "col_offset": 31, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1113, "col_offset": 41, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 1116, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1117, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1118, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1119, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1121, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1122, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1122, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1124, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1125, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1126, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1126, "col_offset": 50, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1126, "col_offset": 56, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1129, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1130, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1131, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1132, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1134, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1135, "col_offset": 18, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1135, "col_offset": 47, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1137, "col_offset": 19, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1138, "col_offset": 19, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 1139, "col_offset": 24, "nodeName": "gen1_copy", "type": "Any"}, {"lineNumber": 1140, "col_offset": 24, "nodeName": "gen2_copy", "type": "Any"}, {"lineNumber": 1142, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1143, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1144, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1144, "col_offset": 31, "nodeName": "samples2", "type": "Any"}, {"lineNumber": 1144, "col_offset": 41, "nodeName": "samples2_copy", "type": "Any"}, {"lineNumber": 1153, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1155, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1157, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 1158, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1159, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1159, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1159, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1160, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1162, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 1163, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1163, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1163, "col_offset": 52, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1164, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1169, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1169, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1171, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1176, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1178, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1185, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1185, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1186, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1186, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1188, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1193, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1194, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1196, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1203, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1203, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1205, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1206, "col_offset": 55, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1206, "col_offset": 72, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1211, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1213, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1214, "col_offset": 55, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1214, "col_offset": 72, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1221, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1221, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1222, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1222, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1224, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1229, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1230, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1232, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1239, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1239, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1240, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1240, "col_offset": 35, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1241, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1241, "col_offset": 44, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1241, "col_offset": 73, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1243, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1248, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1249, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 1250, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1250, "col_offset": 44, "nodeName": "get_generator_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 1250, "col_offset": 73, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 1252, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1261, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1263, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1265, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 1266, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1266, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1267, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1269, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 1269, "col_offset": 47, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1270, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 1275, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1275, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1276, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1278, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1279, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1281, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1283, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1283, "col_offset": 51, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1283, "col_offset": 68, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1284, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1284, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1284, "col_offset": 61, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1285, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1285, "col_offset": 50, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1285, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1286, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1286, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1286, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1289, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1290, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1292, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1293, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1295, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1297, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1297, "col_offset": 51, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 1297, "col_offset": 68, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1298, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1298, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1298, "col_offset": 61, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1299, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1299, "col_offset": 50, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1299, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1300, "col_offset": 19, "nodeName": "is_generator_equal_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1300, "col_offset": 50, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1300, "col_offset": 61, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1305, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1305, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1306, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1309, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1310, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1313, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1315, "col_offset": 24, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1316, "col_offset": 23, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1317, "col_offset": 29, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1318, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1318, "col_offset": 30, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1318, "col_offset": 44, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1319, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1319, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1319, "col_offset": 50, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1320, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1320, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1320, "col_offset": 50, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1323, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1324, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1327, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1328, "col_offset": 20, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1331, "col_offset": 8, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1333, "col_offset": 24, "nodeName": "gen_copy1", "type": "Any"}, {"lineNumber": 1334, "col_offset": 23, "nodeName": "gen_copy2", "type": "Any"}, {"lineNumber": 1335, "col_offset": 29, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1336, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1336, "col_offset": 30, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1336, "col_offset": 44, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1337, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1337, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1337, "col_offset": 50, "nodeName": "sample_after", "type": "Any"}, {"lineNumber": 1338, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 1338, "col_offset": 30, "nodeName": "sample_after_after", "type": "Any"}, {"lineNumber": 1338, "col_offset": 50, "nodeName": "sample_before", "type": "Any"}, {"lineNumber": 1346, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1347, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1349, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1353, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1363, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1364, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1367, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1371, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 1378, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1379, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1381, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1384, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1394, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1395, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1398, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1401, "col_offset": 8, "nodeName": "integers", "type": "Any"}, {"lineNumber": 1408, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1409, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1411, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1414, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1421, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1422, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1424, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1427, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 1433, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1433, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1435, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1438, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1439, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1439, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1440, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1440, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1445, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1445, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1447, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1450, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1451, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1451, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1452, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1452, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1455, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1457, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1460, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1461, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1461, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1462, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1462, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1465, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1467, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1470, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1471, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1471, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1472, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1472, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1478, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1480, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1481, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1483, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1485, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1486, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 1493, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1494, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1497, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1500, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1505, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1507, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1508, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1510, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1511, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1512, "col_offset": 46, "nodeName": "out", "type": "Any"}, {"lineNumber": 1514, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1517, "col_offset": 8, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 1523, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 1524, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1527, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1528, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1529, "col_offset": 46, "nodeName": "out", "type": "Any"}, {"lineNumber": 1532, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1533, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 1536, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1538, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1540, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1541, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1541, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1542, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1542, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1547, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1547, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1549, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1551, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1552, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1552, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1553, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1553, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1556, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1558, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1559, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1559, "col_offset": 65, "nodeName": "out", "type": "Any"}, {"lineNumber": 1561, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1562, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1562, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1563, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1563, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1565, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1565, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1566, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1566, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1567, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1567, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1572, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1572, "col_offset": 34, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 1574, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1575, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1575, "col_offset": 65, "nodeName": "out", "type": "Any"}, {"lineNumber": 1577, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1578, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1578, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1579, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1579, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 1581, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1581, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1582, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1582, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 1583, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1583, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "rng1", "type": "imgaug.random.RNG"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 419, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 444, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 466, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 466, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 491, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 513, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 513, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 537, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 537, "col_offset": 26, "nodeName": "fname", "type": "str"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 575, "col_offset": 16, "nodeName": "mock_gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 575, "col_offset": 26, "nodeName": "fname", "type": "Any"}, {"lineNumber": 580, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 601, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 602, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 604, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 605, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 609, "col_offset": 15, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 609, "col_offset": 42, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 622, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 623, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 639, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 643, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 647, "col_offset": 25, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 652, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 656, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 657, "col_offset": 35, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 663, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 672, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 673, "col_offset": 35, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 681, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 686, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 686, "col_offset": 43, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 687, "col_offset": 23, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 688, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 712, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 713, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 716, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 717, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 723, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 724, "col_offset": 16, "nodeName": "BIT_GENERATOR", "type": "Any"}, {"lineNumber": 726, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 728, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 729, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 736, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 740, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 741, "col_offset": 35, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 747, "col_offset": 38, "nodeName": "get_global_rng", "type": "Callable[[], Any]"}, {"lineNumber": 752, "col_offset": 12, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 767, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 768, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 772, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 777, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 779, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 782, "col_offset": 21, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 786, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 789, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 791, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 794, "col_offset": 21, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 797, "col_offset": 54, "nodeName": "random", "type": "Any"}, {"lineNumber": 827, "col_offset": 15, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 834, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 846, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 846, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 854, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 864, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 864, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 913, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 914, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 917, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 918, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 936, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 940, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 954, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 975, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 977, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 990, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 992, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 993, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 996, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 997, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1009, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1009, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 1010, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1010, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1011, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1011, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1012, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1012, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1012, "col_offset": 61, "nodeName": "result", "type": "Any"}, {"lineNumber": 1014, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1017, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1024, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1024, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 1025, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1025, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1026, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1026, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1027, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1027, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 1027, "col_offset": 61, "nodeName": "result", "type": "Any"}, {"lineNumber": 1029, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1042, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1044, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1045, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1048, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1049, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1056, "col_offset": 33, "nodeName": "bit_generator", "type": "Any"}, {"lineNumber": 1061, "col_offset": 33, "nodeName": "bit_generator", "type": "Any"}, {"lineNumber": 1073, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1074, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1075, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1077, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1078, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1083, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1083, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1084, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1084, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1089, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1093, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1098, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1098, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1099, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1099, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1104, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1113, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1116, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1117, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1122, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1126, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1129, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1130, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1135, "col_offset": 18, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1144, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1157, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1159, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1160, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1163, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1164, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1169, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1169, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1176, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1185, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1185, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1186, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1186, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1193, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1194, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1203, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1203, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1206, "col_offset": 55, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1211, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1214, "col_offset": 55, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1221, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1221, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1222, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1222, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1229, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1230, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1239, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1239, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1240, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1240, "col_offset": 35, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1241, "col_offset": 44, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1248, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1249, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1250, "col_offset": 44, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1265, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 1266, "col_offset": 12, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1267, "col_offset": 19, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1269, "col_offset": 12, "nodeName": "mock_np117", "type": "Any"}, {"lineNumber": 1270, "col_offset": 19, "nodeName": "mock_np116", "type": "Any"}, {"lineNumber": 1275, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1275, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1283, "col_offset": 51, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1284, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1285, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1286, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1289, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1297, "col_offset": 51, "nodeName": "copylib", "type": "module"}, {"lineNumber": 1298, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1299, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1300, "col_offset": 19, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1305, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1305, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1318, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1319, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1320, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1323, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1336, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1337, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1338, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1353, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1371, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1384, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1401, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1414, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1427, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1433, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1433, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1438, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1445, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1445, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1450, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1455, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1460, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1465, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1470, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1478, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1485, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1486, "col_offset": 8, "nodeName": "gen", "type": "Union[unittest.mock.MagicMock, mock.MagicMock]"}, {"lineNumber": 1500, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1505, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1514, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1517, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1532, "col_offset": 8, "nodeName": "gen", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1536, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1540, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1547, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1547, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1551, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1556, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1561, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 1572, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1572, "col_offset": 34, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 1577, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 622, "col_offset": 15, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 623, "col_offset": 15, "nodeName": "mock_subfunc", "type": "Any"}, {"lineNumber": 647, "col_offset": 25, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 657, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 663, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 673, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 686, "col_offset": 43, "nodeName": "random", "type": "Any"}, {"lineNumber": 723, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 724, "col_offset": 16, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 724, "col_offset": 39, "nodeName": "SeedSequence", "type": "Any"}, {"lineNumber": 728, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 741, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 747, "col_offset": 38, "nodeName": "iarandom", "type": "module"}, {"lineNumber": 786, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 797, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 1056, "col_offset": 33, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1061, "col_offset": 33, "nodeName": "gen", "type": "Any"}, {"lineNumber": 657, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 673, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 686, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 724, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 741, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 724, "col_offset": 39, "nodeName": "np", "type": "module"}]