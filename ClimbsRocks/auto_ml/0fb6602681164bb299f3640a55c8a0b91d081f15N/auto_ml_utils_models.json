[{"lineNumber": 41, "col_offset": 0, "nodeName": "get_model_from_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "get_name_from_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "get_search_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 0, "nodeName": "load_keras_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 0, "nodeName": "make_deep_learning_model", "type": "Callable[..., Any]"}, {"lineNumber": 406, "col_offset": 0, "nodeName": "make_deep_learning_classifier", "type": "Callable[..., Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "keras_installed", "type": "bool"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 37, "col_offset": 3, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "keras_installed", "type": "bool"}, {"lineNumber": 25, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "NameError", "type": "Type[NameError]"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 78, "col_offset": 7, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 82, "col_offset": 7, "nodeName": "keras_installed", "type": "bool"}, {"lineNumber": 141, "col_offset": 7, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 147, "col_offset": 7, "nodeName": "keras_installed", "type": "bool"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "keras_file_name", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "keras_model", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 377, "col_offset": 53, "nodeName": "keras_model", "type": "Any"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "layer", "type": "Union[Any, int]"}, {"lineNumber": 413, "col_offset": 17, "nodeName": "hidden_layers", "type": "Union[Any, List[int]]"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "layer_size", "type": "int"}, {"lineNumber": 434, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "RidgeClassifier", "type": "Any"}, {"lineNumber": 96, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "GradientBoostingClassifier", "type": "Any"}, {"lineNumber": 98, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "ExtraTreesClassifier", "type": "Any"}, {"lineNumber": 100, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "AdaBoostClassifier", "type": "Any"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "SGDClassifier", "type": "Any"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "Perceptron", "type": "Any"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "PassiveAggressiveClassifier", "type": "Any"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 110, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 112, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "Ridge", "type": "Any"}, {"lineNumber": 114, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "ExtraTreesRegressor", "type": "Any"}, {"lineNumber": 116, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "AdaBoostRegressor", "type": "Any"}, {"lineNumber": 118, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "RANSACRegressor", "type": "Any"}, {"lineNumber": 120, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "GradientBoostingRegressor", "type": "Any"}, {"lineNumber": 122, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "Lasso", "type": "Any"}, {"lineNumber": 124, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "ElasticNet", "type": "Any"}, {"lineNumber": 126, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "LassoLars", "type": "Any"}, {"lineNumber": 128, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "OrthogonalMatchingPursuit", "type": "Any"}, {"lineNumber": 130, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "BayesianRidge", "type": "Any"}, {"lineNumber": 132, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "ARDRegression", "type": "Any"}, {"lineNumber": 134, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "SGDRegressor", "type": "Any"}, {"lineNumber": 136, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "PassiveAggressiveRegressor", "type": "Any"}, {"lineNumber": 138, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "MiniBatchKMeans", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "grid_search_params", "type": "Dict[str, Union[Dict[str, Union[List[Union[List[int], List[float], List[Union[int, float]]]], List[float], List[str]]], Dict[str, Union[List[int], List[float]]], Dict[str, Union[List[int], List[Optional[str]], List[str], List[float]]], Dict[str, Union[List[Union[float, int]], List[Optional[str]], List[str]]], Dict[str, List[bool]], Dict[str, Union[List[str], List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[Union[float, int]], List[str]]], Dict[str, Union[List[Any], List[str]]], Dict[str, Union[List[Optional[Union[float, int]]], List[float]]], Dict[str, Union[List[str], List[float], List[bool]]], Dict[str, Union[List[bool], List[int]]], Dict[str, List[Optional[int]]], Dict[str, List[float]], Dict[str, Union[List[str], List[float]]], Dict[str, Union[List[float], List[str], List[Union[float, int]]]], Dict[str, Union[List[str], List[float], List[Optional[str]]]]]]"}, {"lineNumber": 370, "col_offset": 34, "nodeName": "read_file", "type": "file"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 375, "col_offset": 18, "nodeName": "load_model", "type": "Any"}, {"lineNumber": 375, "col_offset": 29, "nodeName": "keras_file_name", "type": "Any"}, {"lineNumber": 384, "col_offset": 7, "nodeName": "hidden_layers", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "hidden_layers", "type": "List[int]"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 408, "col_offset": 7, "nodeName": "hidden_layers", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "hidden_layers", "type": "List[int]"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 429, "col_offset": 22, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "RidgeClassifier", "type": "Any"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "GradientBoostingClassifier", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "ExtraTreesClassifier", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "AdaBoostClassifier", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "SGDClassifier", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "Perceptron", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "PassiveAggressiveClassifier", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "Ridge", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "ExtraTreesRegressor", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "AdaBoostRegressor", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "RANSACRegressor", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "GradientBoostingRegressor", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "Lasso", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "ElasticNet", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "LassoLars", "type": "Any"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "OrthogonalMatchingPursuit", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "BayesianRidge", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "ARDRegression", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "SGDRegressor", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "PassiveAggressiveRegressor", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "MiniBatchKMeans", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "XGBClassifier", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "XGBRegressor", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 46, "nodeName": "KerasClassifier", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 45, "nodeName": "KerasRegressor", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "XGBClassifier", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "XGBRegressor", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "KerasRegressor", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "KerasClassifier", "type": "Any"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 370, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 370, "col_offset": 14, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 371, "col_offset": 24, "nodeName": "load", "type": "Any"}, {"lineNumber": 371, "col_offset": 34, "nodeName": "read_file", "type": "file"}, {"lineNumber": 373, "col_offset": 22, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "named_steps", "type": "Any"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 389, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 390, "col_offset": 14, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 390, "col_offset": 22, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 391, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 391, "col_offset": 20, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 392, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 395, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 399, "col_offset": 55, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 427, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 432, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 433, "col_offset": 56, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "xgb", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "xgb", "type": "Any"}, {"lineNumber": 83, "col_offset": 71, "nodeName": "make_deep_learning_classifier", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 69, "nodeName": "make_deep_learning_model", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "xgb", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "xgb", "type": "Any"}, {"lineNumber": 371, "col_offset": 24, "nodeName": "dill", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 389, "col_offset": 40, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 414, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 427, "col_offset": 20, "nodeName": "hidden_layers", "type": "Union[Any, List[int]]"}, {"lineNumber": 427, "col_offset": 48, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 430, "col_offset": 18, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 430, "col_offset": 24, "nodeName": "layer_size", "type": "int"}, {"lineNumber": 432, "col_offset": 49, "nodeName": "final_activation", "type": "Any"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 389, "col_offset": 97, "nodeName": "maxnorm", "type": "Any"}, {"lineNumber": 389, "col_offset": 105, "nodeName": "weight_constraint", "type": "Any"}, {"lineNumber": 391, "col_offset": 77, "nodeName": "maxnorm", "type": "Any"}, {"lineNumber": 391, "col_offset": 85, "nodeName": "weight_constraint", "type": "Any"}, {"lineNumber": 392, "col_offset": 77, "nodeName": "maxnorm", "type": "Any"}, {"lineNumber": 392, "col_offset": 85, "nodeName": "weight_constraint", "type": "Any"}, {"lineNumber": 414, "col_offset": 33, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 414, "col_offset": 44, "nodeName": "layer", "type": "Union[int, Any]"}]