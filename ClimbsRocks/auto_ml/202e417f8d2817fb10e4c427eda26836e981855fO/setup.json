[{"lineNumber": 24, "col_offset": 0, "nodeName": "here", "type": "str"}, {"lineNumber": 24, "col_offset": 7, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "long_description", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "setup", "type": "Any"}, {"lineNumber": 24, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "__file__", "type": "str"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "convert", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "long_description", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "pypandoc", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 65, "nodeName": "f", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "long_description", "type": "str"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "here", "type": "str"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "f", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "readlines", "type": "Callable[..., List[str]]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}]