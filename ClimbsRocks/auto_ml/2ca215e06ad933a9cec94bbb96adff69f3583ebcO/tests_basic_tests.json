[{"lineNumber": 22, "col_offset": 0, "nodeName": "test_linear_model_analytics_classification", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "test_all_algos_classification", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "test_all_algos_regression", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "test_input_df_unmodified", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "test_is_backwards_compatible_with_models_trained_using_1_9_6", "type": "Callable[[], Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "path", "type": "module"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 9, "col_offset": 58, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "df_shape", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "training_shape", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "df_boston_test_dictionaries", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "row", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "df_boston_test_dictionaries", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "first_score", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "data_length", "type": "int"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "start_time", "type": "datetime.datetime"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "end_time", "type": "datetime.datetime"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "duration", "type": "datetime.timedelta"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "row", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "df_boston_test_dictionaries", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "second_score", "type": "Any"}, {"lineNumber": 9, "col_offset": 58, "nodeName": "sys", "type": "module"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "df_titanic_train", "type": "Any"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "df_titanic_test", "type": "Any"}, {"lineNumber": 25, "col_offset": 40, "nodeName": "get_titanic_binary_classification_dataset", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "Predictor", "type": "Type[auto_ml.predictor.Predictor]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "train", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "df_titanic_train", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "score", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "df_titanic_test", "type": "Any"}, {"lineNumber": 37, "col_offset": 53, "nodeName": "survived", "type": "Any"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "df_titanic_train", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "df_titanic_test", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "get_titanic_binary_classification_dataset", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "Predictor", "type": "Type[auto_ml.predictor.Predictor]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "train", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "df_titanic_train", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "score", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "df_titanic_test", "type": "Any"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "survived", "type": "Any"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "df_boston_train", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "get_boston_regression_dataset", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "Predictor", "type": "Type[auto_ml.predictor.Predictor]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "train", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "df_boston_train", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "score", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 83, "col_offset": 52, "nodeName": "MEDV", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "df_boston_train", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "get_boston_regression_dataset", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "Predictor", "type": "Type[auto_ml.predictor.Predictor]"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "df_boston_train", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "train", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "df_boston_train", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "df_boston_train", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "score", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "MEDV", "type": "Any"}, {"lineNumber": 113, "col_offset": 10, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "df_boston_train", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "get_boston_regression_dataset", "type": "Any"}, {"lineNumber": 123, "col_offset": 78, "nodeName": "read_file", "type": "file"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "saved_ml_pipeline", "type": "Any"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "to_dict", "type": "Any"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "calculate_rmse", "type": "Any"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "MEDV", "type": "Any"}, {"lineNumber": 140, "col_offset": 60, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 10, "nodeName": "first_score", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "first_score", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "df_boston_test_dictionaries", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "now", "type": "Callable"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "row_num", "type": "int"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "now", "type": "Callable"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "end_time", "type": "datetime.datetime"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "start_time", "type": "datetime.datetime"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "calculate_rmse", "type": "Any"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "MEDV", "type": "Any"}, {"lineNumber": 173, "col_offset": 61, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 10, "nodeName": "second_score", "type": "Any"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "second_score", "type": "Any"}, {"lineNumber": 9, "col_offset": 12, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 25, "col_offset": 40, "nodeName": "utils", "type": "Any"}, {"lineNumber": 33, "col_offset": 81, "nodeName": "column_descriptions", "type": "Dict[str, str]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 37, "col_offset": 53, "nodeName": "df_titanic_test", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "utils", "type": "Any"}, {"lineNumber": 57, "col_offset": 81, "nodeName": "column_descriptions", "type": "Dict[str, str]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "df_titanic_test", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "utils", "type": "Any"}, {"lineNumber": 79, "col_offset": 80, "nodeName": "column_descriptions", "type": "Dict[str, str]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 83, "col_offset": 52, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "utils", "type": "Any"}, {"lineNumber": 100, "col_offset": 80, "nodeName": "column_descriptions", "type": "Dict[str, str]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "training_shape", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "df_shape", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "training_shape", "type": "Any"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "df_shape", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "utils", "type": "Any"}, {"lineNumber": 123, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "load", "type": "Any"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "read_file", "type": "file"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 10, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "utils", "type": "Any"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "idx", "type": "int"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "data_length", "type": "int"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "predict", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 157, "col_offset": 10, "nodeName": "total_seconds", "type": "Callable[[], float]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 9, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 9, "col_offset": 28, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 9, "col_offset": 44, "nodeName": "__file__", "type": "str"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "dill", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "predict", "type": "Any"}, {"lineNumber": 132, "col_offset": 53, "nodeName": "row", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "datetime", "type": "module"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "saved_ml_pipeline", "type": "Any"}, {"lineNumber": 152, "col_offset": 34, "nodeName": "df_boston_test_dictionaries", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "datetime", "type": "module"}, {"lineNumber": 157, "col_offset": 10, "nodeName": "duration", "type": "datetime.timedelta"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "total_seconds", "type": "Callable[[], float]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "predict", "type": "Any"}, {"lineNumber": 171, "col_offset": 53, "nodeName": "row", "type": "Any"}, {"lineNumber": 9, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 9, "col_offset": 28, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "saved_ml_pipeline", "type": "Any"}, {"lineNumber": 152, "col_offset": 62, "nodeName": "row_num", "type": "int"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "duration", "type": "datetime.timedelta"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "saved_ml_pipeline", "type": "Any"}, {"lineNumber": 9, "col_offset": 28, "nodeName": "os", "type": "module"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "os", "type": "module"}]