[{"lineNumber": 49, "col_offset": 0, "nodeName": "get_model_from_name", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 0, "nodeName": "get_name_from_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 0, "nodeName": "get_search_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 495, "col_offset": 0, "nodeName": "insert_deep_learning_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 506, "col_offset": 0, "nodeName": "load_ml_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 543, "col_offset": 0, "nodeName": "load_keras_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 547, "col_offset": 0, "nodeName": "make_deep_learning_model", "type": "Callable[..., Any]"}, {"lineNumber": 584, "col_offset": 0, "nodeName": "make_deep_learning_classifier", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "lgb_installed", "type": "bool"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "lgb_installed", "type": "bool"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "set_verbosity", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "INFO", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "epochs", "type": "int"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 136, "col_offset": 7, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "lgb_installed", "type": "bool"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "model_with_params", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "model_with_params", "type": "Any"}, {"lineNumber": 216, "col_offset": 7, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "lgb_installed", "type": "bool"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "params", "type": "Union[Dict[str, Union[List[Union[List[int], List[Union[int, float]]]], List[float], List[int], List[str]]], Dict[str, Union[List[Union[List[int], List[float], List[Union[int, float]]]], List[str], List[float]]], Dict[str, Union[List[int], List[float]]], Dict[str, Union[List[str], List[int], List[Optional[str]], List[float]]], Dict[str, Union[List[Union[float, int]], List[Optional[str]], List[str]]], Dict[str, List[bool]], Dict[str, Union[List[str], List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[Union[float, int]], List[str]]], Dict[str, Union[List[Any], List[str]]], Dict[str, Union[List[Optional[Union[float, int]]], List[float]]], Dict[str, Union[List[float], List[str], List[bool]]], Dict[str, Union[List[bool], List[int]]], Dict[str, List[Optional[int]]], Dict[str, List[float]], Dict[str, Union[List[str], List[float]]], Dict[str, Union[List[float], List[str], List[Union[float, int]]]], Dict[str, Union[List[str], List[Optional[str]], List[float]]], Dict[str, Union[List[float], List[Union[int, float]]]]]"}, {"lineNumber": 492, "col_offset": 11, "nodeName": "params", "type": "Union[Dict[str, List[bool]], Dict[str, List[float]], Dict[str, Union[List[str], List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[float], List[int]]], Dict[str, Union[List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[str], List[float]]], Dict[str, Union[List[Union[List[int], List[Union[int, float]]]], List[float], List[int], List[str]]], Dict[str, Union[List[float], List[str], List[Union[float, int]]]], Dict[str, Union[List[Union[List[int], List[float], List[Union[int, float]]]], List[str], List[float]]], Dict[str, Union[List[Union[float, int]], List[str]]], Dict[str, Union[List[str], List[Optional[str]], List[float]]], Dict[str, Union[List[Any], List[str]]], Dict[str, Union[List[Optional[Union[float, int]]], List[float]]], Dict[str, Union[List[float], List[str], List[bool]]], Dict[str, Union[List[float], List[Union[int, float]]]], Dict[str, Union[List[str], List[int], List[Optional[str]], List[float]]], Dict[str, Union[List[bool], List[int]]], Dict[str, List[Optional[int]]], Dict[str, Union[List[Union[float, int]], List[Optional[str]], List[str]]]]"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "random_name", "type": "Any"}, {"lineNumber": 497, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "keras_file_name", "type": "Any"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 504, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 540, "col_offset": 11, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "layer", "type": "Union[int, float, Any]"}, {"lineNumber": 557, "col_offset": 17, "nodeName": "hidden_layers", "type": "Union[List[Union[int, float]], Any, List[int]]"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "layer_size", "type": "int"}, {"lineNumber": 581, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 593, "col_offset": 4, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "layer", "type": "Union[int, float, Any]"}, {"lineNumber": 594, "col_offset": 17, "nodeName": "hidden_layers", "type": "Union[List[Union[int, float]], List[int], Any]"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "layer_size", "type": "int"}, {"lineNumber": 614, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "logging", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "logging", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "epochs", "type": "int"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 84, "col_offset": 7, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "model_params", "type": "Dict[Any, Any]"}, {"lineNumber": 87, "col_offset": 7, "nodeName": "training_params", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "model_without_params", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 156, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 158, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 160, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "RidgeClassifier", "type": "Any"}, {"lineNumber": 162, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "GradientBoostingClassifier", "type": "Any"}, {"lineNumber": 164, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "ExtraTreesClassifier", "type": "Any"}, {"lineNumber": 166, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "AdaBoostClassifier", "type": "Any"}, {"lineNumber": 168, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "SGDClassifier", "type": "Any"}, {"lineNumber": 170, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "Perceptron", "type": "Any"}, {"lineNumber": 172, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "PassiveAggressiveClassifier", "type": "Any"}, {"lineNumber": 174, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 176, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 178, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "Ridge", "type": "Any"}, {"lineNumber": 180, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "ExtraTreesRegressor", "type": "Any"}, {"lineNumber": 182, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "AdaBoostRegressor", "type": "Any"}, {"lineNumber": 184, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "RANSACRegressor", "type": "Any"}, {"lineNumber": 186, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "GradientBoostingRegressor", "type": "Any"}, {"lineNumber": 188, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "Lasso", "type": "Any"}, {"lineNumber": 190, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "ElasticNet", "type": "Any"}, {"lineNumber": 192, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "LassoLars", "type": "Any"}, {"lineNumber": 194, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "OrthogonalMatchingPursuit", "type": "Any"}, {"lineNumber": 196, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "BayesianRidge", "type": "Any"}, {"lineNumber": 198, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "ARDRegression", "type": "Any"}, {"lineNumber": 200, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "SGDRegressor", "type": "Any"}, {"lineNumber": 202, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "PassiveAggressiveRegressor", "type": "Any"}, {"lineNumber": 204, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "MiniBatchKMeans", "type": "Any"}, {"lineNumber": 206, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "LinearSVR", "type": "Any"}, {"lineNumber": 208, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "LinearSVC", "type": "Any"}, {"lineNumber": 211, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "KerasRegressor", "type": "Any"}, {"lineNumber": 213, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "KerasClassifier", "type": "Any"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "grid_search_params", "type": "Dict[str, Union[Dict[str, Union[List[Union[List[int], List[Union[int, float]]]], List[float], List[int], List[str]]], Dict[str, Union[List[Union[List[int], List[float], List[Union[int, float]]]], List[str], List[float]]], Dict[str, Union[List[int], List[float]]], Dict[str, Union[List[int], List[Optional[str]], List[str], List[float]]], Dict[str, Union[List[Union[float, int]], List[Optional[str]], List[str]]], Dict[str, List[bool]], Dict[str, Union[List[str], List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[Union[float, int]], List[str]]], Dict[str, Union[List[Any], List[str]]], Dict[str, Union[List[Optional[Union[float, int]]], List[float]]], Dict[str, Union[List[str], List[float], List[bool]]], Dict[str, Union[List[bool], List[int]]], Dict[str, List[Optional[int]]], Dict[str, List[float]], Dict[str, Union[List[str], List[float]]], Dict[str, Union[List[float], List[str], List[Union[float, int]]]], Dict[str, Union[List[str], List[float], List[Optional[str]]]], Dict[str, Union[List[float], List[Union[int, float]]]]]]"}, {"lineNumber": 497, "col_offset": 18, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "keras_load_model", "type": "Any"}, {"lineNumber": 501, "col_offset": 29, "nodeName": "keras_file_name", "type": "Any"}, {"lineNumber": 508, "col_offset": 34, "nodeName": "read_file", "type": "file"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 511, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 511, "col_offset": 18, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 511, "col_offset": 33, "nodeName": "CategoricalEnsembler", "type": "Type[auto_ml.utils_categorical_ensembling.CategoricalEnsembler]"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 512, "col_offset": 20, "nodeName": "named_steps", "type": "Any"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 521, "col_offset": 20, "nodeName": "trained_models", "type": "Any"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 532, "col_offset": 20, "nodeName": "named_steps", "type": "Any"}, {"lineNumber": 544, "col_offset": 11, "nodeName": "load_ml_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 544, "col_offset": 25, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "hidden_layers", "type": "List[Union[int, float]]"}, {"lineNumber": 552, "col_offset": 7, "nodeName": "hidden_layers", "type": "Union[Any, List[Union[int, float]]]"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "hidden_layers", "type": "List[int]"}, {"lineNumber": 561, "col_offset": 7, "nodeName": "feature_learning", "type": "Any"}, {"lineNumber": 564, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 568, "col_offset": 22, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "hidden_layers", "type": "List[Union[int, float]]"}, {"lineNumber": 589, "col_offset": 7, "nodeName": "hidden_layers", "type": "Union[List[Union[int, float]], Any]"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "hidden_layers", "type": "List[int]"}, {"lineNumber": 598, "col_offset": 7, "nodeName": "feature_learning", "type": "Any"}, {"lineNumber": 602, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 607, "col_offset": 22, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "epochs", "type": "int"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "epochs", "type": "int"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "all_model_params", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "training_params", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "training_params", "type": "Any"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "RidgeClassifier", "type": "Any"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "GradientBoostingClassifier", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "ExtraTreesClassifier", "type": "Any"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "AdaBoostClassifier", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "SGDClassifier", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "Perceptron", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "PassiveAggressiveClassifier", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "LinearSVC", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "Ridge", "type": "Any"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "LinearSVR", "type": "Any"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "ExtraTreesRegressor", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "AdaBoostRegressor", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "RANSACRegressor", "type": "Any"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "GradientBoostingRegressor", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "Lasso", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "ElasticNet", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "LassoLars", "type": "Any"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "OrthogonalMatchingPursuit", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "BayesianRidge", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "ARDRegression", "type": "Any"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "SGDRegressor", "type": "Any"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "PassiveAggressiveRegressor", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "MiniBatchKMeans", "type": "Any"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "KerasClassifier", "type": "Any"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "KerasRegressor", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "XGBClassifier", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "XGBRegressor", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "LGBMRegressor", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "LGBMClassifier", "type": "Any"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "e", "type": "KeyError"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "model_without_params", "type": "Any"}, {"lineNumber": 150, "col_offset": 58, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "XGBClassifier", "type": "Any"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "XGBRegressor", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "LGBMClassifier", "type": "Any"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "LGBMRegressor", "type": "Any"}, {"lineNumber": 484, "col_offset": 32, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 499, "col_offset": 39, "nodeName": "random_name", "type": "Any"}, {"lineNumber": 508, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 508, "col_offset": 14, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 509, "col_offset": 24, "nodeName": "load", "type": "Any"}, {"lineNumber": 509, "col_offset": 34, "nodeName": "read_file", "type": "file"}, {"lineNumber": 511, "col_offset": 33, "nodeName": "utils_categorical_ensembling", "type": "module"}, {"lineNumber": 512, "col_offset": 20, "nodeName": "transformation_pipeline", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 521, "col_offset": 20, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 532, "col_offset": 20, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 549, "col_offset": 7, "nodeName": "feature_learning", "type": "Any"}, {"lineNumber": 549, "col_offset": 36, "nodeName": "hidden_layers", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 566, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 572, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 575, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 579, "col_offset": 55, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 586, "col_offset": 7, "nodeName": "feature_learning", "type": "Any"}, {"lineNumber": 586, "col_offset": 36, "nodeName": "hidden_layers", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 605, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 610, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 612, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 613, "col_offset": 56, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 53, "col_offset": 7, "nodeName": "get", "type": "Callable"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 132, "col_offset": 59, "nodeName": "make_deep_learning_classifier", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 57, "nodeName": "make_deep_learning_model", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 499, "col_offset": 22, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 509, "col_offset": 24, "nodeName": "dill", "type": "Any"}, {"lineNumber": 512, "col_offset": 20, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 513, "col_offset": 28, "nodeName": "named_steps", "type": "Any"}, {"lineNumber": 518, "col_offset": 19, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 522, "col_offset": 28, "nodeName": "trained_models", "type": "Any"}, {"lineNumber": 527, "col_offset": 19, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 533, "col_offset": 28, "nodeName": "named_steps", "type": "Any"}, {"lineNumber": 537, "col_offset": 19, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 558, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 566, "col_offset": 20, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 566, "col_offset": 48, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 566, "col_offset": 77, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 569, "col_offset": 18, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 569, "col_offset": 24, "nodeName": "layer_size", "type": "int"}, {"lineNumber": 572, "col_offset": 20, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 572, "col_offset": 58, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 575, "col_offset": 42, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 595, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 605, "col_offset": 20, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 605, "col_offset": 48, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 608, "col_offset": 18, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 608, "col_offset": 24, "nodeName": "layer_size", "type": "int"}, {"lineNumber": 610, "col_offset": 20, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 612, "col_offset": 63, "nodeName": "final_activation", "type": "Any"}, {"lineNumber": 53, "col_offset": 7, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 513, "col_offset": 28, "nodeName": "transformation_pipeline", "type": "Any"}, {"lineNumber": 513, "col_offset": 78, "nodeName": "step", "type": "Any"}, {"lineNumber": 517, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 522, "col_offset": 28, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 522, "col_offset": 57, "nodeName": "step", "type": "Any"}, {"lineNumber": 526, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 533, "col_offset": 28, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 533, "col_offset": 54, "nodeName": "step", "type": "Any"}, {"lineNumber": 536, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 558, "col_offset": 33, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 558, "col_offset": 44, "nodeName": "layer", "type": "Union[float, int, Any]"}, {"lineNumber": 566, "col_offset": 116, "nodeName": "l2", "type": "Any"}, {"lineNumber": 569, "col_offset": 55, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 572, "col_offset": 123, "nodeName": "l2", "type": "Any"}, {"lineNumber": 595, "col_offset": 33, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 595, "col_offset": 44, "nodeName": "layer", "type": "Union[int, Any, float]"}, {"lineNumber": 605, "col_offset": 106, "nodeName": "l2", "type": "Any"}, {"lineNumber": 610, "col_offset": 113, "nodeName": "l2", "type": "Any"}, {"lineNumber": 53, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 513, "col_offset": 28, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 517, "col_offset": 20, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 517, "col_offset": 42, "nodeName": "insert_deep_learning_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 517, "col_offset": 69, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 517, "col_offset": 84, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 526, "col_offset": 20, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 526, "col_offset": 42, "nodeName": "insert_deep_learning_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 526, "col_offset": 69, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 526, "col_offset": 84, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 536, "col_offset": 20, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 536, "col_offset": 42, "nodeName": "insert_deep_learning_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 536, "col_offset": 69, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 536, "col_offset": 84, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 566, "col_offset": 116, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 569, "col_offset": 94, "nodeName": "l2", "type": "Any"}, {"lineNumber": 572, "col_offset": 123, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 605, "col_offset": 106, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 608, "col_offset": 84, "nodeName": "l2", "type": "Any"}, {"lineNumber": 610, "col_offset": 113, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 516, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 525, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 535, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 569, "col_offset": 94, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 608, "col_offset": 84, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 516, "col_offset": 19, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 525, "col_offset": 19, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 535, "col_offset": 19, "nodeName": "pipeline_step", "type": "Any"}]