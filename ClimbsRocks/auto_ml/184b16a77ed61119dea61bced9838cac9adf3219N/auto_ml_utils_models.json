[{"lineNumber": 55, "col_offset": 0, "nodeName": "get_model_from_name", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 0, "nodeName": "get_name_from_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 237, "col_offset": 0, "nodeName": "get_search_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 502, "col_offset": 0, "nodeName": "insert_deep_learning_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 513, "col_offset": 0, "nodeName": "load_ml_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 550, "col_offset": 0, "nodeName": "load_keras_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 554, "col_offset": 0, "nodeName": "make_deep_learning_model", "type": "Callable[..., Any]"}, {"lineNumber": 590, "col_offset": 0, "nodeName": "make_deep_learning_classifier", "type": "Callable[..., Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "lgb_installed", "type": "bool"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "keras_installed", "type": "bool"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 19, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "lgb_installed", "type": "bool"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "keras_installed", "type": "bool"}, {"lineNumber": 45, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "epochs", "type": "int"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 144, "col_offset": 7, "nodeName": "lgb_installed", "type": "bool"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "keras_installed", "type": "bool"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "model_with_params", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "model_with_params", "type": "Any"}, {"lineNumber": 218, "col_offset": 7, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "keras_installed", "type": "bool"}, {"lineNumber": 230, "col_offset": 7, "nodeName": "lgb_installed", "type": "bool"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "params", "type": "Union[Dict[str, List[Union[List[int], List[Union[int, float]]]]], Dict[str, Union[List[Union[List[int], List[float], List[Union[int, float]]]], List[str], List[float]]], Dict[str, Union[List[int], List[float]]], Dict[str, Union[List[str], List[int], List[Optional[str]], List[float]]], Dict[str, Union[List[Union[float, int]], List[Optional[str]], List[str]]], Dict[str, List[bool]], Dict[str, Union[List[str], List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[Union[float, int]], List[str]]], Dict[str, Union[List[Any], List[str]]], Dict[str, Union[List[Optional[Union[float, int]]], List[float]]], Dict[str, Union[List[float], List[str], List[bool]]], Dict[str, Union[List[bool], List[int]]], Dict[str, List[Optional[int]]], Dict[str, List[float]], Dict[str, Union[List[str], List[float]]], Dict[str, Union[List[float], List[str], List[Union[float, int]]]], Dict[str, Union[List[str], List[Optional[str]], List[float]]], Dict[str, Union[List[float], List[Union[int, float]]]]]"}, {"lineNumber": 499, "col_offset": 11, "nodeName": "params", "type": "Union[Dict[str, Union[List[int], List[float]]], Dict[str, Union[List[Any], List[str]]], Dict[str, Union[List[str], List[float], List[Optional[str]]]], Dict[str, Union[List[Optional[Union[float, int]]], List[float]]], Dict[str, Union[List[float], List[Union[int, float]]]], Dict[str, Union[List[float], List[str], List[bool]]], Dict[str, Union[List[str], List[int], List[Optional[str]], List[float]]], Dict[str, Union[List[bool], List[int]]], Dict[str, List[Optional[int]]], Dict[str, Union[List[Union[float, int]], List[Optional[str]], List[str]]], Dict[str, List[float]], Dict[str, List[bool]], Dict[str, Union[List[str], List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[str], List[float]]], Dict[str, Union[List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[float], List[str], List[Union[float, int]]]], Dict[Any, Any], Dict[str, List[Union[List[int], List[Union[int, float]]]]], Dict[str, Union[List[Union[List[int], List[float], List[Union[int, float]]]], List[str], List[float]]], Dict[str, Union[List[Union[float, int]], List[str]]]]"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "random_name", "type": "Any"}, {"lineNumber": 504, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "keras_file_name", "type": "Any"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 511, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 547, "col_offset": 11, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "layer", "type": "Union[int, float, Any]"}, {"lineNumber": 564, "col_offset": 17, "nodeName": "hidden_layers", "type": "Union[List[Union[int, float]], Any, List[int]]"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "layer_size", "type": "int"}, {"lineNumber": 587, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "layer", "type": "Union[int, float, Any]"}, {"lineNumber": 600, "col_offset": 17, "nodeName": "hidden_layers", "type": "Union[List[Union[int, float]], Any, List[int]]"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "layer_size", "type": "int"}, {"lineNumber": 620, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "set_verbosity", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "INFO", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "epochs", "type": "int"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 90, "col_offset": 7, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "model_params", "type": "Dict[Any, Any]"}, {"lineNumber": 93, "col_offset": 7, "nodeName": "training_params", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "model_without_params", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 163, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 165, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 167, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "RidgeClassifier", "type": "Any"}, {"lineNumber": 169, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "GradientBoostingClassifier", "type": "Any"}, {"lineNumber": 171, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "ExtraTreesClassifier", "type": "Any"}, {"lineNumber": 173, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "AdaBoostClassifier", "type": "Any"}, {"lineNumber": 175, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "SGDClassifier", "type": "Any"}, {"lineNumber": 177, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "Perceptron", "type": "Any"}, {"lineNumber": 179, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "PassiveAggressiveClassifier", "type": "Any"}, {"lineNumber": 181, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 183, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 185, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "Ridge", "type": "Any"}, {"lineNumber": 187, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "ExtraTreesRegressor", "type": "Any"}, {"lineNumber": 189, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 189, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "AdaBoostRegressor", "type": "Any"}, {"lineNumber": 191, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "RANSACRegressor", "type": "Any"}, {"lineNumber": 193, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "GradientBoostingRegressor", "type": "Any"}, {"lineNumber": 195, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "Lasso", "type": "Any"}, {"lineNumber": 197, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "ElasticNet", "type": "Any"}, {"lineNumber": 199, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "LassoLars", "type": "Any"}, {"lineNumber": 201, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "OrthogonalMatchingPursuit", "type": "Any"}, {"lineNumber": 203, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 203, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "BayesianRidge", "type": "Any"}, {"lineNumber": 205, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "ARDRegression", "type": "Any"}, {"lineNumber": 207, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "SGDRegressor", "type": "Any"}, {"lineNumber": 209, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 209, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "PassiveAggressiveRegressor", "type": "Any"}, {"lineNumber": 211, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "MiniBatchKMeans", "type": "Any"}, {"lineNumber": 213, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "LinearSVR", "type": "Any"}, {"lineNumber": 215, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "LinearSVC", "type": "Any"}, {"lineNumber": 491, "col_offset": 13, "nodeName": "grid_search_params", "type": "Dict[str, Union[Dict[str, List[Union[List[int], List[Union[int, float]]]]], Dict[str, Union[List[Union[List[int], List[float], List[Union[int, float]]]], List[str], List[float]]], Dict[str, Union[List[int], List[float]]], Dict[str, Union[List[int], List[Optional[str]], List[str], List[float]]], Dict[str, Union[List[Union[float, int]], List[Optional[str]], List[str]]], Dict[str, List[bool]], Dict[str, Union[List[str], List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[Union[float, int]], List[str]]], Dict[str, Union[List[Any], List[str]]], Dict[str, Union[List[Optional[Union[float, int]]], List[float]]], Dict[str, Union[List[str], List[float], List[bool]]], Dict[str, Union[List[bool], List[int]]], Dict[str, List[Optional[int]]], Dict[str, List[float]], Dict[str, Union[List[str], List[float]]], Dict[str, Union[List[float], List[str], List[Union[float, int]]]], Dict[str, Union[List[str], List[float], List[Optional[str]]]], Dict[str, Union[List[float], List[Union[int, float]]]]]]"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "simplified_params", "type": "Dict[Any, Any]"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 497, "col_offset": 17, "nodeName": "simplified_params", "type": "Dict[Any, Any]"}, {"lineNumber": 504, "col_offset": 18, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "keras_load_model", "type": "Any"}, {"lineNumber": 508, "col_offset": 29, "nodeName": "keras_file_name", "type": "Any"}, {"lineNumber": 515, "col_offset": 34, "nodeName": "read_file", "type": "file"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 518, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 518, "col_offset": 18, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 518, "col_offset": 33, "nodeName": "CategoricalEnsembler", "type": "Type[auto_ml.utils_categorical_ensembling.CategoricalEnsembler]"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 519, "col_offset": 20, "nodeName": "named_steps", "type": "Any"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "trained_models", "type": "Any"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 539, "col_offset": 20, "nodeName": "named_steps", "type": "Any"}, {"lineNumber": 551, "col_offset": 11, "nodeName": "load_ml_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 551, "col_offset": 25, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "hidden_layers", "type": "List[Union[int, float]]"}, {"lineNumber": 559, "col_offset": 7, "nodeName": "hidden_layers", "type": "Union[List[Union[int, float]], Any]"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "hidden_layers", "type": "List[int]"}, {"lineNumber": 568, "col_offset": 7, "nodeName": "feature_learning", "type": "Any"}, {"lineNumber": 571, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 575, "col_offset": 22, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "hidden_layers", "type": "List[Union[int, float]]"}, {"lineNumber": 595, "col_offset": 7, "nodeName": "hidden_layers", "type": "Union[List[Union[int, float]], Any]"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "hidden_layers", "type": "List[int]"}, {"lineNumber": 604, "col_offset": 7, "nodeName": "feature_learning", "type": "Any"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 613, "col_offset": 22, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "logging", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "logging", "type": "Any"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "e", "type": "ImportError"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "epochs", "type": "int"}, {"lineNumber": 86, "col_offset": 45, "nodeName": "epochs", "type": "int"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "all_model_params", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "training_params", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "training_params", "type": "Any"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "RidgeClassifier", "type": "Any"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "GradientBoostingClassifier", "type": "Any"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "ExtraTreesClassifier", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "AdaBoostClassifier", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "SGDClassifier", "type": "Any"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "Perceptron", "type": "Any"}, {"lineNumber": 114, "col_offset": 39, "nodeName": "PassiveAggressiveClassifier", "type": "Any"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "LinearSVC", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "Ridge", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "LinearSVR", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "ExtraTreesRegressor", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "AdaBoostRegressor", "type": "Any"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "RANSACRegressor", "type": "Any"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "GradientBoostingRegressor", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "Lasso", "type": "Any"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "ElasticNet", "type": "Any"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "LassoLars", "type": "Any"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "OrthogonalMatchingPursuit", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "BayesianRidge", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "ARDRegression", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "SGDRegressor", "type": "Any"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "PassiveAggressiveRegressor", "type": "Any"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "MiniBatchKMeans", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "XGBClassifier", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 36, "nodeName": "XGBRegressor", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "LGBMRegressor", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "LGBMClassifier", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 46, "nodeName": "KerasClassifier", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 150, "col_offset": 45, "nodeName": "KerasRegressor", "type": "Any"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "e", "type": "KeyError"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "model_without_params", "type": "Any"}, {"lineNumber": 157, "col_offset": 58, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "XGBClassifier", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "XGBRegressor", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "KerasRegressor", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "KerasClassifier", "type": "Any"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "LGBMClassifier", "type": "Any"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "LGBMRegressor", "type": "Any"}, {"lineNumber": 491, "col_offset": 32, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 492, "col_offset": 7, "nodeName": "get", "type": "Callable"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 494, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 506, "col_offset": 39, "nodeName": "random_name", "type": "Any"}, {"lineNumber": 515, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 515, "col_offset": 14, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 516, "col_offset": 24, "nodeName": "load", "type": "Any"}, {"lineNumber": 516, "col_offset": 34, "nodeName": "read_file", "type": "file"}, {"lineNumber": 518, "col_offset": 33, "nodeName": "utils_categorical_ensembling", "type": "module"}, {"lineNumber": 519, "col_offset": 20, "nodeName": "transformation_pipeline", "type": "Any"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 529, "col_offset": 12, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 539, "col_offset": 20, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 540, "col_offset": 12, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 556, "col_offset": 7, "nodeName": "feature_learning", "type": "Any"}, {"lineNumber": 556, "col_offset": 36, "nodeName": "hidden_layers", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 573, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 579, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 582, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 585, "col_offset": 55, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 592, "col_offset": 7, "nodeName": "feature_learning", "type": "Any"}, {"lineNumber": 592, "col_offset": 36, "nodeName": "hidden_layers", "type": "Any"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 611, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 616, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 618, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 619, "col_offset": 56, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "get", "type": "Callable"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 149, "col_offset": 71, "nodeName": "make_deep_learning_classifier", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 69, "nodeName": "make_deep_learning_model", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 492, "col_offset": 7, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 494, "col_offset": 20, "nodeName": "params", "type": "Union[Dict[str, Union[List[int], List[float]]], Dict[str, Union[List[Any], List[str]]], Dict[str, Union[List[str], List[float], List[Optional[str]]]], Dict[str, Union[List[Optional[Union[float, int]]], List[float]]], Dict[str, Union[List[float], List[Union[int, float]]]], Dict[str, Union[List[float], List[str], List[bool]]], Dict[str, Union[List[str], List[int], List[Optional[str]], List[float]]], Dict[str, Union[List[bool], List[int]]], Dict[str, List[Optional[int]]], Dict[str, Union[List[Union[float, int]], List[Optional[str]], List[str]]], Dict[str, List[float]], Dict[str, List[bool]], Dict[str, Union[List[str], List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[str], List[float]]], Dict[str, Union[List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[float], List[str], List[Union[float, int]]]], Dict[str, List[Union[List[int], List[Union[int, float]]]]], Dict[str, Union[List[Union[List[int], List[float], List[Union[int, float]]]], List[str], List[float]]], Dict[str, Union[List[Union[float, int]], List[str]]]]"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "simplified_params", "type": "Dict[Any, Any]"}, {"lineNumber": 496, "col_offset": 35, "nodeName": "v", "type": "Any"}, {"lineNumber": 506, "col_offset": 22, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 516, "col_offset": 24, "nodeName": "dill", "type": "Any"}, {"lineNumber": 519, "col_offset": 20, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 520, "col_offset": 28, "nodeName": "named_steps", "type": "Any"}, {"lineNumber": 525, "col_offset": 19, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 529, "col_offset": 28, "nodeName": "trained_models", "type": "Any"}, {"lineNumber": 534, "col_offset": 19, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 540, "col_offset": 28, "nodeName": "named_steps", "type": "Any"}, {"lineNumber": 544, "col_offset": 19, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 565, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 573, "col_offset": 20, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 573, "col_offset": 48, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 576, "col_offset": 18, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 576, "col_offset": 24, "nodeName": "layer_size", "type": "int"}, {"lineNumber": 579, "col_offset": 20, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 601, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 611, "col_offset": 20, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 611, "col_offset": 48, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 614, "col_offset": 18, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 614, "col_offset": 24, "nodeName": "layer_size", "type": "int"}, {"lineNumber": 616, "col_offset": 20, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 618, "col_offset": 63, "nodeName": "final_activation", "type": "Any"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 377, "col_offset": 37, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 492, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 496, "col_offset": 30, "nodeName": "k", "type": "Any"}, {"lineNumber": 520, "col_offset": 28, "nodeName": "transformation_pipeline", "type": "Any"}, {"lineNumber": 520, "col_offset": 78, "nodeName": "step", "type": "Any"}, {"lineNumber": 524, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 529, "col_offset": 28, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 529, "col_offset": 57, "nodeName": "step", "type": "Any"}, {"lineNumber": 533, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 540, "col_offset": 28, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 540, "col_offset": 54, "nodeName": "step", "type": "Any"}, {"lineNumber": 543, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 565, "col_offset": 33, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 565, "col_offset": 44, "nodeName": "layer", "type": "Union[Any, float, int]"}, {"lineNumber": 573, "col_offset": 106, "nodeName": "l2", "type": "Any"}, {"lineNumber": 579, "col_offset": 113, "nodeName": "l2", "type": "Any"}, {"lineNumber": 601, "col_offset": 33, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 601, "col_offset": 44, "nodeName": "layer", "type": "Union[int, Any, float]"}, {"lineNumber": 611, "col_offset": 106, "nodeName": "l2", "type": "Any"}, {"lineNumber": 616, "col_offset": 113, "nodeName": "l2", "type": "Any"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 520, "col_offset": 28, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 524, "col_offset": 20, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 524, "col_offset": 42, "nodeName": "insert_deep_learning_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 524, "col_offset": 69, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 524, "col_offset": 84, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 533, "col_offset": 20, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 533, "col_offset": 42, "nodeName": "insert_deep_learning_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 533, "col_offset": 69, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 533, "col_offset": 84, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 543, "col_offset": 20, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 543, "col_offset": 42, "nodeName": "insert_deep_learning_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 543, "col_offset": 69, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 543, "col_offset": 84, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 573, "col_offset": 106, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 576, "col_offset": 84, "nodeName": "l2", "type": "Any"}, {"lineNumber": 579, "col_offset": 113, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 611, "col_offset": 106, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 614, "col_offset": 84, "nodeName": "l2", "type": "Any"}, {"lineNumber": 616, "col_offset": 113, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 523, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 532, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 542, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 576, "col_offset": 84, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 614, "col_offset": 84, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 523, "col_offset": 19, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 532, "col_offset": 19, "nodeName": "pipeline_step", "type": "Any"}, {"lineNumber": 542, "col_offset": 19, "nodeName": "pipeline_step", "type": "Any"}]