[{"lineNumber": 17, "col_offset": 0, "nodeName": "optimize_final_model_regression", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "getting_single_predictions_regression", "type": "Callable[..., Any]"}, {"lineNumber": 5, "col_offset": 0, "nodeName": "path", "type": "module"}, {"lineNumber": 5, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 5, "col_offset": 58, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "df_boston_train", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "file_name", "type": "str"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "saved_ml_pipeline", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "df_boston_test_dictionaries", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "row", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "df_boston_test_dictionaries", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "first_score", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "data_length", "type": "int"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "start_time", "type": "datetime.datetime"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "end_time", "type": "datetime.datetime"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "duration", "type": "datetime.timedelta"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "row", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "df_boston_test_dictionaries", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "second_score", "type": "Any"}, {"lineNumber": 5, "col_offset": 58, "nodeName": "sys", "type": "module"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "df_boston_train", "type": "Any"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "get_boston_regression_dataset", "type": "Any"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "sample", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "Predictor", "type": "Type[auto_ml.predictor.Predictor]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "train", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "df_boston_train", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "score", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 33, "col_offset": 52, "nodeName": "MEDV", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 45, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 47, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 49, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "test_score", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "df_boston_train", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "get_boston_regression_dataset", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "Predictor", "type": "Type[auto_ml.predictor.Predictor]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "train", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "df_boston_train", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "save", "type": "Callable[..., str]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "load_ml_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "file_name", "type": "str"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "file_name", "type": "str"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "keras_file_name", "type": "str"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "to_dict", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "calculate_rmse", "type": "Any"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "MEDV", "type": "Any"}, {"lineNumber": 96, "col_offset": 60, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "first_score", "type": "Any"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "first_score", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "df_boston_test_dictionaries", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "now", "type": "Callable"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "row_num", "type": "int"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "now", "type": "Callable"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "end_time", "type": "datetime.datetime"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "start_time", "type": "datetime.datetime"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "calculate_rmse", "type": "Any"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "MEDV", "type": "Any"}, {"lineNumber": 139, "col_offset": 61, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 10, "nodeName": "second_score", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "second_score", "type": "Any"}, {"lineNumber": 5, "col_offset": 12, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "utils", "type": "Any"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "df_boston_train", "type": "Any"}, {"lineNumber": 29, "col_offset": 80, "nodeName": "column_descriptions", "type": "Dict[str, str]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 31, "col_offset": 79, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 33, "col_offset": 52, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "utils", "type": "Any"}, {"lineNumber": 66, "col_offset": 80, "nodeName": "column_descriptions", "type": "Dict[str, str]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 68, "col_offset": 52, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "ml_predictor", "type": "auto_ml.predictor.Predictor"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "keras_file_name", "type": "str"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "utils", "type": "Any"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "idx", "type": "int"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "data_length", "type": "int"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "predict", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 123, "col_offset": 10, "nodeName": "total_seconds", "type": "Callable[[], float]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "df_boston_test", "type": "Any"}, {"lineNumber": 5, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 5, "col_offset": 28, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 5, "col_offset": 44, "nodeName": "__file__", "type": "str"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "file_name", "type": "str"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "predict", "type": "Any"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "row", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "datetime", "type": "module"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "saved_ml_pipeline", "type": "Any"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "df_boston_test_dictionaries", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "datetime", "type": "module"}, {"lineNumber": 123, "col_offset": 10, "nodeName": "duration", "type": "datetime.timedelta"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "total_seconds", "type": "Callable[[], float]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "predictions", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "predict", "type": "Any"}, {"lineNumber": 137, "col_offset": 53, "nodeName": "row", "type": "Any"}, {"lineNumber": 5, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 5, "col_offset": 28, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "random", "type": "module"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "saved_ml_pipeline", "type": "Any"}, {"lineNumber": 118, "col_offset": 62, "nodeName": "row_num", "type": "int"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "duration", "type": "datetime.timedelta"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "saved_ml_pipeline", "type": "Any"}, {"lineNumber": 5, "col_offset": 28, "nodeName": "os", "type": "module"}]