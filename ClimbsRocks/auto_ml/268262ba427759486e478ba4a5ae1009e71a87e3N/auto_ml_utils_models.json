[{"lineNumber": 44, "col_offset": 0, "nodeName": "get_model_from_name", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "get_name_from_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 0, "nodeName": "get_search_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 471, "col_offset": 0, "nodeName": "load_keras_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 486, "col_offset": 0, "nodeName": "make_deep_learning_model", "type": "Callable[..., Any]"}, {"lineNumber": 522, "col_offset": 0, "nodeName": "make_deep_learning_classifier", "type": "Callable[..., Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "keras_installed", "type": "bool"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "lgb_installed", "type": "bool"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "keras_installed", "type": "bool"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "lgb_installed", "type": "bool"}, {"lineNumber": 40, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "epochs", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 125, "col_offset": 7, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 129, "col_offset": 7, "nodeName": "lgb_installed", "type": "bool"}, {"lineNumber": 133, "col_offset": 7, "nodeName": "keras_installed", "type": "bool"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "model_without_params", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "model_with_params", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "model_with_params", "type": "Any"}, {"lineNumber": 196, "col_offset": 7, "nodeName": "xgb_installed", "type": "bool"}, {"lineNumber": 202, "col_offset": 7, "nodeName": "keras_installed", "type": "bool"}, {"lineNumber": 208, "col_offset": 7, "nodeName": "lgb_installed", "type": "bool"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "params", "type": "Union[Dict[str, List[Union[List[int], List[Union[int, float]]]]], Dict[str, Union[List[Union[List[int], List[float], List[Union[int, float]]]], List[str], List[float]]], Dict[str, Union[List[int], List[float]]], Dict[str, Union[List[str], List[int], List[Optional[str]], List[float]]], Dict[str, Union[List[Union[float, int]], List[Optional[str]], List[str]]], Dict[str, List[bool]], Dict[str, Union[List[str], List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[Union[float, int]], List[str]]], Dict[str, Union[List[Any], List[str]]], Dict[str, Union[List[Optional[Union[float, int]]], List[float]]], Dict[str, Union[List[float], List[str], List[bool]]], Dict[str, Union[List[bool], List[int]]], Dict[str, List[Optional[int]]], Dict[str, List[float]], Dict[str, Union[List[str], List[float]]], Dict[str, Union[List[float], List[str], List[Union[float, int]]]], Dict[str, Union[List[str], List[Optional[str]], List[float]]]]"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "params", "type": "Union[Dict[str, List[bool]], Dict[str, Union[List[str], List[float]]], Dict[str, Union[List[str], List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[float], List[str], List[Union[float, int]]]], Dict[str, Union[List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[str], List[Optional[str]], List[float]]], Dict[str, List[Union[List[int], List[Union[int, float]]]]], Dict[str, Union[List[Union[List[int], List[float], List[Union[int, float]]]], List[str], List[float]]], Dict[str, Union[List[Union[float, int]], List[str]]], Dict[str, Union[List[int], List[float]]], Dict[str, Union[List[Any], List[str]]], Dict[str, Union[List[Optional[Union[float, int]]], List[float]]], Dict[str, Union[List[float], List[str], List[bool]]], Dict[str, Union[List[str], List[int], List[Optional[str]], List[float]]], Dict[str, Union[List[bool], List[int]]], Dict[str, List[Optional[int]]], Dict[Any, Any], Dict[str, Union[List[Union[float, int]], List[Optional[str]], List[str]]], Dict[str, List[float]]]"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "keras_file_name", "type": "Any"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "keras_model", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 481, "col_offset": 53, "nodeName": "keras_model", "type": "Any"}, {"lineNumber": 483, "col_offset": 11, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "layer", "type": "Union[Any, int, float]"}, {"lineNumber": 496, "col_offset": 17, "nodeName": "hidden_layers", "type": "Union[Any, List[Union[int, float]], List[int]]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "layer_size", "type": "int"}, {"lineNumber": 519, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "layer", "type": "Union[int, float, Any]"}, {"lineNumber": 532, "col_offset": 17, "nodeName": "hidden_layers", "type": "Union[List[Union[int, float]], List[int], Any]"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "layer_size", "type": "int"}, {"lineNumber": 552, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "set_verbosity", "type": "Any"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "INFO", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "epochs", "type": "int"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "model_params", "type": "Dict[Any, Any]"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "training_params", "type": "Any"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 145, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 147, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 149, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "RidgeClassifier", "type": "Any"}, {"lineNumber": 151, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "GradientBoostingClassifier", "type": "Any"}, {"lineNumber": 153, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "ExtraTreesClassifier", "type": "Any"}, {"lineNumber": 155, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "AdaBoostClassifier", "type": "Any"}, {"lineNumber": 157, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "SGDClassifier", "type": "Any"}, {"lineNumber": 159, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "Perceptron", "type": "Any"}, {"lineNumber": 161, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "PassiveAggressiveClassifier", "type": "Any"}, {"lineNumber": 163, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 165, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 167, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "Ridge", "type": "Any"}, {"lineNumber": 169, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "ExtraTreesRegressor", "type": "Any"}, {"lineNumber": 171, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "AdaBoostRegressor", "type": "Any"}, {"lineNumber": 173, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "RANSACRegressor", "type": "Any"}, {"lineNumber": 175, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "GradientBoostingRegressor", "type": "Any"}, {"lineNumber": 177, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "Lasso", "type": "Any"}, {"lineNumber": 179, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "ElasticNet", "type": "Any"}, {"lineNumber": 181, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "LassoLars", "type": "Any"}, {"lineNumber": 183, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "OrthogonalMatchingPursuit", "type": "Any"}, {"lineNumber": 185, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "BayesianRidge", "type": "Any"}, {"lineNumber": 187, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "ARDRegression", "type": "Any"}, {"lineNumber": 189, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 189, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "SGDRegressor", "type": "Any"}, {"lineNumber": 191, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "PassiveAggressiveRegressor", "type": "Any"}, {"lineNumber": 193, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "MiniBatchKMeans", "type": "Any"}, {"lineNumber": 460, "col_offset": 13, "nodeName": "grid_search_params", "type": "Dict[str, Union[Dict[str, List[Union[List[int], List[Union[int, float]]]]], Dict[str, Union[List[Union[List[int], List[float], List[Union[int, float]]]], List[str], List[float]]], Dict[str, Union[List[int], List[float]]], Dict[str, Union[List[int], List[Optional[str]], List[str], List[float]]], Dict[str, Union[List[Union[float, int]], List[Optional[str]], List[str]]], Dict[str, List[bool]], Dict[str, Union[List[str], List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[Union[float, int]], List[str]]], Dict[str, Union[List[Any], List[str]]], Dict[str, Union[List[Optional[Union[float, int]]], List[float]]], Dict[str, Union[List[str], List[float], List[bool]]], Dict[str, Union[List[bool], List[int]]], Dict[str, List[Optional[int]]], Dict[str, List[float]], Dict[str, Union[List[str], List[float]]], Dict[str, Union[List[float], List[str], List[Union[float, int]]]], Dict[str, Union[List[str], List[float], List[Optional[str]]]]]]"}, {"lineNumber": 461, "col_offset": 26, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "simplified_params", "type": "Dict[Any, Any]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 466, "col_offset": 17, "nodeName": "simplified_params", "type": "Dict[Any, Any]"}, {"lineNumber": 474, "col_offset": 34, "nodeName": "read_file", "type": "file"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 479, "col_offset": 18, "nodeName": "load_model", "type": "Any"}, {"lineNumber": 479, "col_offset": 29, "nodeName": "keras_file_name", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "hidden_layers", "type": "List[Union[int, float]]"}, {"lineNumber": 491, "col_offset": 7, "nodeName": "hidden_layers", "type": "Union[Any, List[Union[int, float]]]"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "hidden_layers", "type": "List[int]"}, {"lineNumber": 500, "col_offset": 7, "nodeName": "feature_learning", "type": "Any"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 507, "col_offset": 22, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "hidden_layers", "type": "List[Union[int, float]]"}, {"lineNumber": 527, "col_offset": 7, "nodeName": "hidden_layers", "type": "Union[List[Union[int, float]], Any]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "hidden_layers", "type": "List[int]"}, {"lineNumber": 536, "col_offset": 7, "nodeName": "feature_learning", "type": "Any"}, {"lineNumber": 540, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 545, "col_offset": 22, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "logging", "type": "Any"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "logging", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "sys", "type": "module"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "epochs", "type": "int"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "epochs", "type": "int"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "all_model_params", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "training_params", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "training_params", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "RidgeClassifier", "type": "Any"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "GradientBoostingClassifier", "type": "Any"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "ExtraTreesClassifier", "type": "Any"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "AdaBoostClassifier", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "SGDClassifier", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "Perceptron", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "PassiveAggressiveClassifier", "type": "Any"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "Ridge", "type": "Any"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "ExtraTreesRegressor", "type": "Any"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "AdaBoostRegressor", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "RANSACRegressor", "type": "Any"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "GradientBoostingRegressor", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "Lasso", "type": "Any"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "ElasticNet", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "LassoLars", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "OrthogonalMatchingPursuit", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "BayesianRidge", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "ARDRegression", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "SGDRegressor", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "PassiveAggressiveRegressor", "type": "Any"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "MiniBatchKMeans", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "XGBClassifier", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "XGBRegressor", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "LGBMRegressor", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "LGBMClassifier", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "KerasClassifier", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "model_map", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "KerasRegressor", "type": "Any"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "model_without_params", "type": "Any"}, {"lineNumber": 139, "col_offset": 58, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "XGBClassifier", "type": "Any"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "XGBRegressor", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "KerasRegressor", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "KerasClassifier", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "LGBMClassifier", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "LGBMRegressor", "type": "Any"}, {"lineNumber": 460, "col_offset": 32, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 461, "col_offset": 26, "nodeName": "sys", "type": "module"}, {"lineNumber": 463, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 463, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 463, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 474, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 474, "col_offset": 14, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 475, "col_offset": 24, "nodeName": "load", "type": "Any"}, {"lineNumber": 475, "col_offset": 34, "nodeName": "read_file", "type": "file"}, {"lineNumber": 477, "col_offset": 22, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "named_steps", "type": "Any"}, {"lineNumber": 488, "col_offset": 7, "nodeName": "feature_learning", "type": "Any"}, {"lineNumber": 488, "col_offset": 36, "nodeName": "hidden_layers", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 505, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 511, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 514, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 517, "col_offset": 55, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 524, "col_offset": 7, "nodeName": "feature_learning", "type": "Any"}, {"lineNumber": 524, "col_offset": 36, "nodeName": "hidden_layers", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 543, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 548, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 550, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 551, "col_offset": 56, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "model_params", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "xgb", "type": "Any"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "xgb", "type": "Any"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "lgb", "type": "Any"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "lgb", "type": "Any"}, {"lineNumber": 135, "col_offset": 71, "nodeName": "make_deep_learning_classifier", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 69, "nodeName": "make_deep_learning_model", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "xgb", "type": "Any"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "xgb", "type": "Any"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "lgb", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "lgb", "type": "Any"}, {"lineNumber": 463, "col_offset": 20, "nodeName": "params", "type": "Union[Dict[str, List[bool]], Dict[str, Union[List[str], List[float]]], Dict[str, Union[List[str], List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[float], List[str], List[Union[float, int]]]], Dict[str, Union[List[Optional[str]], List[int], List[bool]]], Dict[str, Union[List[str], List[Optional[str]], List[float]]], Dict[str, List[Union[List[int], List[Union[int, float]]]]], Dict[str, Union[List[Union[List[int], List[float], List[Union[int, float]]]], List[str], List[float]]], Dict[str, Union[List[Union[float, int]], List[str]]], Dict[str, Union[List[int], List[float]]], Dict[str, Union[List[Any], List[str]]], Dict[str, Union[List[Optional[Union[float, int]]], List[float]]], Dict[str, Union[List[float], List[str], List[bool]]], Dict[str, Union[List[str], List[int], List[Optional[str]], List[float]]], Dict[str, Union[List[bool], List[int]]], Dict[str, List[Optional[int]]], Dict[str, Union[List[Union[float, int]], List[Optional[str]], List[str]]], Dict[str, List[float]]]"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "simplified_params", "type": "Dict[Any, Any]"}, {"lineNumber": 465, "col_offset": 35, "nodeName": "v", "type": "Any"}, {"lineNumber": 475, "col_offset": 24, "nodeName": "dill", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "base_pipeline", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 497, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 505, "col_offset": 20, "nodeName": "hidden_layers", "type": "Union[Any, List[Union[int, float]], List[int]]"}, {"lineNumber": 505, "col_offset": 48, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 508, "col_offset": 18, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 508, "col_offset": 24, "nodeName": "layer_size", "type": "int"}, {"lineNumber": 511, "col_offset": 20, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 533, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 543, "col_offset": 20, "nodeName": "hidden_layers", "type": "Union[List[Union[int, float]], List[int], Any]"}, {"lineNumber": 543, "col_offset": 48, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 546, "col_offset": 18, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 546, "col_offset": 24, "nodeName": "layer_size", "type": "int"}, {"lineNumber": 548, "col_offset": 20, "nodeName": "scaled_layers", "type": "List[int]"}, {"lineNumber": 550, "col_offset": 63, "nodeName": "final_activation", "type": "Any"}, {"lineNumber": 355, "col_offset": 37, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 465, "col_offset": 30, "nodeName": "k", "type": "Any"}, {"lineNumber": 497, "col_offset": 33, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 497, "col_offset": 44, "nodeName": "layer", "type": "Union[float, int, Any]"}, {"lineNumber": 533, "col_offset": 33, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 533, "col_offset": 44, "nodeName": "layer", "type": "Union[float, int, Any]"}]