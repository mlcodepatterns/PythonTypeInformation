[{"lineNumber": 46, "col_offset": 0, "nodeName": "ml_predictor", "type": "Any"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "output_splitter", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "Predictor", "type": "Any"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "ml_for_analytics", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "training_data", "type": "List[Dict[str, str]]"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "SplitOutput", "type": "Any"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "transform", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "testing_data", "type": "List[Dict[str, str]]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 11, "col_offset": 79, "nodeName": "input_file", "type": "file"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "training_rows", "type": "csv.DictReader"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "training_data", "type": "List[Dict[str, str]]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "testing_data", "type": "List[Dict[str, str]]"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "training_rows", "type": "csv.DictReader"}, {"lineNumber": 33, "col_offset": 71, "nodeName": "input_file", "type": "file"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "training_rows", "type": "csv.DictReader"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "training_data", "type": "List[Dict[str, str]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "testing_data", "type": "List[Dict[str, str]]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "training_rows", "type": "csv.DictReader"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "ml_predictor", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "utils", "type": "module"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "output_splitter", "type": "Any"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "ml_predictor", "type": "Any"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "score", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 8, "col_offset": 3, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 8, "col_offset": 7, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 8, "col_offset": 25, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 8, "col_offset": 40, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 11, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 12, "col_offset": 39, "nodeName": "input_file", "type": "file"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "input_file", "type": "file"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "ml_predictor", "type": "Any"}, {"lineNumber": 8, "col_offset": 7, "nodeName": "sys", "type": "module"}, {"lineNumber": 8, "col_offset": 25, "nodeName": "sys", "type": "module"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "csv", "type": "module"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "csv", "type": "module"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 20, "col_offset": 36, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "testing_data", "type": "List[Dict[str, str]]"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "training_data", "type": "List[Dict[str, str]]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "testing_data", "type": "List[Dict[str, str]]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "training_data", "type": "List[Dict[str, str]]"}]