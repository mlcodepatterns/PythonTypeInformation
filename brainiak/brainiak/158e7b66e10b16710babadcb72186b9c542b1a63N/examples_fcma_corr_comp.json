[{"lineNumber": 23, "col_offset": 0, "nodeName": "format", "type": "str"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "basicConfig", "type": "Callable"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "data_dir", "type": "str"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "extension", "type": "str"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "mask_file", "type": "str"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "epoch_file", "type": "str"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "images", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "conditions", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "raw_data", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "epoch_info", "type": "List[Tuple[int, int, Any, Any]]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "INFO", "type": "int"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "format", "type": "str"}, {"lineNumber": 26, "col_offset": 62, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "load_images_from_dir", "type": "Any"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "data_dir", "type": "str"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "extension", "type": "str"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "load_boolean_mask", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "mask_file", "type": "str"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "load_labels", "type": "Any"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "epoch_file", "type": "str"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "generate_epochs_info", "type": "Callable[[Iterable[Any]], List[Tuple[int, int, Any, Any]]]"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "conditions", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "epoch", "type": "Tuple[int, int, Any, Any]"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "epoch_info", "type": "List[Tuple[int, int, Any, Any]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "label", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "sid", "type": "int"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "end", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "corr", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "mdict", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "logging", "type": "module"}, {"lineNumber": 26, "col_offset": 62, "nodeName": "sys", "type": "module"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "sys", "type": "module"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "sys", "type": "module"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "io", "type": "module"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "io", "type": "module"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "multimask_images", "type": "Any"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "images", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "epoch", "type": "Tuple[int, int, Any, Any]"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "epoch", "type": "Tuple[int, int, Any, Any]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "epoch", "type": "Tuple[int, int, Any, Any]"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "epoch", "type": "Tuple[int, int, Any, Any]"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "mat", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "compute_correlation", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "mat", "type": "Any"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "mat", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "mdict", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "savemat", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "filename", "type": "str"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "mdict", "type": "Dict[str, Any]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "sys", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "image", "type": "module"}, {"lineNumber": 43, "col_offset": 52, "nodeName": "mask", "type": "Any"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 60, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "idx", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "filename", "type": "str"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "io", "type": "Any"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "raw_data", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "start", "type": "Any"}, {"lineNumber": 51, "col_offset": 40, "nodeName": "end", "type": "Any"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "sid", "type": "int"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "idx", "type": "int"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "label", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "sid", "type": "int"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "sid", "type": "int"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "label", "type": "int"}]