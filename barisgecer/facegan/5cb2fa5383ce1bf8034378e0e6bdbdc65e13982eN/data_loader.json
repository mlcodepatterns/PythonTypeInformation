[{"lineNumber": 9, "col_offset": 0, "nodeName": "get_loader", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "get_syn_loader", "type": "Callable[..., Any]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "ext", "type": "str"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "filename_queue", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "reader", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "is_grayscale", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "min_after_dequeue", "type": "int"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "queue", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "queue", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "queue", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "n_id", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "images", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "labels", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "latentvars", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "input_queue", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "label", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "latentvar", "type": "Any"}, {"lineNumber": 119, "col_offset": 7, "nodeName": "is_grayscale", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "min_after_dequeue", "type": "int"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "queue_image", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "queue_image", "type": "Any"}, {"lineNumber": 10, "col_offset": 19, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 10, "col_offset": 36, "nodeName": "root", "type": "Any"}, {"lineNumber": 11, "col_offset": 38, "nodeName": "split", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "root", "type": "str"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 33, "nodeName": "img", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "string_input_producer", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "WholeFileReader", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "filename", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "read", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "filename_queue", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "tf_decode", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "set_shape", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "min_after_dequeue", "type": "int"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "shuffle_batch", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "crop_to_bounding_box", "type": "Any"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "queue", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "resize_bilinear", "type": "Any"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "queue", "type": "Any"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "queue", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "to_float", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "queue", "type": "Any"}, {"lineNumber": 65, "col_offset": 7, "nodeName": "isfile", "type": "Callable[[Union[str, bytes, _PathLike[str], _PathLike[bytes]]], bool]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "ext", "type": "str"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "max", "type": "Callable"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "labels", "type": "Any"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "img", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "labels", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "latentvars", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "slice_input_producer", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "decode_image", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "input_queue", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "input_queue", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "set_shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "min_after_dequeue", "type": "int"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "queue_image", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "queue_label", "type": "Any"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "queue_latentvar", "type": "Any"}, {"lineNumber": 126, "col_offset": 48, "nodeName": "shuffle_batch", "type": "Any"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "crop_to_bounding_box", "type": "Any"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "queue_image", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "resize_bilinear", "type": "Any"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "queue_image", "type": "Any"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "queue_image", "type": "Any"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "queue_label", "type": "Any"}, {"lineNumber": 144, "col_offset": 49, "nodeName": "queue_latentvar", "type": "Any"}, {"lineNumber": 144, "col_offset": 66, "nodeName": "n_id", "type": "Any"}, {"lineNumber": 10, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 11, "col_offset": 7, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 12, "col_offset": 28, "nodeName": "root", "type": "Any"}, {"lineNumber": 12, "col_offset": 44, "nodeName": "split", "type": "Any"}, {"lineNumber": 15, "col_offset": 16, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "ext", "type": "str"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "tf_decode", "type": "Any"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "decode_jpeg", "type": "Any"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "open", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "h", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "img", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "h", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "train", "type": "Any"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 29, "col_offset": 57, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 29, "col_offset": 85, "nodeName": "seed", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "reader", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "rgb_to_grayscale", "type": "Any"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "image", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "image", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "min_after_dequeue", "type": "int"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "scale_size", "type": "Any"}, {"lineNumber": 48, "col_offset": 57, "nodeName": "scale_size", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "queue", "type": "Any"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "root", "type": "Any"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "paths", "type": "Any"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 70, "col_offset": 52, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "latentvars", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "open", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "h", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "img", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "h", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "paths", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "train", "type": "Any"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "images", "type": "Any"}, {"lineNumber": 104, "col_offset": 57, "nodeName": "labels", "type": "Any"}, {"lineNumber": 104, "col_offset": 65, "nodeName": "latentvars", "type": "Any"}, {"lineNumber": 104, "col_offset": 98, "nodeName": "seed", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "read_file", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "rgb_to_grayscale", "type": "Any"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "image", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 126, "col_offset": 48, "nodeName": "train", "type": "Any"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "image", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "label", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "latentvar", "type": "Any"}, {"lineNumber": 127, "col_offset": 46, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "min_after_dequeue", "type": "int"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "image", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "image", "type": "Any"}, {"lineNumber": 133, "col_offset": 57, "nodeName": "scale_size", "type": "Any"}, {"lineNumber": 133, "col_offset": 69, "nodeName": "scale_size", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "queue_image", "type": "Any"}, {"lineNumber": 139, "col_offset": 9, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "to_float", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "queue_image", "type": "Any"}, {"lineNumber": 10, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 15, "col_offset": 38, "nodeName": "root", "type": "Union[str, Any]"}, {"lineNumber": 15, "col_offset": 44, "nodeName": "ext", "type": "str"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "image", "type": "Any"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "ext", "type": "str"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "tf_decode", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "decode_png", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "Image", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "image", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 65, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "im", "type": "str"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "latentvars", "type": "Any"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "Image", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "paths", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 47, "nodeName": "input_queue", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "image", "type": "Any"}, {"lineNumber": 126, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "image", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 57, "col_offset": 60, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "root", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "pickle", "type": "module"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "root", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "pickle", "type": "module"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "root", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "pickle", "type": "module"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "root", "type": "Any"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "ext", "type": "str"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 54, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 81, "col_offset": 56, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "latentvar", "type": "str"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 88, "col_offset": 60, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 142, "col_offset": 60, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "open", "type": "Callable"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "open", "type": "Callable"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "open", "type": "Callable"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "latentvars", "type": "Any"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "root", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "pickle", "type": "module"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "root", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "pickle", "type": "module"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 84, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "ext", "type": "str"}, {"lineNumber": 85, "col_offset": 73, "nodeName": "p", "type": "str"}, {"lineNumber": 85, "col_offset": 78, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "open", "type": "Callable"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "latentvar", "type": "str"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "latentvars", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "root", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "pickle", "type": "module"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "p", "type": "str"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 87, "col_offset": 53, "nodeName": "read", "type": "Callable"}, {"lineNumber": 87, "col_offset": 53, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "im", "type": "str"}]