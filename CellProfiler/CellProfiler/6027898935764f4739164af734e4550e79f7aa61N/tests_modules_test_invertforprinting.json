[{"lineNumber": 22, "col_offset": 0, "nodeName": "I_RED_IN", "type": "str"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "I_GREEN_IN", "type": "str"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "I_BLUE_IN", "type": "str"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "I_COLOR_IN", "type": "str"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "I_COLOR_OUT", "type": "str"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "set_headless", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "data", "type": "str"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "data", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "image_set_list", "type": "cellprofiler.image.ImageSetList"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "module_num", "type": "int"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "provider", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "providers", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "present", "type": "Tuple[bool, bool, bool]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 61, "col_offset": 58, "nodeName": "CC_GRAYSCALE", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "CC_GRAYSCALE", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "CC_COLOR", "type": "str"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 107, "col_offset": 59, "nodeName": "CC_COLOR", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "ImageSetList", "type": "Type[cellprofiler.image.ImageSetList]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "get_image_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "InvertForPrinting", "type": "Type[cellprofiler.modules.invertforprinting.InvertForPrinting]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "value", "type": "str"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "fn", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "Workspace", "type": "Type[cellprofiler.workspace.Workspace]"}, {"lineNumber": 152, "col_offset": 34, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 152, "col_offset": 52, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "image_set_list", "type": "cellprofiler.image.ImageSetList"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 164, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "value", "type": "str"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "CC_COLOR", "type": "str"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "value", "type": "str"}, {"lineNumber": 169, "col_offset": 47, "nodeName": "CC_COLOR", "type": "str"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "run_module", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "o", "type": "int"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "i1", "type": "int"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "i2", "type": "int"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 182, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "value", "type": "str"}, {"lineNumber": 186, "col_offset": 46, "nodeName": "CC_COLOR", "type": "str"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "value", "type": "str"}, {"lineNumber": 187, "col_offset": 47, "nodeName": "CC_GRAYSCALE", "type": "str"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "run_module", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "o", "type": "int"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "i1", "type": "int"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "i2", "type": "int"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 201, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "value", "type": "str"}, {"lineNumber": 205, "col_offset": 46, "nodeName": "CC_GRAYSCALE", "type": "str"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "value", "type": "str"}, {"lineNumber": 206, "col_offset": 47, "nodeName": "CC_COLOR", "type": "str"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "run_module", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "o", "type": "int"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "i1", "type": "int"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "i2", "type": "int"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 222, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "value", "type": "str"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "CC_GRAYSCALE", "type": "str"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "value", "type": "str"}, {"lineNumber": 227, "col_offset": 47, "nodeName": "CC_GRAYSCALE", "type": "str"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "run_module", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "o", "type": "int"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "i1", "type": "int"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "i2", "type": "int"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 245, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "InvertForPrinting", "type": "Type[cellprofiler.modules.invertforprinting.InvertForPrinting]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "input_color_choice", "type": "Any"}, {"lineNumber": 61, "col_offset": 58, "nodeName": "I", "type": "module"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "wants_red_input", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "red_input_image", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "wants_green_input", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "green_input_image", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "wants_blue_input", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "blue_input_image", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "output_color_choice", "type": "Any"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "I", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "wants_red_output", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "red_output_image", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "wants_green_output", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "green_output_image", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "wants_blue_output", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "blue_output_image", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "InvertForPrinting", "type": "Type[cellprofiler.modules.invertforprinting.InvertForPrinting]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "input_color_choice", "type": "Any"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "I", "type": "module"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "color_input_image", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "output_color_choice", "type": "Any"}, {"lineNumber": 107, "col_offset": 59, "nodeName": "I", "type": "module"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "color_output_image", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "cpi", "type": "module"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "image_set_list", "type": "cellprofiler.image.ImageSetList"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "I", "type": "module"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "I_COLOR_IN", "type": "str"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "color_input_image", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "red_image", "type": "Any"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "I_RED_IN", "type": "str"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "red_input_image", "type": "Any"}, {"lineNumber": 127, "col_offset": 63, "nodeName": "wants_red_input", "type": "Any"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "green_image", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "I_GREEN_IN", "type": "str"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "green_input_image", "type": "Any"}, {"lineNumber": 128, "col_offset": 69, "nodeName": "wants_green_input", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "blue_image", "type": "Any"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "I_BLUE_IN", "type": "str"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "blue_input_image", "type": "Any"}, {"lineNumber": 129, "col_offset": 66, "nodeName": "wants_blue_input", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "image", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "img", "type": "cellprofiler.image.Image"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "I_COLOR_OUT", "type": "str"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "color_output_image", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "red_output_image", "type": "Any"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "green_output_image", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 141, "col_offset": 43, "nodeName": "blue_output_image", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "setting", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "fn", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "cpw", "type": "module"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "ObjectSet", "type": "Any"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "Measurements", "type": "Type[cellprofiler.measurement.Measurements]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 164, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "input_color_choice", "type": "Any"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "I", "type": "module"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "output_color_choice", "type": "Any"}, {"lineNumber": 169, "col_offset": 47, "nodeName": "I", "type": "module"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 171, "col_offset": 56, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "I_COLOR_OUT", "type": "str"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "I_COLOR_OUT", "type": "str"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 182, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "input_color_choice", "type": "Any"}, {"lineNumber": 186, "col_offset": 46, "nodeName": "I", "type": "module"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "output_color_choice", "type": "Any"}, {"lineNumber": 187, "col_offset": 47, "nodeName": "I", "type": "module"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 189, "col_offset": 56, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 193, "col_offset": 48, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 201, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "input_color_choice", "type": "Any"}, {"lineNumber": 205, "col_offset": 46, "nodeName": "I", "type": "module"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "output_color_choice", "type": "Any"}, {"lineNumber": 206, "col_offset": 47, "nodeName": "I", "type": "module"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "I_COLOR_OUT", "type": "str"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "I_COLOR_OUT", "type": "str"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 222, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "input_color_choice", "type": "Any"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "I", "type": "module"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "output_color_choice", "type": "Any"}, {"lineNumber": 227, "col_offset": 47, "nodeName": "I", "type": "module"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 232, "col_offset": 31, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 236, "col_offset": 32, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 236, "col_offset": 48, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 245, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "value", "type": "str"}, {"lineNumber": 254, "col_offset": 50, "nodeName": "CC_GRAYSCALE", "type": "str"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "value", "type": "str"}, {"lineNumber": 255, "col_offset": 51, "nodeName": "CC_GRAYSCALE", "type": "str"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "run_module", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "o", "type": "int"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "i1", "type": "int"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "i2", "type": "int"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "LoadExceptionEvent", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "decompress", "type": "Callable[..., bytes]"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "modules", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "I", "type": "module"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "LoadExceptionEvent", "type": "Any"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "decompress", "type": "Callable[..., bytes]"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "modules", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "I", "type": "module"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 127, "col_offset": 63, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 128, "col_offset": 69, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 129, "col_offset": 66, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "Image", "type": "Type[cellprofiler.image.Image]"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "image", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "img", "type": "cellprofiler.image.Image"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "setting", "type": "Any"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "check", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "value", "type": "bool"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "check", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "value", "type": "bool"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 141, "col_offset": 43, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 149, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "RunExceptionEvent", "type": "Any"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "cpo", "type": "module"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "cpm", "type": "module"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "provide_image", "type": "Any"}, {"lineNumber": 159, "col_offset": 65, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 167, "col_offset": 47, "nodeName": "InvertForPrinting", "type": "Type[cellprofiler.modules.invertforprinting.InvertForPrinting]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "result", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 185, "col_offset": 47, "nodeName": "InvertForPrinting", "type": "Type[cellprofiler.modules.invertforprinting.InvertForPrinting]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "InvertForPrinting", "type": "Type[cellprofiler.modules.invertforprinting.InvertForPrinting]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 209, "col_offset": 40, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 210, "col_offset": 39, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 213, "col_offset": 39, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "result", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 225, "col_offset": 39, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 225, "col_offset": 47, "nodeName": "InvertForPrinting", "type": "Type[cellprofiler.modules.invertforprinting.InvertForPrinting]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 229, "col_offset": 38, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 230, "col_offset": 40, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 231, "col_offset": 39, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 236, "col_offset": 34, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 236, "col_offset": 50, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "input_color_choice", "type": "Any"}, {"lineNumber": 254, "col_offset": 50, "nodeName": "I", "type": "module"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "output_color_choice", "type": "Any"}, {"lineNumber": 255, "col_offset": 51, "nodeName": "I", "type": "module"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 261, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 261, "col_offset": 33, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 264, "col_offset": 36, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 264, "col_offset": 52, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "zlib", "type": "module"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "b64decode", "type": "Callable[..., bytes]"}, {"lineNumber": 57, "col_offset": 64, "nodeName": "data", "type": "str"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "zlib", "type": "module"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "b64decode", "type": "Callable[..., bytes]"}, {"lineNumber": 101, "col_offset": 64, "nodeName": "data", "type": "str"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "cpi", "type": "module"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "check", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "check", "type": "Any"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "provider", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 167, "col_offset": 47, "nodeName": "I", "type": "module"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 51, "nodeName": "eps", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 185, "col_offset": 47, "nodeName": "I", "type": "module"}, {"lineNumber": 192, "col_offset": 33, "nodeName": "color", "type": "str"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "o", "type": "int"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 51, "nodeName": "eps", "type": "Any"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "I", "type": "module"}, {"lineNumber": 213, "col_offset": 39, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 225, "col_offset": 47, "nodeName": "I", "type": "module"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "color", "type": "str"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "o", "type": "int"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "self", "type": "TestInvertForPrinting"}, {"lineNumber": 253, "col_offset": 32, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 253, "col_offset": 43, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 253, "col_offset": 51, "nodeName": "InvertForPrinting", "type": "Type[cellprofiler.modules.invertforprinting.InvertForPrinting]"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 261, "col_offset": 41, "nodeName": "sum", "type": "Any"}, {"lineNumber": 261, "col_offset": 48, "nodeName": "present", "type": "Tuple[bool, bool, bool]"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 264, "col_offset": 38, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 264, "col_offset": 54, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "testing", "type": "Any"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "base64", "type": "module"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "base64", "type": "module"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "provider", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "o", "type": "int"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 177, "col_offset": 44, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "abs", "type": "Any"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "diff", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 43, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 192, "col_offset": 54, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 192, "col_offset": 67, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "abs", "type": "Any"}, {"lineNumber": 197, "col_offset": 42, "nodeName": "diff", "type": "Any"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "o", "type": "int"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 218, "col_offset": 56, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 235, "col_offset": 43, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 235, "col_offset": 54, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 235, "col_offset": 67, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 240, "col_offset": 26, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 51, "nodeName": "I", "type": "module"}, {"lineNumber": 257, "col_offset": 66, "nodeName": "present", "type": "Tuple[bool, bool, bool]"}, {"lineNumber": 257, "col_offset": 42, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 258, "col_offset": 68, "nodeName": "present", "type": "Tuple[bool, bool, bool]"}, {"lineNumber": 258, "col_offset": 44, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 259, "col_offset": 67, "nodeName": "present", "type": "Tuple[bool, bool, bool]"}, {"lineNumber": 259, "col_offset": 43, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 261, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 37, "nodeName": "color", "type": "str"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 31, "nodeName": "o", "type": "int"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 51, "nodeName": "finfo", "type": "Any"}, {"lineNumber": 178, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 51, "nodeName": "finfo", "type": "Any"}, {"lineNumber": 197, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 263, "col_offset": 47, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 263, "col_offset": 58, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 263, "col_offset": 71, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 268, "col_offset": 55, "nodeName": "present", "type": "Tuple[bool, bool, bool]"}, {"lineNumber": 269, "col_offset": 55, "nodeName": "present", "type": "Tuple[bool, bool, bool]"}, {"lineNumber": 176, "col_offset": 62, "nodeName": "i1", "type": "int"}, {"lineNumber": 177, "col_offset": 62, "nodeName": "i2", "type": "int"}, {"lineNumber": 178, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 56, "nodeName": "i1", "type": "int"}, {"lineNumber": 196, "col_offset": 56, "nodeName": "i2", "type": "int"}, {"lineNumber": 197, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 44, "nodeName": "i1", "type": "int"}, {"lineNumber": 218, "col_offset": 74, "nodeName": "i2", "type": "int"}, {"lineNumber": 240, "col_offset": 44, "nodeName": "i1", "type": "int"}, {"lineNumber": 241, "col_offset": 44, "nodeName": "i2", "type": "int"}, {"lineNumber": 268, "col_offset": 63, "nodeName": "i1", "type": "int"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 269, "col_offset": 63, "nodeName": "i2", "type": "int"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 268, "col_offset": 48, "nodeName": "i1", "type": "int"}, {"lineNumber": 269, "col_offset": 48, "nodeName": "i2", "type": "int"}]