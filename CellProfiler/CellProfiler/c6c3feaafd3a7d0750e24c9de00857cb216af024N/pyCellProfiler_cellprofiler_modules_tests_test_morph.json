[{"lineNumber": 13, "col_offset": 0, "nodeName": "__version__", "type": "str"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "set_headless", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "data", "type": "str"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "fd", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "data", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "fd", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "INPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "OUTPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "INPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "OUTPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "function", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 134, "col_offset": 51, "nodeName": "R_ONCE", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "object_set", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "image_set_list", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "fd", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 74, "col_offset": 55, "nodeName": "F_DILATE", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 75, "col_offset": 67, "nodeName": "R_ONCE", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "F_ERODE", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 77, "col_offset": 67, "nodeName": "R_CUSTOM", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "F_FILL", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 80, "col_offset": 67, "nodeName": "R_FOREVER", "type": "Any"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "fd", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "F_DILATE", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 119, "col_offset": 67, "nodeName": "R_ONCE", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 120, "col_offset": 55, "nodeName": "F_ERODE", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 121, "col_offset": 67, "nodeName": "R_CUSTOM", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 123, "col_offset": 55, "nodeName": "F_FILL", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 124, "col_offset": 67, "nodeName": "R_FOREVER", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "Morph", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "output_image_name", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 134, "col_offset": 51, "nodeName": "morph", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "ObjectSet", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "ImageSetList", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "get_image_set", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "Workspace", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "module", "type": "Any"}, {"lineNumber": 141, "col_offset": 34, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "object_set", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "image_set_list", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "INPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "OUTPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "execute", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "function_name", "type": "Any"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "function", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "input", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "gray_out", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "black_tophat", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 45, "nodeName": "branchpoints", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "bridge", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "clean", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "diag", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "endpoints", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 37, "nodeName": "fill", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "hbreak", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "majority", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 39, "nodeName": "remove", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "skeletonize", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 37, "nodeName": "spur", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 40, "nodeName": "thicken", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 37, "nodeName": "thin", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 219, "col_offset": 39, "nodeName": "white_tophat", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 39, "nodeName": "vbreak", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 41, "nodeName": "distance", "type": "Callable[[Any], Any]"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 237, "col_offset": 34, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 242, "col_offset": 37, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "execute", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 244, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "invert", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "execute", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 255, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "decompress", "type": "Callable[..., bytes]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "cpp", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "Morph", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "output_image_name", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "functions", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 74, "col_offset": 55, "nodeName": "morph", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 75, "col_offset": 67, "nodeName": "morph", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "morph", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 77, "col_offset": 67, "nodeName": "morph", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "custom_repeats", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "morph", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 80, "col_offset": 67, "nodeName": "morph", "type": "Any"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "decompress", "type": "Callable[..., bytes]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "cpp", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 114, "col_offset": 42, "nodeName": "Morph", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "output_image_name", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "functions", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "morph", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 119, "col_offset": 67, "nodeName": "morph", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 120, "col_offset": 55, "nodeName": "morph", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 121, "col_offset": 67, "nodeName": "morph", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "custom_repeats", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 123, "col_offset": 55, "nodeName": "morph", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 124, "col_offset": 67, "nodeName": "morph", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "morph", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "cpp", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "cpo", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "cpi", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "image_set_list", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "cpw", "type": "Any"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "Measurements", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "Image", "type": "Any"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "image", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "map", "type": "Callable"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "function_name", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "expected", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 165, "col_offset": 45, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 189, "col_offset": 37, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 201, "col_offset": 39, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 210, "col_offset": 37, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 213, "col_offset": 40, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 216, "col_offset": 37, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 219, "col_offset": 39, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 222, "col_offset": 39, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "distance_transform_edt", "type": "Any"}, {"lineNumber": 226, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 228, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "zlib", "type": "module"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "b64decode", "type": "Callable[..., bytes]"}, {"lineNumber": 65, "col_offset": 64, "nodeName": "data", "type": "str"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "modules", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "morph", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "zlib", "type": "module"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "b64decode", "type": "Callable[..., bytes]"}, {"lineNumber": 109, "col_offset": 64, "nodeName": "data", "type": "str"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "modules", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 114, "col_offset": 42, "nodeName": "morph", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "functions", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "functions", "type": "Any"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "cpmeas", "type": "Any"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "cpi", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 174, "col_offset": 47, "nodeName": "binary_closing", "type": "Any"}, {"lineNumber": 174, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 180, "col_offset": 49, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 180, "col_offset": 71, "nodeName": "x", "type": "Any"}, {"lineNumber": 186, "col_offset": 48, "nodeName": "binary_erosion", "type": "Any"}, {"lineNumber": 186, "col_offset": 69, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "binary_opening", "type": "Any"}, {"lineNumber": 198, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 204, "col_offset": 48, "nodeName": "binary_shrink", "type": "Any"}, {"lineNumber": 204, "col_offset": 70, "nodeName": "x", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "scind", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 245, "col_offset": 41, "nodeName": "expected", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "base64", "type": "module"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "base64", "type": "module"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "expected", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 61, "nodeName": "eps", "type": "Any"}, {"lineNumber": 174, "col_offset": 47, "nodeName": "scind", "type": "Any"}, {"lineNumber": 174, "col_offset": 70, "nodeName": "ones", "type": "Any"}, {"lineNumber": 174, "col_offset": 84, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 180, "col_offset": 49, "nodeName": "scind", "type": "Any"}, {"lineNumber": 180, "col_offset": 74, "nodeName": "ones", "type": "Any"}, {"lineNumber": 180, "col_offset": 88, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 186, "col_offset": 48, "nodeName": "scind", "type": "Any"}, {"lineNumber": 186, "col_offset": 72, "nodeName": "ones", "type": "Any"}, {"lineNumber": 186, "col_offset": 86, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "scind", "type": "Any"}, {"lineNumber": 198, "col_offset": 71, "nodeName": "ones", "type": "Any"}, {"lineNumber": 198, "col_offset": 85, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 204, "col_offset": 48, "nodeName": "cpmorph", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 27, "nodeName": "max", "type": "Any"}, {"lineNumber": 230, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 256, "col_offset": 44, "nodeName": "image", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "abs", "type": "Any"}, {"lineNumber": 174, "col_offset": 70, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 74, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 72, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 71, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "output", "type": "Any"}, {"lineNumber": 159, "col_offset": 49, "nodeName": "expected", "type": "Any"}, {"lineNumber": 159, "col_offset": 61, "nodeName": "finfo", "type": "Any"}, {"lineNumber": 159, "col_offset": 70, "nodeName": "float32", "type": "Any"}, {"lineNumber": 159, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 70, "nodeName": "np", "type": "module"}]