[{"lineNumber": 14, "col_offset": 0, "nodeName": "__version__", "type": "str"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "gray4", "type": "numpy.ndarray"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "gray", "type": "Any"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "labels", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "gray4", "type": "numpy.ndarray"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "ones", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 106, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "norm", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "correct", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "correct", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "fv", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "max", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "quantize", "type": "Any"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "quantize", "type": "Any"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "normalized_per_object", "type": "Any"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "gray4", "type": "numpy.ndarray"}, {"lineNumber": 34, "col_offset": 53, "nodeName": "labels", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "P", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "levels", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "cooccurrence", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "gray4", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 48, "nodeName": "labels", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 74, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "correct", "type": "numpy.ndarray"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "levels", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "Haralick", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "Haralick", "type": "Any"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "Haralick", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "mux", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "muy", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "sigmax", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "sigmay", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "Haralick", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "Haralick", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "Haralick", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "Haralick", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "Haralick", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "Haralick", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "Haralick", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "Haralick", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "Haralick", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "Haralick", "type": "Any"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "Haralick", "type": "Any"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "gray", "type": "Any"}, {"lineNumber": 86, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "all", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 101, "col_offset": 61, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "nlevels", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "cooccurrence", "type": "Any"}, {"lineNumber": 102, "col_offset": 43, "nodeName": "image", "type": "Any"}, {"lineNumber": 102, "col_offset": 50, "nodeName": "labels", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "gray4", "type": "numpy.ndarray"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "haralick", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "haralick", "type": "module"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "correct", "type": "numpy.ndarray"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "haralick", "type": "module"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "h", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "haralick", "type": "module"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestHaralick"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "H1", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "H2", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "H3", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "H4", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "H5", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "H6", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "H7", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "H8", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "H9", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "H10", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "H11", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "H12", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "H13", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "c", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "q", "type": "Any"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "correct", "type": "numpy.ndarray"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "q", "type": "Any"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "gray4", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "norm", "type": "Any"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "gray", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "P", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "correct", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "h", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "map", "type": "Callable"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "fv", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "np", "type": "module"}]