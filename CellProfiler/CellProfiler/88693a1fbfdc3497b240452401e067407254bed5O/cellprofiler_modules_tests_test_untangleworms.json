[{"lineNumber": 12, "col_offset": 0, "nodeName": "__version__", "type": "str"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "IMAGE_NAME", "type": "str"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "OVERLAP_OBJECTS_NAME", "type": "str"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "NON_OVERLAPPING_OBJECTS_NAME", "type": "str"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "A02_binary", "type": "str"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "PARAMS", "type": "str"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "closed", "type": "bool"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 356, "col_offset": 34, "nodeName": "IMAGE_NAME", "type": "str"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 357, "col_offset": 46, "nodeName": "NON_OVERLAPPING_OBJECTS_NAME", "type": "str"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 358, "col_offset": 39, "nodeName": "OVERLAP_OBJECTS_NAME", "type": "str"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "module_num", "type": "int"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "img", "type": "cellprofiler.cpimage.Image"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "fd", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "closed", "type": "bool"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "dir_choice", "type": "Any"}, {"lineNumber": 370, "col_offset": 51, "nodeName": "ABSOLUTE_FOLDER_NAME", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "data", "type": "bytes"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "expected_order", "type": "Any"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "result_order", "type": "Any"}, {"lineNumber": 479, "col_offset": 28, "nodeName": "order", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "expected_order", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "ii", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "jj", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "result_order", "type": "Any"}, {"lineNumber": 525, "col_offset": 28, "nodeName": "order", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "result_order", "type": "Any"}, {"lineNumber": 537, "col_offset": 28, "nodeName": "order", "type": "Any"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "j", "type": "int"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "L1", "type": "Any"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "L2", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "L1", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "L2", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "L1", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "L2", "type": "Any"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "paths_list", "type": "List[Any]"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "paths_list", "type": "List[Any]"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "path", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "expected", "type": "Tuple[Tuple[Tuple[int, int], Tuple[int]], Tuple[Tuple[int, int, int], Tuple[int, int]]]"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "permutations", "type": "Tuple[Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int]]"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "expected", "type": "Tuple[Any, ...]"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 670, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "path_list", "type": "List[Any]"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 680, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "path_list", "type": "List[Any]"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "path", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 694, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "path_list", "type": "List[Any]"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "expected", "type": "Tuple[Tuple[Tuple[int], Tuple[()]], Tuple[Tuple[int, int], Tuple[int]], Tuple[Tuple[int], Tuple[()]]]"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 711, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "path_list", "type": "List[Any]"}, {"lineNumber": 718, "col_offset": 12, "nodeName": "path", "type": "Any"}, {"lineNumber": 718, "col_offset": 20, "nodeName": "path_list", "type": "List[Any]"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "path_coords", "type": "Any"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "distances", "type": "Any"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 735, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "path_coords", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "distances", "type": "Any"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "path_coords", "type": "numpy.ndarray"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "distances", "type": "numpy.ndarray"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 775, "col_offset": 8, "nodeName": "eorder", "type": "Any"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "rorder", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 792, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 793, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "eorder", "type": "Any"}, {"lineNumber": 795, "col_offset": 8, "nodeName": "rorder", "type": "Any"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 810, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 813, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "epoints", "type": "Any"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "elabels", "type": "Any"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 819, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "epoints", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "elabels", "type": "Any"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "eorder", "type": "Any"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "rorder", "type": "Any"}, {"lineNumber": 830, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 831, "col_offset": 8, "nodeName": "costs", "type": "numpy.ndarray"}, {"lineNumber": 834, "col_offset": 8, "nodeName": "segment_lengths", "type": "numpy.ndarray"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 842, "col_offset": 8, "nodeName": "costs", "type": "numpy.ndarray"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "segment_lengths", "type": "numpy.ndarray"}, {"lineNumber": 853, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "costs", "type": "numpy.ndarray"}, {"lineNumber": 858, "col_offset": 8, "nodeName": "segment_lengths", "type": "numpy.ndarray"}, {"lineNumber": 865, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 866, "col_offset": 8, "nodeName": "costs", "type": "numpy.ndarray"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "segment_lengths", "type": "numpy.ndarray"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "costs", "type": "numpy.ndarray"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "segment_lengths", "type": "numpy.ndarray"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "params", "type": "bytes"}, {"lineNumber": 892, "col_offset": 8, "nodeName": "value", "type": "bool"}, {"lineNumber": 893, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 894, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 896, "col_offset": 8, "nodeName": "object_set", "type": "Any"}, {"lineNumber": 896, "col_offset": 21, "nodeName": "object_set", "type": "Any"}, {"lineNumber": 898, "col_offset": 8, "nodeName": "worms", "type": "Any"}, {"lineNumber": 900, "col_offset": 8, "nodeName": "worm_ijv", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "pil_to_array", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "fd", "type": "int"}, {"lineNumber": 275, "col_offset": 17, "nodeName": "filename", "type": "Any"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "mkstemp", "type": "Callable"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "closed", "type": "bool"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "collect", "type": "Callable[..., int]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 18, "nodeName": "filename", "type": "Any"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 325, "col_offset": 30, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "overlap", "type": "Any"}, {"lineNumber": 331, "col_offset": 41, "nodeName": "OO_BOTH", "type": "str"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "overlap_objects", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "nonoverlapping_objects", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 25, "nodeName": "wants_training_set_weights", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 339, "col_offset": 25, "nodeName": "overlap", "type": "Any"}, {"lineNumber": 339, "col_offset": 41, "nodeName": "OO_WITH_OVERLAP", "type": "str"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "wants_training_set_weights", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "overlap", "type": "Any"}, {"lineNumber": 343, "col_offset": 41, "nodeName": "OO_WITHOUT_OVERLAP", "type": "str"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 354, "col_offset": 30, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 355, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "nonoverlapping_objects", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "overlap_objects", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 360, "col_offset": 28, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 361, "col_offset": 14, "nodeName": "Image", "type": "Type[cellprofiler.cpimage.Image]"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "image", "type": "Any"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "ImageSetList", "type": "Type[cellprofiler.cpimage.ImageSetList]"}, {"lineNumber": 363, "col_offset": 20, "nodeName": "get_image_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 364, "col_offset": 22, "nodeName": "IMAGE_NAME", "type": "str"}, {"lineNumber": 364, "col_offset": 34, "nodeName": "img", "type": "cellprofiler.cpimage.Image"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "fdopen", "type": "Callable[..., Any]"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "fd", "type": "int"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "write", "type": "Any"}, {"lineNumber": 366, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "flush", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "training_set_directory", "type": "Any"}, {"lineNumber": 370, "col_offset": 51, "nodeName": "cps", "type": "module"}, {"lineNumber": 372, "col_offset": 9, "nodeName": "value", "type": "Any"}, {"lineNumber": 372, "col_offset": 48, "nodeName": "split", "type": "Callable"}, {"lineNumber": 372, "col_offset": 62, "nodeName": "filename", "type": "Any"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "Workspace", "type": "Type[cellprofiler.workspace.Workspace]"}, {"lineNumber": 374, "col_offset": 34, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 374, "col_offset": 44, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 374, "col_offset": 52, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 376, "col_offset": 34, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 377, "col_offset": 15, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 377, "col_offset": 26, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "X", "type": "Type[Any]"}, {"lineNumber": 391, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "decompress", "type": "Callable[..., bytes]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 395, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 395, "col_offset": 73, "nodeName": "data", "type": "bytes"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "read_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 397, "col_offset": 36, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 398, "col_offset": 31, "nodeName": "min_worm_area", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 399, "col_offset": 31, "nodeName": "max_area", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 400, "col_offset": 25, "nodeName": "method", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 25, "nodeName": "method", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 402, "col_offset": 31, "nodeName": "cost_threshold", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "num_control_points", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 404, "col_offset": 39, "nodeName": "mean_angles", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 412, "col_offset": 39, "nodeName": "inv_angles_covariance_matrix", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 433, "col_offset": 25, "nodeName": "method", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 435, "col_offset": 31, "nodeName": "max_radius", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 436, "col_offset": 31, "nodeName": "max_skel_length", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "method", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 438, "col_offset": 25, "nodeName": "shape_cost_method", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "selection_method", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "overlap_leftover_method", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 444, "col_offset": 31, "nodeName": "min_path_length", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 445, "col_offset": 31, "nodeName": "max_path_length", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 446, "col_offset": 31, "nodeName": "median_worm_area", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 447, "col_offset": 31, "nodeName": "worm_radius", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "overlap_weight", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 449, "col_offset": 25, "nodeName": "leftover_weight", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 450, "col_offset": 25, "nodeName": "approx_max_search_n", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 451, "col_offset": 25, "nodeName": "method", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 452, "col_offset": 39, "nodeName": "radii_from_training", "type": "Any"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 458, "col_offset": 34, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 459, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 460, "col_offset": 11, "nodeName": "j", "type": "Any"}, {"lineNumber": 460, "col_offset": 14, "nodeName": "label", "type": "Any"}, {"lineNumber": 460, "col_offset": 21, "nodeName": "order", "type": "Any"}, {"lineNumber": 460, "col_offset": 28, "nodeName": "distance", "type": "Any"}, {"lineNumber": 460, "col_offset": 38, "nodeName": "count", "type": "Any"}, {"lineNumber": 460, "col_offset": 46, "nodeName": "trace_segments", "type": "Callable[[Any], Tuple[Any, Any, Any, Any, Any, Any]]"}, {"lineNumber": 460, "col_offset": 68, "nodeName": "image", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 461, "col_offset": 25, "nodeName": "count", "type": "Any"}, {"lineNumber": 462, "col_offset": 18, "nodeName": "i", "type": "Any"}, {"lineNumber": 462, "col_offset": 20, "nodeName": "j", "type": "Any"}, {"lineNumber": 462, "col_offset": 22, "nodeName": "label", "type": "Any"}, {"lineNumber": 462, "col_offset": 29, "nodeName": "order", "type": "Any"}, {"lineNumber": 462, "col_offset": 35, "nodeName": "distance", "type": "Any"}, {"lineNumber": 467, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 468, "col_offset": 34, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 470, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 470, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 470, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "expected_order", "type": "Any"}, {"lineNumber": 471, "col_offset": 32, "nodeName": "arange", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 472, "col_offset": 11, "nodeName": "j", "type": "Any"}, {"lineNumber": 472, "col_offset": 14, "nodeName": "label", "type": "Any"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "order", "type": "Any"}, {"lineNumber": 472, "col_offset": 28, "nodeName": "distance", "type": "Any"}, {"lineNumber": 472, "col_offset": 38, "nodeName": "count", "type": "Any"}, {"lineNumber": 472, "col_offset": 46, "nodeName": "trace_segments", "type": "Callable[[Any], Tuple[Any, Any, Any, Any, Any, Any]]"}, {"lineNumber": 472, "col_offset": 68, "nodeName": "image", "type": "Any"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 473, "col_offset": 25, "nodeName": "count", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 475, "col_offset": 18, "nodeName": "i", "type": "Any"}, {"lineNumber": 475, "col_offset": 20, "nodeName": "j", "type": "Any"}, {"lineNumber": 475, "col_offset": 22, "nodeName": "order", "type": "Any"}, {"lineNumber": 475, "col_offset": 28, "nodeName": "distance", "type": "Any"}, {"lineNumber": 478, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 478, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 478, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "result_order", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 485, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 486, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 486, "col_offset": 34, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 487, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "expected_order", "type": "Any"}, {"lineNumber": 494, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "result_order", "type": "Any"}, {"lineNumber": 498, "col_offset": 32, "nodeName": "order", "type": "Any"}, {"lineNumber": 504, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 505, "col_offset": 34, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 509, "col_offset": 21, "nodeName": "image", "type": "Any"}, {"lineNumber": 509, "col_offset": 35, "nodeName": "image", "type": "Any"}, {"lineNumber": 509, "col_offset": 49, "nodeName": "image", "type": "Any"}, {"lineNumber": 513, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 513, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 513, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 514, "col_offset": 10, "nodeName": "j", "type": "Any"}, {"lineNumber": 514, "col_offset": 14, "nodeName": "mgrid", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "ii", "type": "Any"}, {"lineNumber": 519, "col_offset": 11, "nodeName": "jj", "type": "Any"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 519, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 520, "col_offset": 13, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "expected_order", "type": "Any"}, {"lineNumber": 522, "col_offset": 32, "nodeName": "arange", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "j", "type": "Any"}, {"lineNumber": 523, "col_offset": 14, "nodeName": "label", "type": "Any"}, {"lineNumber": 523, "col_offset": 21, "nodeName": "order", "type": "Any"}, {"lineNumber": 523, "col_offset": 28, "nodeName": "distance", "type": "Any"}, {"lineNumber": 523, "col_offset": 38, "nodeName": "count", "type": "Any"}, {"lineNumber": 523, "col_offset": 46, "nodeName": "trace_segments", "type": "Callable[[Any], Tuple[Any, Any, Any, Any, Any, Any]]"}, {"lineNumber": 523, "col_offset": 68, "nodeName": "image", "type": "Any"}, {"lineNumber": 524, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 524, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 524, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "result_order", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 530, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 531, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 531, "col_offset": 34, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 534, "col_offset": 11, "nodeName": "j", "type": "Any"}, {"lineNumber": 534, "col_offset": 14, "nodeName": "label", "type": "Any"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "order", "type": "Any"}, {"lineNumber": 534, "col_offset": 28, "nodeName": "distance", "type": "Any"}, {"lineNumber": 534, "col_offset": 38, "nodeName": "count", "type": "Any"}, {"lineNumber": 534, "col_offset": 46, "nodeName": "trace_segments", "type": "Callable[[Any], Tuple[Any, Any, Any, Any, Any, Any]]"}, {"lineNumber": 534, "col_offset": 68, "nodeName": "image", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 535, "col_offset": 25, "nodeName": "count", "type": "Any"}, {"lineNumber": 536, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 536, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 536, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "result_order", "type": "Any"}, {"lineNumber": 544, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 545, "col_offset": 17, "nodeName": "make_incidence_matrix", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 550, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 551, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 551, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 552, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 552, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "L1", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "L2", "type": "Any"}, {"lineNumber": 555, "col_offset": 17, "nodeName": "make_incidence_matrix", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 555, "col_offset": 46, "nodeName": "L1", "type": "Any"}, {"lineNumber": 555, "col_offset": 53, "nodeName": "L2", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 560, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 561, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 561, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 562, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 562, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "L1", "type": "Any"}, {"lineNumber": 564, "col_offset": 12, "nodeName": "i2", "type": "int"}, {"lineNumber": 564, "col_offset": 15, "nodeName": "j2", "type": "int"}, {"lineNumber": 566, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 572, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 572, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 573, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 573, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "L1", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "L1", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "L1", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "L1", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "L1", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "L2", "type": "Any"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "L2", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "L2", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "L2", "type": "Any"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "L2", "type": "Any"}, {"lineNumber": 584, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 584, "col_offset": 35, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 595, "col_offset": 17, "nodeName": "make_incidence_matrix", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 595, "col_offset": 46, "nodeName": "L1", "type": "Any"}, {"lineNumber": 595, "col_offset": 53, "nodeName": "L2", "type": "Any"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 599, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 600, "col_offset": 21, "nodeName": "get_all_paths_recur", "type": "Callable[[Any, Any, Any, Any], List[Any]]"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 604, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 608, "col_offset": 21, "nodeName": "get_all_paths_recur", "type": "Callable[[Any, Any, Any, Any], List[Any]]"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "paths_list", "type": "List[Any]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 616, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 621, "col_offset": 21, "nodeName": "get_all_paths_recur", "type": "Callable[[Any, Any, Any, Any], List[Any]]"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 625, "col_offset": 22, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 627, "col_offset": 25, "nodeName": "sorted_list", "type": "Tuple[Tuple[Tuple[Any, ...], Tuple[Any, ...]], ...]"}, {"lineNumber": 627, "col_offset": 38, "nodeName": "expected", "type": "Tuple[Tuple[Tuple[int, int], Tuple[int]], Tuple[Tuple[int, int, int], Tuple[int, int]]]"}, {"lineNumber": 630, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 634, "col_offset": 21, "nodeName": "get_all_paths_recur", "type": "Callable[[Any, Any, Any, Any], List[Any]]"}, {"lineNumber": 637, "col_offset": 22, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 647, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 653, "col_offset": 20, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 660, "col_offset": 20, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 665, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 666, "col_offset": 25, "nodeName": "sorted_list", "type": "Tuple[Tuple[Tuple[Any, ...], Tuple[Any, ...]], ...]"}, {"lineNumber": 666, "col_offset": 38, "nodeName": "expected", "type": "Tuple[Any, ...]"}, {"lineNumber": 669, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 675, "col_offset": 20, "nodeName": "get_all_paths", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 679, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 685, "col_offset": 20, "nodeName": "get_all_paths", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 687, "col_offset": 15, "nodeName": "path_list", "type": "List[Any]"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 693, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 699, "col_offset": 20, "nodeName": "get_all_paths", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 701, "col_offset": 22, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 706, "col_offset": 25, "nodeName": "sorted_list", "type": "Tuple[Tuple[Tuple[Any, ...], Tuple[Any, ...]], ...]"}, {"lineNumber": 706, "col_offset": 38, "nodeName": "expected", "type": "Tuple[Tuple[Tuple[int], Tuple[()]], Tuple[Tuple[int, int], Tuple[int]], Tuple[Tuple[int], Tuple[()]]]"}, {"lineNumber": 709, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 716, "col_offset": 16, "nodeName": "Result", "type": "Type[Any]"}, {"lineNumber": 717, "col_offset": 20, "nodeName": "get_all_paths", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 717, "col_offset": 41, "nodeName": "graph", "type": "Any"}, {"lineNumber": 728, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 729, "col_offset": 22, "nodeName": "randint", "type": "Any"}, {"lineNumber": 730, "col_offset": 20, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 731, "col_offset": 17, "nodeName": "sample_control_points", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 731, "col_offset": 46, "nodeName": "path_coords", "type": "Any"}, {"lineNumber": 731, "col_offset": 59, "nodeName": "distances", "type": "Any"}, {"lineNumber": 732, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 735, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 739, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 740, "col_offset": 22, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 741, "col_offset": 20, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 742, "col_offset": 17, "nodeName": "sample_control_points", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 742, "col_offset": 46, "nodeName": "path_coords", "type": "Any"}, {"lineNumber": 742, "col_offset": 59, "nodeName": "distances", "type": "Any"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 748, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 749, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 750, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 751, "col_offset": 17, "nodeName": "sample_control_points", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 751, "col_offset": 46, "nodeName": "path_coords", "type": "numpy.ndarray"}, {"lineNumber": 751, "col_offset": 59, "nodeName": "distances", "type": "numpy.ndarray"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 756, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 757, "col_offset": 17, "nodeName": "make_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 760, "col_offset": 17, "nodeName": "worm_descriptor_building", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 760, "col_offset": 53, "nodeName": "params", "type": "Any"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 764, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 765, "col_offset": 17, "nodeName": "make_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 768, "col_offset": 17, "nodeName": "worm_descriptor_building", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 769, "col_offset": 44, "nodeName": "params", "type": "Any"}, {"lineNumber": 770, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 770, "col_offset": 37, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "ii", "type": "Any"}, {"lineNumber": 772, "col_offset": 11, "nodeName": "jj", "type": "Any"}, {"lineNumber": 772, "col_offset": 16, "nodeName": "mgrid", "type": "Any"}, {"lineNumber": 773, "col_offset": 19, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 773, "col_offset": 35, "nodeName": "expected", "type": "Any"}, {"lineNumber": 774, "col_offset": 19, "nodeName": "argwhere", "type": "Any"}, {"lineNumber": 774, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 775, "col_offset": 17, "nodeName": "lexsort", "type": "Any"}, {"lineNumber": 776, "col_offset": 17, "nodeName": "lexsort", "type": "Any"}, {"lineNumber": 777, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 783, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 784, "col_offset": 17, "nodeName": "make_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 787, "col_offset": 17, "nodeName": "worm_descriptor_building", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 788, "col_offset": 43, "nodeName": "params", "type": "Any"}, {"lineNumber": 789, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 789, "col_offset": 37, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "ii", "type": "Any"}, {"lineNumber": 791, "col_offset": 11, "nodeName": "jj", "type": "Any"}, {"lineNumber": 791, "col_offset": 16, "nodeName": "mgrid", "type": "Any"}, {"lineNumber": 792, "col_offset": 19, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 792, "col_offset": 35, "nodeName": "expected", "type": "Any"}, {"lineNumber": 793, "col_offset": 19, "nodeName": "argwhere", "type": "Any"}, {"lineNumber": 793, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 794, "col_offset": 17, "nodeName": "lexsort", "type": "Any"}, {"lineNumber": 795, "col_offset": 17, "nodeName": "lexsort", "type": "Any"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 798, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 803, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 804, "col_offset": 17, "nodeName": "make_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 807, "col_offset": 17, "nodeName": "worm_descriptor_building", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 809, "col_offset": 44, "nodeName": "params", "type": "Any"}, {"lineNumber": 810, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 810, "col_offset": 37, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "ii", "type": "Any"}, {"lineNumber": 812, "col_offset": 11, "nodeName": "jj", "type": "Any"}, {"lineNumber": 812, "col_offset": 16, "nodeName": "mgrid", "type": "Any"}, {"lineNumber": 813, "col_offset": 19, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 813, "col_offset": 35, "nodeName": "expected", "type": "Any"}, {"lineNumber": 814, "col_offset": 18, "nodeName": "argwhere", "type": "Any"}, {"lineNumber": 814, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 815, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 815, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 817, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 817, "col_offset": 37, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 818, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 819, "col_offset": 19, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 819, "col_offset": 35, "nodeName": "expected", "type": "Any"}, {"lineNumber": 820, "col_offset": 18, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 821, "col_offset": 18, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 823, "col_offset": 17, "nodeName": "lexsort", "type": "Any"}, {"lineNumber": 824, "col_offset": 17, "nodeName": "lexsort", "type": "Any"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 827, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 830, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 831, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 832, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 834, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 835, "col_offset": 32, "nodeName": "fast_selection", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 836, "col_offset": 12, "nodeName": "costs", "type": "numpy.ndarray"}, {"lineNumber": 836, "col_offset": 19, "nodeName": "path_segment_matrix", "type": "numpy.ndarray"}, {"lineNumber": 836, "col_offset": 40, "nodeName": "segment_lengths", "type": "numpy.ndarray"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 838, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 838, "col_offset": 25, "nodeName": "best_cost", "type": "Any"}, {"lineNumber": 841, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 842, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 843, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 846, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 847, "col_offset": 32, "nodeName": "fast_selection", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 848, "col_offset": 12, "nodeName": "costs", "type": "numpy.ndarray"}, {"lineNumber": 848, "col_offset": 19, "nodeName": "path_segment_matrix", "type": "numpy.ndarray"}, {"lineNumber": 848, "col_offset": 40, "nodeName": "segment_lengths", "type": "numpy.ndarray"}, {"lineNumber": 849, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 850, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 850, "col_offset": 25, "nodeName": "best_cost", "type": "Any"}, {"lineNumber": 853, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 854, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 855, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 858, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 859, "col_offset": 32, "nodeName": "fast_selection", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 860, "col_offset": 12, "nodeName": "costs", "type": "numpy.ndarray"}, {"lineNumber": 860, "col_offset": 19, "nodeName": "path_segment_matrix", "type": "numpy.ndarray"}, {"lineNumber": 860, "col_offset": 40, "nodeName": "segment_lengths", "type": "numpy.ndarray"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 862, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 862, "col_offset": 25, "nodeName": "best_cost", "type": "Any"}, {"lineNumber": 865, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 866, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 867, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 870, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 871, "col_offset": 32, "nodeName": "fast_selection", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 872, "col_offset": 12, "nodeName": "costs", "type": "numpy.ndarray"}, {"lineNumber": 872, "col_offset": 19, "nodeName": "path_segment_matrix", "type": "numpy.ndarray"}, {"lineNumber": 872, "col_offset": 40, "nodeName": "segment_lengths", "type": "numpy.ndarray"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 874, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 874, "col_offset": 25, "nodeName": "best_cost", "type": "Any"}, {"lineNumber": 877, "col_offset": 17, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 878, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 879, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 882, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 883, "col_offset": 32, "nodeName": "fast_selection", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 884, "col_offset": 12, "nodeName": "costs", "type": "numpy.ndarray"}, {"lineNumber": 884, "col_offset": 19, "nodeName": "path_segment_matrix", "type": "numpy.ndarray"}, {"lineNumber": 884, "col_offset": 40, "nodeName": "segment_lengths", "type": "numpy.ndarray"}, {"lineNumber": 885, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 886, "col_offset": 25, "nodeName": "best_cost", "type": "Any"}, {"lineNumber": 889, "col_offset": 17, "nodeName": "decompress", "type": "Callable[..., bytes]"}, {"lineNumber": 890, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 890, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 890, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 890, "col_offset": 48, "nodeName": "A02_image", "type": "Any"}, {"lineNumber": 890, "col_offset": 59, "nodeName": "params", "type": "bytes"}, {"lineNumber": 891, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 892, "col_offset": 8, "nodeName": "wants_training_set_weights", "type": "Any"}, {"lineNumber": 893, "col_offset": 8, "nodeName": "override_leftover_weight", "type": "Any"}, {"lineNumber": 894, "col_offset": 8, "nodeName": "override_overlap_weight", "type": "Any"}, {"lineNumber": 895, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 895, "col_offset": 19, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 896, "col_offset": 21, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 898, "col_offset": 16, "nodeName": "get_objects", "type": "Any"}, {"lineNumber": 898, "col_offset": 39, "nodeName": "OVERLAP_OBJECTS_NAME", "type": "str"}, {"lineNumber": 899, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 900, "col_offset": 19, "nodeName": "get_ijv", "type": "Any"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "open", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 275, "col_offset": 17, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "close", "type": "Callable[[int], None]"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "fd", "type": "int"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "gc", "type": "module"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 282, "col_offset": 18, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 326, "col_offset": 40, "nodeName": "data", "type": "str"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 327, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 329, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 329, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 329, "col_offset": 43, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 331, "col_offset": 41, "nodeName": "U", "type": "module"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 334, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "override_overlap_weight", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "override_leftover_weight", "type": "Any"}, {"lineNumber": 337, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 338, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 338, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 338, "col_offset": 43, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 339, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 339, "col_offset": 41, "nodeName": "U", "type": "module"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 342, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 342, "col_offset": 43, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 343, "col_offset": 41, "nodeName": "U", "type": "module"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 355, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 361, "col_offset": 14, "nodeName": "cpi", "type": "module"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "cpi", "type": "module"}, {"lineNumber": 363, "col_offset": 20, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "fd", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "fd", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "fd", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 372, "col_offset": 9, "nodeName": "training_set_file_name", "type": "Any"}, {"lineNumber": 372, "col_offset": 48, "nodeName": "path", "type": "module"}, {"lineNumber": 372, "col_offset": 62, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "cpw", "type": "module"}, {"lineNumber": 375, "col_offset": 34, "nodeName": "ObjectSet", "type": "Type[cellprofiler.objects.ObjectSet]"}, {"lineNumber": 375, "col_offset": 51, "nodeName": "Measurements", "type": "Type[cellprofiler.measurements.Measurements]"}, {"lineNumber": 386, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "zlib", "type": "module"}, {"lineNumber": 394, "col_offset": 31, "nodeName": "b64decode", "type": "Callable[..., bytes]"}, {"lineNumber": 394, "col_offset": 48, "nodeName": "PARAMS", "type": "str"}, {"lineNumber": 395, "col_offset": 28, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 395, "col_offset": 48, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 395, "col_offset": 66, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 396, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 396, "col_offset": 35, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 396, "col_offset": 43, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 398, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 399, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 400, "col_offset": 25, "nodeName": "find_path", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 401, "col_offset": 25, "nodeName": "filter", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 402, "col_offset": 31, "nodeName": "filter", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "filter", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 404, "col_offset": 39, "nodeName": "filter", "type": "Any"}, {"lineNumber": 404, "col_offset": 66, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 412, "col_offset": 39, "nodeName": "filter", "type": "Any"}, {"lineNumber": 412, "col_offset": 83, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 433, "col_offset": 25, "nodeName": "cluster_graph_building", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 435, "col_offset": 31, "nodeName": "cluster_graph_building", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 436, "col_offset": 31, "nodeName": "cluster_graph_building", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "cluster_paths_finding", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 438, "col_offset": 25, "nodeName": "cluster_paths_selection", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "cluster_paths_selection", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "cluster_paths_selection", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 444, "col_offset": 31, "nodeName": "cluster_paths_selection", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 445, "col_offset": 31, "nodeName": "cluster_paths_selection", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 446, "col_offset": 31, "nodeName": "cluster_paths_selection", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 447, "col_offset": 31, "nodeName": "cluster_paths_selection", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "cluster_paths_selection", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 449, "col_offset": 25, "nodeName": "cluster_paths_selection", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 450, "col_offset": 25, "nodeName": "cluster_paths_selection", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 451, "col_offset": 25, "nodeName": "worm_descriptor_building", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 452, "col_offset": 39, "nodeName": "worm_descriptor_building", "type": "Any"}, {"lineNumber": 452, "col_offset": 92, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 459, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 460, "col_offset": 46, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 463, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 467, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 470, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 470, "col_offset": 34, "nodeName": "image", "type": "Any"}, {"lineNumber": 471, "col_offset": 23, "nodeName": "image", "type": "Any"}, {"lineNumber": 471, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 471, "col_offset": 42, "nodeName": "sum", "type": "Any"}, {"lineNumber": 471, "col_offset": 49, "nodeName": "image", "type": "Any"}, {"lineNumber": 472, "col_offset": 46, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 478, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 478, "col_offset": 32, "nodeName": "image", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 480, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 481, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 485, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 486, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 489, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 489, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 489, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "expected_order", "type": "Any"}, {"lineNumber": 490, "col_offset": 36, "nodeName": "arange", "type": "Any"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "j", "type": "Any"}, {"lineNumber": 491, "col_offset": 18, "nodeName": "label", "type": "Any"}, {"lineNumber": 491, "col_offset": 25, "nodeName": "order", "type": "Any"}, {"lineNumber": 491, "col_offset": 32, "nodeName": "distance", "type": "Any"}, {"lineNumber": 491, "col_offset": 42, "nodeName": "count", "type": "Any"}, {"lineNumber": 491, "col_offset": 50, "nodeName": "trace_segments", "type": "Callable[[Any], Tuple[Any, Any, Any, Any, Any, Any]]"}, {"lineNumber": 491, "col_offset": 72, "nodeName": "image", "type": "Any"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 492, "col_offset": 29, "nodeName": "count", "type": "Any"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 494, "col_offset": 22, "nodeName": "i", "type": "Any"}, {"lineNumber": 494, "col_offset": 24, "nodeName": "j", "type": "Any"}, {"lineNumber": 494, "col_offset": 26, "nodeName": "order", "type": "Any"}, {"lineNumber": 494, "col_offset": 32, "nodeName": "distance", "type": "Any"}, {"lineNumber": 497, "col_offset": 27, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 497, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 497, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "result_order", "type": "Any"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 504, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 513, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 513, "col_offset": 34, "nodeName": "image", "type": "Any"}, {"lineNumber": 514, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 520, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 522, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 522, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 522, "col_offset": 46, "nodeName": "ii", "type": "Any"}, {"lineNumber": 523, "col_offset": 46, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 524, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 524, "col_offset": 32, "nodeName": "image", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 526, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 530, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 531, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 534, "col_offset": 46, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 536, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 536, "col_offset": 32, "nodeName": "image", "type": "Any"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 544, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 545, "col_offset": 17, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 545, "col_offset": 46, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 545, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 546, "col_offset": 46, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 546, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 547, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 547, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 550, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 551, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 552, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 555, "col_offset": 17, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 556, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 556, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 557, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 560, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 561, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 562, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 565, "col_offset": 12, "nodeName": "L2", "type": "Any"}, {"lineNumber": 566, "col_offset": 21, "nodeName": "make_incidence_matrix", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 566, "col_offset": 50, "nodeName": "L1", "type": "Any"}, {"lineNumber": 566, "col_offset": 57, "nodeName": "L2", "type": "Any"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 568, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 572, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 573, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 584, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 595, "col_offset": 17, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 596, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 599, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 600, "col_offset": 21, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 601, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 601, "col_offset": 29, "nodeName": "paths_list", "type": "List[Any]"}, {"lineNumber": 604, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 608, "col_offset": 21, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 609, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 609, "col_offset": 29, "nodeName": "paths_list", "type": "List[Any]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 611, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 611, "col_offset": 35, "nodeName": "path", "type": "Any"}, {"lineNumber": 611, "col_offset": 41, "nodeName": "Path", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 612, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 612, "col_offset": 31, "nodeName": "segments", "type": "Any"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 613, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 613, "col_offset": 31, "nodeName": "branch_areas", "type": "Any"}, {"lineNumber": 616, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 621, "col_offset": 21, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 623, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 623, "col_offset": 29, "nodeName": "paths_list", "type": "List[Any]"}, {"lineNumber": 625, "col_offset": 28, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 630, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 634, "col_offset": 21, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 637, "col_offset": 28, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 665, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 665, "col_offset": 32, "nodeName": "expected", "type": "Union[List[Any], List[Tuple[Tuple[int, int], Tuple[int]]], List[nothing]]"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 669, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 672, "col_offset": 16, "nodeName": "branch_areas", "type": "List[nothing]"}, {"lineNumber": 673, "col_offset": 16, "nodeName": "segments", "type": "List[nothing]"}, {"lineNumber": 674, "col_offset": 16, "nodeName": "incidence_matrix", "type": "Any"}, {"lineNumber": 675, "col_offset": 20, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 675, "col_offset": 41, "nodeName": "Result", "type": "Type[Any]"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 676, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 676, "col_offset": 29, "nodeName": "path_list", "type": "List[Any]"}, {"lineNumber": 679, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "branch_areas", "type": "List[nothing]"}, {"lineNumber": 683, "col_offset": 16, "nodeName": "segments", "type": "List[int]"}, {"lineNumber": 684, "col_offset": 16, "nodeName": "incidence_matrix", "type": "Any"}, {"lineNumber": 685, "col_offset": 20, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 685, "col_offset": 41, "nodeName": "Result", "type": "Type[Any]"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 686, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 686, "col_offset": 29, "nodeName": "path_list", "type": "List[Any]"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 688, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 688, "col_offset": 35, "nodeName": "path", "type": "Any"}, {"lineNumber": 688, "col_offset": 41, "nodeName": "Path", "type": "Any"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 689, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 689, "col_offset": 31, "nodeName": "segments", "type": "Any"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 690, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 690, "col_offset": 29, "nodeName": "branch_areas", "type": "Any"}, {"lineNumber": 693, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "branch_areas", "type": "List[int]"}, {"lineNumber": 697, "col_offset": 16, "nodeName": "segments", "type": "List[int]"}, {"lineNumber": 698, "col_offset": 16, "nodeName": "incidence_matrix", "type": "Any"}, {"lineNumber": 699, "col_offset": 20, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 699, "col_offset": 41, "nodeName": "Result", "type": "Type[Any]"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 700, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 700, "col_offset": 29, "nodeName": "path_list", "type": "List[Any]"}, {"lineNumber": 701, "col_offset": 28, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 709, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 713, "col_offset": 16, "nodeName": "branch_areas", "type": "List[int]"}, {"lineNumber": 714, "col_offset": 16, "nodeName": "segments", "type": "List[int]"}, {"lineNumber": 715, "col_offset": 16, "nodeName": "incidence_matrix", "type": "Any"}, {"lineNumber": 717, "col_offset": 20, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 719, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 728, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 729, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 730, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 731, "col_offset": 17, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 732, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 732, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 732, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 733, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 733, "col_offset": 48, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 734, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 734, "col_offset": 49, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 736, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 739, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 741, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 741, "col_offset": 28, "nodeName": "arange", "type": "Any"}, {"lineNumber": 742, "col_offset": 17, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 743, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 744, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 748, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 749, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 750, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 751, "col_offset": 17, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 752, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 752, "col_offset": 52, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 753, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 753, "col_offset": 52, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 756, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 757, "col_offset": 17, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 758, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 760, "col_offset": 17, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 761, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 761, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 764, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 765, "col_offset": 17, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 766, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 768, "col_offset": 17, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 770, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 772, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 774, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 775, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 776, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 777, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 777, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 778, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 778, "col_offset": 29, "nodeName": "expected", "type": "Any"}, {"lineNumber": 778, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 778, "col_offset": 44, "nodeName": "result", "type": "Any"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 779, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 783, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 784, "col_offset": 17, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 785, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 787, "col_offset": 17, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 789, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 791, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 793, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 794, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 795, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 796, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 797, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 797, "col_offset": 29, "nodeName": "expected", "type": "Any"}, {"lineNumber": 797, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 797, "col_offset": 44, "nodeName": "result", "type": "Any"}, {"lineNumber": 798, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 798, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 803, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 804, "col_offset": 17, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 805, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 807, "col_offset": 17, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 810, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 812, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 814, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 815, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 815, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 815, "col_offset": 30, "nodeName": "epoints", "type": "Any"}, {"lineNumber": 817, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 820, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 820, "col_offset": 29, "nodeName": "epoints", "type": "Any"}, {"lineNumber": 821, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 821, "col_offset": 29, "nodeName": "elabels", "type": "Any"}, {"lineNumber": 823, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 824, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 825, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 825, "col_offset": 29, "nodeName": "epoints", "type": "Any"}, {"lineNumber": 825, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 825, "col_offset": 43, "nodeName": "result", "type": "Any"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 826, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 827, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 827, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 830, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 831, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 832, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 834, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 835, "col_offset": 32, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 837, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 837, "col_offset": 31, "nodeName": "best_paths", "type": "Any"}, {"lineNumber": 838, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 841, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 842, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 843, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 846, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 847, "col_offset": 32, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 849, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 849, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 849, "col_offset": 31, "nodeName": "best_paths", "type": "Any"}, {"lineNumber": 850, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 853, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 854, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 855, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 858, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 859, "col_offset": 32, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 861, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 861, "col_offset": 31, "nodeName": "best_paths", "type": "Any"}, {"lineNumber": 862, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 865, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 866, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 867, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 870, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 871, "col_offset": 32, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 873, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 873, "col_offset": 31, "nodeName": "best_paths", "type": "Any"}, {"lineNumber": 874, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 877, "col_offset": 17, "nodeName": "U", "type": "module"}, {"lineNumber": 878, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 879, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 882, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 883, "col_offset": 32, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 885, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 885, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 885, "col_offset": 31, "nodeName": "best_paths", "type": "Any"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 889, "col_offset": 17, "nodeName": "zlib", "type": "module"}, {"lineNumber": 889, "col_offset": 33, "nodeName": "b64decode", "type": "Callable[..., bytes]"}, {"lineNumber": 889, "col_offset": 50, "nodeName": "PARAMS", "type": "str"}, {"lineNumber": 890, "col_offset": 28, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 891, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 891, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 891, "col_offset": 35, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 891, "col_offset": 43, "nodeName": "UntangleWorms", "type": "Type[cellprofiler.modules.untangleworms.UntangleWorms]"}, {"lineNumber": 892, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 893, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 894, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 895, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 897, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 897, "col_offset": 35, "nodeName": "object_set", "type": "Any"}, {"lineNumber": 897, "col_offset": 47, "nodeName": "ObjectSet", "type": "Type[cellprofiler.objects.ObjectSet]"}, {"lineNumber": 898, "col_offset": 16, "nodeName": "object_set", "type": "Any"}, {"lineNumber": 899, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 899, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 899, "col_offset": 35, "nodeName": "worms", "type": "Any"}, {"lineNumber": 899, "col_offset": 42, "nodeName": "Objects", "type": "Type[cellprofiler.objects.Objects]"}, {"lineNumber": 900, "col_offset": 19, "nodeName": "worms", "type": "Any"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 901, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "Image", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 324, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 324, "col_offset": 47, "nodeName": "LoadExceptionEvent", "type": "Any"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 327, "col_offset": 29, "nodeName": "modules", "type": "Any"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 329, "col_offset": 43, "nodeName": "U", "type": "module"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 337, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 338, "col_offset": 43, "nodeName": "U", "type": "module"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 342, "col_offset": 43, "nodeName": "U", "type": "module"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 353, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 353, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 372, "col_offset": 9, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 372, "col_offset": 48, "nodeName": "os", "type": "module"}, {"lineNumber": 375, "col_offset": 34, "nodeName": "cpo", "type": "module"}, {"lineNumber": 375, "col_offset": 51, "nodeName": "cpmeas", "type": "module"}, {"lineNumber": 386, "col_offset": 27, "nodeName": "keys", "type": "Any"}, {"lineNumber": 387, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 394, "col_offset": 31, "nodeName": "base64", "type": "module"}, {"lineNumber": 395, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 396, "col_offset": 43, "nodeName": "U", "type": "module"}, {"lineNumber": 400, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 401, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 402, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 404, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 404, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 412, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 412, "col_offset": 83, "nodeName": "np", "type": "module"}, {"lineNumber": 433, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 435, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 436, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 438, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 444, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 445, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 446, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 447, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 449, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 450, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 451, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 452, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 452, "col_offset": 92, "nodeName": "np", "type": "module"}, {"lineNumber": 463, "col_offset": 12, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 463, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 463, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 471, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 474, "col_offset": 31, "nodeName": "label", "type": "Any"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 476, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 476, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 476, "col_offset": 37, "nodeName": "sum", "type": "Any"}, {"lineNumber": 476, "col_offset": 44, "nodeName": "image", "type": "Any"}, {"lineNumber": 479, "col_offset": 21, "nodeName": "i", "type": "Any"}, {"lineNumber": 479, "col_offset": 23, "nodeName": "j", "type": "Any"}, {"lineNumber": 480, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 480, "col_offset": 31, "nodeName": "image", "type": "Any"}, {"lineNumber": 481, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 481, "col_offset": 31, "nodeName": "expected_order", "type": "Any"}, {"lineNumber": 481, "col_offset": 49, "nodeName": "result_order", "type": "Any"}, {"lineNumber": 489, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 489, "col_offset": 38, "nodeName": "image", "type": "Any"}, {"lineNumber": 490, "col_offset": 27, "nodeName": "image", "type": "Any"}, {"lineNumber": 490, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 490, "col_offset": 46, "nodeName": "sum", "type": "Any"}, {"lineNumber": 490, "col_offset": 53, "nodeName": "image", "type": "Any"}, {"lineNumber": 491, "col_offset": 50, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 493, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 495, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 497, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 36, "nodeName": "image", "type": "Any"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 499, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 515, "col_offset": 22, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 516, "col_offset": 19, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 517, "col_offset": 23, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 518, "col_offset": 19, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 520, "col_offset": 24, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 520, "col_offset": 74, "nodeName": "slices", "type": "Tuple[Tuple[int, slice], Tuple[slice, int], Tuple[int, slice], Tuple[slice, int]]"}, {"lineNumber": 521, "col_offset": 24, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 521, "col_offset": 74, "nodeName": "slices", "type": "Tuple[Tuple[int, slice], Tuple[slice, int], Tuple[int, slice], Tuple[slice, int]]"}, {"lineNumber": 522, "col_offset": 23, "nodeName": "ii", "type": "Any"}, {"lineNumber": 522, "col_offset": 26, "nodeName": "jj", "type": "Any"}, {"lineNumber": 525, "col_offset": 21, "nodeName": "i", "type": "Any"}, {"lineNumber": 525, "col_offset": 23, "nodeName": "j", "type": "Any"}, {"lineNumber": 526, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 526, "col_offset": 31, "nodeName": "expected_order", "type": "Any"}, {"lineNumber": 526, "col_offset": 49, "nodeName": "result_order", "type": "Any"}, {"lineNumber": 537, "col_offset": 21, "nodeName": "i", "type": "Any"}, {"lineNumber": 537, "col_offset": 23, "nodeName": "j", "type": "Any"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 539, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 545, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 546, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 547, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 556, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 557, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 557, "col_offset": 32, "nodeName": "result", "type": "Any"}, {"lineNumber": 566, "col_offset": 21, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 567, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 567, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 568, "col_offset": 12, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 568, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 568, "col_offset": 35, "nodeName": "result", "type": "Any"}, {"lineNumber": 596, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 596, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 596, "col_offset": 41, "nodeName": "expected", "type": "Any"}, {"lineNumber": 611, "col_offset": 41, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 612, "col_offset": 31, "nodeName": "path", "type": "Any"}, {"lineNumber": 613, "col_offset": 31, "nodeName": "path", "type": "Any"}, {"lineNumber": 636, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 636, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 649, "col_offset": 28, "nodeName": "segment", "type": "int"}, {"lineNumber": 656, "col_offset": 29, "nodeName": "ps", "type": "Tuple[int, int, int]"}, {"lineNumber": 656, "col_offset": 35, "nodeName": "permutations", "type": "Tuple[Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int]]"}, {"lineNumber": 664, "col_offset": 29, "nodeName": "ps", "type": "Tuple[int, int, int]"}, {"lineNumber": 664, "col_offset": 35, "nodeName": "permutations", "type": "Tuple[Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int]]"}, {"lineNumber": 672, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 673, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 674, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 674, "col_offset": 40, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 674, "col_offset": 56, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 683, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 684, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 684, "col_offset": 40, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 684, "col_offset": 56, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 688, "col_offset": 41, "nodeName": "module", "type": "cellprofiler.modules.untangleworms.UntangleWorms"}, {"lineNumber": 689, "col_offset": 31, "nodeName": "path", "type": "Any"}, {"lineNumber": 690, "col_offset": 29, "nodeName": "path", "type": "Any"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 697, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 698, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 698, "col_offset": 40, "nodeName": "ones", "type": "Any"}, {"lineNumber": 698, "col_offset": 55, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 713, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 714, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 715, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 719, "col_offset": 12, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 719, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 719, "col_offset": 33, "nodeName": "segments", "type": "Any"}, {"lineNumber": 720, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 720, "col_offset": 19, "nodeName": "segments", "type": "Any"}, {"lineNumber": 721, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 722, "col_offset": 47, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 723, "col_offset": 59, "nodeName": "branch_areas", "type": "Any"}, {"lineNumber": 729, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 733, "col_offset": 31, "nodeName": "path_coords", "type": "Any"}, {"lineNumber": 733, "col_offset": 54, "nodeName": "result", "type": "Any"}, {"lineNumber": 734, "col_offset": 31, "nodeName": "path_coords", "type": "Any"}, {"lineNumber": 734, "col_offset": 55, "nodeName": "result", "type": "Any"}, {"lineNumber": 736, "col_offset": 12, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 736, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 736, "col_offset": 54, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 740, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 741, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 743, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 744, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 752, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 753, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 769, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 775, "col_offset": 29, "nodeName": "expected", "type": "Any"}, {"lineNumber": 775, "col_offset": 45, "nodeName": "expected", "type": "Any"}, {"lineNumber": 776, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 776, "col_offset": 43, "nodeName": "result", "type": "Any"}, {"lineNumber": 777, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 779, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 788, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 794, "col_offset": 29, "nodeName": "expected", "type": "Any"}, {"lineNumber": 794, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 795, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 795, "col_offset": 42, "nodeName": "result", "type": "Any"}, {"lineNumber": 796, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 798, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 808, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 809, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 820, "col_offset": 38, "nodeName": "argwhere", "type": "Any"}, {"lineNumber": 820, "col_offset": 50, "nodeName": "expected", "type": "Any"}, {"lineNumber": 823, "col_offset": 29, "nodeName": "epoints", "type": "Any"}, {"lineNumber": 823, "col_offset": 43, "nodeName": "epoints", "type": "Any"}, {"lineNumber": 824, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 824, "col_offset": 42, "nodeName": "result", "type": "Any"}, {"lineNumber": 826, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 827, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 889, "col_offset": 33, "nodeName": "base64", "type": "module"}, {"lineNumber": 891, "col_offset": 43, "nodeName": "U", "type": "module"}, {"lineNumber": 897, "col_offset": 47, "nodeName": "cpo", "type": "module"}, {"lineNumber": 899, "col_offset": 42, "nodeName": "cpo", "type": "module"}, {"lineNumber": 901, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 901, "col_offset": 32, "nodeName": "worm_ijv", "type": "Any"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "PIL", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "decompress", "type": "Callable[..., bytes]"}, {"lineNumber": 324, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 327, "col_offset": 29, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 353, "col_offset": 48, "nodeName": "RunExceptionEvent", "type": "Any"}, {"lineNumber": 353, "col_offset": 71, "nodeName": "LoadExceptionEvent", "type": "Any"}, {"lineNumber": 386, "col_offset": 27, "nodeName": "d", "type": "Any"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "d", "type": "Any"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 388, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 388, "col_offset": 41, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 390, "col_offset": 20, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 390, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 390, "col_offset": 34, "nodeName": "key", "type": "Any"}, {"lineNumber": 390, "col_offset": 39, "nodeName": "value", "type": "Any"}, {"lineNumber": 476, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 490, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 493, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 493, "col_offset": 35, "nodeName": "label", "type": "Any"}, {"lineNumber": 495, "col_offset": 16, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 495, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 495, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 495, "col_offset": 41, "nodeName": "sum", "type": "Any"}, {"lineNumber": 495, "col_offset": 48, "nodeName": "image", "type": "Any"}, {"lineNumber": 498, "col_offset": 25, "nodeName": "i", "type": "Any"}, {"lineNumber": 498, "col_offset": 27, "nodeName": "j", "type": "Any"}, {"lineNumber": 499, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 499, "col_offset": 35, "nodeName": "image", "type": "Any"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 500, "col_offset": 35, "nodeName": "expected_order", "type": "Any"}, {"lineNumber": 500, "col_offset": 53, "nodeName": "result_order", "type": "Any"}, {"lineNumber": 514, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 514, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 520, "col_offset": 56, "nodeName": "islice", "type": "Union[int, slice]"}, {"lineNumber": 520, "col_offset": 64, "nodeName": "jslice", "type": "Union[slice, int]"}, {"lineNumber": 521, "col_offset": 56, "nodeName": "islice", "type": "Union[int, slice]"}, {"lineNumber": 521, "col_offset": 64, "nodeName": "jslice", "type": "Union[slice, int]"}, {"lineNumber": 539, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "i2", "type": "int"}, {"lineNumber": 565, "col_offset": 18, "nodeName": "j2", "type": "int"}, {"lineNumber": 567, "col_offset": 35, "nodeName": "result", "type": "Any"}, {"lineNumber": 568, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 626, "col_offset": 40, "nodeName": "path", "type": "Any"}, {"lineNumber": 626, "col_offset": 48, "nodeName": "paths_list", "type": "List[Any]"}, {"lineNumber": 634, "col_offset": 49, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 635, "col_offset": 49, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 636, "col_offset": 66, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 638, "col_offset": 40, "nodeName": "path", "type": "Any"}, {"lineNumber": 638, "col_offset": 48, "nodeName": "paths_list", "type": "List[Any]"}, {"lineNumber": 648, "col_offset": 29, "nodeName": "branch_area", "type": "int"}, {"lineNumber": 649, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 674, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 684, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 698, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 702, "col_offset": 40, "nodeName": "path", "type": "Any"}, {"lineNumber": 702, "col_offset": 48, "nodeName": "path_list", "type": "List[Any]"}, {"lineNumber": 715, "col_offset": 40, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 719, "col_offset": 33, "nodeName": "path", "type": "Any"}, {"lineNumber": 719, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 719, "col_offset": 53, "nodeName": "branch_areas", "type": "Any"}, {"lineNumber": 720, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 721, "col_offset": 16, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 723, "col_offset": 20, "nodeName": "segments", "type": "Any"}, {"lineNumber": 723, "col_offset": 40, "nodeName": "segments", "type": "Any"}, {"lineNumber": 723, "col_offset": 59, "nodeName": "path", "type": "Any"}, {"lineNumber": 724, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 725, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 736, "col_offset": 35, "nodeName": "path_coords", "type": "Any"}, {"lineNumber": 736, "col_offset": 60, "nodeName": "result", "type": "Any"}, {"lineNumber": 740, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 743, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 744, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 758, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 759, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 766, "col_offset": 44, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 767, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 769, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 771, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 771, "col_offset": 34, "nodeName": "arange", "type": "Any"}, {"lineNumber": 773, "col_offset": 45, "nodeName": "ii", "type": "Any"}, {"lineNumber": 773, "col_offset": 48, "nodeName": "ii", "type": "Any"}, {"lineNumber": 773, "col_offset": 51, "nodeName": "jj", "type": "Any"}, {"lineNumber": 773, "col_offset": 54, "nodeName": "jj", "type": "Any"}, {"lineNumber": 777, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 779, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 779, "col_offset": 53, "nodeName": "expected", "type": "Any"}, {"lineNumber": 785, "col_offset": 44, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 786, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 788, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 790, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 790, "col_offset": 33, "nodeName": "arange", "type": "Any"}, {"lineNumber": 792, "col_offset": 45, "nodeName": "ii", "type": "Any"}, {"lineNumber": 792, "col_offset": 48, "nodeName": "ii", "type": "Any"}, {"lineNumber": 792, "col_offset": 51, "nodeName": "jj", "type": "Any"}, {"lineNumber": 792, "col_offset": 54, "nodeName": "jj", "type": "Any"}, {"lineNumber": 796, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 798, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 798, "col_offset": 52, "nodeName": "expected", "type": "Any"}, {"lineNumber": 805, "col_offset": 44, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 806, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 808, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 809, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 811, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 811, "col_offset": 34, "nodeName": "arange", "type": "Any"}, {"lineNumber": 813, "col_offset": 45, "nodeName": "ii", "type": "Any"}, {"lineNumber": 813, "col_offset": 48, "nodeName": "ii", "type": "Any"}, {"lineNumber": 813, "col_offset": 51, "nodeName": "jj", "type": "Any"}, {"lineNumber": 813, "col_offset": 54, "nodeName": "jj", "type": "Any"}, {"lineNumber": 818, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 818, "col_offset": 34, "nodeName": "arange", "type": "Any"}, {"lineNumber": 819, "col_offset": 45, "nodeName": "ii", "type": "Any"}, {"lineNumber": 819, "col_offset": 48, "nodeName": "ii", "type": "Any"}, {"lineNumber": 819, "col_offset": 51, "nodeName": "jj", "type": "Any"}, {"lineNumber": 819, "col_offset": 54, "nodeName": "jj", "type": "Any"}, {"lineNumber": 820, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 821, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 821, "col_offset": 64, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 826, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 826, "col_offset": 51, "nodeName": "elabels", "type": "Any"}, {"lineNumber": 827, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 827, "col_offset": 52, "nodeName": "epoints", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "zlib", "type": "module"}, {"lineNumber": 166, "col_offset": 42, "nodeName": "b64decode", "type": "Callable[..., bytes]"}, {"lineNumber": 166, "col_offset": 59, "nodeName": "A02_binary", "type": "str"}, {"lineNumber": 353, "col_offset": 48, "nodeName": "cpp", "type": "module"}, {"lineNumber": 353, "col_offset": 71, "nodeName": "cpp", "type": "module"}, {"lineNumber": 387, "col_offset": 30, "nodeName": "key", "type": "Any"}, {"lineNumber": 389, "col_offset": 32, "nodeName": "X", "type": "Type[Any]"}, {"lineNumber": 389, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 480, "col_offset": 37, "nodeName": "i", "type": "Any"}, {"lineNumber": 480, "col_offset": 39, "nodeName": "j", "type": "Any"}, {"lineNumber": 488, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 495, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 514, "col_offset": 25, "nodeName": "image", "type": "Any"}, {"lineNumber": 514, "col_offset": 43, "nodeName": "image", "type": "Any"}, {"lineNumber": 520, "col_offset": 24, "nodeName": "i", "type": "Any"}, {"lineNumber": 521, "col_offset": 24, "nodeName": "j", "type": "Any"}, {"lineNumber": 539, "col_offset": 35, "nodeName": "result_order", "type": "Any"}, {"lineNumber": 539, "col_offset": 59, "nodeName": "arange", "type": "Any"}, {"lineNumber": 634, "col_offset": 54, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 635, "col_offset": 54, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 655, "col_offset": 34, "nodeName": "b2", "type": "int"}, {"lineNumber": 663, "col_offset": 34, "nodeName": "b3", "type": "int"}, {"lineNumber": 715, "col_offset": 40, "nodeName": "random", "type": "Any"}, {"lineNumber": 719, "col_offset": 53, "nodeName": "path", "type": "Any"}, {"lineNumber": 721, "col_offset": 32, "nodeName": "segments", "type": "Any"}, {"lineNumber": 721, "col_offset": 51, "nodeName": "segments", "type": "Any"}, {"lineNumber": 723, "col_offset": 20, "nodeName": "path", "type": "Any"}, {"lineNumber": 723, "col_offset": 40, "nodeName": "path", "type": "Any"}, {"lineNumber": 724, "col_offset": 20, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 724, "col_offset": 36, "nodeName": "incidence_matrix", "type": "Any"}, {"lineNumber": 725, "col_offset": 20, "nodeName": "self", "type": "TestUntangleWorms"}, {"lineNumber": 725, "col_offset": 36, "nodeName": "incidence_matrix", "type": "Any"}, {"lineNumber": 736, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 771, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 771, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 790, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 790, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 811, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 811, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 818, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 818, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 821, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 821, "col_offset": 46, "nodeName": "sum", "type": "Any"}, {"lineNumber": 821, "col_offset": 53, "nodeName": "expected", "type": "Any"}, {"lineNumber": 826, "col_offset": 59, "nodeName": "eorder", "type": "Any"}, {"lineNumber": 827, "col_offset": 60, "nodeName": "eorder", "type": "Any"}, {"lineNumber": 166, "col_offset": 42, "nodeName": "base64", "type": "module"}, {"lineNumber": 499, "col_offset": 41, "nodeName": "i", "type": "Any"}, {"lineNumber": 499, "col_offset": 43, "nodeName": "j", "type": "Any"}, {"lineNumber": 539, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 654, "col_offset": 35, "nodeName": "b1", "type": "int"}, {"lineNumber": 655, "col_offset": 40, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 663, "col_offset": 40, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 715, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 721, "col_offset": 32, "nodeName": "path", "type": "Any"}, {"lineNumber": 721, "col_offset": 51, "nodeName": "path", "type": "Any"}, {"lineNumber": 724, "col_offset": 36, "nodeName": "graph", "type": "Any"}, {"lineNumber": 725, "col_offset": 36, "nodeName": "graph", "type": "Any"}, {"lineNumber": 736, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 740, "col_offset": 32, "nodeName": "arange", "type": "Any"}, {"lineNumber": 743, "col_offset": 46, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 766, "col_offset": 69, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 779, "col_offset": 38, "nodeName": "rorder", "type": "Any"}, {"lineNumber": 779, "col_offset": 62, "nodeName": "eorder", "type": "Any"}, {"lineNumber": 785, "col_offset": 69, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 798, "col_offset": 38, "nodeName": "rorder", "type": "Any"}, {"lineNumber": 798, "col_offset": 61, "nodeName": "eorder", "type": "Any"}, {"lineNumber": 805, "col_offset": 69, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 821, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 826, "col_offset": 38, "nodeName": "rorder", "type": "Any"}, {"lineNumber": 827, "col_offset": 38, "nodeName": "rorder", "type": "Any"}, {"lineNumber": 520, "col_offset": 26, "nodeName": "islice", "type": "Union[slice, int]"}, {"lineNumber": 520, "col_offset": 34, "nodeName": "jslice", "type": "Union[slice, int]"}, {"lineNumber": 521, "col_offset": 26, "nodeName": "islice", "type": "Union[int, slice]"}, {"lineNumber": 521, "col_offset": 34, "nodeName": "jslice", "type": "Union[slice, int]"}, {"lineNumber": 539, "col_offset": 53, "nodeName": "j", "type": "int"}, {"lineNumber": 539, "col_offset": 69, "nodeName": "shape", "type": "Any"}, {"lineNumber": 654, "col_offset": 53, "nodeName": "b2", "type": "int"}, {"lineNumber": 654, "col_offset": 59, "nodeName": "b1", "type": "int"}, {"lineNumber": 662, "col_offset": 39, "nodeName": "b2", "type": "int"}, {"lineNumber": 724, "col_offset": 59, "nodeName": "branch_area", "type": "Any"}, {"lineNumber": 724, "col_offset": 72, "nodeName": "prev", "type": "Any"}, {"lineNumber": 725, "col_offset": 59, "nodeName": "branch_area", "type": "Any"}, {"lineNumber": 725, "col_offset": 72, "nodeName": "next", "type": "Any"}, {"lineNumber": 740, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 743, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 744, "col_offset": 45, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 766, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 785, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 805, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 539, "col_offset": 69, "nodeName": "image", "type": "Any"}, {"lineNumber": 661, "col_offset": 40, "nodeName": "b1", "type": "int"}, {"lineNumber": 662, "col_offset": 45, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 662, "col_offset": 57, "nodeName": "b3", "type": "int"}, {"lineNumber": 662, "col_offset": 63, "nodeName": "b2", "type": "int"}, {"lineNumber": 744, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 661, "col_offset": 58, "nodeName": "b2", "type": "int"}, {"lineNumber": 661, "col_offset": 64, "nodeName": "b1", "type": "int"}, {"lineNumber": 661, "col_offset": 71, "nodeName": "b1", "type": "int"}, {"lineNumber": 661, "col_offset": 77, "nodeName": "b3", "type": "Any"}]