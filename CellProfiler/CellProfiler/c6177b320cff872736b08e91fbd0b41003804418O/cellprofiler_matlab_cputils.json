[{"lineNumber": 9, "col_offset": 0, "nodeName": "new_string_cell_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "make_cell_struct_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "encapsulate_strings_in_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "encapsulate_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "result", "type": "numpy.ndarray"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "result", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "s", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "result", "type": "numpy.ndarray"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "j", "type": "int"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "kind", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "flat", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "flat", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "fields", "type": "Any"}, {"lineNumber": 58, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "s", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "result", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "result", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "result", "type": "numpy.ndarray"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "handles", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "field", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 21, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "result", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "empty", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "fields", "type": "Any"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "handles", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "flat", "type": "Any"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "handles", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 21, "col_offset": 39, "nodeName": "numpy", "type": "module"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 43, "col_offset": 61, "nodeName": "unicode", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "flat", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "encapsulate_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "fields", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "s", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "s", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "j", "type": "int"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "flat", "type": "Any"}, {"lineNumber": 43, "col_offset": 53, "nodeName": "flat", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "flat", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "flat", "type": "Any"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "numpy", "type": "module"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "encapsulate_strings_in_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 50, "col_offset": 75, "nodeName": "unicode", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "handles", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "encapsulate_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 43, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 44, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "flat", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "handles", "type": "Any"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "handles", "type": "Any"}, {"lineNumber": 50, "col_offset": 60, "nodeName": "handles", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "field", "type": "Any"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "handles", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "handles", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "numpy", "type": "module"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "encapsulate_strings_in_arrays", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "field", "type": "Any"}, {"lineNumber": 50, "col_offset": 68, "nodeName": "field", "type": "Any"}, {"lineNumber": 51, "col_offset": 60, "nodeName": "field", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "field", "type": "Any"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "handles", "type": "Any"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "field", "type": "Any"}]