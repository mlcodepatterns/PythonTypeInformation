[{"lineNumber": 14, "col_offset": 0, "nodeName": "__version__", "type": "str"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "IMAGE_NAME", "type": "str"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "OUTPUT_IMAGE_F", "type": "str"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "set_headless", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "img", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "x", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "module_num", "type": "int"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "module_num", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "COMBINE", "type": "str"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "measurements", "type": "cellprofiler.measurements.Measurements"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "object_set", "type": "cellprofiler.objects.ObjectSet"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "grayscale", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "image", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "module_num", "type": "int"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "module_num", "type": "int"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "SPLIT", "type": "str"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "value", "type": "bool"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "value", "type": "bool"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "value", "type": "bool"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "measurements", "type": "cellprofiler.measurements.Measurements"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "object_set", "type": "cellprofiler.objects.ObjectSet"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "red", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "image", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "green", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "image", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "blue", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "image", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "module_num", "type": "int"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "IMAGE_NAME", "type": "str"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "COMBINE", "type": "str"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "CH_CHANNELS", "type": "str"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "channel_indexes", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "factors", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "divisor", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "pixels", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "module_num", "type": "int"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "IMAGE_NAME", "type": "str"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "SPLIT", "type": "str"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "CH_CHANNELS", "type": "str"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "channel_indexes", "type": "numpy.ndarray"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "data", "type": "str"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "data", "type": "str"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "data", "type": "str"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "data", "type": "str"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "ColorToGray", "type": "Type[cellprofiler.modules.colortogray.ColorToGray]"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "get_my_image", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "InjectImage", "type": "Type[cellprofiler.modules.injectimage.InjectImage]"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "img", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "ColorToGray", "type": "Type[cellprofiler.modules.colortogray.ColorToGray]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "combine_or_split", "type": "Any"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "red_contribution", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "green_contribution", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "blue_contribution", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "grayscale_name", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "test_valid", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "Measurements", "type": "Type[cellprofiler.measurements.Measurements]"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "ObjectSet", "type": "Type[cellprofiler.objects.ObjectSet]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "ImageSetList", "type": "Type[cellprofiler.cpimage.ImageSetList]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "prepare_run", "type": "Callable[[Any], bool]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "prepare_group", "type": "Callable[[Any, Any, Any, Any], bool]"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "get_image_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "grayscale", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "grayscale", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "get_my_image", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "InjectImage", "type": "Type[cellprofiler.modules.injectimage.InjectImage]"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "img", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "ColorToGray", "type": "Type[cellprofiler.modules.colortogray.ColorToGray]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "combine_or_split", "type": "Any"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "use_red", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "use_blue", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "use_green", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "red_name", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "green_name", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "blue_name", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "test_valid", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "Measurements", "type": "Type[cellprofiler.measurements.Measurements]"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "ObjectSet", "type": "Type[cellprofiler.objects.ObjectSet]"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "ImageSetList", "type": "Type[cellprofiler.cpimage.ImageSetList]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "prepare_run", "type": "Callable[[Any], bool]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "prepare_group", "type": "Callable[[Any, Any, Any, Any], bool]"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "get_image_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "red", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "red", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "green", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "green", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "blue", "type": "Any"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "blue", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "ImageSetList", "type": "Type[cellprofiler.cpimage.ImageSetList]"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "get_image_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "IMAGE_NAME", "type": "str"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "ColorToGray", "type": "Type[cellprofiler.modules.colortogray.ColorToGray]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "combine_or_split", "type": "Any"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "grayscale_name", "type": "Any"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "OUTPUT_IMAGE_F", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "rgb_or_channels", "type": "Any"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "add_channel", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "add_channel", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "sum", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "factors", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "channel_index", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 153, "col_offset": 42, "nodeName": "channel_indexes", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "Workspace", "type": "Type[cellprofiler.workspace.Workspace]"}, {"lineNumber": 163, "col_offset": 30, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 163, "col_offset": 48, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 164, "col_offset": 50, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "expected", "type": "Any"}, {"lineNumber": 169, "col_offset": 49, "nodeName": "pixels", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "ImageSetList", "type": "Type[cellprofiler.cpimage.ImageSetList]"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "get_image_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "IMAGE_NAME", "type": "str"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "ColorToGray", "type": "Type[cellprofiler.modules.colortogray.ColorToGray]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "combine_or_split", "type": "Any"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "rgb_or_channels", "type": "Any"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "add_channel", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "add_channel", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "channel_index", "type": "Any"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "channel_indexes", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "value", "type": "str"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "Workspace", "type": "Type[cellprofiler.workspace.Workspace]"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 196, "col_offset": 40, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 196, "col_offset": 48, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 197, "col_offset": 50, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "channel_index", "type": "Any"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "channel_indexes", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "pixels", "type": "Any"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "load_pipeline", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 207, "col_offset": 44, "nodeName": "data", "type": "str"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "should_combine", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "load_pipeline", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 218, "col_offset": 38, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 218, "col_offset": 44, "nodeName": "data", "type": "str"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "should_split", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 230, "col_offset": 19, "nodeName": "load_pipeline", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 230, "col_offset": 38, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 230, "col_offset": 44, "nodeName": "data", "type": "str"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "should_combine", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "load_pipeline", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 241, "col_offset": 38, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 241, "col_offset": 44, "nodeName": "data", "type": "str"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "should_split", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "rgb_or_channels", "type": "Any"}, {"lineNumber": 251, "col_offset": 49, "nodeName": "CH_RGB", "type": "str"}, {"lineNumber": 283, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 286, "col_offset": 30, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "combine_or_split", "type": "Any"}, {"lineNumber": 292, "col_offset": 50, "nodeName": "COMBINE", "type": "str"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "rgb_or_channels", "type": "Any"}, {"lineNumber": 293, "col_offset": 49, "nodeName": "CH_CHANNELS", "type": "str"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "grayscale_name", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "red_contribution", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "green_contribution", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "blue_contribution", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "use_red", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 299, "col_offset": 24, "nodeName": "use_green", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "use_blue", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "red_name", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "green_name", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "blue_name", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 304, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 25, "nodeName": "channel_choice", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "channel_choice", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "channel_choice", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "contribution", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "contribution", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "contribution", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "cpm_inject", "type": "module"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "cpm", "type": "module"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "cpo", "type": "module"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "cpi", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "Workspace", "type": "Type[cellprofiler.workspace.Workspace]"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 69, "col_offset": 61, "nodeName": "measurements", "type": "cellprofiler.measurements.Measurements"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "Workspace", "type": "Type[cellprofiler.workspace.Workspace]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "object_set", "type": "cellprofiler.objects.ObjectSet"}, {"lineNumber": 73, "col_offset": 60, "nodeName": "measurements", "type": "cellprofiler.measurements.Measurements"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "Workspace", "type": "Type[cellprofiler.workspace.Workspace]"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "object_set", "type": "cellprofiler.objects.ObjectSet"}, {"lineNumber": 74, "col_offset": 60, "nodeName": "measurements", "type": "cellprofiler.measurements.Measurements"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "cpm_inject", "type": "module"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "cpm", "type": "module"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "cpo", "type": "module"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "cpi", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "Workspace", "type": "Type[cellprofiler.workspace.Workspace]"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 105, "col_offset": 61, "nodeName": "measurements", "type": "cellprofiler.measurements.Measurements"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "Workspace", "type": "Type[cellprofiler.workspace.Workspace]"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "inj", "type": "cellprofiler.modules.injectimage.InjectImage"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "object_set", "type": "cellprofiler.objects.ObjectSet"}, {"lineNumber": 109, "col_offset": 60, "nodeName": "measurements", "type": "cellprofiler.measurements.Measurements"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "Workspace", "type": "Type[cellprofiler.workspace.Workspace]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "ctg", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "object_set", "type": "cellprofiler.objects.ObjectSet"}, {"lineNumber": 110, "col_offset": 60, "nodeName": "measurements", "type": "cellprofiler.measurements.Measurements"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "img", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "cpi", "type": "module"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "Image", "type": "Type[cellprofiler.cpimage.Image]"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "image", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "channel_choice", "type": "nothing"}, {"lineNumber": 154, "col_offset": 54, "nodeName": "channel_names", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "contribution", "type": "nothing"}, {"lineNumber": 155, "col_offset": 52, "nodeName": "factors", "type": "Any"}, {"lineNumber": 156, "col_offset": 65, "nodeName": "divisor", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 163, "col_offset": 59, "nodeName": "ObjectSet", "type": "Type[cellprofiler.objects.ObjectSet]"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "Measurements", "type": "Type[cellprofiler.measurements.Measurements]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "value", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "pixels", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "cpi", "type": "module"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "Image", "type": "Type[cellprofiler.cpimage.Image]"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "image", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "channel_choice", "type": "nothing"}, {"lineNumber": 188, "col_offset": 54, "nodeName": "channel_names", "type": "List[str]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "image_name", "type": "nothing"}, {"lineNumber": 189, "col_offset": 50, "nodeName": "OUTPUT_IMAGE_F", "type": "str"}, {"lineNumber": 189, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 196, "col_offset": 59, "nodeName": "ObjectSet", "type": "Type[cellprofiler.objects.ObjectSet]"}, {"lineNumber": 197, "col_offset": 30, "nodeName": "Measurements", "type": "Type[cellprofiler.measurements.Measurements]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 203, "col_offset": 69, "nodeName": "pixels", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "cpmt", "type": "module"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "grayscale_name", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "red_contribution", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "green_contribution", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "blue_contribution", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "cpmt", "type": "module"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "use_red", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "red_name", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "use_green", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "use_blue", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "blue_name", "type": "Any"}, {"lineNumber": 230, "col_offset": 19, "nodeName": "cpmt", "type": "module"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "grayscale_name", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "red_contribution", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "green_contribution", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "blue_contribution", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "cpmt", "type": "module"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 243, "col_offset": 43, "nodeName": "ColorToGray", "type": "Type[cellprofiler.modules.colortogray.ColorToGray]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "use_red", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "red_name", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "use_green", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "green_name", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "use_blue", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 251, "col_offset": 49, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 283, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 287, "col_offset": 31, "nodeName": "data", "type": "str"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 289, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 290, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 290, "col_offset": 43, "nodeName": "ColorToGray", "type": "Type[cellprofiler.modules.colortogray.ColorToGray]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 292, "col_offset": 50, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 293, "col_offset": 49, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 299, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 304, "col_offset": 25, "nodeName": "channel_count", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 305, "col_offset": 60, "nodeName": "channel_names", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 306, "col_offset": 60, "nodeName": "channel_names", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 307, "col_offset": 60, "nodeName": "channel_names", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "cpi", "type": "module"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 54, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 154, "col_offset": 75, "nodeName": "channel_index", "type": "Any"}, {"lineNumber": 155, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "RunExceptionEvent", "type": "Any"}, {"lineNumber": 163, "col_offset": 59, "nodeName": "cpo", "type": "module"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "cpm", "type": "module"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "grayscale_name", "type": "Any"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "pixels", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "cpi", "type": "module"}, {"lineNumber": 188, "col_offset": 54, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 188, "col_offset": 75, "nodeName": "channel_index", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "RunExceptionEvent", "type": "Any"}, {"lineNumber": 196, "col_offset": 59, "nodeName": "cpo", "type": "module"}, {"lineNumber": 197, "col_offset": 30, "nodeName": "cpm", "type": "module"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 200, "col_offset": 41, "nodeName": "value", "type": "nothing"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "pixels", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 203, "col_offset": 43, "nodeName": "image", "type": "Any"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 243, "col_offset": 43, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "self", "type": "TestColorToGray"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 285, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 285, "col_offset": 47, "nodeName": "LoadExceptionEvent", "type": "Any"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "modules", "type": "Any"}, {"lineNumber": 289, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 290, "col_offset": 43, "nodeName": "cpm_ctg", "type": "module"}, {"lineNumber": 304, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 305, "col_offset": 25, "nodeName": "channels", "type": "Any"}, {"lineNumber": 305, "col_offset": 60, "nodeName": "module", "type": "Any"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "channels", "type": "Any"}, {"lineNumber": 306, "col_offset": 60, "nodeName": "module", "type": "Any"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "channels", "type": "Any"}, {"lineNumber": 307, "col_offset": 60, "nodeName": "module", "type": "Any"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "channels", "type": "Any"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "channels", "type": "Any"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "channels", "type": "Any"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "channels", "type": "Any"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "channels", "type": "Any"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "channels", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "channels", "type": "List[nothing]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "channels", "type": "List[nothing]"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "image", "type": "Any"}, {"lineNumber": 156, "col_offset": 52, "nodeName": "factors", "type": "Any"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "channels", "type": "List[nothing]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "channels", "type": "List[nothing]"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 200, "col_offset": 41, "nodeName": "image_name", "type": "nothing"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "pixels", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 305, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 156, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 203, "col_offset": 53, "nodeName": "channel_index", "type": "Any"}, {"lineNumber": 156, "col_offset": 35, "nodeName": "channel_index", "type": "Any"}, {"lineNumber": 200, "col_offset": 41, "nodeName": "channels", "type": "List[nothing]"}, {"lineNumber": 200, "col_offset": 41, "nodeName": "module", "type": "cellprofiler.modules.colortogray.ColorToGray"}, {"lineNumber": 200, "col_offset": 57, "nodeName": "i", "type": "int"}]