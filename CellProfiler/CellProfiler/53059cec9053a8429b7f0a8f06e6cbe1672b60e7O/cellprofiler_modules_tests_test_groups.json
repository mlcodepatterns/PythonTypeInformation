[{"lineNumber": 22, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "g0", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "image_set_key_names", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "slices", "type": "Tuple[slice, ...]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "ijkl", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "ijkl", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "image_set_values", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "value", "type": "bool"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "image_set_list", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "value", "type": "bool"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "plate", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "value", "type": "bool"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "plate", "type": "str"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "wants_groups", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "grouping_metadata", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "metadata_choice", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "mgrid", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "values", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "iscds", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "image_set_key_names", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "image_sets", "type": "Dict[Tuple[Any, ...], List[Any]]"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "Groups", "type": "Type[cellprofiler.modules.groups.Groups]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "wants_groups", "type": "Any"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "make_image_sets", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "compute_groups", "type": "Callable[[Any, Any, Any], Tuple[List[Tuple[Any, Any]], Dict[Tuple[Any, ...], List[Any]]]]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "iscds", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "image_set_key_names", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 40, "nodeName": "image_sets", "type": "Dict[Tuple[Any, ...], Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 53, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "image_set_list", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "Groups", "type": "Type[cellprofiler.modules.groups.Groups]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "wants_groups", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "image_name", "type": "nothing"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "metadata_choice", "type": "nothing"}, {"lineNumber": 123, "col_offset": 49, "nodeName": "make_image_sets", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "compute_groups", "type": "Callable[[Any, Any, Any], Tuple[List[Tuple[Any, Any]], Dict[Tuple[Any, ...], List[Any]]]]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "iscds", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "image_set_key_names", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "image_sets", "type": "Dict[Tuple[Any, ...], Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "image_set_list", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "Groups", "type": "Type[cellprofiler.modules.groups.Groups]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "wants_groups", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "image_name", "type": "nothing"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "metadata_choice", "type": "nothing"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "add_grouping_metadata", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "image_name", "type": "nothing"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "metadata_choice", "type": "nothing"}, {"lineNumber": 152, "col_offset": 49, "nodeName": "make_image_sets", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "compute_groups", "type": "Callable[[Any, Any, Any], Tuple[List[Tuple[Any, Any]], Dict[Tuple[Any, ...], List[Any]]]]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "iscds", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "image_set_key_names", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 40, "nodeName": "image_sets", "type": "Dict[Tuple[Any, ...], Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "site", "type": "str"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "data", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "Groups", "type": "Type[cellprofiler.modules.groups.Groups]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "grouping_metadata_count", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "module", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "g0", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "g0", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "channel_metadata", "type": "Any"}, {"lineNumber": 67, "col_offset": 54, "nodeName": "key_metadata", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "slices", "type": "Tuple[slice, ...]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "ijkl", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "prod", "type": "Any"}, {"lineNumber": 72, "col_offset": 54, "nodeName": "key_metadata", "type": "Any"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "j", "type": "int"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "G", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "key_list", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "groupings", "type": "Dict[Tuple[Any, ...], List[Any]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "values", "type": "Callable"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "image_set_list", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "image_set_key", "type": "Any"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "expected_image_set_key", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "G", "type": "module"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 123, "col_offset": 49, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "key_list", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "key_list", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "groupings", "type": "Dict[Tuple[Any, ...], List[Any]]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "groupings", "type": "Dict[Tuple[Any, ...], List[Any]]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 140, "col_offset": 57, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "image_set_list", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 32, "nodeName": "expected_image_set_list", "type": "Union[List[Tuple[Any, ...]], List[Any]]"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "G", "type": "module"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 152, "col_offset": 49, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "key_list", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "key_list", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "key_list", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "groupings", "type": "Dict[Tuple[Any, ...], List[Any]]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "image_set_list", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "LoadExceptionEvent", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "modules", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "G", "type": "module"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "channel_name", "type": "Any"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "metadata_key", "type": "Any"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "metadata_value", "type": "Any"}, {"lineNumber": 65, "col_offset": 65, "nodeName": "image_type", "type": "Any"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "key", "type": "Any"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "values", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 69, "col_offset": 64, "nodeName": "key_metadata", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "ijkl", "type": "Any"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "key", "type": "Any"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "values", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "k", "type": "Tuple[Any, ...]"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "image_set_keys", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "CT_GRAYSCALE", "type": "Any"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "CT_GRAYSCALE", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "groupings", "type": "Dict[Tuple[Any, ...], List[Any]]"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "grouping_metadata", "type": "List[nothing]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "grouping_metadata", "type": "List[nothing]"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "CT_GRAYSCALE", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "CT_GRAYSCALE", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "has_key", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "image_set_list", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "image_set_key", "type": "nothing"}, {"lineNumber": 142, "col_offset": 48, "nodeName": "expected_image_set_key", "type": "nothing"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "grouping_metadata", "type": "List[nothing]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "grouping_metadata", "type": "List[nothing]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "grouping_metadata", "type": "List[nothing]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "grouping_metadata", "type": "List[nothing]"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "CT_GRAYSCALE", "type": "Any"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "CT_GRAYSCALE", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "groupings", "type": "Dict[Tuple[Any, ...], List[Any]]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 172, "col_offset": 61, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "image_set_list", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "expected_image_set_list", "type": "Union[List[Tuple[Any, ...]], List[Any]]"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "values", "type": "Any"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "key", "type": "Any"}, {"lineNumber": 69, "col_offset": 54, "nodeName": "values", "type": "Any"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "ijkl", "type": "Any"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "ImageSetChannelDescriptor", "type": "Any"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "ImageSetChannelDescriptor", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "groupings", "type": "Dict[Tuple[Any, ...], List[Any]]"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "image_sets", "type": "Dict[Tuple[Any, ...], Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "ImageSetChannelDescriptor", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "ImageSetChannelDescriptor", "type": "Any"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "groupings", "type": "Dict[Tuple[Any, ...], List[Any]]"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "plate", "type": "str"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "plate", "type": "str"}, {"lineNumber": 139, "col_offset": 55, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "groups", "type": "cellprofiler.modules.groups.Groups"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "ImageSetChannelDescriptor", "type": "Any"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "ImageSetChannelDescriptor", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "has_key", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "image_set_list", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "image_set_key", "type": "nothing"}, {"lineNumber": 174, "col_offset": 52, "nodeName": "expected_image_set_key", "type": "nothing"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "ijkl", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "plate", "type": "str"}, {"lineNumber": 139, "col_offset": 55, "nodeName": "image_sets", "type": "Dict[Tuple[Any, ...], Any]"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "groupings", "type": "Dict[Tuple[Any, ...], List[Any]]"}, {"lineNumber": 166, "col_offset": 51, "nodeName": "plate", "type": "str"}, {"lineNumber": 166, "col_offset": 58, "nodeName": "site", "type": "str"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "plate", "type": "str"}, {"lineNumber": 167, "col_offset": 51, "nodeName": "site", "type": "str"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "self", "type": "TestGroups"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "_", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "channel_metadata_key", "type": "Any"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "channel_metadata_value", "type": "Any"}, {"lineNumber": 92, "col_offset": 71, "nodeName": "_", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "cpp", "type": "module"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "cpp", "type": "module"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "cpp", "type": "module"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "cpp", "type": "module"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "cpp", "type": "module"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "cpp", "type": "module"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "image_sets", "type": "Dict[Tuple[Any, ...], Any]"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "ijkl", "type": "Any"}, {"lineNumber": 170, "col_offset": 52, "nodeName": "plate", "type": "str"}, {"lineNumber": 170, "col_offset": 70, "nodeName": "site", "type": "str"}, {"lineNumber": 170, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 170, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "kn", "type": "nothing"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "kv", "type": "nothing"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "kn", "type": "nothing"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "kv", "type": "nothing"}]