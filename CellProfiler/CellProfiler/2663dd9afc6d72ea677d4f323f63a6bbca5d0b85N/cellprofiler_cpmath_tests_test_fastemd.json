[{"lineNumber": 20, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "EMD_NO_FLOW", "type": "Any"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "tests", "type": "Tuple[Tuple[List[int], List[int], Any, int], Tuple[List[int], List[int], Any, int], Tuple[List[int], List[int], List[List[int]], int], Tuple[List[int], List[int], List[List[int]], int], Tuple[List[int], List[int], numpy.ndarray, int]]"}, {"lineNumber": 160, "col_offset": 48, "nodeName": "tests", "type": "Tuple[Tuple[List[int], List[int], Any, int, Any], Tuple[List[int], List[int], List[List[int]], int, List[List[int]]], Tuple[List[int], List[int], List[List[int]], int, List[List[int]]], Tuple[List[int], List[int], numpy.ndarray, int, numpy.ndarray]]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "int32", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "fn", "type": "Any"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "emd_hat_int32", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "equal_test", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "array_equal_test", "type": "Any"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "flow_type", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "EMD_NO_FLOW", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "c", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "expected", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "check", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "check", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "c", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "expected", "type": "Any"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "expected_flow", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "self", "type": "TestFastEMD"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "testing", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "fn", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "q", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "c", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "equal_test", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "result", "type": "Any"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "expected_result", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "fn", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "q", "type": "Any"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "c", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "equal_test", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "result", "type": "Any"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "expected_result", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "array_equal_test", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "f", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "expected_flow", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "check", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "expected", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestFastEMD"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "int32", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "int32", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "int32", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestFastEMD"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "int32", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "int32", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "int32", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "check", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "expected", "type": "Any"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "TestFastEMD"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "extra_mass_penalty", "type": "Any"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "flow_type", "type": "Any"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "gd_metric", "type": "Any"}, {"lineNumber": 42, "col_offset": 43, "nodeName": "extra_mass_penalty", "type": "Any"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "flow_type", "type": "Any"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "gd_metric", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "int32", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "TestFastEMD"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "p", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "int32", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "q", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "int32", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "int32", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "eye", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "self", "type": "TestFastEMD"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "p", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "int32", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "q", "type": "Any"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "int32", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "int32", "type": "Any"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "EMD_WITHOUT_EXTRA_MASS_FLOW", "type": "Any"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "eye", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "int32", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "eye", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "int32", "type": "Any"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "int32", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 165, "col_offset": 48, "nodeName": "expected_flow", "type": "Any"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "p", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "int32", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "int32", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "np", "type": "module"}]