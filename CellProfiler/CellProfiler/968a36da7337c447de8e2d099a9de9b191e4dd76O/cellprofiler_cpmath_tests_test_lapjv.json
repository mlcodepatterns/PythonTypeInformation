[{"lineNumber": 37, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "cases", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "cases", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "cases", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "reductions", "type": "int"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "u", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "expected_u", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "expected_v", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "u", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "expected_u", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "expected_v", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "expected_x", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "expected_y", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "j", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "idx", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "count", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "u", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "c", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 224, "col_offset": 10, "nodeName": "y", "type": "Any"}, {"lineNumber": 224, "col_offset": 14, "nodeName": "lapjv", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 226, "col_offset": 52, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 67, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "reduction_transfer", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "u", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "v", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "expected_u", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 61, "nodeName": "u", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "expected_v", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 99, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 100, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 101, "col_offset": 48, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 102, "col_offset": 48, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "augmenting_row_reduction", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "u", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 115, "col_offset": 49, "nodeName": "expected_u", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 61, "nodeName": "u", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "expected_v", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 117, "col_offset": 42, "nodeName": "expected_x", "type": "numpy.ndarray"}, {"lineNumber": 117, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "expected_y", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 54, "nodeName": "y", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 140, "col_offset": 52, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 141, "col_offset": 56, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 143, "col_offset": 51, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 144, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 145, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "float64", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "augment", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "j", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "idx", "type": "Any"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "count", "type": "Any"}, {"lineNumber": 147, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 147, "col_offset": 50, "nodeName": "y", "type": "Any"}, {"lineNumber": 147, "col_offset": 53, "nodeName": "u", "type": "Any"}, {"lineNumber": 147, "col_offset": 56, "nodeName": "v", "type": "Any"}, {"lineNumber": 147, "col_offset": 59, "nodeName": "c", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 148, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 150, "col_offset": 43, "nodeName": "u", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 151, "col_offset": 43, "nodeName": "v", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "j", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "min_cost", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "best", "type": "None"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "result_cost", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 14, "nodeName": "LAPJV", "type": "module"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "astype", "type": "Any"}, {"lineNumber": 224, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 224, "col_offset": 46, "nodeName": "astype", "type": "Any"}, {"lineNumber": 224, "col_offset": 60, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 224, "col_offset": 66, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "TestLAPJV"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestLAPJV"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 67, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "LAPJV", "type": "module"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 71, "col_offset": 50, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 72, "col_offset": 52, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 73, "col_offset": 48, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "float64", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 99, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 100, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 101, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 102, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "LAPJV", "type": "module"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 106, "col_offset": 49, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "float64", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 140, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 141, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 143, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 144, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 145, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "LAPJV", "type": "module"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 149, "col_offset": 45, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 150, "col_offset": 46, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 151, "col_offset": 46, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "randint", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "j", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "mgrid", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "u", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "lapjv", "type": "Any"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "i", "type": "Any"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "j", "type": "Any"}, {"lineNumber": 164, "col_offset": 63, "nodeName": "reductions", "type": "int"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 165, "col_offset": 34, "nodeName": "c", "type": "Any"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "permutations", "type": "Callable[[Any], Generator[Any, Any, Any]]"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "cost", "type": "Any"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "min_cost", "type": "Any"}, {"lineNumber": 173, "col_offset": 49, "nodeName": "result_cost", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 72, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 73, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 106, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "r", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "j", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "LAPJV", "type": "module"}, {"lineNumber": 164, "col_offset": 44, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "cost", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "min_cost", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "best", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "min_cost", "type": "Any"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "cost", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "self", "type": "TestLAPJV"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 224, "col_offset": 46, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 226, "col_offset": 10, "nodeName": "astype", "type": "Any"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 226, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "c", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "c", "type": "Any"}, {"lineNumber": 164, "col_offset": 44, "nodeName": "c", "type": "Any"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 170, "col_offset": 36, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 172, "col_offset": 35, "nodeName": "c", "type": "Any"}, {"lineNumber": 172, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 168, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 172, "col_offset": 54, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 226, "col_offset": 10, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 226, "col_offset": 30, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 227, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 228, "col_offset": 33, "nodeName": "y", "type": "Any"}, {"lineNumber": 168, "col_offset": 61, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "arange", "type": "Any"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "arange", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 36, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 172, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 168, "col_offset": 48, "nodeName": "i", "type": "int"}]