[{"lineNumber": 11, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestManual"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "root", "type": "str"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "dirnames", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "filenames", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 41, "nodeName": "walk", "type": "Callable"}, {"lineNumber": 16, "col_offset": 49, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "x", "type": "str"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "filenames", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "x", "type": "str"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "dirnames", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "rmdir", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "output_module_html", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "fd", "type": "None"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "data", "type": "str"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "tags_we_care_about", "type": "Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "pattern", "type": "str"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "anti_pattern", "type": "str"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "d", "type": "Dict[Optional[str], int]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "anti_d", "type": "Dict[Optional[str], int]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "tag", "type": "str"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "tags_we_care_about", "type": "Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str]"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 16, "col_offset": 41, "nodeName": "os", "type": "module"}, {"lineNumber": 16, "col_offset": 49, "nodeName": "self", "type": "TestManual"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "self", "type": "TestManual"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "M", "type": "module"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "self", "type": "TestManual"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "get_module_names", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "fd", "type": "TextIO"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "read", "type": "Callable"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "pos", "type": "int"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "open", "type": "Callable"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "fd", "type": "Optional[TextIO]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "fd", "type": "Optional[TextIO]"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "pattern", "type": "str"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "d", "type": "Dict[Optional[str], int]"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "anti_pattern", "type": "str"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "anti_d", "type": "Dict[Optional[str], int]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "tag", "type": "Optional[str]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "pos", "type": "int"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "has_key", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "tag", "type": "str"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 18, "col_offset": 39, "nodeName": "root", "type": "str"}, {"lineNumber": 18, "col_offset": 45, "nodeName": "x", "type": "str"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 20, "col_offset": 39, "nodeName": "root", "type": "str"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "x", "type": "str"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "print_exc", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "search", "type": "Callable"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "p", "type": "str"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "dd", "type": "Dict[Optional[str], int]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "d", "type": "Dict[Optional[str], int]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "self", "type": "TestManual"}, {"lineNumber": 29, "col_offset": 54, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "traceback", "type": "module"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "self", "type": "TestManual"}, {"lineNumber": 32, "col_offset": 55, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "re", "type": "module"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "data", "type": "str"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "groups", "type": "Callable"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "has_key", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "tag", "type": "Optional[str]"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "dd", "type": "Dict[Optional[str], int]"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "tag", "type": "Optional[str]"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "pos", "type": "int"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "self", "type": "TestManual"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "has_key", "type": "Any"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "tag", "type": "str"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "self", "type": "TestManual"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "d", "type": "Dict[Optional[str], int]"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "anti_d", "type": "Dict[Optional[str], int]"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "self", "type": "TestManual"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "has_key", "type": "Any"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "tag", "type": "str"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "pos", "type": "int"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "dd", "type": "Dict[Optional[str], int]"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "tag", "type": "Optional[str]"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "start", "type": "Callable[..., int]"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "anti_d", "type": "Dict[Optional[str], int]"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "tag", "type": "str"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "tag", "type": "str"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "tag", "type": "str"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "tag", "type": "str"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "tag", "type": "str"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "anti_d", "type": "Dict[Optional[str], int]"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "tag", "type": "str"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "d", "type": "Dict[Optional[str], int]"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "anti_d", "type": "Dict[Optional[str], int]"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "tag", "type": "str"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "tag", "type": "str"}]