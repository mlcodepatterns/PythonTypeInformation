[{"lineNumber": 25, "col_offset": 0, "nodeName": "root_dir", "type": "str"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "cp_logo_png", "type": "str"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "cp_logo_url", "type": "str"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 377, "col_offset": 0, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "root_dir", "type": "str"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "big_endian", "type": "str"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "big_endian", "type": "str"}, {"lineNumber": 166, "col_offset": 10, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 377, "col_offset": 0, "nodeName": "cp_logo", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "split", "type": "Callable"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "pathname2url", "type": "Any"}, {"lineNumber": 27, "col_offset": 44, "nodeName": "cp_logo_png", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "xml", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "pattern", "type": "str"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "pixels", "type": "str"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "xml", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "url", "type": "str"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "xml", "type": "str"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "url", "type": "str"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "xml", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "url", "type": "str"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "big_endian", "type": "bool"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "big_endian", "type": "bool"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 166, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "decompress", "type": "Callable[..., bytes]"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "urllib", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "start_subimager", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "stop_subimager", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "cp_logo_url", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "cp_logo", "type": "Any"}, {"lineNumber": 41, "col_offset": 48, "nodeName": "img", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "img", "type": "Any"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "get_metadata", "type": "Any"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "cp_logo_url", "type": "str"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "group", "type": "Callable"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "pattern", "type": "str"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "make_xml", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "fd", "type": "int"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "mkstemp", "type": "Callable"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "close", "type": "Callable[[int], None]"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "fd", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "post_image", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "url", "type": "str"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "xml", "type": "str"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "url", "type": "str"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "img", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "make_xml", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "fd", "type": "int"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "mkstemp", "type": "Callable"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "close", "type": "Callable[[int], None]"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "fd", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "post_image", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "url", "type": "str"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "cp_logo", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "xml", "type": "str"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "url", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 88, "col_offset": 45, "nodeName": "img", "type": "Any"}, {"lineNumber": 88, "col_offset": 50, "nodeName": "cp_logo", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "make_channel_xml", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "fd", "type": "int"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "mkstemp", "type": "Callable"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "close", "type": "Callable[[int], None]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "fd", "type": "int"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "img", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "locals", "type": "Callable[[], Dict[str, object]]"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "zlib", "type": "module"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "b64decode", "type": "Callable[..., bytes]"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "split", "type": "Callable"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "C", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "C", "type": "module"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "C", "type": "module"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "cp_logo_url", "type": "str"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 47, "col_offset": 59, "nodeName": "img", "type": "Any"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "C", "type": "module"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "kwd", "type": "str"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "search", "type": "Callable"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "pattern", "type": "str"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "pixels", "type": "str"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "value", "type": "str"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "pathname2url", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "C", "type": "module"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "cp_logo", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "C", "type": "module"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestClient"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "img", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 73, "col_offset": 50, "nodeName": "cp_logo", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "pathname2url", "type": "Any"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "C", "type": "module"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "C", "type": "module"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestClient"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "img", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "pathname2url", "type": "Any"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "post_image", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "url", "type": "str"}, {"lineNumber": 101, "col_offset": 46, "nodeName": "xml", "type": "str"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "url", "type": "str"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "img", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "s", "type": "str"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "s", "type": "str"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "base64", "type": "module"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "join", "type": "Callable"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "cp_logo", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "C", "type": "module"}, {"lineNumber": 46, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "cp_logo", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "search", "type": "Callable"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "pattern", "type": "str"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "xml", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "TestClient"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "urllib", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 81, "col_offset": 66, "nodeName": "shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "urllib", "type": "module"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "urllib", "type": "module"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "cp_logo", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "C", "type": "module"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "cp_logo", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "cp_logo", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "C", "type": "module"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "TestClient"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "img", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 105, "col_offset": 54, "nodeName": "cp_logo", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "locals", "type": "Callable[[], Dict[str, object]]"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "split", "type": "Callable"}, {"lineNumber": 25, "col_offset": 53, "nodeName": "__file__", "type": "str"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "groups", "type": "Callable"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "cp_logo", "type": "Any"}, {"lineNumber": 81, "col_offset": 66, "nodeName": "cp_logo", "type": "Any"}, {"lineNumber": 101, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 101, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "path", "type": "module"}, {"lineNumber": 47, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 66, "nodeName": "i", "type": "int"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "os", "type": "module"}, {"lineNumber": 158, "col_offset": 51, "nodeName": "c", "type": "int"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "c", "type": "int"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "samples_per_pixel", "type": "int"}, {"lineNumber": 158, "col_offset": 56, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 158, "col_offset": 62, "nodeName": "size_c", "type": "int"}]