[{"lineNumber": 36, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "set_headless", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "data", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "fd", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "data", "type": "str"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "fd", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "fn0", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "strel", "type": "numpy.ndarray"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "f0", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "INPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "OUTPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 429, "col_offset": 45, "nodeName": "function", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 430, "col_offset": 34, "nodeName": "INPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 431, "col_offset": 41, "nodeName": "OUTPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "object_set", "type": "cellprofiler.objects.ObjectSet"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 454, "col_offset": 15, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "strel", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 613, "col_offset": 56, "nodeName": "SE_ARBITRARY", "type": "str"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "value_text", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 624, "col_offset": 56, "nodeName": "SE_DIAMOND", "type": "str"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "strel", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 636, "col_offset": 56, "nodeName": "SE_DISK", "type": "str"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "strel", "type": "Any"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 648, "col_offset": 56, "nodeName": "SE_LINE", "type": "str"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "strel", "type": "Any"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 661, "col_offset": 56, "nodeName": "SE_OCTAGON", "type": "str"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "strel", "type": "Any"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 673, "col_offset": 56, "nodeName": "SE_PAIR", "type": "str"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "strel", "type": "Any"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 686, "col_offset": 56, "nodeName": "SE_PERIODIC_LINE", "type": "str"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "strel", "type": "Any"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 691, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 700, "col_offset": 56, "nodeName": "SE_RECTANGLE", "type": "str"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "strel", "type": "Any"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 712, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 713, "col_offset": 56, "nodeName": "SE_SQUARE", "type": "str"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "strel", "type": "Any"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "fd", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "F_DILATE", "type": "str"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 80, "col_offset": 67, "nodeName": "R_ONCE", "type": "str"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 81, "col_offset": 55, "nodeName": "F_ERODE", "type": "str"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 82, "col_offset": 67, "nodeName": "R_CUSTOM", "type": "str"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 84, "col_offset": 55, "nodeName": "F_FILL", "type": "str"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 85, "col_offset": 67, "nodeName": "R_FOREVER", "type": "str"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "fd", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 126, "col_offset": 55, "nodeName": "F_DILATE", "type": "str"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 127, "col_offset": 67, "nodeName": "R_ONCE", "type": "str"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "F_ERODE", "type": "str"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 129, "col_offset": 67, "nodeName": "R_CUSTOM", "type": "str"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 131, "col_offset": 55, "nodeName": "F_FILL", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 132, "col_offset": 67, "nodeName": "R_FOREVER", "type": "str"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 250, "col_offset": 30, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "F_BOTHAT", "type": "str"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "F_BRANCHPOINTS", "type": "str"}, {"lineNumber": 252, "col_offset": 53, "nodeName": "F_BRIDGE", "type": "str"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "F_CLEAN", "type": "str"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "F_CLOSE", "type": "str"}, {"lineNumber": 253, "col_offset": 45, "nodeName": "F_CONVEX_HULL", "type": "str"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "F_DIAG", "type": "str"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "F_DILATE", "type": "str"}, {"lineNumber": 254, "col_offset": 45, "nodeName": "F_DISTANCE", "type": "str"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "F_ENDPOINTS", "type": "str"}, {"lineNumber": 255, "col_offset": 34, "nodeName": "F_ERODE", "type": "str"}, {"lineNumber": 255, "col_offset": 49, "nodeName": "F_FILL", "type": "str"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "F_FILL_SMALL", "type": "str"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "F_HBREAK", "type": "str"}, {"lineNumber": 256, "col_offset": 51, "nodeName": "F_INVERT", "type": "str"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "F_MAJORITY", "type": "str"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "F_OPEN", "type": "str"}, {"lineNumber": 257, "col_offset": 47, "nodeName": "F_REMOVE", "type": "str"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "F_SHRINK", "type": "str"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "F_SKEL", "type": "str"}, {"lineNumber": 258, "col_offset": 45, "nodeName": "F_SKELPE", "type": "str"}, {"lineNumber": 258, "col_offset": 61, "nodeName": "F_SPUR", "type": "str"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "F_THICKEN", "type": "str"}, {"lineNumber": 259, "col_offset": 32, "nodeName": "F_THIN", "type": "str"}, {"lineNumber": 259, "col_offset": 46, "nodeName": "F_TOPHAT", "type": "str"}, {"lineNumber": 259, "col_offset": 62, "nodeName": "F_VBREAK", "type": "str"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "output_image_name", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "function", "type": "Any"}, {"lineNumber": 266, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 266, "col_offset": 32, "nodeName": "ops", "type": "List[str]"}, {"lineNumber": 266, "col_offset": 37, "nodeName": "functions", "type": "Any"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "functions", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "structuring_element", "type": "Any"}, {"lineNumber": 277, "col_offset": 50, "nodeName": "SE_DISK", "type": "str"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "x_offset", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "y_offset", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "angle", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "width", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "height", "type": "Any"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 387, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 390, "col_offset": 30, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 393, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 393, "col_offset": 26, "nodeName": "module", "type": "Any"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "Morph", "type": "Type[cellprofiler.modules.morph.Morph]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 395, "col_offset": 25, "nodeName": "output_image_name", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 13, "nodeName": "functions", "type": "Any"}, {"lineNumber": 398, "col_offset": 17, "nodeName": "get_matrix", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 406, "col_offset": 38, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 407, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 427, "col_offset": 11, "nodeName": "module", "type": "None"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "function", "type": "nothing"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "output_image_name", "type": "Any"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "custom_repeats", "type": "Any"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "value", "type": "str"}, {"lineNumber": 433, "col_offset": 55, "nodeName": "R_ONCE", "type": "str"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "scale", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 440, "col_offset": 46, "nodeName": "scale", "type": "Any"}, {"lineNumber": 441, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 442, "col_offset": 21, "nodeName": "ObjectSet", "type": "Type[cellprofiler.objects.ObjectSet]"}, {"lineNumber": 443, "col_offset": 25, "nodeName": "ImageSetList", "type": "Type[cellprofiler.cpimage.ImageSetList]"}, {"lineNumber": 444, "col_offset": 20, "nodeName": "get_image_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 445, "col_offset": 20, "nodeName": "Workspace", "type": "Type[cellprofiler.workspace.Workspace]"}, {"lineNumber": 445, "col_offset": 34, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 446, "col_offset": 34, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 447, "col_offset": 34, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 448, "col_offset": 34, "nodeName": "object_set", "type": "cellprofiler.objects.ObjectSet"}, {"lineNumber": 450, "col_offset": 34, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 451, "col_offset": 22, "nodeName": "INPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 452, "col_offset": 19, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 453, "col_offset": 17, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 453, "col_offset": 37, "nodeName": "OUTPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 454, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 460, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 460, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 460, "col_offset": 37, "nodeName": "function_name", "type": "Any"}, {"lineNumber": 461, "col_offset": 11, "nodeName": "scale", "type": "Any"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "footprint", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 466, "col_offset": 15, "nodeName": "gray_out", "type": "Any"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 473, "col_offset": 38, "nodeName": "black_tophat", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 476, "col_offset": 45, "nodeName": "branchpoints", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 479, "col_offset": 39, "nodeName": "bridge", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 482, "col_offset": 38, "nodeName": "clean", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 490, "col_offset": 37, "nodeName": "diag", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 498, "col_offset": 42, "nodeName": "endpoints", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 504, "col_offset": 37, "nodeName": "fill", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 511, "col_offset": 49, "nodeName": "fun", "type": "Callable[..., Any]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 514, "col_offset": 39, "nodeName": "hbreak", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 517, "col_offset": 41, "nodeName": "majority", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 525, "col_offset": 39, "nodeName": "remove", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 531, "col_offset": 37, "nodeName": "skeletonize", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 534, "col_offset": 37, "nodeName": "spur", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 537, "col_offset": 40, "nodeName": "thicken", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 540, "col_offset": 37, "nodeName": "thin", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 543, "col_offset": 39, "nodeName": "white_tophat", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 546, "col_offset": 39, "nodeName": "vbreak", "type": "Any"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 555, "col_offset": 41, "nodeName": "distance", "type": "Callable[[Any], Any]"}, {"lineNumber": 561, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 561, "col_offset": 34, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 566, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 566, "col_offset": 37, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 568, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 568, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 574, "col_offset": 39, "nodeName": "invert", "type": "Callable[[Any], Any]"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 578, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 578, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 579, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 579, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 583, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 583, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 584, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 584, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 588, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 588, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 589, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 589, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 594, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 595, "col_offset": 12, "nodeName": "pe", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "binary_tteesstt", "type": "Callable[..., Any]"}, {"lineNumber": 597, "col_offset": 39, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 602, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 602, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 604, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 604, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 604, "col_offset": 37, "nodeName": "F_ERODE", "type": "str"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 612, "col_offset": 17, "nodeName": "Morph", "type": "Type[cellprofiler.modules.morph.Morph]"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "structuring_element", "type": "nothing"}, {"lineNumber": 613, "col_offset": 56, "nodeName": "morph", "type": "module"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "strel", "type": "nothing"}, {"lineNumber": 614, "col_offset": 47, "nodeName": "to_value", "type": "Any"}, {"lineNumber": 614, "col_offset": 73, "nodeName": "strel", "type": "Any"}, {"lineNumber": 616, "col_offset": 19, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 616, "col_offset": 41, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 616, "col_offset": 53, "nodeName": "strel", "type": "Any"}, {"lineNumber": 617, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 617, "col_offset": 30, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 617, "col_offset": 42, "nodeName": "F_DILATE", "type": "str"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 618, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 618, "col_offset": 48, "nodeName": "result", "type": "Any"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 623, "col_offset": 17, "nodeName": "Morph", "type": "Type[cellprofiler.modules.morph.Morph]"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "structuring_element", "type": "nothing"}, {"lineNumber": 624, "col_offset": 56, "nodeName": "morph", "type": "module"}, {"lineNumber": 625, "col_offset": 16, "nodeName": "strel_diamond", "type": "Any"}, {"lineNumber": 627, "col_offset": 19, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 627, "col_offset": 41, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 627, "col_offset": 53, "nodeName": "strel", "type": "Any"}, {"lineNumber": 628, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 628, "col_offset": 30, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 628, "col_offset": 42, "nodeName": "F_DILATE", "type": "str"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 630, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 630, "col_offset": 48, "nodeName": "result", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 635, "col_offset": 17, "nodeName": "Morph", "type": "Type[cellprofiler.modules.morph.Morph]"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "structuring_element", "type": "nothing"}, {"lineNumber": 636, "col_offset": 56, "nodeName": "morph", "type": "module"}, {"lineNumber": 637, "col_offset": 16, "nodeName": "strel_disk", "type": "Any"}, {"lineNumber": 639, "col_offset": 19, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 639, "col_offset": 41, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 639, "col_offset": 53, "nodeName": "strel", "type": "Any"}, {"lineNumber": 640, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 640, "col_offset": 30, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 640, "col_offset": 42, "nodeName": "F_DILATE", "type": "str"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 642, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 642, "col_offset": 48, "nodeName": "result", "type": "Any"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 647, "col_offset": 17, "nodeName": "Morph", "type": "Type[cellprofiler.modules.morph.Morph]"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "structuring_element", "type": "nothing"}, {"lineNumber": 648, "col_offset": 56, "nodeName": "morph", "type": "module"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "angle", "type": "nothing"}, {"lineNumber": 650, "col_offset": 16, "nodeName": "strel_line", "type": "Any"}, {"lineNumber": 652, "col_offset": 19, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 652, "col_offset": 41, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 652, "col_offset": 53, "nodeName": "strel", "type": "Any"}, {"lineNumber": 653, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 653, "col_offset": 30, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 653, "col_offset": 42, "nodeName": "F_DILATE", "type": "str"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 655, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 655, "col_offset": 48, "nodeName": "result", "type": "Any"}, {"lineNumber": 658, "col_offset": 12, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 660, "col_offset": 17, "nodeName": "Morph", "type": "Type[cellprofiler.modules.morph.Morph]"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "structuring_element", "type": "nothing"}, {"lineNumber": 661, "col_offset": 56, "nodeName": "morph", "type": "module"}, {"lineNumber": 662, "col_offset": 16, "nodeName": "strel_octagon", "type": "Any"}, {"lineNumber": 664, "col_offset": 19, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 664, "col_offset": 41, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 664, "col_offset": 53, "nodeName": "strel", "type": "Any"}, {"lineNumber": 665, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 665, "col_offset": 30, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 665, "col_offset": 42, "nodeName": "F_DILATE", "type": "str"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 667, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 667, "col_offset": 48, "nodeName": "result", "type": "Any"}, {"lineNumber": 670, "col_offset": 12, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 672, "col_offset": 17, "nodeName": "Morph", "type": "Type[cellprofiler.modules.morph.Morph]"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "structuring_element", "type": "nothing"}, {"lineNumber": 673, "col_offset": 56, "nodeName": "morph", "type": "module"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "x_offset", "type": "nothing"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "y_offset", "type": "nothing"}, {"lineNumber": 676, "col_offset": 16, "nodeName": "strel_pair", "type": "Any"}, {"lineNumber": 678, "col_offset": 19, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 678, "col_offset": 41, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 678, "col_offset": 53, "nodeName": "strel", "type": "Any"}, {"lineNumber": 679, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 679, "col_offset": 30, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 679, "col_offset": 42, "nodeName": "F_DILATE", "type": "str"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 680, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 680, "col_offset": 48, "nodeName": "result", "type": "Any"}, {"lineNumber": 683, "col_offset": 12, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 685, "col_offset": 17, "nodeName": "Morph", "type": "Type[cellprofiler.modules.morph.Morph]"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "structuring_element", "type": "nothing"}, {"lineNumber": 686, "col_offset": 56, "nodeName": "morph", "type": "module"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "x_offset", "type": "nothing"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "y_offset", "type": "nothing"}, {"lineNumber": 689, "col_offset": 16, "nodeName": "strel_periodicline", "type": "Any"}, {"lineNumber": 691, "col_offset": 19, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 691, "col_offset": 41, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 691, "col_offset": 53, "nodeName": "strel", "type": "Any"}, {"lineNumber": 692, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 692, "col_offset": 30, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 692, "col_offset": 42, "nodeName": "F_DILATE", "type": "str"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 694, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 694, "col_offset": 48, "nodeName": "result", "type": "Any"}, {"lineNumber": 697, "col_offset": 12, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 699, "col_offset": 17, "nodeName": "Morph", "type": "Type[cellprofiler.modules.morph.Morph]"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "structuring_element", "type": "nothing"}, {"lineNumber": 700, "col_offset": 56, "nodeName": "morph", "type": "module"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "width", "type": "nothing"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "height", "type": "nothing"}, {"lineNumber": 703, "col_offset": 16, "nodeName": "strel_rectangle", "type": "Any"}, {"lineNumber": 705, "col_offset": 19, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 705, "col_offset": 41, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 705, "col_offset": 53, "nodeName": "strel", "type": "Any"}, {"lineNumber": 706, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 706, "col_offset": 30, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 706, "col_offset": 42, "nodeName": "F_DILATE", "type": "str"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 707, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 707, "col_offset": 48, "nodeName": "result", "type": "Any"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 712, "col_offset": 17, "nodeName": "Morph", "type": "Type[cellprofiler.modules.morph.Morph]"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "structuring_element", "type": "nothing"}, {"lineNumber": 713, "col_offset": 56, "nodeName": "morph", "type": "module"}, {"lineNumber": 714, "col_offset": 16, "nodeName": "strel_square", "type": "Any"}, {"lineNumber": 716, "col_offset": 19, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 716, "col_offset": 41, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 716, "col_offset": 53, "nodeName": "strel", "type": "Any"}, {"lineNumber": 717, "col_offset": 17, "nodeName": "execute", "type": "Callable[..., Any]"}, {"lineNumber": 717, "col_offset": 30, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 717, "col_offset": 42, "nodeName": "F_DILATE", "type": "str"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 719, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 719, "col_offset": 48, "nodeName": "result", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "decompress", "type": "Callable[..., bytes]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "Morph", "type": "Type[cellprofiler.modules.morph.Morph]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "output_image_name", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "functions", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "morph", "type": "module"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 80, "col_offset": 67, "nodeName": "morph", "type": "module"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 81, "col_offset": 55, "nodeName": "morph", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 82, "col_offset": 67, "nodeName": "morph", "type": "module"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "custom_repeats", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 84, "col_offset": 55, "nodeName": "morph", "type": "module"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 85, "col_offset": 67, "nodeName": "morph", "type": "module"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "decompress", "type": "Callable[..., bytes]"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "Morph", "type": "Type[cellprofiler.modules.morph.Morph]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "output_image_name", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "functions", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 126, "col_offset": 55, "nodeName": "morph", "type": "module"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 127, "col_offset": 67, "nodeName": "morph", "type": "module"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "morph", "type": "module"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 129, "col_offset": 67, "nodeName": "morph", "type": "module"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "custom_repeats", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 131, "col_offset": 55, "nodeName": "morph", "type": "module"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 132, "col_offset": 67, "nodeName": "morph", "type": "module"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 251, "col_offset": 40, "nodeName": "data", "type": "str"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "morph", "type": "module"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "morph", "type": "module"}, {"lineNumber": 252, "col_offset": 53, "nodeName": "morph", "type": "module"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "morph", "type": "module"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "morph", "type": "module"}, {"lineNumber": 253, "col_offset": 45, "nodeName": "morph", "type": "module"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "morph", "type": "module"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "morph", "type": "module"}, {"lineNumber": 254, "col_offset": 45, "nodeName": "morph", "type": "module"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "morph", "type": "module"}, {"lineNumber": 255, "col_offset": 34, "nodeName": "morph", "type": "module"}, {"lineNumber": 255, "col_offset": 49, "nodeName": "morph", "type": "module"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "morph", "type": "module"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "morph", "type": "module"}, {"lineNumber": 256, "col_offset": 51, "nodeName": "morph", "type": "module"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "morph", "type": "module"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "morph", "type": "module"}, {"lineNumber": 257, "col_offset": 47, "nodeName": "morph", "type": "module"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "morph", "type": "module"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "morph", "type": "module"}, {"lineNumber": 258, "col_offset": 45, "nodeName": "morph", "type": "module"}, {"lineNumber": 258, "col_offset": 61, "nodeName": "morph", "type": "module"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "morph", "type": "module"}, {"lineNumber": 259, "col_offset": 32, "nodeName": "morph", "type": "module"}, {"lineNumber": 259, "col_offset": 46, "nodeName": "morph", "type": "module"}, {"lineNumber": 259, "col_offset": 62, "nodeName": "morph", "type": "module"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 262, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 262, "col_offset": 43, "nodeName": "Morph", "type": "Type[cellprofiler.modules.morph.Morph]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "functions", "type": "Any"}, {"lineNumber": 265, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 265, "col_offset": 52, "nodeName": "ops", "type": "List[str]"}, {"lineNumber": 266, "col_offset": 37, "nodeName": "module", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "function", "type": "Any"}, {"lineNumber": 267, "col_offset": 48, "nodeName": "op", "type": "Any"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 268, "col_offset": 21, "nodeName": "F_BRANCHPOINTS", "type": "str"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "custom_repeats", "type": "Any"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "module", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "fn0", "type": "Any"}, {"lineNumber": 277, "col_offset": 50, "nodeName": "morph", "type": "module"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "fn0", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "fn0", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "fn0", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "fn0", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "fn0", "type": "Any"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "get_matrix", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 286, "col_offset": 31, "nodeName": "strel", "type": "numpy.ndarray"}, {"lineNumber": 387, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 391, "col_offset": 40, "nodeName": "data", "type": "str"}, {"lineNumber": 392, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "morph", "type": "module"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 394, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 395, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 396, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "functions", "type": "Any"}, {"lineNumber": 397, "col_offset": 13, "nodeName": "module", "type": "Any"}, {"lineNumber": 398, "col_offset": 17, "nodeName": "strel", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 399, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 399, "col_offset": 29, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 400, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 406, "col_offset": 46, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 406, "col_offset": 55, "nodeName": "expected", "type": "List[List[int]]"}, {"lineNumber": 406, "col_offset": 65, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "SE_ARBITRARY", "type": "str"}, {"lineNumber": 408, "col_offset": 32, "nodeName": "SE_DIAMOND", "type": "str"}, {"lineNumber": 408, "col_offset": 50, "nodeName": "SE_LINE", "type": "str"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "SE_OCTAGON", "type": "str"}, {"lineNumber": 409, "col_offset": 30, "nodeName": "SE_PAIR", "type": "str"}, {"lineNumber": 409, "col_offset": 45, "nodeName": "SE_PERIODIC_LINE", "type": "str"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "SE_RECTANGLE", "type": "str"}, {"lineNumber": 410, "col_offset": 32, "nodeName": "SE_SQUARE", "type": "str"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 411, "col_offset": 29, "nodeName": "structuring_element", "type": "Any"}, {"lineNumber": 411, "col_offset": 52, "nodeName": "se", "type": "Any"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "se", "type": "Any"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "SE_LINE", "type": "str"}, {"lineNumber": 428, "col_offset": 21, "nodeName": "Morph", "type": "Type[cellprofiler.modules.morph.Morph]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "repeats_choice", "type": "nothing"}, {"lineNumber": 433, "col_offset": 55, "nodeName": "morph", "type": "module"}, {"lineNumber": 434, "col_offset": 13, "nodeName": "custom_repeats", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "value", "type": "str"}, {"lineNumber": 435, "col_offset": 55, "nodeName": "R_FOREVER", "type": "str"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "value", "type": "str"}, {"lineNumber": 437, "col_offset": 55, "nodeName": "R_CUSTOM", "type": "str"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 438, "col_offset": 55, "nodeName": "custom_repeats", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "scale", "type": "nothing"}, {"lineNumber": 441, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 442, "col_offset": 21, "nodeName": "cpo", "type": "module"}, {"lineNumber": 443, "col_offset": 25, "nodeName": "cpi", "type": "module"}, {"lineNumber": 444, "col_offset": 20, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 445, "col_offset": 20, "nodeName": "cpw", "type": "module"}, {"lineNumber": 449, "col_offset": 34, "nodeName": "Measurements", "type": "Type[cellprofiler.measurements.Measurements]"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 451, "col_offset": 39, "nodeName": "Image", "type": "Type[cellprofiler.cpimage.Image]"}, {"lineNumber": 451, "col_offset": 49, "nodeName": "image", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 453, "col_offset": 17, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 458, "col_offset": 23, "nodeName": "map", "type": "Callable"}, {"lineNumber": 458, "col_offset": 27, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 458, "col_offset": 31, "nodeName": "function_name", "type": "Any"}, {"lineNumber": 459, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 460, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 460, "col_offset": 58, "nodeName": "scale", "type": "Any"}, {"lineNumber": 460, "col_offset": 80, "nodeName": "custom_repeats", "type": "Any"}, {"lineNumber": 462, "col_offset": 23, "nodeName": "function", "type": "Any"}, {"lineNumber": 462, "col_offset": 32, "nodeName": "input", "type": "Any"}, {"lineNumber": 464, "col_offset": 24, "nodeName": "strel_disk", "type": "Any"}, {"lineNumber": 465, "col_offset": 23, "nodeName": "function", "type": "Any"}, {"lineNumber": 465, "col_offset": 32, "nodeName": "input", "type": "Any"}, {"lineNumber": 467, "col_offset": 23, "nodeName": "expected", "type": "Any"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 473, "col_offset": 38, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 476, "col_offset": 45, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 479, "col_offset": 39, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 482, "col_offset": 38, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 490, "col_offset": 37, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 498, "col_offset": 42, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 504, "col_offset": 37, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 508, "col_offset": 19, "nodeName": "area", "type": "Any"}, {"lineNumber": 510, "col_offset": 19, "nodeName": "fill_labeled_holes", "type": "Any"}, {"lineNumber": 510, "col_offset": 46, "nodeName": "im", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 514, "col_offset": 39, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 517, "col_offset": 41, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 525, "col_offset": 39, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 531, "col_offset": 37, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 534, "col_offset": 37, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 537, "col_offset": 40, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 540, "col_offset": 37, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 543, "col_offset": 39, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 546, "col_offset": 39, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "distance_transform_edt", "type": "Any"}, {"lineNumber": 550, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 552, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 561, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 566, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 568, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 569, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 573, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 578, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 579, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 580, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 583, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 584, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 585, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 588, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 589, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 590, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 594, "col_offset": 16, "nodeName": "distance_transform_edt", "type": "Any"}, {"lineNumber": 594, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 595, "col_offset": 17, "nodeName": "poisson_equation", "type": "Callable[..., Any]"}, {"lineNumber": 595, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 596, "col_offset": 19, "nodeName": "skeletonize", "type": "Any"}, {"lineNumber": 596, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 602, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 603, "col_offset": 16, "nodeName": "image", "type": "Any"}, {"lineNumber": 604, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 604, "col_offset": 37, "nodeName": "morph", "type": "module"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 606, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 611, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 612, "col_offset": 17, "nodeName": "morph", "type": "module"}, {"lineNumber": 614, "col_offset": 47, "nodeName": "BinaryMatrix", "type": "Any"}, {"lineNumber": 615, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 616, "col_offset": 19, "nodeName": "scind", "type": "Any"}, {"lineNumber": 617, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 617, "col_offset": 42, "nodeName": "morph", "type": "module"}, {"lineNumber": 617, "col_offset": 67, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 623, "col_offset": 17, "nodeName": "morph", "type": "module"}, {"lineNumber": 625, "col_offset": 16, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 626, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 627, "col_offset": 19, "nodeName": "scind", "type": "Any"}, {"lineNumber": 628, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 628, "col_offset": 42, "nodeName": "morph", "type": "module"}, {"lineNumber": 629, "col_offset": 39, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 635, "col_offset": 17, "nodeName": "morph", "type": "module"}, {"lineNumber": 637, "col_offset": 16, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 638, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 639, "col_offset": 19, "nodeName": "scind", "type": "Any"}, {"lineNumber": 640, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 640, "col_offset": 42, "nodeName": "morph", "type": "module"}, {"lineNumber": 641, "col_offset": 39, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 647, "col_offset": 17, "nodeName": "morph", "type": "module"}, {"lineNumber": 650, "col_offset": 16, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 651, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 652, "col_offset": 19, "nodeName": "scind", "type": "Any"}, {"lineNumber": 653, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 653, "col_offset": 42, "nodeName": "morph", "type": "module"}, {"lineNumber": 654, "col_offset": 39, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 658, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 660, "col_offset": 17, "nodeName": "morph", "type": "module"}, {"lineNumber": 662, "col_offset": 16, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 663, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 664, "col_offset": 19, "nodeName": "scind", "type": "Any"}, {"lineNumber": 665, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 665, "col_offset": 42, "nodeName": "morph", "type": "module"}, {"lineNumber": 666, "col_offset": 39, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 670, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 672, "col_offset": 17, "nodeName": "morph", "type": "module"}, {"lineNumber": 676, "col_offset": 16, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 677, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 678, "col_offset": 19, "nodeName": "scind", "type": "Any"}, {"lineNumber": 679, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 679, "col_offset": 42, "nodeName": "morph", "type": "module"}, {"lineNumber": 679, "col_offset": 67, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 683, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 685, "col_offset": 17, "nodeName": "morph", "type": "module"}, {"lineNumber": 689, "col_offset": 16, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 691, "col_offset": 19, "nodeName": "scind", "type": "Any"}, {"lineNumber": 692, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 692, "col_offset": 42, "nodeName": "morph", "type": "module"}, {"lineNumber": 693, "col_offset": 39, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 697, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 699, "col_offset": 17, "nodeName": "morph", "type": "module"}, {"lineNumber": 703, "col_offset": 16, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 704, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 705, "col_offset": 19, "nodeName": "scind", "type": "Any"}, {"lineNumber": 706, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 706, "col_offset": 42, "nodeName": "morph", "type": "module"}, {"lineNumber": 706, "col_offset": 67, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 712, "col_offset": 17, "nodeName": "morph", "type": "module"}, {"lineNumber": 714, "col_offset": 16, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 715, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 716, "col_offset": 19, "nodeName": "scind", "type": "Any"}, {"lineNumber": 717, "col_offset": 17, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 717, "col_offset": 42, "nodeName": "morph", "type": "module"}, {"lineNumber": 718, "col_offset": 39, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "zlib", "type": "module"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "b64decode", "type": "Callable[..., bytes]"}, {"lineNumber": 67, "col_offset": 64, "nodeName": "data", "type": "str"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "LoadExceptionEvent", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "modules", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "morph", "type": "module"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "zlib", "type": "module"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "b64decode", "type": "Callable[..., bytes]"}, {"lineNumber": 114, "col_offset": 64, "nodeName": "data", "type": "str"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 117, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 117, "col_offset": 47, "nodeName": "LoadExceptionEvent", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "modules", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "morph", "type": "module"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 249, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 249, "col_offset": 47, "nodeName": "LoadExceptionEvent", "type": "Any"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 260, "col_offset": 29, "nodeName": "modules", "type": "Any"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 262, "col_offset": 43, "nodeName": "morph", "type": "module"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "function", "type": "Any"}, {"lineNumber": 268, "col_offset": 21, "nodeName": "morph", "type": "module"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 33, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 269, "col_offset": 58, "nodeName": "R_FOREVER", "type": "str"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "F_BRIDGE", "type": "str"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "function", "type": "Any"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "function", "type": "Any"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "strel", "type": "Any"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "strel", "type": "numpy.ndarray"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "strel", "type": "numpy.ndarray"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 389, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 389, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 389, "col_offset": 47, "nodeName": "LoadExceptionEvent", "type": "Any"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 392, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 398, "col_offset": 17, "nodeName": "f0", "type": "Any"}, {"lineNumber": 400, "col_offset": 29, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "morph", "type": "module"}, {"lineNumber": 408, "col_offset": 32, "nodeName": "morph", "type": "module"}, {"lineNumber": 408, "col_offset": 50, "nodeName": "morph", "type": "module"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "morph", "type": "module"}, {"lineNumber": 409, "col_offset": 30, "nodeName": "morph", "type": "module"}, {"lineNumber": 409, "col_offset": 45, "nodeName": "morph", "type": "module"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "morph", "type": "module"}, {"lineNumber": 410, "col_offset": 32, "nodeName": "morph", "type": "module"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 411, "col_offset": 29, "nodeName": "f", "type": "Any"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "morph", "type": "module"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 413, "col_offset": 33, "nodeName": "angle", "type": "Any"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 414, "col_offset": 33, "nodeName": "scale", "type": "Any"}, {"lineNumber": 415, "col_offset": 17, "nodeName": "se", "type": "Any"}, {"lineNumber": 415, "col_offset": 23, "nodeName": "SE_PERIODIC_LINE", "type": "str"}, {"lineNumber": 428, "col_offset": 21, "nodeName": "morph", "type": "module"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "repeats_choice", "type": "nothing"}, {"lineNumber": 435, "col_offset": 55, "nodeName": "morph", "type": "module"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "repeats_choice", "type": "nothing"}, {"lineNumber": 437, "col_offset": 55, "nodeName": "morph", "type": "module"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "custom_repeats", "type": "nothing"}, {"lineNumber": 449, "col_offset": 34, "nodeName": "cpmeas", "type": "module"}, {"lineNumber": 451, "col_offset": 39, "nodeName": "cpi", "type": "module"}, {"lineNumber": 451, "col_offset": 61, "nodeName": "mask", "type": "None"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 459, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 464, "col_offset": 24, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 465, "col_offset": 51, "nodeName": "footprint", "type": "Any"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 468, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 470, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 486, "col_offset": 41, "nodeName": "binary_closing", "type": "Any"}, {"lineNumber": 486, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 486, "col_offset": 64, "nodeName": "footprint", "type": "Any"}, {"lineNumber": 494, "col_offset": 43, "nodeName": "binary_dilation", "type": "Any"}, {"lineNumber": 494, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 494, "col_offset": 68, "nodeName": "footprint", "type": "Any"}, {"lineNumber": 501, "col_offset": 48, "nodeName": "binary_erosion", "type": "Any"}, {"lineNumber": 501, "col_offset": 69, "nodeName": "x", "type": "Any"}, {"lineNumber": 510, "col_offset": 19, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 510, "col_offset": 58, "nodeName": "small_hole_fn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 521, "col_offset": 41, "nodeName": "binary_opening", "type": "Any"}, {"lineNumber": 521, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 521, "col_offset": 65, "nodeName": "footprint", "type": "Any"}, {"lineNumber": 528, "col_offset": 48, "nodeName": "binary_shrink", "type": "Any"}, {"lineNumber": 528, "col_offset": 70, "nodeName": "x", "type": "Any"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "scind", "type": "Any"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 551, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 554, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 569, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 569, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 569, "col_offset": 41, "nodeName": "expected", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 578, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 580, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 580, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 583, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 584, "col_offset": 50, "nodeName": "ones", "type": "Any"}, {"lineNumber": 584, "col_offset": 58, "nodeName": "shape", "type": "Any"}, {"lineNumber": 584, "col_offset": 71, "nodeName": "bool", "type": "Any"}, {"lineNumber": 585, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 585, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 585, "col_offset": 41, "nodeName": "image", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 588, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 589, "col_offset": 51, "nodeName": "ones", "type": "Any"}, {"lineNumber": 589, "col_offset": 59, "nodeName": "shape", "type": "Any"}, {"lineNumber": 589, "col_offset": 72, "nodeName": "bool", "type": "Any"}, {"lineNumber": 590, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 590, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 590, "col_offset": 41, "nodeName": "image", "type": "Any"}, {"lineNumber": 594, "col_offset": 16, "nodeName": "scind", "type": "Any"}, {"lineNumber": 595, "col_offset": 17, "nodeName": "cpfilter", "type": "module"}, {"lineNumber": 596, "col_offset": 19, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 602, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 603, "col_offset": 42, "nodeName": "ones", "type": "Any"}, {"lineNumber": 605, "col_offset": 35, "nodeName": "ones", "type": "Any"}, {"lineNumber": 605, "col_offset": 60, "nodeName": "bool", "type": "Any"}, {"lineNumber": 606, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 606, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 611, "col_offset": 16, "nodeName": "r", "type": "Any"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 614, "col_offset": 47, "nodeName": "cps", "type": "module"}, {"lineNumber": 615, "col_offset": 21, "nodeName": "r", "type": "Any"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 626, "col_offset": 21, "nodeName": "r", "type": "Any"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 638, "col_offset": 21, "nodeName": "r", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 651, "col_offset": 21, "nodeName": "r", "type": "Any"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 658, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 663, "col_offset": 21, "nodeName": "r", "type": "Any"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 670, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 677, "col_offset": 21, "nodeName": "r", "type": "Any"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 683, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "r", "type": "Any"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 697, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 704, "col_offset": 21, "nodeName": "r", "type": "Any"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 715, "col_offset": 21, "nodeName": "r", "type": "Any"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "base64", "type": "module"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "base64", "type": "module"}, {"lineNumber": 117, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "functions", "type": "Any"}, {"lineNumber": 249, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 260, "col_offset": 29, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 269, "col_offset": 33, "nodeName": "function", "type": "Any"}, {"lineNumber": 269, "col_offset": 58, "nodeName": "morph", "type": "module"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "morph", "type": "module"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 33, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 271, "col_offset": 58, "nodeName": "R_CUSTOM", "type": "str"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 33, "nodeName": "repeats_choice", "type": "Any"}, {"lineNumber": 273, "col_offset": 58, "nodeName": "R_ONCE", "type": "str"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "fn0", "type": "Any"}, {"lineNumber": 389, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 413, "col_offset": 33, "nodeName": "f", "type": "Any"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 414, "col_offset": 33, "nodeName": "f", "type": "Any"}, {"lineNumber": 415, "col_offset": 23, "nodeName": "morph", "type": "module"}, {"lineNumber": 416, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "x_offset", "type": "Any"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 417, "col_offset": 33, "nodeName": "y_offset", "type": "Any"}, {"lineNumber": 418, "col_offset": 17, "nodeName": "se", "type": "Any"}, {"lineNumber": 418, "col_offset": 23, "nodeName": "SE_RECTANGLE", "type": "str"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 459, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 464, "col_offset": 43, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 464, "col_offset": 49, "nodeName": "scale", "type": "Any"}, {"lineNumber": 468, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 468, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 468, "col_offset": 43, "nodeName": "expected", "type": "Any"}, {"lineNumber": 470, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 470, "col_offset": 61, "nodeName": "eps", "type": "Any"}, {"lineNumber": 486, "col_offset": 41, "nodeName": "scind", "type": "Any"}, {"lineNumber": 494, "col_offset": 43, "nodeName": "scind", "type": "Any"}, {"lineNumber": 501, "col_offset": 48, "nodeName": "scind", "type": "Any"}, {"lineNumber": 501, "col_offset": 72, "nodeName": "ones", "type": "Any"}, {"lineNumber": 501, "col_offset": 86, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 521, "col_offset": 41, "nodeName": "scind", "type": "Any"}, {"lineNumber": 528, "col_offset": 48, "nodeName": "cpmorph", "type": "module"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 554, "col_offset": 27, "nodeName": "max", "type": "Any"}, {"lineNumber": 554, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 578, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 580, "col_offset": 44, "nodeName": "image", "type": "Any"}, {"lineNumber": 583, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 584, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 584, "col_offset": 58, "nodeName": "image", "type": "Any"}, {"lineNumber": 584, "col_offset": 71, "nodeName": "np", "type": "module"}, {"lineNumber": 588, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 589, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 589, "col_offset": 59, "nodeName": "image", "type": "Any"}, {"lineNumber": 589, "col_offset": 72, "nodeName": "np", "type": "module"}, {"lineNumber": 596, "col_offset": 53, "nodeName": "pe", "type": "Any"}, {"lineNumber": 596, "col_offset": 58, "nodeName": "d", "type": "Any"}, {"lineNumber": 602, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 603, "col_offset": 28, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 603, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 603, "col_offset": 53, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 603, "col_offset": 65, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 605, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 605, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 605, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 606, "col_offset": 57, "nodeName": "eps", "type": "Any"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 271, "col_offset": 33, "nodeName": "function", "type": "Any"}, {"lineNumber": 271, "col_offset": 58, "nodeName": "morph", "type": "module"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 273, "col_offset": 33, "nodeName": "function", "type": "Any"}, {"lineNumber": 273, "col_offset": 58, "nodeName": "morph", "type": "module"}, {"lineNumber": 416, "col_offset": 16, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "f", "type": "Any"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 417, "col_offset": 33, "nodeName": "f", "type": "Any"}, {"lineNumber": 418, "col_offset": 23, "nodeName": "morph", "type": "module"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 33, "nodeName": "width", "type": "Any"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 420, "col_offset": 33, "nodeName": "height", "type": "Any"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "functions", "type": "List[nothing]"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 470, "col_offset": 35, "nodeName": "abs", "type": "Any"}, {"lineNumber": 501, "col_offset": 72, "nodeName": "np", "type": "module"}, {"lineNumber": 554, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 578, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 583, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 588, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 602, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 603, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 603, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 603, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 605, "col_offset": 43, "nodeName": "image", "type": "Any"}, {"lineNumber": 606, "col_offset": 40, "nodeName": "image", "type": "Any"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 419, "col_offset": 33, "nodeName": "f", "type": "Any"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "self", "type": "TestMorph"}, {"lineNumber": 420, "col_offset": 33, "nodeName": "f", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.morph.Morph"}, {"lineNumber": 470, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 470, "col_offset": 42, "nodeName": "output", "type": "Any"}, {"lineNumber": 470, "col_offset": 49, "nodeName": "expected", "type": "Any"}, {"lineNumber": 470, "col_offset": 61, "nodeName": "finfo", "type": "Any"}, {"lineNumber": 470, "col_offset": 70, "nodeName": "float32", "type": "Any"}, {"lineNumber": 606, "col_offset": 57, "nodeName": "finfo", "type": "Any"}, {"lineNumber": 606, "col_offset": 66, "nodeName": "float32", "type": "Any"}, {"lineNumber": 470, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 470, "col_offset": 70, "nodeName": "np", "type": "module"}, {"lineNumber": 606, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 606, "col_offset": 66, "nodeName": "np", "type": "module"}]