[{"lineNumber": 13, "col_offset": 0, "nodeName": "__version__", "type": "str"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "smooth_with_noise", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "smooth_with_noise", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "gaussian_filter", "type": "Any"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "image", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "smooth_with_function_and_mask", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 52, "nodeName": "function", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "smooth_with_function_and_mask", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 52, "nodeName": "image", "type": "Any"}, {"lineNumber": 57, "col_offset": 59, "nodeName": "function", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 74, "nodeName": "mask", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "function", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "image", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "smooth_with_function_and_mask", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 52, "nodeName": "image", "type": "Any"}, {"lineNumber": 66, "col_offset": 59, "nodeName": "function", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 74, "nodeName": "mask", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "circular_gaussian_kernel", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "convolve", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "image", "type": "Any"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "circular_gaussian_kernel", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "gaussian_filter", "type": "Any"}, {"lineNumber": 83, "col_offset": 49, "nodeName": "image", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "convolve", "type": "Any"}, {"lineNumber": 84, "col_offset": 40, "nodeName": "image", "type": "Any"}, {"lineNumber": 84, "col_offset": 47, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "cpms", "type": "module"}, {"lineNumber": 23, "col_offset": 37, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestSmoothWithNoise"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestSmoothWithNoise"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "cpms", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestSmoothWithNoise"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestSmoothWithNoise"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestSmoothWithNoise"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestSmoothWithNoise"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestSmoothWithNoise"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "ndimage", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "cpms", "type": "module"}, {"lineNumber": 44, "col_offset": 52, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 45, "col_offset": 52, "nodeName": "self", "type": "TestSmoothWithFunctionAndMask"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 46, "col_offset": 69, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestSmoothWithFunctionAndMask"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "mask", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "cpms", "type": "module"}, {"lineNumber": 57, "col_offset": 59, "nodeName": "self", "type": "TestSmoothWithFunctionAndMask"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestSmoothWithFunctionAndMask"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "self", "type": "TestSmoothWithFunctionAndMask"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "cpms", "type": "module"}, {"lineNumber": 66, "col_offset": 59, "nodeName": "self", "type": "TestSmoothWithFunctionAndMask"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestSmoothWithFunctionAndMask"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "cpms", "type": "module"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "ndimage", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestCircularGaussianKernel"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "cpms", "type": "module"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "ndimage", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "ndimage", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestCircularGaussianKernel"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 23, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "ones", "type": "Any"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 44, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "abs", "type": "Any"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "result", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "abs", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "abs", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "abs", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "abs", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "abs", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "result", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "expected", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "result", "type": "Any"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "expected", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "result", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "result", "type": "Any"}, {"lineNumber": 58, "col_offset": 45, "nodeName": "mask", "type": "Any"}]