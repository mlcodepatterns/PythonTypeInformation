[{"lineNumber": 19, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "cases", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "cases", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "cases", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "reductions", "type": "int"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "expected_costs", "type": "List[Union[float, int]]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "u", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "expected_u", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "expected_v", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "u", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "expected_u", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "expected_v", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "expected_x", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "expected_y", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "j", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "idx", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "count", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "u", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "c", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 243, "col_offset": 14, "nodeName": "ec", "type": "Union[float, int]"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "dd", "type": "List[numpy.ndarray]"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "expected_costs", "type": "List[Union[float, int]]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "c", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 48, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "reduction_transfer", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "u", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "v", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "expected_u", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 61, "nodeName": "u", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 61, "col_offset": 49, "nodeName": "expected_v", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "augmenting_row_reduction", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "u", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "expected_u", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 61, "nodeName": "u", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 98, "col_offset": 49, "nodeName": "expected_v", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "expected_x", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "expected_y", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 54, "nodeName": "y", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 121, "col_offset": 48, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 122, "col_offset": 52, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 123, "col_offset": 56, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 124, "col_offset": 51, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 125, "col_offset": 51, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 126, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 127, "col_offset": 51, "nodeName": "float64", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "float64", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "augment", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "j", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "idx", "type": "Any"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "count", "type": "Any"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 50, "nodeName": "y", "type": "Any"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "u", "type": "Any"}, {"lineNumber": 129, "col_offset": 56, "nodeName": "v", "type": "Any"}, {"lineNumber": 129, "col_offset": 59, "nodeName": "c", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 132, "col_offset": 43, "nodeName": "u", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "v", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "j", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "min_cost", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "best", "type": "None"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "result_cost", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "lapjv", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "c", "type": "Any"}, {"lineNumber": 247, "col_offset": 56, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 48, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "LAPJV", "type": "module"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 53, "col_offset": 50, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "float64", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "LAPJV", "type": "module"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 87, "col_offset": 49, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "ascontiguousarray", "type": "Any"}, {"lineNumber": 92, "col_offset": 48, "nodeName": "float64", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 122, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 41, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 123, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 124, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 125, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 126, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "LAPJV", "type": "module"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 130, "col_offset": 45, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 131, "col_offset": 45, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 132, "col_offset": 46, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "randint", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "j", "type": "Any"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "mgrid", "type": "Any"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "u", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "lapjv", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "i", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "j", "type": "Any"}, {"lineNumber": 146, "col_offset": 63, "nodeName": "reductions", "type": "int"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "c", "type": "Any"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "permutations", "type": "Callable[[Any], Generator[Any, Any, Any]]"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "cost", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "min_cost", "type": "Any"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "result_cost", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "max", "type": "Any"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "LAPJV", "type": "module"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 245, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 245, "col_offset": 50, "nodeName": "astype", "type": "Any"}, {"lineNumber": 245, "col_offset": 64, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 245, "col_offset": 70, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "self", "type": "TestLAPJV"}, {"lineNumber": 248, "col_offset": 56, "nodeName": "ec", "type": "Union[int, float]"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "self", "type": "TestLAPJV"}, {"lineNumber": 249, "col_offset": 56, "nodeName": "ec", "type": "Union[int, float]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 87, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "case", "type": "Dict[Any, Any]"}, {"lineNumber": 92, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "r", "type": "Any"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "j", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "LAPJV", "type": "module"}, {"lineNumber": 146, "col_offset": 44, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "cost", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "min_cost", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "best", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "min_cost", "type": "Any"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "cost", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "self", "type": "TestLAPJV"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 244, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 246, "col_offset": 27, "nodeName": "n", "type": "Any"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 146, "col_offset": 44, "nodeName": "c", "type": "Any"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 152, "col_offset": 36, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "c", "type": "Any"}, {"lineNumber": 154, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 245, "col_offset": 50, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "astype", "type": "Any"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 35, "nodeName": "c", "type": "Any"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "c", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 150, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 154, "col_offset": 54, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 61, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 247, "col_offset": 14, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 248, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 150, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 154, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "arange", "type": "Any"}, {"lineNumber": 248, "col_offset": 47, "nodeName": "n", "type": "Any"}, {"lineNumber": 249, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 249, "col_offset": 49, "nodeName": "n", "type": "Any"}, {"lineNumber": 150, "col_offset": 36, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 48, "nodeName": "i", "type": "int"}]