[{"lineNumber": 24, "col_offset": 0, "nodeName": "IMAGE_NAME", "type": "str"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "set_headless", "type": "Any"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "image", "type": "cellprofiler.cpimage.Image"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "module_num", "type": "int"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "IMAGE_NAME", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "measurements", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "measurements", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "columns", "type": "List[Tuple[Any, Any, str]]"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "e", "type": "Union[Tuple[str, Any, str], Tuple[str, str, str]]"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "expected", "type": "Tuple[Tuple[str, Any, str], Tuple[str, Any, str], Tuple[str, str, str], Tuple[str, Any, str], Tuple[str, Any, str]]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "j", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "order", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "first", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "second", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "value", "type": "int"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "object_name", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "worm_width", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "worm_length", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "angle_count", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "wants_automatic_distance", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "object_name", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "worm_width", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "worm_length", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "angle_count", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "wants_automatic_distance", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "space_distance", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "angular_distance", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "Image", "type": "Type[cellprofiler.cpimage.Image]"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "mask", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "ImageSetList", "type": "Type[cellprofiler.cpimage.ImageSetList]"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "get_image_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "IMAGE_NAME", "type": "str"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "image", "type": "cellprofiler.cpimage.Image"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "IdentifyDeadWorms", "type": "Type[cellprofiler.modules.identifydeadworms.IdentifyDeadWorms]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "object_name", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "Workspace", "type": "Type[cellprofiler.workspace.Workspace]"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 111, "col_offset": 52, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "get_current_image_measurement", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "count", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "get_line_pts", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "binary_fill_holes", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "image", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 48, "nodeName": "image", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "worm_length", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "worm_width", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "angle_count", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "get_current_image_measurement", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "count", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "get_current_measurement", "type": "Any"}, {"lineNumber": 145, "col_offset": 38, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "M_LOCATION_CENTER_X", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "get_current_measurement", "type": "Any"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "M_LOCATION_CENTER_Y", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "get_current_measurement", "type": "Any"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "M_ANGLE", "type": "str"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 160, "col_offset": 35, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "get_line_pts", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "get_line_pts", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "binary_fill_holes", "type": "Any"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "image", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 48, "nodeName": "image", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "worm_length", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "worm_width", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "angle_count", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "get_current_image_measurement", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "count", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "get_current_measurement", "type": "Any"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "M_ANGLE", "type": "str"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "order", "type": "numpy.ndarray"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "order", "type": "numpy.ndarray"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "get_current_measurement", "type": "Any"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "M_LOCATION_CENTER_X", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "get_current_measurement", "type": "Any"}, {"lineNumber": 199, "col_offset": 38, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "M_LOCATION_CENTER_Y", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 18, "nodeName": "get_measurement_columns", "type": "Callable[[Any], List[Tuple[Any, Any, str]]]"}, {"lineNumber": 209, "col_offset": 49, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "find_adjacent_by_distance", "type": "Callable[[Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "find_adjacent_by_distance", "type": "Callable[[Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "space_distance", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "j", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "first", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "second", "type": "Any"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "find_adjacent_by_distance", "type": "Callable[[Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 259, "col_offset": 57, "nodeName": "i", "type": "Any"}, {"lineNumber": 259, "col_offset": 60, "nodeName": "j", "type": "Any"}, {"lineNumber": 259, "col_offset": 63, "nodeName": "a", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "lexsort", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "first", "type": "Any"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "second", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 276, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 276, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[..., Any]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "space_distance", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "j", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "j", "type": "Any"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "unscramble", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "data", "type": "str"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "IdentifyDeadWorms", "type": "Type[cellprofiler.modules.identifydeadworms.IdentifyDeadWorms]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "StringIO", "type": "Any"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "data", "type": "str"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "modules", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "IdentifyDeadWorms", "type": "Type[cellprofiler.modules.identifydeadworms.IdentifyDeadWorms]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "cpi", "type": "module"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "cpi", "type": "module"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "image_set_list", "type": "cellprofiler.cpimage.ImageSetList"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "ID", "type": "module"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "cpw", "type": "module"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "ObjectSet", "type": "Any"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "Measurements", "type": "Type[cellprofiler.measurements.Measurements]"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 119, "col_offset": 67, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "measurements", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "m", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "Measurements", "type": "Type[cellprofiler.measurements.Measurements]"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "I", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "I", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "ID", "type": "module"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "m", "type": "Any"}, {"lineNumber": 181, "col_offset": 38, "nodeName": "Measurements", "type": "Type[cellprofiler.measurements.Measurements]"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "ID", "type": "module"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "a", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "I", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 198, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "I", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 203, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 207, "col_offset": 67, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 208, "col_offset": 35, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 208, "col_offset": 43, "nodeName": "IdentifyDeadWorms", "type": "Type[cellprofiler.modules.identifydeadworms.IdentifyDeadWorms]"}, {"lineNumber": 209, "col_offset": 18, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 209, "col_offset": 49, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "M_LOCATION_CENTER_X", "type": "Any"}, {"lineNumber": 211, "col_offset": 53, "nodeName": "COLTYPE_INTEGER", "type": "str"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "M_LOCATION_CENTER_Y", "type": "Any"}, {"lineNumber": 212, "col_offset": 53, "nodeName": "COLTYPE_INTEGER", "type": "str"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 213, "col_offset": 27, "nodeName": "M_ANGLE", "type": "str"}, {"lineNumber": 213, "col_offset": 39, "nodeName": "COLTYPE_FLOAT", "type": "str"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "M_NUMBER_OBJECT_NUMBER", "type": "Any"}, {"lineNumber": 214, "col_offset": 56, "nodeName": "COLTYPE_INTEGER", "type": "str"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "IMAGE", "type": "str"}, {"lineNumber": 215, "col_offset": 57, "nodeName": "COLTYPE_INTEGER", "type": "str"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "columns", "type": "List[Tuple[Any, Any, str]]"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 216, "col_offset": 43, "nodeName": "expected", "type": "Tuple[Tuple[str, Any, str], Tuple[str, Any, str], Tuple[str, str, str], Tuple[str, Any, str], Tuple[str, Any, str]]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 222, "col_offset": 48, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 222, "col_offset": 67, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 223, "col_offset": 43, "nodeName": "IdentifyDeadWorms", "type": "Type[cellprofiler.modules.identifydeadworms.IdentifyDeadWorms]"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 225, "col_offset": 57, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 226, "col_offset": 57, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 227, "col_offset": 57, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "first", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "second", "type": "Any"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 232, "col_offset": 48, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 232, "col_offset": 67, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 233, "col_offset": 35, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 233, "col_offset": 43, "nodeName": "IdentifyDeadWorms", "type": "Type[cellprofiler.modules.identifydeadworms.IdentifyDeadWorms]"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 235, "col_offset": 57, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 236, "col_offset": 57, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 237, "col_offset": 57, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "first", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "first", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "second", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "second", "type": "Any"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 248, "col_offset": 48, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 248, "col_offset": 67, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 249, "col_offset": 43, "nodeName": "IdentifyDeadWorms", "type": "Type[cellprofiler.modules.identifydeadworms.IdentifyDeadWorms]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "second", "type": "Any"}, {"lineNumber": 260, "col_offset": 36, "nodeName": "first", "type": "Any"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "order", "type": "Any"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "order", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "first", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 264, "col_offset": 29, "nodeName": "second", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 28, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 276, "col_offset": 48, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 276, "col_offset": 67, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 277, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 277, "col_offset": 35, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "IdentifyDeadWorms", "type": "Type[cellprofiler.modules.identifydeadworms.IdentifyDeadWorms]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "j", "type": "Any"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "j", "type": "Any"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 307, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "unscramble", "type": "Any"}, {"lineNumber": 308, "col_offset": 35, "nodeName": "arange", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "first", "type": "Any"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "second", "type": "Any"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "find_adjacent_by_distance", "type": "Callable[[Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 309, "col_offset": 61, "nodeName": "i", "type": "Any"}, {"lineNumber": 309, "col_offset": 64, "nodeName": "j", "type": "Any"}, {"lineNumber": 309, "col_offset": 67, "nodeName": "a", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 312, "col_offset": 28, "nodeName": "first", "type": "Any"}, {"lineNumber": 312, "col_offset": 35, "nodeName": "second", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "LoadExceptionEvent", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "modules", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "ID", "type": "module"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "LoadExceptionEvent", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "modules", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "ID", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "LoadExceptionEvent", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "event", "type": "Any"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "RunExceptionEvent", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "cpo", "type": "module"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "cpmeas", "type": "module"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "C_COUNT", "type": "Any"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "i", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "j", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "cpmeas", "type": "module"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "C_COUNT", "type": "Any"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "ID", "type": "module"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "ID", "type": "module"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "i", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "j", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "i", "type": "Any"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "j", "type": "Any"}, {"lineNumber": 181, "col_offset": 38, "nodeName": "cpmeas", "type": "module"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "C_COUNT", "type": "Any"}, {"lineNumber": 183, "col_offset": 40, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "ID", "type": "module"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "ID", "type": "module"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 43, "nodeName": "ID", "type": "module"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "I", "type": "Any"}, {"lineNumber": 211, "col_offset": 53, "nodeName": "cpmeas", "type": "module"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "I", "type": "Any"}, {"lineNumber": 212, "col_offset": 53, "nodeName": "cpmeas", "type": "module"}, {"lineNumber": 213, "col_offset": 27, "nodeName": "ID", "type": "module"}, {"lineNumber": 213, "col_offset": 39, "nodeName": "cpmeas", "type": "module"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "I", "type": "Any"}, {"lineNumber": 214, "col_offset": 56, "nodeName": "cpmeas", "type": "module"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "cpmeas", "type": "module"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "FF_COUNT", "type": "Any"}, {"lineNumber": 215, "col_offset": 43, "nodeName": "OBJECTS_NAME", "type": "str"}, {"lineNumber": 215, "col_offset": 57, "nodeName": "cpmeas", "type": "module"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 222, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 43, "nodeName": "ID", "type": "module"}, {"lineNumber": 225, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 43, "nodeName": "ID", "type": "module"}, {"lineNumber": 235, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 43, "nodeName": "ID", "type": "module"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "first", "type": "Any"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "second", "type": "Any"}, {"lineNumber": 268, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "second", "type": "Any"}, {"lineNumber": 276, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "ID", "type": "module"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 18, "nodeName": "scramble", "type": "Any"}, {"lineNumber": 301, "col_offset": 18, "nodeName": "scramble", "type": "Any"}, {"lineNumber": 302, "col_offset": 18, "nodeName": "scramble", "type": "Any"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 308, "col_offset": 23, "nodeName": "scramble", "type": "Any"}, {"lineNumber": 308, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "module", "type": "cellprofiler.modules.identifydeadworms.IdentifyDeadWorms"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 310, "col_offset": 33, "nodeName": "first", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 311, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 311, "col_offset": 33, "nodeName": "second", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "cpp", "type": "module"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "I", "type": "Any"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "I", "type": "Any"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "I", "type": "Any"}, {"lineNumber": 192, "col_offset": 33, "nodeName": "order", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "order", "type": "numpy.ndarray"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "order", "type": "numpy.ndarray"}, {"lineNumber": 198, "col_offset": 33, "nodeName": "order", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "order", "type": "numpy.ndarray"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "order", "type": "numpy.ndarray"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "ID", "type": "module"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "ID", "type": "module"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "ID", "type": "module"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "I", "type": "Any"}, {"lineNumber": 219, "col_offset": 71, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 219, "col_offset": 76, "nodeName": "e", "type": "Union[Tuple[str, Any, str], Tuple[str, str, str]]"}, {"lineNumber": 266, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 266, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 268, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 269, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "arange", "type": "Any"}, {"lineNumber": 281, "col_offset": 43, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 281, "col_offset": 76, "nodeName": "ii", "type": "int"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "self", "type": "TestIdentifyDeadWorms"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "ID", "type": "module"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "ID", "type": "module"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "ID", "type": "module"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "ID", "type": "module"}, {"lineNumber": 219, "col_offset": 36, "nodeName": "c", "type": "Tuple[Any, Any, str]"}, {"lineNumber": 219, "col_offset": 41, "nodeName": "columns", "type": "List[Tuple[Any, Any, str]]"}, {"lineNumber": 269, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 281, "col_offset": 43, "nodeName": "r", "type": "Any"}, {"lineNumber": 281, "col_offset": 57, "nodeName": "arange", "type": "Any"}, {"lineNumber": 281, "col_offset": 82, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 281, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 218, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 218, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 218, "col_offset": 51, "nodeName": "y", "type": "Any"}, {"lineNumber": 313, "col_offset": 33, "nodeName": "i", "type": "Any"}, {"lineNumber": 313, "col_offset": 40, "nodeName": "i", "type": "Any"}, {"lineNumber": 313, "col_offset": 54, "nodeName": "j", "type": "Any"}, {"lineNumber": 313, "col_offset": 61, "nodeName": "j", "type": "Any"}, {"lineNumber": 313, "col_offset": 35, "nodeName": "f", "type": "Any"}, {"lineNumber": 313, "col_offset": 42, "nodeName": "s", "type": "Any"}, {"lineNumber": 313, "col_offset": 56, "nodeName": "f", "type": "Any"}, {"lineNumber": 313, "col_offset": 63, "nodeName": "s", "type": "Any"}]