[{"lineNumber": 174, "col_offset": 0, "nodeName": "get_tests_from_xml_files", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 216, "col_offset": 0, "nodeName": "get_suite_from_dictionary", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 0, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "Plugin", "type": "Any"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "Plugin", "type": "Any"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "seterr", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "plugins", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "score", "type": "int"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "plugins", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "factory", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "hierarchy", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "classes", "type": "Dict[Any, Any]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "path", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "paths", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "tests", "type": "List[Any]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "suite", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "suite", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "addplugins", "type": "List[Any]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 297, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "nose", "type": "Any"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "start_vm", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "start_vm", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "patch_start_vm", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "nose", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "xml_test_file", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "SkipTest", "type": "Type[unittest.case.SkipTest]"}, {"lineNumber": 172, "col_offset": 14, "nodeName": "SkipTest", "type": "Type[unittest.case.SkipTest]"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "ContextSuiteFactory", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "xml", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "test_suite", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "get_suite_from_dictionary", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "factory", "type": "Any"}, {"lineNumber": 214, "col_offset": 46, "nodeName": "hierarchy", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "test", "type": "Dict[Any, Any]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "factory", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "tests", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "with_guitests", "type": "bool"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "with_guitests", "type": "bool"}, {"lineNumber": 243, "col_offset": 14, "nodeName": "SkipTest", "type": "Type[unittest.case.SkipTest]"}, {"lineNumber": 245, "col_offset": 26, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "start_vm", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "mock_start_vm", "type": "Callable[..., Any]"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "class_path", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "extra_jvm_args", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 286, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "sys", "type": "module"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "func_globals", "type": "Any"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "javabridge", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "javabridge", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "temp_exampleimages", "type": "None"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "temp_exampleimages", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "temp_images", "type": "None"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "temp_images", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "sys", "type": "module"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "add_option", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "configure", "type": "Any"}, {"lineNumber": 149, "col_offset": 48, "nodeName": "options", "type": "Any"}, {"lineNumber": 149, "col_offset": 57, "nodeName": "conf", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "options", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "xml_test_file", "type": "Any"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "xml_test_file", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "conf", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "self", "type": "LoadTestsFromXML"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "self", "type": "LoadTestsFromXML"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "self", "type": "LoadTestsFromXML"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "tests", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "tests", "type": "Any"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "config", "type": "Any"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "parse", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "path", "type": "Any"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "getElementsByTagName", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "test_case", "type": "Any"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "d", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "test", "type": "Dict[Any, Any]"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 223, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "remove", "type": "Callable"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "set_headless", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "modules", "type": "Dict[str, Union[module, MockModule]]"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "MockModule", "type": "Type[MockModule]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "modules", "type": "Dict[str, Union[module, MockModule]]"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "MockModule", "type": "Type[MockModule]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "use", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "remove", "type": "Callable"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "javabridge", "type": "Any"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "with_guitests", "type": "bool"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "activate_awt", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 34, "nodeName": "mock_start_vm", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "execute_future_in_main_thread", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 51, "nodeName": "mock_start_vm", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "execute_runnable_in_main_thread", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 53, "nodeName": "mock_start_vm", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 18, "nodeName": "CPShutdownPlugin", "type": "Type[CPShutdownPlugin]"}, {"lineNumber": 255, "col_offset": 34, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "get_jars", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "sys", "type": "module"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "javabridge_plugin_class", "type": "None"}, {"lineNumber": 269, "col_offset": 50, "nodeName": "get_patcher_args", "type": "Any"}, {"lineNumber": 269, "col_offset": 67, "nodeName": "class_path", "type": "Any"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "CPShutdownPlugin", "type": "Type[CPShutdownPlugin]"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "score", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "addplugins", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "LoadTestsFromXML", "type": "Type[LoadTestsFromXML]"}, {"lineNumber": 282, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 282, "col_offset": 11, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "nose", "type": "Any"}, {"lineNumber": 295, "col_offset": 19, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 295, "col_offset": 36, "nodeName": "addplugins", "type": "List[Any]"}, {"lineNumber": 298, "col_offset": 10, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "start_vm", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "patch_start_vm", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "os", "type": "module"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "CPShutdownPlugin"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "CPShutdownPlugin"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "CPShutdownPlugin"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "CPShutdownPlugin"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "set_thread_count", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "temp_images", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "temp_exampleimages", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "deactivate_awt", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "the_imagej_context", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "the_imagej_context", "type": "None"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "stopWorkers", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "join_to_the_boundary", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "filename", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "self", "type": "LoadTestsFromXML"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "self", "type": "LoadTestsFromXML"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "options", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "LoadTestsFromXML"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "get_tests_from_xml_files", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 67, "nodeName": "config", "type": "Any"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "xml", "type": "Any"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "getElementsByTagName", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "full_class_name", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "parts", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "leaf", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "hierarchy", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "part", "type": "Any"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "parts", "type": "Any"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "d", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "key", "type": "Any"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "get_suite_from_dictionary", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 45, "nodeName": "factory", "type": "Any"}, {"lineNumber": 222, "col_offset": 54, "nodeName": "test", "type": "Dict[Any, Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "tests", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "cpprefs", "type": "module"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "matplotlib", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "javabridge", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "javabridge", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "javabridge", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 267, "col_offset": 38, "nodeName": "load_entry_point", "type": "Callable[[Union[pkg_resources.Distribution, pkg_resources.Requirement, str], str, str], None]"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "os", "type": "module"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "addplugins", "type": "List[Any]"}, {"lineNumber": 274, "col_offset": 26, "nodeName": "javabridge_plugin_class", "type": "None"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "javabridge_plugin_class", "type": "None"}, {"lineNumber": 298, "col_offset": 10, "nodeName": "sys", "type": "module"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "get_env", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "CLEANUP_PERIOD_MS_DEFAULT", "type": "None"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "GLOBAL_WM", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "self", "type": "CPShutdownPlugin"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "temp_images", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "self", "type": "CPShutdownPlugin"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "temp_exampleimages", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "javabridge", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "imagej2", "type": "module"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "run_script", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "script", "type": "str"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "execute_runnable_in_main_thread", "type": "Any"}, {"lineNumber": 110, "col_offset": 59, "nodeName": "runnable", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "imagej2", "type": "module"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "static_call", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "GLOBAL_WM", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "warn", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "warn", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "LoadTestsFromXML", "type": "Type[LoadTestsFromXML]"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "self", "type": "LoadTestsFromXML"}, {"lineNumber": 163, "col_offset": 46, "nodeName": "xml_test_file", "type": "Any"}, {"lineNumber": 163, "col_offset": 67, "nodeName": "self", "type": "LoadTestsFromXML"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "test_suite", "type": "Any"}, {"lineNumber": 192, "col_offset": 34, "nodeName": "getAttribute", "type": "Any"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "getAttribute", "type": "Any"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 199, "col_offset": 20, "nodeName": "leaf", "type": "Dict[Any, Any]"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 200, "col_offset": 42, "nodeName": "rsplit", "type": "Any"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "test", "type": "Any"}, {"lineNumber": 222, "col_offset": 60, "nodeName": "parts", "type": "List[nothing]"}, {"lineNumber": 258, "col_offset": 13, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "join", "type": "Callable"}, {"lineNumber": 261, "col_offset": 55, "nodeName": "class_path", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "extra_jvm_args", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "javabridge", "type": "Any"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "JClassWrapper", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "event_service_cls", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "shutil", "type": "module"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "self", "type": "CPShutdownPlugin"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "shutil", "type": "module"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "self", "type": "CPShutdownPlugin"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "imagej", "type": "module"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "javabridge", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "javabridge", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "imagej", "type": "module"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "javabridge", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "root", "type": "logging.RootLogger"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "root", "type": "logging.RootLogger"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 163, "col_offset": 46, "nodeName": "self", "type": "LoadTestsFromXML"}, {"lineNumber": 192, "col_offset": 34, "nodeName": "test_case", "type": "Any"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "test_case", "type": "Any"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "full_class_name", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "part", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "leaf", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "leaf", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 200, "col_offset": 42, "nodeName": "full_class_name", "type": "Any"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "full_class_name", "type": "Any"}, {"lineNumber": 202, "col_offset": 46, "nodeName": "classes", "type": "Dict[Any, Any]"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "klass", "type": "Any"}, {"lineNumber": 204, "col_offset": 51, "nodeName": "klass", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "klass", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "klass", "type": "Any"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "klass", "type": "Any"}, {"lineNumber": 209, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "leaf", "type": "Union[Dict[Any, Any], Dict[Any, Dict[Any, Any]]]"}, {"lineNumber": 222, "col_offset": 69, "nodeName": "key", "type": "Any"}, {"lineNumber": 258, "col_offset": 13, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "pathsep", "type": "str"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "javabridge_plugin_class", "type": "None"}, {"lineNumber": 273, "col_offset": 42, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "javabridge", "type": "Any"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "the_imagej_context", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "leaf", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "part", "type": "Any"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "resolve_name", "type": "Any"}, {"lineNumber": 203, "col_offset": 45, "nodeName": "full_class_name", "type": "Any"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "classes", "type": "Dict[Any, Any]"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "classes", "type": "Dict[Any, Any]"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "os", "type": "module"}, {"lineNumber": 273, "col_offset": 42, "nodeName": "os", "type": "module"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "imagej2", "type": "module"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "part", "type": "Any"}, {"lineNumber": 204, "col_offset": 32, "nodeName": "full_class_name", "type": "Any"}, {"lineNumber": 206, "col_offset": 40, "nodeName": "full_class_name", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "imagej", "type": "module"}, {"lineNumber": 213, "col_offset": 36, "nodeName": "full_class_name", "type": "Any"}, {"lineNumber": 213, "col_offset": 53, "nodeName": "name", "type": "Any"}]