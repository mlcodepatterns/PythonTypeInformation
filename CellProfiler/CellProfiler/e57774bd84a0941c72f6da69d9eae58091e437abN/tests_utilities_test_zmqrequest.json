[{"lineNumber": 6, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "CLIENT_MESSAGE", "type": "str"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "SERVER_MESSAGE", "type": "str"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 6, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 6, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "Thread", "type": "Type[threading.Thread]"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 6, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "old_hostname", "type": "Optional[str]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "zmq_context", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "threading", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "MSG_STOP", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "MSG_SEND", "type": "str"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "boundary", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "socket", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "boundary", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "req_socket", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "t", "type": "IO[bytes]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "test_case", "type": "Union[Dict[str, str], Dict[str, Tuple[int, int, int]], Dict[Tuple[int, int, int], str], Dict[int, Dict[str, str]], Dict[str, List[Dict[int, int]]], Dict[str, Tuple[Tuple[int, int, Dict[str, str]]]], Dict[str, Any]]"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "test_cases", "type": "List[Union[Dict[str, str], Dict[str, Tuple[int, int, int]], Dict[Tuple[int, int, int], str], Dict[int, Dict[str, str]], Dict[str, List[Dict[int, int]]], Dict[str, Tuple[Tuple[int, int, Dict[str, str]]]], Dict[str, Any]]]"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "cls", "type": "Type[TestZMQRequest]"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "get", "type": "Callable"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "cls", "type": "Type[TestZMQRequest]"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "Context", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "join_to_the_boundary", "type": "Callable[[], None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "term", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "old_hostname", "type": "Optional[str]"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "old_hostname", "type": "Optional[str]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "notify_addr", "type": "str"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "queue", "type": "queue.Queue[nothing]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "response_queue", "type": "queue.Queue[nothing]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "start_signal", "type": "threading.Semaphore"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "keep_going", "type": "bool"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "analysis_id", "type": "str"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "analysis_id", "type": "str"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "send_notify_socket", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "work_socket", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "notify_socket", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "poller", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "keep_going", "type": "bool"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "analysis_id", "type": "str"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "hex", "type": "str"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "upq", "type": "queue.Queue[nothing]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "boundary", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "server", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "server", "type": "Any"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "server", "type": "Any"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "server", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "start_boundary", "type": "Callable[[], Any]"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "socket", "type": "Any"}, {"lineNumber": 191, "col_offset": 41, "nodeName": "SUB", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "connect", "type": "Any"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "announce_address", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "setsockopt", "type": "Any"}, {"lineNumber": 193, "col_offset": 26, "nodeName": "SUBSCRIBE", "type": "Any"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "recv_json", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "start_boundary", "type": "Callable[[], Any]"}, {"lineNumber": 199, "col_offset": 33, "nodeName": "server", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "socket", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "socket", "type": "Any"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "REQ", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "connect", "type": "Any"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "address", "type": "Any"}, {"lineNumber": 218, "col_offset": 14, "nodeName": "recv_json", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "unlock_file", "type": "Callable[[Any], None]"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "name", "type": "str"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "unlock_file", "type": "Callable[[Any], None]"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "name", "type": "str"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "uint64", "type": "Any"}, {"lineNumber": 248, "col_offset": 32, "nodeName": "int64", "type": "Any"}, {"lineNumber": 248, "col_offset": 42, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "json_string", "type": "str"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "buf", "type": "List[nothing]"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "json_encode", "type": "Callable[[Any], Tuple[str, List[Any]]]"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "json_decode", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 254, "col_offset": 31, "nodeName": "json_string", "type": "str"}, {"lineNumber": 254, "col_offset": 44, "nodeName": "buf", "type": "List[nothing]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 255, "col_offset": 46, "nodeName": "int16", "type": "Any"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "uint64", "type": "Any"}, {"lineNumber": 258, "col_offset": 32, "nodeName": "int64", "type": "Any"}, {"lineNumber": 258, "col_offset": 42, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "old_hostname", "type": "Optional[str]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "zmq", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "Z", "type": "module"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "zmq_context", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "cls", "type": "Type[TestZMQRequest]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "cls", "type": "Type[TestZMQRequest]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "hex", "type": "str"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "setDaemon", "type": "Callable[[Optional[bool]], None]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "Queue", "type": "Type[queue.Queue[Any]]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "Queue", "type": "Type[queue.Queue[Any]]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "Semaphore", "type": "Type[threading.Semaphore]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "start", "type": "Callable[[], None]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "acquire", "type": "Callable[..., bool]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "socket", "type": "Any"}, {"lineNumber": 59, "col_offset": 72, "nodeName": "PAIR", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "connect", "type": "Any"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "notify_addr", "type": "str"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "stop", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "join", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "close", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "socket", "type": "Any"}, {"lineNumber": 73, "col_offset": 65, "nodeName": "REQ", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "connect", "type": "Any"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "request_address", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "socket", "type": "Any"}, {"lineNumber": 75, "col_offset": 67, "nodeName": "PAIR", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "bind", "type": "Any"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "notify_addr", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "Poller", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "register", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "work_socket", "type": "Any"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "POLLIN", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "register", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "notify_socket", "type": "Any"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "POLLIN", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "release", "type": "Any"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "keep_going", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "send", "type": "Any"}, {"lineNumber": 110, "col_offset": 41, "nodeName": "MSG_STOP", "type": "str"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "put", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "req", "type": "cellprofiler.utilities.zmqrequest.AnalysisRequest"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "send", "type": "Any"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "MSG_SEND", "type": "str"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "exception", "type": "nothing"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "result", "type": "nothing"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "get", "type": "Callable"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "exception", "type": "nothing"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "exception", "type": "nothing"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "result", "type": "nothing"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "Queue", "type": "Type[queue.Queue[Any]]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "register_analysis", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "analysis_id", "type": "str"}, {"lineNumber": 128, "col_offset": 66, "nodeName": "upq", "type": "queue.Queue[nothing]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "req", "type": "Any"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "req", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "cancel", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "boundary", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "boundary", "type": "None"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "ZMQServer", "type": "Type[Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "ZMQServer", "type": "Type[Any]"}, {"lineNumber": 157, "col_offset": 55, "nodeName": "client", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "req", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "response", "type": "nothing"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "ZMQServer", "type": "Type[Any]"}, {"lineNumber": 171, "col_offset": 55, "nodeName": "client", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "req", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "response", "type": "nothing"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "ZMQServer", "type": "Type[Any]"}, {"lineNumber": 183, "col_offset": 55, "nodeName": "client", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "response", "type": "nothing"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "Z", "type": "module"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "zmq_context", "type": "Any"}, {"lineNumber": 191, "col_offset": 41, "nodeName": "zmq", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "socket", "type": "Any"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "boundary", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "socket", "type": "Any"}, {"lineNumber": 193, "col_offset": 26, "nodeName": "zmq", "type": "Any"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "socket", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "obj", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "Z", "type": "module"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "ZMQServer", "type": "Type[Any]"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "socket", "type": "Any"}, {"lineNumber": 200, "col_offset": 45, "nodeName": "SUB", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "connect", "type": "Any"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "announce_address", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "setsockopt", "type": "Any"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "SUBSCRIBE", "type": "Any"}, {"lineNumber": 203, "col_offset": 18, "nodeName": "recv_json", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "analysis_id", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "address", "type": "Any"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "obj", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "address", "type": "Any"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "request_address", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "analysis_id", "type": "Any"}, {"lineNumber": 208, "col_offset": 42, "nodeName": "analysis_id", "type": "str"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "zmq_context", "type": "Any"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "zmq", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "req_socket", "type": "Any"}, {"lineNumber": 218, "col_offset": 14, "nodeName": "socket", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "obj", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "lock_file", "type": "Callable[..., bool]"}, {"lineNumber": 223, "col_offset": 36, "nodeName": "name", "type": "str"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "lock_file", "type": "Callable[..., bool]"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "name", "type": "str"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "Z", "type": "module"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "t", "type": "IO[bytes]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "lock_file", "type": "Callable[..., bool]"}, {"lineNumber": 226, "col_offset": 36, "nodeName": "name", "type": "str"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "Z", "type": "module"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "t", "type": "IO[bytes]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "json_string", "type": "str"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "buf", "type": "List[nothing]"}, {"lineNumber": 243, "col_offset": 31, "nodeName": "json_encode", "type": "Callable[[Any], Tuple[str, List[Any]]]"}, {"lineNumber": 243, "col_offset": 45, "nodeName": "test_case", "type": "Union[Dict[str, Any], Dict[str, Tuple[int, int, int]], Dict[Tuple[int, int, int], str], Dict[int, Dict[str, str]], Dict[str, List[Dict[int, int]]], Dict[str, Tuple[Tuple[int, int, Dict[str, str]]]], Dict[str, str]]"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "json_decode", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 244, "col_offset": 35, "nodeName": "json_string", "type": "str"}, {"lineNumber": 244, "col_offset": 48, "nodeName": "buf", "type": "List[nothing]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "same", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "test_case", "type": "Union[Dict[str, Any], Dict[str, Tuple[int, int, int]], Dict[Tuple[int, int, int], str], Dict[int, Dict[str, str]], Dict[str, List[Dict[int, int]]], Dict[str, Tuple[Tuple[int, int, Dict[str, str]]]], Dict[str, str]]"}, {"lineNumber": 245, "col_offset": 33, "nodeName": "result", "type": "Any"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "json_string", "type": "str"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "buf", "type": "List[nothing]"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "json_encode", "type": "Callable[[Any], Tuple[str, List[Any]]]"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "json_decode", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 250, "col_offset": 35, "nodeName": "json_string", "type": "str"}, {"lineNumber": 250, "col_offset": 48, "nodeName": "buf", "type": "List[nothing]"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 251, "col_offset": 50, "nodeName": "int32", "type": "Any"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "Z", "type": "module"}, {"lineNumber": 253, "col_offset": 41, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "Z", "type": "module"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 255, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "json_string", "type": "str"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "buf", "type": "List[nothing]"}, {"lineNumber": 259, "col_offset": 31, "nodeName": "json_encode", "type": "Callable[[Any], Tuple[str, List[Any]]]"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "json_decode", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "json_string", "type": "str"}, {"lineNumber": 260, "col_offset": 48, "nodeName": "buf", "type": "List[nothing]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 264, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "a", "type": "Any"}, {"lineNumber": 265, "col_offset": 38, "nodeName": "b", "type": "Any"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "cls", "type": "Type[TestZMQRequest]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "cls", "type": "Type[TestZMQRequest]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "Thread", "type": "Type[threading.Thread]"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "name", "type": "str"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "queue", "type": "module"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "queue", "type": "module"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "threading", "type": "module"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "start_signal", "type": "threading.Semaphore"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "zmq_context", "type": "Any"}, {"lineNumber": 59, "col_offset": 72, "nodeName": "zmq", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "send_notify_socket", "type": "Any"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "send_notify_socket", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "zmq_context", "type": "Any"}, {"lineNumber": 73, "col_offset": 65, "nodeName": "zmq", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "work_socket", "type": "Any"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "the_boundary", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "zmq_context", "type": "Any"}, {"lineNumber": 75, "col_offset": 67, "nodeName": "zmq", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "notify_socket", "type": "Any"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "zmq", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "poller", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "zmq", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "poller", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "zmq", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "start_signal", "type": "Any"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "close", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "close", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "send_notify_socket", "type": "Any"}, {"lineNumber": 110, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "queue", "type": "queue.Queue[nothing]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "send_notify_socket", "type": "Any"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "response_queue", "type": "queue.Queue[nothing]"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "queue", "type": "module"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "Z", "type": "module"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "get", "type": "Callable"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "timeout", "type": "float"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "cancel", "type": "Any"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "analysis_id", "type": "str"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "ZMQClient", "type": "Type[Any]"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "analysis_id", "type": "str"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "recv", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "req", "type": "Any"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "AnalysisRequest", "type": "Type[cellprofiler.utilities.zmqrequest.AnalysisRequest]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "msg", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "CLIENT_MESSAGE", "type": "str"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "reply", "type": "Any"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "recv", "type": "Callable[[], Any]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "msg", "type": "nothing"}, {"lineNumber": 167, "col_offset": 47, "nodeName": "SERVER_MESSAGE", "type": "str"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "ZMQClient", "type": "Type[Any]"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "analysis_id", "type": "str"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "recv", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "req", "type": "Any"}, {"lineNumber": 174, "col_offset": 43, "nodeName": "AnalysisRequest", "type": "Type[cellprofiler.utilities.zmqrequest.AnalysisRequest]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "msg", "type": "Any"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "CLIENT_MESSAGE", "type": "str"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "cancel", "type": "Callable[[], Any]"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "reply", "type": "Any"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "recv", "type": "Callable[[], Any]"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "response", "type": "nothing"}, {"lineNumber": 179, "col_offset": 48, "nodeName": "BoundaryExited", "type": "Type[cellprofiler.utilities.zmqrequest.BoundaryExited]"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "ZMQClient", "type": "Type[Any]"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "analysis_id", "type": "str"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "cancel", "type": "Callable[[], Any]"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "send", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "recv", "type": "Callable[[], Any]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 38, "nodeName": "response", "type": "nothing"}, {"lineNumber": 187, "col_offset": 48, "nodeName": "BoundaryExited", "type": "Type[cellprofiler.utilities.zmqrequest.BoundaryExited]"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "zmq_context", "type": "Any"}, {"lineNumber": 200, "col_offset": 45, "nodeName": "zmq", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "socket", "type": "Any"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "boundary", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "socket", "type": "Any"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "zmq", "type": "Any"}, {"lineNumber": 203, "col_offset": 18, "nodeName": "socket", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "obj", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "the_boundary", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 208, "col_offset": 42, "nodeName": "server", "type": "Any"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "Z", "type": "module"}, {"lineNumber": 223, "col_offset": 36, "nodeName": "t", "type": "IO[bytes]"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "Z", "type": "module"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "t", "type": "IO[bytes]"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "Z", "type": "module"}, {"lineNumber": 226, "col_offset": 36, "nodeName": "t", "type": "IO[bytes]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 243, "col_offset": 31, "nodeName": "Z", "type": "module"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "Z", "type": "module"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "Z", "type": "module"}, {"lineNumber": 249, "col_offset": 45, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "Z", "type": "module"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 251, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 259, "col_offset": 31, "nodeName": "Z", "type": "module"}, {"lineNumber": 259, "col_offset": 45, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "Z", "type": "module"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 261, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "six", "type": "module"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 267, "col_offset": 32, "nodeName": "b", "type": "Any"}, {"lineNumber": 268, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 268, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "threading", "type": "module"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "TestZMQRequest", "type": "Type[TestZMQRequest]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "TestZMQRequest", "type": "Type[TestZMQRequest]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "Z", "type": "module"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "TestZMQRequest", "type": "Type[TestZMQRequest]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "sock", "type": "Any"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "state", "type": "Any"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "poll", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "put", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "work_socket", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "notify_socket", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "uuid", "type": "module"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "upq", "type": "queue.Queue[nothing]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "boundary", "type": "Any"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "server", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "client", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "AnalysisRequest", "type": "Type[cellprofiler.utilities.zmqrequest.AnalysisRequest]"}, {"lineNumber": 159, "col_offset": 46, "nodeName": "analysis_id", "type": "str"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "server", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "Z", "type": "module"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "req", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "req", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "Reply", "type": "Type[cellprofiler.utilities.zmqrequest.Reply]"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "client", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "response", "type": "nothing"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "server", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "client", "type": "Any"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "AnalysisRequest", "type": "Type[cellprofiler.utilities.zmqrequest.AnalysisRequest]"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "analysis_id", "type": "str"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "server", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 174, "col_offset": 43, "nodeName": "Z", "type": "module"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "req", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "server", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "req", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "Reply", "type": "Type[cellprofiler.utilities.zmqrequest.Reply]"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "client", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 179, "col_offset": 48, "nodeName": "Z", "type": "module"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "server", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "server", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "client", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "AnalysisRequest", "type": "Type[cellprofiler.utilities.zmqrequest.AnalysisRequest]"}, {"lineNumber": 185, "col_offset": 46, "nodeName": "analysis_id", "type": "str"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "client", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 187, "col_offset": 48, "nodeName": "Z", "type": "module"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "obj", "type": "Any"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "Z", "type": "module"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "r", "type": "Any"}, {"lineNumber": 240, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 253, "col_offset": 50, "nodeName": "astype", "type": "Any"}, {"lineNumber": 253, "col_offset": 71, "nodeName": "int16", "type": "Any"}, {"lineNumber": 261, "col_offset": 33, "nodeName": "result", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "uuid", "type": "module"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "poller", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "sock", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "work_socket", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "rep", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "response_queue", "type": "Any"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "e", "type": "Exception"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "Z", "type": "module"}, {"lineNumber": 159, "col_offset": 46, "nodeName": "server", "type": "Any"}, {"lineNumber": 159, "col_offset": 70, "nodeName": "CLIENT_MESSAGE", "type": "str"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "Z", "type": "module"}, {"lineNumber": 165, "col_offset": 38, "nodeName": "SERVER_MESSAGE", "type": "str"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "Z", "type": "module"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "server", "type": "Any"}, {"lineNumber": 172, "col_offset": 70, "nodeName": "CLIENT_MESSAGE", "type": "str"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "Z", "type": "module"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "SERVER_MESSAGE", "type": "str"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "Z", "type": "module"}, {"lineNumber": 185, "col_offset": 46, "nodeName": "server", "type": "Any"}, {"lineNumber": 185, "col_offset": 70, "nodeName": "CLIENT_MESSAGE", "type": "str"}, {"lineNumber": 240, "col_offset": 18, "nodeName": "r", "type": "Any"}, {"lineNumber": 249, "col_offset": 54, "nodeName": "astype", "type": "Any"}, {"lineNumber": 249, "col_offset": 75, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 253, "col_offset": 71, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 54, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 259, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 269, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 269, "col_offset": 42, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "same", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 273, "col_offset": 34, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "aa", "type": "Any"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "bb", "type": "Any"}, {"lineNumber": 275, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 275, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "b", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "recv", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 54, "nodeName": "work_socket", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "put", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "sock", "type": "Any"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "notify_socket", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "msg", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 253, "col_offset": 50, "nodeName": "arange", "type": "Any"}, {"lineNumber": 259, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 271, "col_offset": 32, "nodeName": "k", "type": "Any"}, {"lineNumber": 271, "col_offset": 37, "nodeName": "b", "type": "Any"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 272, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 272, "col_offset": 32, "nodeName": "b", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "a", "type": "Any"}, {"lineNumber": 274, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 274, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "same", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "aa", "type": "Any"}, {"lineNumber": 276, "col_offset": 30, "nodeName": "bb", "type": "Any"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "isscalar", "type": "Any"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 278, "col_offset": 43, "nodeName": "a", "type": "Any"}, {"lineNumber": 278, "col_offset": 46, "nodeName": "b", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 280, "col_offset": 32, "nodeName": "b", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "Communicable", "type": "Type[cellprofiler.utilities.zmqrequest.Communicable]"}, {"lineNumber": 87, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "response_queue", "type": "Any"}, {"lineNumber": 89, "col_offset": 59, "nodeName": "rep", "type": "Any"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "recv", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "msg", "type": "Any"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "MSG_STOP", "type": "Any"}, {"lineNumber": 249, "col_offset": 54, "nodeName": "arange", "type": "Any"}, {"lineNumber": 253, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 272, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "self", "type": "TestZMQRequest"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "Z", "type": "module"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "notify_socket", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "msg", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "MSG_SEND", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "req", "type": "Any"}, {"lineNumber": 249, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "get_nowait", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "send_only", "type": "Any"}, {"lineNumber": 99, "col_offset": 46, "nodeName": "work_socket", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "queue", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "req", "type": "Any"}, {"lineNumber": 99, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "self", "type": "Any"}]