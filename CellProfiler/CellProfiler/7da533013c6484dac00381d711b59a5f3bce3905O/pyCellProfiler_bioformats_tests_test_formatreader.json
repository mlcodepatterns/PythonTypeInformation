[{"lineNumber": 14, "col_offset": 0, "nodeName": "__version__", "type": "str"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "FormatTools", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "ImageReader", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "FormatTools", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "reader", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "ImageReader", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "FormatTools", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "reader", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "shape", "type": "Tuple[Any, Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "attach", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "detach", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "make_format_tools_class", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "CAN_GROUP", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "CANNOT_GROUP", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "DOUBLE", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "INT16", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "INT8", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "MUST_GROUP", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "UINT16", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "UINT32", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "UINT8", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "make_image_reader_class", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "make_format_tools_class", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "ImageReader", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "setId", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "path", "type": "str"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "jdictionary_to_string_dictionary", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "UINT8", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "make_image_reader_class", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "make_format_tools_class", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "ImageReader", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "setId", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "path", "type": "str"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "openBytes", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "J", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "J", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "F", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "FormatTools", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "FormatTools", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "FormatTools", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "FormatTools", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "FormatTools", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "FormatTools", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "FormatTools", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "FormatTools", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "FormatTools", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "FormatTools", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "example_images_directory", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "F", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "F", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "reader", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "getDimensionOrder", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "J", "type": "Any"}, {"lineNumber": 52, "col_offset": 54, "nodeName": "getMetadata", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "getSizeX", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 54, "col_offset": 55, "nodeName": "getSizeY", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "getImageCount", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "getSizeC", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "getSizeT", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "getSizeZ", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "getPixelType", "type": "Any"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "FormatTools", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "getRGBChannelCount", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "example_images_directory", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "F", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "F", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "reader", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "reader", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "getSizeY", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "getSizeX", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 62, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestFormatReader"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "reader", "type": "Any"}, {"lineNumber": 52, "col_offset": 54, "nodeName": "reader", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "reader", "type": "Any"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 54, "col_offset": 55, "nodeName": "reader", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "reader", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "reader", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "reader", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "reader", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "reader", "type": "Any"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "reader", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "reader", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "reader", "type": "Any"}, {"lineNumber": 84, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "expected_0_10_0_10", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "expected_n10_n10", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 53, "nodeName": "data", "type": "Any"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "data", "type": "Any"}]