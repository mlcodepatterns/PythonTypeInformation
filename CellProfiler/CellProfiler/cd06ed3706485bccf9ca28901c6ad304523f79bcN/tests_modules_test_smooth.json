[{"lineNumber": 27, "col_offset": 0, "nodeName": "INPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "OUTPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "make_workspace", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "test_01_01_load_matlab", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_01_02_load_v01", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test_01_03_load_v02", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "test_02_01_fit_polynomial", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "test_03_01_gaussian_auto_small", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "test_03_02_gaussian_auto_large", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "test_03_03_gaussian_manual", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "test_04_01_median", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "test_05_01_bilateral", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "set_headless", "type": "Callable[[], None]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "pipeline", "type": "cellprofiler.pipeline.Pipeline"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "object_set", "type": "cellprofiler.object.ObjectSet"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "image_set_list", "type": "cellprofiler.image.ImageSetList"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "INPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "OUTPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "pipeline", "type": "cellprofiler.pipeline.Pipeline"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "data", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "pipeline", "type": "cellprofiler.pipeline.Pipeline"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "pipeline", "type": "cellprofiler.pipeline.Pipeline"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "clip", "type": "bool"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "sigma", "type": "float"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "GAUSSIAN_FILTER", "type": "str"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "sigma", "type": "float"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "GAUSSIAN_FILTER", "type": "str"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "sigma", "type": "float"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "GAUSSIAN_FILTER", "type": "str"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "value", "type": "bool"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "value", "type": "float"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "object_size", "type": "float"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 214, "col_offset": 40, "nodeName": "MEDIAN_FILTER", "type": "str"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "sigma", "type": "float"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "sigma_range", "type": "float"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "SMOOTH_KEEPING_EDGES", "type": "str"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "value", "type": "float"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "sigma_range", "type": "float"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "value", "type": "bool"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "value", "type": "float"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "Smooth", "type": "Type[cellprofiler.modules.smooth.Smooth]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "Pipeline", "type": "Type[cellprofiler.pipeline.Pipeline]"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "ObjectSet", "type": "Type[cellprofiler.object.ObjectSet]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "ImageSetList", "type": "Type[cellprofiler.image.ImageSetList]"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "get_image_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "Workspace", "type": "Type[cellprofiler.workspace.Workspace]"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "pipeline", "type": "cellprofiler.pipeline.Pipeline"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "object_set", "type": "cellprofiler.object.ObjectSet"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "image_set_list", "type": "cellprofiler.image.ImageSetList"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "INPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "image_name", "type": "cellprofiler.setting.ImageNameSubscriber"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "filtered_image_name", "type": "cellprofiler.setting.ImageNameProvider"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "b64decode", "type": "Callable[..., str]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "Pipeline", "type": "Type[cellprofiler.pipeline.Pipeline]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "load", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "FIT_POLYNOMIAL", "type": "str"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "wants_automatic_object_size", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "b64decode", "type": "Callable[..., str]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "decompress", "type": "Callable[..., str]"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "data", "type": "str"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "Pipeline", "type": "Type[cellprofiler.pipeline.Pipeline]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "load", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "FIT_POLYNOMIAL", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "wants_automatic_object_size", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "clip", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "Pipeline", "type": "Type[cellprofiler.pipeline.Pipeline]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "load", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "filtered_image_name", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "wants_automatic_object_size", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "object_size", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "smoothing_method", "type": "Any"}, {"lineNumber": 129, "col_offset": 50, "nodeName": "MEDIAN_FILTER", "type": "str"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "j", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "value", "type": "str"}, {"lineNumber": 149, "col_offset": 44, "nodeName": "FIT_POLYNOMIAL", "type": "str"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "value", "type": "bool"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "clip", "type": "bool"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 160, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 161, "col_offset": 36, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "smooth_with_function_and_mask", "type": "Any"}, {"lineNumber": 164, "col_offset": 49, "nodeName": "image", "type": "Any"}, {"lineNumber": 164, "col_offset": 56, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 60, "nodeName": "mask", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 165, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 48, "nodeName": "image", "type": "Any"}, {"lineNumber": 165, "col_offset": 55, "nodeName": "mask", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "smoothing_method", "type": "cellprofiler.setting.Choice"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "S", "type": "module"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 168, "col_offset": 47, "nodeName": "OUTPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 170, "col_offset": 58, "nodeName": "expected", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 175, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 36, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "smooth_with_function_and_mask", "type": "Any"}, {"lineNumber": 179, "col_offset": 49, "nodeName": "image", "type": "Any"}, {"lineNumber": 179, "col_offset": 56, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 60, "nodeName": "mask", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 48, "nodeName": "image", "type": "Any"}, {"lineNumber": 180, "col_offset": 55, "nodeName": "mask", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "smoothing_method", "type": "cellprofiler.setting.Choice"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "S", "type": "module"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 183, "col_offset": 47, "nodeName": "OUTPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 185, "col_offset": 58, "nodeName": "expected", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 191, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "smooth_with_function_and_mask", "type": "Any"}, {"lineNumber": 195, "col_offset": 49, "nodeName": "image", "type": "Any"}, {"lineNumber": 195, "col_offset": 56, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 60, "nodeName": "mask", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 196, "col_offset": 48, "nodeName": "image", "type": "Any"}, {"lineNumber": 196, "col_offset": 55, "nodeName": "mask", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "smoothing_method", "type": "cellprofiler.setting.Choice"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "S", "type": "module"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "wants_automatic_object_size", "type": "cellprofiler.setting.Binary"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "object_size", "type": "cellprofiler.setting.Float"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 201, "col_offset": 47, "nodeName": "OUTPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 203, "col_offset": 39, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 203, "col_offset": 58, "nodeName": "expected", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 209, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 210, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 210, "col_offset": 36, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "median_filter", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "image", "type": "Any"}, {"lineNumber": 212, "col_offset": 40, "nodeName": "mask", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 213, "col_offset": 48, "nodeName": "image", "type": "Any"}, {"lineNumber": 213, "col_offset": 55, "nodeName": "mask", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "smoothing_method", "type": "cellprofiler.setting.Choice"}, {"lineNumber": 214, "col_offset": 40, "nodeName": "S", "type": "module"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 216, "col_offset": 47, "nodeName": "OUTPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 218, "col_offset": 39, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 218, "col_offset": 58, "nodeName": "expected", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 225, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 226, "col_offset": 36, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "denoise_bilateral", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "make_workspace", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 234, "col_offset": 48, "nodeName": "image", "type": "Any"}, {"lineNumber": 234, "col_offset": 55, "nodeName": "mask", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "smoothing_method", "type": "cellprofiler.setting.Choice"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "S", "type": "module"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "sigma_range", "type": "cellprofiler.setting.Float"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "wants_automatic_object_size", "type": "cellprofiler.setting.Binary"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "object_size", "type": "cellprofiler.setting.Float"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 240, "col_offset": 47, "nodeName": "OUTPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 242, "col_offset": 58, "nodeName": "expected", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "S", "type": "module"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "cpo", "type": "module"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "cpi", "type": "module"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "image_set_list", "type": "cellprofiler.image.ImageSetList"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "cpw", "type": "module"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "Measurements", "type": "Type[cellprofiler.measurement.Measurements]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "Image", "type": "Type[cellprofiler.image.Image]"}, {"lineNumber": 45, "col_offset": 50, "nodeName": "image", "type": "Any"}, {"lineNumber": 45, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "base64", "type": "module"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "pipeline", "type": "cellprofiler.pipeline.Pipeline"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "data", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "modules", "type": "Callable[..., List[Any]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "filtered_image_name", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "smoothing_method", "type": "Any"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "S", "type": "module"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "base64", "type": "module"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "zlib", "type": "module"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "pipeline", "type": "cellprofiler.pipeline.Pipeline"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "data", "type": "str"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "modules", "type": "Callable[..., List[Any]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "image_name", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "filtered_image_name", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "smoothing_method", "type": "Any"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "S", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "cpp", "type": "module"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "pipeline", "type": "cellprofiler.pipeline.Pipeline"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "StringIO", "type": "Type[StringIO.StringIO[Any]]"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "data", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "modules", "type": "Callable[..., List[Any]]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "Smooth", "type": "Type[cellprofiler.modules.smooth.Smooth]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 129, "col_offset": 50, "nodeName": "S", "type": "module"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 140, "col_offset": 54, "nodeName": "pi", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "image", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "fit_polynomial", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "image", "type": "Any"}, {"lineNumber": 146, "col_offset": 45, "nodeName": "mask", "type": "Any"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "clip", "type": "bool"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 72, "nodeName": "clip", "type": "bool"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "make_workspace", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 148, "col_offset": 52, "nodeName": "image", "type": "Any"}, {"lineNumber": 148, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "smoothing_method", "type": "cellprofiler.setting.Choice"}, {"lineNumber": 149, "col_offset": 44, "nodeName": "S", "type": "module"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "clip", "type": "cellprofiler.setting.Binary"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "get_image", "type": "Any"}, {"lineNumber": 152, "col_offset": 51, "nodeName": "OUTPUT_IMAGE_NAME", "type": "str"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 154, "col_offset": 43, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 154, "col_offset": 62, "nodeName": "expected", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 160, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "image", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "gaussian_filter", "type": "Any"}, {"lineNumber": 163, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "sigma", "type": "float"}, {"lineNumber": 165, "col_offset": 28, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 175, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "image", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "gaussian_filter", "type": "Any"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "sigma", "type": "float"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 191, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "image", "type": "Any"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "gaussian_filter", "type": "Any"}, {"lineNumber": 194, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "sigma", "type": "float"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 203, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 209, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 23, "nodeName": "image", "type": "Any"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 218, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 225, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "image", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "restoration", "type": "Any"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "image", "type": "Any"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "sigma_range", "type": "float"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "sigma", "type": "float"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "cpmeas", "type": "module"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "cpi", "type": "module"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "StringIO", "type": "module"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "modules", "type": "Callable[..., List[Any]]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "pipeline", "type": "cellprofiler.pipeline.Pipeline"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "StringIO", "type": "module"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "modules", "type": "Callable[..., List[Any]]"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "pipeline", "type": "cellprofiler.pipeline.Pipeline"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "smooth", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "StringIO", "type": "module"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "modules", "type": "Callable[..., List[Any]]"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "pipeline", "type": "cellprofiler.pipeline.Pipeline"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "S", "type": "module"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 140, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "all", "type": "Any"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.smooth.Smooth"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "TestSmooth"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 154, "col_offset": 43, "nodeName": "result", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 212, "col_offset": 46, "nodeName": "object_size", "type": "float"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "skimage", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "pipeline", "type": "cellprofiler.pipeline.Pipeline"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "pipeline", "type": "cellprofiler.pipeline.Pipeline"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "pipeline", "type": "cellprofiler.pipeline.Pipeline"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "sin", "type": "Any"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "i", "type": "Any"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "cos", "type": "Any"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "j", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "workspace", "type": "cellprofiler.workspace.Workspace"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "mgrid", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "expected", "type": "Any"}, {"lineNumber": 147, "col_offset": 55, "nodeName": "expected", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "np", "type": "module"}]