[{"lineNumber": 80, "col_offset": 0, "nodeName": "test_color_to_color", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "test_color_to_bw", "type": "Callable[[], Any]"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "test_bw_to_color", "type": "Callable[[], Any]"}, {"lineNumber": 162, "col_offset": 0, "nodeName": "test_bw_to_bw", "type": "Callable[[], Any]"}, {"lineNumber": 194, "col_offset": 0, "nodeName": "test_missing_image", "type": "Callable[[], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "I_RED_IN", "type": "str"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "I_GREEN_IN", "type": "str"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "I_BLUE_IN", "type": "str"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "I_COLOR_IN", "type": "str"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "I_COLOR_OUT", "type": "str"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "image_set_list", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "provider", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "providers", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "ImageSetList", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "get_image_set", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "InvertForPrinting", "type": "Type[cellprofiler.modules.invertforprinting.InvertForPrinting]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "set_module_num", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "value", "type": "str"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "name", "type": "str"}, {"lineNumber": 56, "col_offset": 7, "nodeName": "fn", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "add_listener", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "Workspace", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "image_set_list", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "run", "type": "Callable[[Any], None]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "pixel_data", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 82, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "CC_COLOR", "type": "str"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "CC_COLOR", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "run_module", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "I_COLOR_OUT", "type": "str"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "o", "type": "int"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "i1", "type": "int"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "i2", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "diff", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 108, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "CC_COLOR", "type": "str"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "CC_GRAYSCALE", "type": "str"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "run_module", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "o", "type": "int"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "i1", "type": "int"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "i2", "type": "int"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "diff", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 134, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "CC_GRAYSCALE", "type": "str"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "CC_COLOR", "type": "str"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "run_module", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "I_COLOR_OUT", "type": "str"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "o", "type": "int"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "i1", "type": "int"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "i2", "type": "int"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 164, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "CC_GRAYSCALE", "type": "str"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "CC_GRAYSCALE", "type": "str"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "run_module", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "o", "type": "int"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "i1", "type": "int"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "i2", "type": "int"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 196, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "image", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "image_set_list", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "I_COLOR_IN", "type": "str"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "color_input_image", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "red_image", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "I_RED_IN", "type": "str"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "red_input_image", "type": "Any"}, {"lineNumber": 37, "col_offset": 54, "nodeName": "wants_red_input", "type": "Any"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "green_image", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "I_GREEN_IN", "type": "str"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "green_input_image", "type": "Any"}, {"lineNumber": 38, "col_offset": 60, "nodeName": "wants_green_input", "type": "Any"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "blue_image", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "I_BLUE_IN", "type": "str"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "blue_input_image", "type": "Any"}, {"lineNumber": 39, "col_offset": 57, "nodeName": "wants_blue_input", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "image", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "img", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "I_COLOR_OUT", "type": "str"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "color_output_image", "type": "Any"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "red_output_image", "type": "Any"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "green_output_image", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "blue_output_image", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "setting", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "fn", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "ObjectSet", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "Measurements", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 82, "col_offset": 64, "nodeName": "numpy", "type": "module"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "InvertForPrinting", "type": "Type[cellprofiler.modules.invertforprinting.InvertForPrinting]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "I_COLOR_OUT", "type": "str"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 108, "col_offset": 64, "nodeName": "numpy", "type": "module"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "InvertForPrinting", "type": "Type[cellprofiler.modules.invertforprinting.InvertForPrinting]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 134, "col_offset": 64, "nodeName": "numpy", "type": "module"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "InvertForPrinting", "type": "Type[cellprofiler.modules.invertforprinting.InvertForPrinting]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "I_COLOR_OUT", "type": "str"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 164, "col_offset": 64, "nodeName": "numpy", "type": "module"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "InvertForPrinting", "type": "Type[cellprofiler.modules.invertforprinting.InvertForPrinting]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 187, "col_offset": 44, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 196, "col_offset": 64, "nodeName": "numpy", "type": "module"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "CC_GRAYSCALE", "type": "str"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "CC_GRAYSCALE", "type": "str"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "run_module", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "o", "type": "int"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "i1", "type": "int"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "i2", "type": "int"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "cellprofiler_core", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "modules", "type": "module"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 37, "col_offset": 54, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 38, "col_offset": 60, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 39, "col_offset": 57, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "Image", "type": "Any"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "image", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "img", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "setting", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "check", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "value", "type": "bool"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "check", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "value", "type": "bool"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "cellprofiler_core", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "event", "type": "Any"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "RunException", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "cellprofiler_core", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "object", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "measurement", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "provide_image", "type": "Any"}, {"lineNumber": 76, "col_offset": 61, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "modules", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "modules", "type": "module"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 103, "col_offset": 44, "nodeName": "eps", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "modules", "type": "module"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "modules", "type": "module"}, {"lineNumber": 124, "col_offset": 9, "nodeName": "color", "type": "str"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "color", "type": "str"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 126, "col_offset": 46, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "eps", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "modules", "type": "module"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "modules", "type": "module"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "modules", "type": "module"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "modules", "type": "module"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 185, "col_offset": 9, "nodeName": "color", "type": "str"}, {"lineNumber": 185, "col_offset": 37, "nodeName": "color", "type": "str"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 187, "col_offset": 46, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "module", "type": "cellprofiler.modules.invertforprinting.InvertForPrinting"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "InvertForPrinting", "type": "Type[cellprofiler.modules.invertforprinting.InvertForPrinting]"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 227, "col_offset": 32, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 227, "col_offset": 48, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "image", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "image_set", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "check", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "check", "type": "Any"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "event", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "cellprofiler_core", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "cellprofiler_core", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "provider", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "diff", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 124, "col_offset": 47, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 124, "col_offset": 58, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 124, "col_offset": 71, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "o", "type": "int"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "diff", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 185, "col_offset": 47, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 185, "col_offset": 58, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 185, "col_offset": 71, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "o", "type": "int"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "invertforprinting", "type": "module"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "modules", "type": "module"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "modules", "type": "module"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 223, "col_offset": 39, "nodeName": "present", "type": "Tuple[bool, bool, bool]"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "color", "type": "str"}, {"lineNumber": 225, "col_offset": 41, "nodeName": "color", "type": "str"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 227, "col_offset": 50, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "cellprofiler_core", "type": "Any"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "provider", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "o", "type": "int"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 103, "col_offset": 44, "nodeName": "finfo", "type": "Any"}, {"lineNumber": 103, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 128, "col_offset": 63, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "finfo", "type": "Any"}, {"lineNumber": 129, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "o", "type": "int"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 158, "col_offset": 65, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 190, "col_offset": 59, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "modules", "type": "module"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "present", "type": "Tuple[bool, bool, bool]"}, {"lineNumber": 218, "col_offset": 22, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "present", "type": "Tuple[bool, bool, bool]"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 220, "col_offset": 47, "nodeName": "present", "type": "Tuple[bool, bool, bool]"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 225, "col_offset": 51, "nodeName": "I_RED_OUT", "type": "str"}, {"lineNumber": 225, "col_offset": 62, "nodeName": "I_GREEN_OUT", "type": "str"}, {"lineNumber": 225, "col_offset": 75, "nodeName": "I_BLUE_OUT", "type": "str"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "o", "type": "int"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "cellprofiler_core", "type": "Any"}, {"lineNumber": 103, "col_offset": 44, "nodeName": "numpy", "type": "module"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "numpy", "type": "module"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "cellprofiler", "type": "module"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 232, "col_offset": 50, "nodeName": "present", "type": "Tuple[bool, bool, bool]"}, {"lineNumber": 233, "col_offset": 52, "nodeName": "present", "type": "Tuple[bool, bool, bool]"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "i1", "type": "int"}, {"lineNumber": 101, "col_offset": 65, "nodeName": "i2", "type": "int"}, {"lineNumber": 128, "col_offset": 51, "nodeName": "i1", "type": "int"}, {"lineNumber": 128, "col_offset": 81, "nodeName": "i2", "type": "int"}, {"lineNumber": 158, "col_offset": 53, "nodeName": "i1", "type": "int"}, {"lineNumber": 158, "col_offset": 83, "nodeName": "i2", "type": "int"}, {"lineNumber": 190, "col_offset": 47, "nodeName": "i1", "type": "int"}, {"lineNumber": 190, "col_offset": 77, "nodeName": "i2", "type": "int"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 232, "col_offset": 58, "nodeName": "i1", "type": "int"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 233, "col_offset": 60, "nodeName": "i2", "type": "int"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "color_image", "type": "Any"}, {"lineNumber": 232, "col_offset": 43, "nodeName": "i1", "type": "int"}, {"lineNumber": 233, "col_offset": 45, "nodeName": "i2", "type": "int"}]