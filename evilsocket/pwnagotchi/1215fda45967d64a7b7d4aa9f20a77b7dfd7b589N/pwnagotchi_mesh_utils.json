[{"lineNumber": 13, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "_config", "type": "Any"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "_view", "type": "Any"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "view", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "_keypair", "type": "Any"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "keypair", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "_peers", "type": "Dict[Any, Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "_closest_peer", "type": "None"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "new", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "version", "type": "str"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "fingerprint", "type": "Any"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "FRIEND", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "start_new_thread", "type": "Callable[..., int]"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "_adv_poller", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "_advertisement", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 46, "nodeName": "_handshakes", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "_advertisement", "type": "Dict[str, Any]"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "total_unique_handshakes", "type": "Callable[[Any], int]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "_advertisement", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "uptime", "type": "Callable[[], int]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "_advertisement", "type": "Dict[str, Any]"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "_epoch", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "set_advertisement_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "_advertisement", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_advertisement", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "set_advertisement_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "_advertisement", "type": "Dict[str, Any]"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "name", "type": "Callable[[], Any]"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "pwnagotchi", "type": "module"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "_keypair", "type": "Any"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "faces", "type": "module"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "_config", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "_thread", "type": "module"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 35, "col_offset": 46, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "utils", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "pwnagotchi", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "grid", "type": "module"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "_config", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "set_advertisement_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "_advertisement", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "advertise", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "on_state_change", "type": "Any"}, {"lineNumber": 45, "col_offset": 47, "nodeName": "_on_face_change", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "grid", "type": "module"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "grid_peers", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "new_peers", "type": "Dict[Any, pwnagotchi.mesh.peer.Peer]"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "_closest_peer", "type": "None"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "obj", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "grid_peers", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "to_delete", "type": "List[nothing]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "ident", "type": "nothing"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "to_delete", "type": "List[nothing]"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "new_peers", "type": "Dict[Any, pwnagotchi.mesh.peer.Peer]"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "pwnagotchi", "type": "module"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 36, "col_offset": 72, "nodeName": "_config", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "grid", "type": "module"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "grid", "type": "module"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "_view", "type": "Any"}, {"lineNumber": 45, "col_offset": 47, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "peers", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "peer", "type": "pwnagotchi.mesh.peer.Peer"}, {"lineNumber": 64, "col_offset": 49, "nodeName": "peer", "type": "pwnagotchi.mesh.peer.Peer"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "ident", "type": "nothing"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "peer", "type": "nothing"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "items", "type": "Callable"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "ident", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "peer", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "time", "type": "module"}, {"lineNumber": 36, "col_offset": 72, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "grid", "type": "module"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "Peer", "type": "Type[pwnagotchi.mesh.peer.Peer]"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "new_peers", "type": "Dict[Any, pwnagotchi.mesh.peer.Peer]"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "_closest_peer", "type": "None"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "_closest_peer", "type": "pwnagotchi.mesh.peer.Peer"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "peer", "type": "pwnagotchi.mesh.peer.Peer"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "_peers", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "ident", "type": "nothing"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "new_peers", "type": "Dict[Any, pwnagotchi.mesh.peer.Peer]"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "_peers", "type": "Dict[Any, Any]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "ident", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "_peers", "type": "Dict[Any, Any]"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "peer", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "on_lost_peer", "type": "Any"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "peer", "type": "nothing"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "on", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 48, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 73, "col_offset": 54, "nodeName": "peer", "type": "nothing"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "ident", "type": "nothing"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "ident", "type": "nothing"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "_peers", "type": "Dict[Any, Any]"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "on_new_peer", "type": "Any"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "peer", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "on", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 84, "col_offset": 58, "nodeName": "peer", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "update", "type": "Any"}, {"lineNumber": 87, "col_offset": 50, "nodeName": "peer", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "logging", "type": "module"}, {"lineNumber": 90, "col_offset": 71, "nodeName": "e", "type": "Exception"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "identity", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "_view", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "plugins", "type": "module"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "to_delete", "type": "List[nothing]"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "ident", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "_view", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "plugins", "type": "module"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "peer", "type": "pwnagotchi.mesh.peer.Peer"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "_peers", "type": "Dict[Any, Any]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "self", "type": "AsyncAdvertiser"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "ident", "type": "Any"}]