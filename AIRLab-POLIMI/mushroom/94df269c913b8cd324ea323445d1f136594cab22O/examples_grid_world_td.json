[{"lineNumber": 28, "col_offset": 0, "nodeName": "experiment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2, "col_offset": 0, "nodeName": "use", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "mdp", "type": "mushroom.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "epsilon", "type": "mushroom.utils.parameters.ExponentialParameter"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "pi", "type": "mushroom.policy.td_policy.EpsGreedy"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "learning_rate", "type": "mushroom.utils.parameters.ExponentialParameter"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "agent", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "start", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "collect_max_Q", "type": "mushroom.utils.callbacks.CollectMaxQ"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "collect_dataset", "type": "mushroom.utils.callbacks.CollectDataset"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "callbacks", "type": "List[Union[mushroom.utils.callbacks.CollectDataset, mushroom.utils.callbacks.CollectMaxQ]]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "core", "type": "mushroom.core.core.Core"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "max_Qs", "type": "List[nothing]"}, {"lineNumber": 59, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "n_experiment", "type": "int"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "names", "type": "Dict[Union[int, float, Type[mushroom.algorithms.value.td.q_learning.QLearning], Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning], Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning], Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning], Type[mushroom.algorithms.value.td.sarsa.SARSA]], str]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "e", "type": "Union[int, float]"}, {"lineNumber": 2, "col_offset": 0, "nodeName": "matplotlib", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "GridWorldVanHasselt", "type": "Type[mushroom.environments.grid_world.GridWorldVanHasselt]"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "ExponentialParameter", "type": "Type[mushroom.utils.parameters.ExponentialParameter]"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "EpsGreedy", "type": "Type[mushroom.policy.td_policy.EpsGreedy]"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "ExponentialParameter", "type": "Type[mushroom.utils.parameters.ExponentialParameter]"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "algorithm_class", "type": "Any"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "info", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "pi", "type": "mushroom.policy.td_policy.EpsGreedy"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "convert_to_int", "type": "Callable[[Any, Any], numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "_start", "type": "Any"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "_width", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "CollectMaxQ", "type": "Type[mushroom.utils.callbacks.CollectMaxQ]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 45, "col_offset": 52, "nodeName": "start", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "CollectDataset", "type": "Type[mushroom.utils.callbacks.CollectDataset]"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "collect_dataset", "type": "mushroom.utils.callbacks.CollectDataset"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "collect_max_Q", "type": "mushroom.utils.callbacks.CollectMaxQ"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "Core", "type": "Type[mushroom.core.core.Core]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "agent", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "mdp", "type": "mushroom.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "callbacks", "type": "List[Union[mushroom.utils.callbacks.CollectDataset, mushroom.utils.callbacks.CollectMaxQ]]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "learn", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 7, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "parse_dataset", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "get", "type": "Callable[[], List[Any]]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "max_Qs", "type": "List[nothing]"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "QLearning", "type": "Type[mushroom.algorithms.value.td.q_learning.QLearning]"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "DoubleQLearning", "type": "Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning]"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "WeightedQLearning", "type": "Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning]"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "SpeedyQLearning", "type": "Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning]"}, {"lineNumber": 63, "col_offset": 62, "nodeName": "SARSA", "type": "Type[mushroom.algorithms.value.td.sarsa.SARSA]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "fig", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "legend_labels", "type": "List[str]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 57, "nodeName": "size", "type": "Any"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "epsilon", "type": "mushroom.utils.parameters.ExponentialParameter"}, {"lineNumber": 39, "col_offset": 54, "nodeName": "exp", "type": "Any"}, {"lineNumber": 39, "col_offset": 64, "nodeName": "size", "type": "Any"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "learning_rate", "type": "mushroom.utils.parameters.ExponentialParameter"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "mdp", "type": "mushroom.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "mdp", "type": "mushroom.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "mdp", "type": "mushroom.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "mdp", "type": "mushroom.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "agent", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "core", "type": "mushroom.core.core.Core"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "get", "type": "Callable[[], List[Any]]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "collect_max_Q", "type": "mushroom.utils.callbacks.CollectMaxQ"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "e", "type": "Union[int, float]"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "figure", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "suptitle", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "QLearning", "type": "Type[mushroom.algorithms.value.td.q_learning.QLearning]"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "DoubleQLearning", "type": "Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning]"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "WeightedQLearning", "type": "Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning]"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "SpeedyQLearning", "type": "Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning]"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "SARSA", "type": "Type[mushroom.algorithms.value.td.sarsa.SARSA]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "max_Qs", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "max_Qs", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "legend", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "legend_labels", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "savefig", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 57, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 39, "col_offset": 64, "nodeName": "info", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "collect_dataset", "type": "mushroom.utils.callbacks.CollectDataset"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "plt", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "plt", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "names", "type": "Dict[Union[int, float, Type[mushroom.algorithms.value.td.q_learning.QLearning], Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning], Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning], Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning], Type[mushroom.algorithms.value.td.sarsa.SARSA]], str]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "convolve", "type": "Any"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "max_Qs", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "r", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 82, "col_offset": 61, "nodeName": "max_Qs", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "subplot", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "plot", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "r", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "subplot", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "plot", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "max_Qs", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "plt", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "fig", "type": "Any"}, {"lineNumber": 35, "col_offset": 57, "nodeName": "info", "type": "Any"}, {"lineNumber": 39, "col_offset": 64, "nodeName": "mdp", "type": "mushroom.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "e", "type": "Union[int, float]"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "names", "type": "Dict[Union[int, float, Type[mushroom.algorithms.value.td.q_learning.QLearning], Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning], Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning], Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning], Type[mushroom.algorithms.value.td.sarsa.SARSA]], str]"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "Parallel", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "mean", "type": "Any"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "legend_labels", "type": "List[str]"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "names", "type": "Dict[Union[int, float, Type[mushroom.algorithms.value.td.q_learning.QLearning], Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning], Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning], Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning], Type[mushroom.algorithms.value.td.sarsa.SARSA]], str]"}, {"lineNumber": 35, "col_offset": 57, "nodeName": "mdp", "type": "mushroom.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "a", "type": "Union[Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning], Type[mushroom.algorithms.value.td.sarsa.SARSA], Type[mushroom.algorithms.value.td.q_learning.QLearning], Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning], Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning]]"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "a", "type": "Union[Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning], Type[mushroom.algorithms.value.td.sarsa.SARSA], Type[mushroom.algorithms.value.td.q_learning.QLearning], Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning], Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning]]"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "e", "type": "Union[int, float]"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "_", "type": "int"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "o", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "o", "type": "Any"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "out", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "o", "type": "Any"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "o", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "out", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 43, "nodeName": "ones", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "a", "type": "Union[Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning], Type[mushroom.algorithms.value.td.sarsa.SARSA], Type[mushroom.algorithms.value.td.q_learning.QLearning], Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning], Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning]]"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "names", "type": "Dict[Union[int, float, Type[mushroom.algorithms.value.td.q_learning.QLearning], Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning], Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning], Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning], Type[mushroom.algorithms.value.td.sarsa.SARSA]], str]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "delayed", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "experiment", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 74, "col_offset": 57, "nodeName": "n_experiment", "type": "int"}, {"lineNumber": 78, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "names", "type": "Dict[Union[int, float, Type[mushroom.algorithms.value.td.q_learning.QLearning], Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning], Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning], Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning], Type[mushroom.algorithms.value.td.sarsa.SARSA]], str]"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "names", "type": "Dict[Union[int, float, Type[mushroom.algorithms.value.td.q_learning.QLearning], Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning], Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning], Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning], Type[mushroom.algorithms.value.td.sarsa.SARSA]], str]"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "e", "type": "Union[int, float]"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "names", "type": "Dict[Union[int, float, Type[mushroom.algorithms.value.td.q_learning.QLearning], Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning], Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning], Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning], Type[mushroom.algorithms.value.td.sarsa.SARSA]], str]"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "e", "type": "Union[int, float]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "names", "type": "Dict[Union[int, float, Type[mushroom.algorithms.value.td.q_learning.QLearning], Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning], Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning], Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning], Type[mushroom.algorithms.value.td.sarsa.SARSA]], str]"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "e", "type": "Union[int, float]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "a", "type": "Union[Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning], Type[mushroom.algorithms.value.td.sarsa.SARSA], Type[mushroom.algorithms.value.td.q_learning.QLearning], Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning], Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning]]"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "a", "type": "Union[Type[mushroom.algorithms.value.td.speedy_q_learning.SpeedyQLearning], Type[mushroom.algorithms.value.td.sarsa.SARSA], Type[mushroom.algorithms.value.td.q_learning.QLearning], Type[mushroom.algorithms.value.td.double_q_learning.DoubleQLearning], Type[mushroom.algorithms.value.td.weighted_q_learning.WeightedQLearning]]"}]