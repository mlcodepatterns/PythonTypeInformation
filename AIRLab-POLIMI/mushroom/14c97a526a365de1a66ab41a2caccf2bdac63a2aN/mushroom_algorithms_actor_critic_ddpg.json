[{"lineNumber": 11, "col_offset": 11, "nodeName": "ReparametrizationAC", "type": "Type[mushroom.algorithms.actor_critic.reparametrization_ac.ReparametrizationAC]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "fit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "_loss", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "_init_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "_update_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "_next_q", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 10, "nodeName": "DDPG", "type": "Type[DDPG]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "_loss", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "_init_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "_update_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "_next_q", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "_critic_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "tau", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "_policy_delay", "type": "Any"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "policy_delay", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "_fit_count", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "target_critic_params", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "target_actor_params", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "policy_parameters", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "initialized", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "critic_weights", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "critic_weights", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "actor_weights", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "actor_weights", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "_noise_std", "type": "Any"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "noise_std", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "_noise_clip", "type": "Any"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "noise_clip", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "actor_weights", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "actor_weights", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "low", "type": "Any"}, {"lineNumber": 244, "col_offset": 14, "nodeName": "low", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "high", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "high", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "eps", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "eps_clipped", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "a_smoothed", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 47, "col_offset": 75, "nodeName": "critic_fit_params", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "ReplayMemory", "type": "Type[mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 54, "col_offset": 64, "nodeName": "max_replay_size", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "TorchApproximator", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "TorchApproximator", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "actor_params", "type": "Any"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "TorchApproximator", "type": "Any"}, {"lineNumber": 65, "col_offset": 42, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 65, "col_offset": 52, "nodeName": "TorchApproximator", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_init_target", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "policy_class", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "policy", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "actor_optimizer", "type": "Any"}, {"lineNumber": 73, "col_offset": 60, "nodeName": "policy_parameters", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "_fit_count", "type": "int"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "state", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "state", "type": "Any"}, {"lineNumber": 97, "col_offset": 45, "nodeName": "action", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 118, "col_offset": 53, "nodeName": "critic_weights", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 122, "col_offset": 52, "nodeName": "actor_weights", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "_target_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 139, "col_offset": 65, "nodeName": "a", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TD3"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TD3"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "policy_class", "type": "Any"}, {"lineNumber": 193, "col_offset": 49, "nodeName": "policy_params", "type": "Any"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 194, "col_offset": 58, "nodeName": "max_replay_size", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "tau", "type": "Any"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 195, "col_offset": 45, "nodeName": "actor_params", "type": "Any"}, {"lineNumber": 195, "col_offset": 59, "nodeName": "actor_optimizer", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "policy_delay", "type": "Any"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "critic_fit_params", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "_actor_approximator", "type": "Any"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "state", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "_critic_approximator", "type": "Any"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "state", "type": "Any"}, {"lineNumber": 200, "col_offset": 45, "nodeName": "action", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "critic_weights_i", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "critic_weights_i", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 227, "col_offset": 52, "nodeName": "actor_weights", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "_target_actor_approximator", "type": "Any"}, {"lineNumber": 242, "col_offset": 44, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 244, "col_offset": 14, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "normal", "type": "Any"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "clip", "type": "Any"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "eps", "type": "Any"}, {"lineNumber": 247, "col_offset": 54, "nodeName": "_noise_clip", "type": "Any"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "clip", "type": "Any"}, {"lineNumber": 248, "col_offset": 46, "nodeName": "low", "type": "Any"}, {"lineNumber": 248, "col_offset": 51, "nodeName": "high", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "predict", "type": "Any"}, {"lineNumber": 250, "col_offset": 53, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 250, "col_offset": 65, "nodeName": "a_smoothed", "type": "Any"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "critic_fit_params", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 60, "col_offset": 55, "nodeName": "target_critic_params", "type": "Any"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "actor_params", "type": "Any"}, {"lineNumber": 66, "col_offset": 54, "nodeName": "target_actor_params", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 70, "col_offset": 58, "nodeName": "policy_params", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "network", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "get", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "_next_q", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 49, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 57, "nodeName": "q", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "_update_target", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "_target_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_target_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "_target_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "_target_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "_target_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "keys", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "self", "type": "TD3"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "self", "type": "TD3"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "_target_actor_approximator", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "_critic_approximator", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 220, "col_offset": 27, "nodeName": "_target_critic_approximator", "type": "Any"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 223, "col_offset": 66, "nodeName": "critic_weights_i", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "self", "type": "TD3"}, {"lineNumber": 225, "col_offset": 36, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 226, "col_offset": 30, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 226, "col_offset": 43, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "_target_actor_approximator", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "self", "type": "TD3"}, {"lineNumber": 244, "col_offset": 14, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 246, "col_offset": 37, "nodeName": "_noise_std", "type": "Any"}, {"lineNumber": 246, "col_offset": 59, "nodeName": "shape", "type": "Any"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "_noise_clip", "type": "Any"}, {"lineNumber": 247, "col_offset": 54, "nodeName": "self", "type": "TD3"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 248, "col_offset": 33, "nodeName": "eps_clipped", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "_target_critic_approximator", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 82, "col_offset": 47, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "_critic_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "_fit_count", "type": "int"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "_policy_delay", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "_loss", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "_optimize_actor_parameters", "type": "Callable[[Any], None]"}, {"lineNumber": 89, "col_offset": 48, "nodeName": "loss", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "_target_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "_target_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TD3"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "_actor_approximator", "type": "Any"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "self", "type": "TD3"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 220, "col_offset": 27, "nodeName": "self", "type": "TD3"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "self", "type": "TD3"}, {"lineNumber": 221, "col_offset": 43, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 225, "col_offset": 36, "nodeName": "_actor_approximator", "type": "Any"}, {"lineNumber": 226, "col_offset": 30, "nodeName": "self", "type": "TD3"}, {"lineNumber": 226, "col_offset": 43, "nodeName": "_target_actor_approximator", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "TD3"}, {"lineNumber": 244, "col_offset": 14, "nodeName": "self", "type": "TD3"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "self", "type": "TD3"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 37, "nodeName": "self", "type": "TD3"}, {"lineNumber": 246, "col_offset": 59, "nodeName": "a", "type": "Any"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "self", "type": "TD3"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "self", "type": "TD3"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "self", "type": "TD3"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "self", "type": "TD3"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 225, "col_offset": 36, "nodeName": "self", "type": "TD3"}, {"lineNumber": 226, "col_offset": 43, "nodeName": "self", "type": "TD3"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "_target_critic_approximator", "type": "Any"}, {"lineNumber": 212, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 221, "col_offset": 43, "nodeName": "model", "type": "Any"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "model", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "_target_critic_approximator", "type": "Any"}, {"lineNumber": 223, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "self", "type": "TD3"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "_critic_approximator", "type": "Any"}, {"lineNumber": 213, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 221, "col_offset": 43, "nodeName": "_critic_approximator", "type": "Any"}, {"lineNumber": 221, "col_offset": 75, "nodeName": "i", "type": "int"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "_target_critic_approximator", "type": "Any"}, {"lineNumber": 222, "col_offset": 89, "nodeName": "i", "type": "int"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "self", "type": "TD3"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "self", "type": "TD3"}, {"lineNumber": 221, "col_offset": 43, "nodeName": "self", "type": "TD3"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "self", "type": "TD3"}]