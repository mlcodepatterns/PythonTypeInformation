[{"lineNumber": 10, "col_offset": 10, "nodeName": "Agent", "type": "Type[mushroom.algorithms.agent.Agent]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 21, "col_offset": 23, "nodeName": "float32", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_fit_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_n_approximators", "type": "int"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "n_approximators", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "_clip_reward", "type": "bool"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "clip_reward", "type": "bool"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "_target_update_frequency", "type": "int"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "target_update_frequency", "type": "int"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "apprx_params_train", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "apprx_params_target", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "initialized", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "max_a", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "double_q", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "double_q", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "_n_fitted_target_models", "type": "int"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "q", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 21, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 43, "col_offset": 61, "nodeName": "fit_params", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "ReplayMemory", "type": "Type[mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 50, "col_offset": 53, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 51, "col_offset": 43, "nodeName": "max_replay_size", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "approximator_params", "type": "None"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "approximator_params", "type": "None"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 58, "col_offset": 35, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 58, "col_offset": 45, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "set_q", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "_n_approximators", "type": "int"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "policy", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "_clip_reward", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 45, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "q", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "draw_action", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "q", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 52, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 135, "col_offset": 64, "nodeName": "max_a", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "double_q", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 150, "col_offset": 39, "nodeName": "policy", "type": "Any"}, {"lineNumber": 150, "col_offset": 47, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 154, "col_offset": 58, "nodeName": "Ensemble", "type": "Type[mushroom.approximators._implementations.ensemble.Ensemble]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "_n_approximators", "type": "int"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "_n_fitted_target_models", "type": "int"}, {"lineNumber": 162, "col_offset": 42, "nodeName": "_n_approximators", "type": "int"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "_n_fitted_target_models", "type": "int"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "q", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "q", "type": "Any"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "fit_params", "type": "None"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 57, "col_offset": 54, "nodeName": "apprx_params_train", "type": "Any"}, {"lineNumber": 59, "col_offset": 54, "nodeName": "_n_approximators", "type": "int"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "apprx_params_target", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "_n_approximators", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "self", "type": "DQN"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "get", "type": "Callable[[Any], Tuple[Any, numpy.ndarray, numpy.ndarray, Any, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "self", "type": "DQN"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "_next_q", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "q", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 55, "nodeName": "state", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 150, "col_offset": 59, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 162, "col_offset": 42, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 54, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "self", "type": "DQN"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "self", "type": "DQN"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "self", "type": "DQN"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "_target_update_frequency", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "_update_target", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "self", "type": "DQN"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "DoubleDQN"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "self", "type": "DoubleDQN"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "q", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 54, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "self", "type": "DQN"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "self", "type": "DQN"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "self", "type": "DQN"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "idx", "type": "int"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 168, "col_offset": 70, "nodeName": "idx", "type": "int"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "self", "type": "DQN"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "self", "type": "DQN"}]