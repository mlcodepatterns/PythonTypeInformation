[{"lineNumber": 17, "col_offset": 16, "nodeName": "Policy", "type": "Type[mushroom_rl.policy.policy.Policy]"}, {"lineNumber": 201, "col_offset": 10, "nodeName": "DeepAC", "type": "Type[mushroom_rl.algorithms.actor_critic.deep_actor_critic.deep_actor_critic.DeepAC]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_mu_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "mu_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "_sigma_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "sigma_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "_delta_a", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "_central_a", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_log_std_min", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "log_std_min", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "_log_std_max", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "log_std_max", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_eps_log_prob", "type": "float"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "a_raw", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "a_true", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "compute_log_prob", "type": "bool"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "mu", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "log_sigma", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "log_sigma", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "mu_weights", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "sigma_weights", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "mu_weights", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "sigma_weights", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "_critic_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "_warmup_transitions", "type": "Any"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "warmup_transitions", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "tau", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "_replay_memory", "type": "mushroom_rl.utils.replay_memory.ReplayMemory"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "target_critic_params", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "actor_mu_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "actor_sigma_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "policy", "type": "SACPolicy"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "_log_alpha", "type": "Any"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "_alpha_optim", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "policy_parameters", "type": "itertools.chain[nothing]"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "initialized", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "q_0", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "q_1", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "alpha_loss", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "to_float_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 62, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "to_float_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 64, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "_delta_a", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "_central_a", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_add_save_attr", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "compute_action_and_log_prob_t", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 57, "nodeName": "state", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "distribution", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "rsample", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "a_raw", "type": "Any"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "_central_a", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "a_true", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "state", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "predict", "type": "Any"}, {"lineNumber": 131, "col_offset": 53, "nodeName": "state", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "clamp", "type": "Any"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "log_sigma", "type": "Any"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "_log_std_min", "type": "Any"}, {"lineNumber": 133, "col_offset": 62, "nodeName": "_log_std_max", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "mu", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "weights", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "weights", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 165, "col_offset": 42, "nodeName": "mu_weights", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 166, "col_offset": 45, "nodeName": "sigma_weights", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 243, "col_offset": 75, "nodeName": "critic_fit_params", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "target_entropy", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "_target_entropy", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "_target_entropy", "type": "Any"}, {"lineNumber": 252, "col_offset": 35, "nodeName": "target_entropy", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "ReplayMemory", "type": "Type[mushroom_rl.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 254, "col_offset": 43, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 254, "col_offset": 64, "nodeName": "max_replay_size", "type": "Any"}, {"lineNumber": 261, "col_offset": 31, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 261, "col_offset": 40, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 262, "col_offset": 36, "nodeName": "Regressor", "type": "Type[mushroom_rl.approximators.regressor.Regressor]"}, {"lineNumber": 262, "col_offset": 46, "nodeName": "TorchApproximator", "type": "Type[mushroom_rl.approximators.parametric.torch_approximator.TorchApproximator]"}, {"lineNumber": 264, "col_offset": 43, "nodeName": "Regressor", "type": "Type[mushroom_rl.approximators.regressor.Regressor]"}, {"lineNumber": 264, "col_offset": 53, "nodeName": "TorchApproximator", "type": "Type[mushroom_rl.approximators.parametric.torch_approximator.TorchApproximator]"}, {"lineNumber": 267, "col_offset": 32, "nodeName": "Regressor", "type": "Type[mushroom_rl.approximators.regressor.Regressor]"}, {"lineNumber": 267, "col_offset": 42, "nodeName": "TorchApproximator", "type": "Type[mushroom_rl.approximators.parametric.torch_approximator.TorchApproximator]"}, {"lineNumber": 269, "col_offset": 35, "nodeName": "Regressor", "type": "Type[mushroom_rl.approximators.regressor.Regressor]"}, {"lineNumber": 269, "col_offset": 45, "nodeName": "TorchApproximator", "type": "Type[mushroom_rl.approximators.parametric.torch_approximator.TorchApproximator]"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "SACPolicy", "type": "Type[SACPolicy]"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "actor_mu_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 273, "col_offset": 27, "nodeName": "actor_sigma_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 274, "col_offset": 27, "nodeName": "low", "type": "Any"}, {"lineNumber": 275, "col_offset": 27, "nodeName": "high", "type": "Any"}, {"lineNumber": 276, "col_offset": 27, "nodeName": "log_std_min", "type": "Any"}, {"lineNumber": 277, "col_offset": 27, "nodeName": "log_std_max", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "_init_target", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 279, "col_offset": 26, "nodeName": "_critic_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "_target_critic_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 282, "col_offset": 26, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "policy", "type": "SACPolicy"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "_log_alpha", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 291, "col_offset": 28, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "_add_save_attr", "type": "Callable[..., None]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 307, "col_offset": 35, "nodeName": "policy", "type": "SACPolicy"}, {"lineNumber": 307, "col_offset": 43, "nodeName": "actor_optimizer", "type": "Any"}, {"lineNumber": 307, "col_offset": 60, "nodeName": "policy_parameters", "type": "itertools.chain[nothing]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 310, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "_replay_memory", "type": "mushroom_rl.utils.replay_memory.ReplayMemory"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 331, "col_offset": 14, "nodeName": "_critic_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 331, "col_offset": 40, "nodeName": "state", "type": "Any"}, {"lineNumber": 331, "col_offset": 47, "nodeName": "action_new", "type": "Any"}, {"lineNumber": 333, "col_offset": 14, "nodeName": "_critic_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 333, "col_offset": 40, "nodeName": "state", "type": "Any"}, {"lineNumber": 333, "col_offset": 47, "nodeName": "action_new", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "min", "type": "Any"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "q_0", "type": "Any"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "q_1", "type": "Any"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 359, "col_offset": 11, "nodeName": "log_prob_next", "type": "Any"}, {"lineNumber": 359, "col_offset": 27, "nodeName": "compute_action_and_log_prob", "type": "Any"}, {"lineNumber": 359, "col_offset": 67, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "_update_optimizer_parameters", "type": "Callable[[Any], None]"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "exp", "type": "Any"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 47, "col_offset": 62, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 48, "col_offset": 64, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "_mu_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "dist", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "_delta_a", "type": "Any"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "a_true", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "_mu_approximator", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "_sigma_approximator", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 133, "col_offset": 62, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "distributions", "type": "Any"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "exp", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "weights_size", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "weights_size", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "_mu_approximator", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "_sigma_approximator", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "_mu_approximator", "type": "Any"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "_sigma_approximator", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "mu_weights", "type": "Any"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "sigma_weights", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "_mu_approximator", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 243, "col_offset": 44, "nodeName": "critic_fit_params", "type": "Any"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 263, "col_offset": 48, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 265, "col_offset": 55, "nodeName": "target_critic_params", "type": "Any"}, {"lineNumber": 268, "col_offset": 44, "nodeName": "actor_mu_params", "type": "Any"}, {"lineNumber": 270, "col_offset": 47, "nodeName": "actor_sigma_params", "type": "Any"}, {"lineNumber": 274, "col_offset": 27, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 275, "col_offset": 27, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 279, "col_offset": 26, "nodeName": "self", "type": "SAC"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "self", "type": "SAC"}, {"lineNumber": 282, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 282, "col_offset": 49, "nodeName": "float32", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 285, "col_offset": 30, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "optim", "type": "Any"}, {"lineNumber": 289, "col_offset": 40, "nodeName": "_log_alpha", "type": "Any"}, {"lineNumber": 289, "col_offset": 61, "nodeName": "lr_alpha", "type": "Any"}, {"lineNumber": 291, "col_offset": 34, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 292, "col_offset": 34, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "_replay_memory", "type": "mushroom_rl.utils.replay_memory.ReplayMemory"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "self", "type": "SAC"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 312, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 312, "col_offset": 35, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 312, "col_offset": 47, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 312, "col_offset": 58, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "get", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 313, "col_offset": 40, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 315, "col_offset": 42, "nodeName": "_warmup_transitions", "type": "Any"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "_next_q", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 321, "col_offset": 34, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 321, "col_offset": 46, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 324, "col_offset": 42, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 324, "col_offset": 49, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 324, "col_offset": 57, "nodeName": "q", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "_update_target", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 327, "col_offset": 32, "nodeName": "_critic_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "_target_critic_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 331, "col_offset": 14, "nodeName": "self", "type": "SAC"}, {"lineNumber": 333, "col_offset": 14, "nodeName": "self", "type": "SAC"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "_alpha_optim", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "alpha_loss", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "_alpha_optim", "type": "Any"}, {"lineNumber": 359, "col_offset": 27, "nodeName": "policy", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 362, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 362, "col_offset": 47, "nodeName": "_alpha_np", "type": "Any"}, {"lineNumber": 362, "col_offset": 64, "nodeName": "log_prob_next", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 368, "col_offset": 42, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "_log_alpha", "type": "Any"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "max_a", "type": "Any"}, {"lineNumber": 47, "col_offset": 54, "nodeName": "min_a", "type": "Any"}, {"lineNumber": 48, "col_offset": 48, "nodeName": "max_a", "type": "Any"}, {"lineNumber": 48, "col_offset": 56, "nodeName": "min_a", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "_delta_a", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "_central_a", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "log_sigma", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "_mu_approximator", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "_mu_approximator", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "network", "type": "Any"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "network", "type": "Any"}, {"lineNumber": 250, "col_offset": 36, "nodeName": "astype", "type": "Any"}, {"lineNumber": 250, "col_offset": 80, "nodeName": "float32", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 274, "col_offset": 27, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 275, "col_offset": 27, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 282, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "_log_alpha", "type": "Any"}, {"lineNumber": 289, "col_offset": 40, "nodeName": "self", "type": "SAC"}, {"lineNumber": 291, "col_offset": 34, "nodeName": "network", "type": "Any"}, {"lineNumber": 292, "col_offset": 34, "nodeName": "network", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "_replay_memory", "type": "mushroom_rl.utils.replay_memory.ReplayMemory"}, {"lineNumber": 313, "col_offset": 40, "nodeName": "self", "type": "SAC"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "_replay_memory", "type": "mushroom_rl.utils.replay_memory.ReplayMemory"}, {"lineNumber": 315, "col_offset": 42, "nodeName": "self", "type": "SAC"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "action_new", "type": "Any"}, {"lineNumber": 316, "col_offset": 28, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 316, "col_offset": 39, "nodeName": "compute_action_and_log_prob_t", "type": "Any"}, {"lineNumber": 316, "col_offset": 81, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "_loss", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 317, "col_offset": 41, "nodeName": "action_new", "type": "Any"}, {"lineNumber": 317, "col_offset": 53, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "_optimize_actor_parameters", "type": "Callable[[Any], None]"}, {"lineNumber": 318, "col_offset": 48, "nodeName": "loss", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "_update_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "self", "type": "SAC"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 322, "col_offset": 47, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "_critic_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 325, "col_offset": 44, "nodeName": "_critic_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 327, "col_offset": 32, "nodeName": "self", "type": "SAC"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "self", "type": "SAC"}, {"lineNumber": 338, "col_offset": 41, "nodeName": "q", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 359, "col_offset": 27, "nodeName": "self", "type": "SAC"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "_target_critic_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 362, "col_offset": 47, "nodeName": "self", "type": "SAC"}, {"lineNumber": 368, "col_offset": 42, "nodeName": "policy", "type": "Any"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 112, "col_offset": 37, "nodeName": "a_raw", "type": "Any"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "log", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 250, "col_offset": 80, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 30, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 291, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 292, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "self", "type": "SAC"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "self", "type": "SAC"}, {"lineNumber": 316, "col_offset": 39, "nodeName": "policy", "type": "Any"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "self", "type": "SAC"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "self", "type": "SAC"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "self", "type": "SAC"}, {"lineNumber": 319, "col_offset": 35, "nodeName": "detach", "type": "Any"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 325, "col_offset": 44, "nodeName": "self", "type": "SAC"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "_alpha", "type": "Any"}, {"lineNumber": 338, "col_offset": 30, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "_log_alpha", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 368, "col_offset": 42, "nodeName": "self", "type": "SAC"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "dist", "type": "Any"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 113, "col_offset": 50, "nodeName": "_eps_log_prob", "type": "float"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "_mu_approximator", "type": "Any"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "_sigma_approximator", "type": "Any"}, {"lineNumber": 250, "col_offset": 36, "nodeName": "prod", "type": "Any"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 285, "col_offset": 30, "nodeName": "_log_alpha", "type": "Any"}, {"lineNumber": 291, "col_offset": 34, "nodeName": "actor_mu_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 292, "col_offset": 34, "nodeName": "actor_sigma_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 316, "col_offset": 39, "nodeName": "self", "type": "SAC"}, {"lineNumber": 319, "col_offset": 35, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "self", "type": "SAC"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "self", "type": "SAC"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "self", "type": "SAC"}, {"lineNumber": 341, "col_offset": 43, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 341, "col_offset": 54, "nodeName": "_target_entropy", "type": "Any"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "detach", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "detach", "type": "Any"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "detach", "type": "Any"}, {"lineNumber": 113, "col_offset": 50, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 250, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 285, "col_offset": 30, "nodeName": "self", "type": "SAC"}, {"lineNumber": 341, "col_offset": 54, "nodeName": "self", "type": "SAC"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "_alpha", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "compute_action_and_log_prob_t", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "pow", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "detach", "type": "Any"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "self", "type": "SACPolicy"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "distribution", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "self", "type": "SACPolicy"}]