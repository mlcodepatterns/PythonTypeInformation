[{"lineNumber": 11, "col_offset": 14, "nodeName": "Agent", "type": "Type[mushroom.algorithms.agent.Agent]"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "BatchTD", "type": "Type[BatchTD]"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "BatchTD", "type": "Type[BatchTD]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "_n_iterations", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "_quiet", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_target", "type": "None"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "_boosted", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "_boosted", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "_boosted", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "_target", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "_target", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "_idx", "type": "int"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "state", "type": "List[numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "action", "type": "List[numpy.ndarray]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "reward", "type": "List[numpy.ndarray]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "next_state", "type": "List[numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "absorbing", "type": "List[numpy.ndarray]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "half", "type": "float"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "_A", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "_b", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "next_action", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "_A", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "_b", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "set_q", "type": "Any"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 38, "nodeName": "policy", "type": "Any"}, {"lineNumber": 32, "col_offset": 46, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 32, "col_offset": 56, "nodeName": "params", "type": "Any"}, {"lineNumber": 32, "col_offset": 64, "nodeName": "features", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "policy", "type": "Any"}, {"lineNumber": 42, "col_offset": 56, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 42, "col_offset": 66, "nodeName": "params", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "_next_q", "type": "float"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "_idx", "type": "int"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "self", "type": "FQI"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "_fit_boosted", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "trange", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "_n_iterations", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 54, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "parse_dataset", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 86, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "_target", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "_target", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "_target", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 37, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 45, "nodeName": "_target", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 43, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 54, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 58, "nodeName": "parse_dataset", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 108, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "_target", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "_target", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "_next_q", "type": "float"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "_target", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "self", "type": "FQI"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "self", "type": "FQI"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "_target", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 138, "col_offset": 54, "nodeName": "policy", "type": "Any"}, {"lineNumber": 138, "col_offset": 62, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 138, "col_offset": 72, "nodeName": "params", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "_target", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "_target", "type": "List[numpy.ndarray]"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "reward", "type": "List[numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "size", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "n", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "LinearApproximator", "type": "Type[mushroom.approximators.parametric.linear.LinearApproximator]"}, {"lineNumber": 196, "col_offset": 55, "nodeName": "policy", "type": "Any"}, {"lineNumber": 196, "col_offset": 63, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 196, "col_offset": 73, "nodeName": "params", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "features", "type": "Any"}, {"lineNumber": 200, "col_offset": 66, "nodeName": "parse_dataset", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "phi", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "get_action_features", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 202, "col_offset": 47, "nodeName": "phi_state", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 58, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 203, "col_offset": 47, "nodeName": "n", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 38, "nodeName": "phi_next_state", "type": "numpy.ndarray"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "get_action_features", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "phi_next_state", "type": "numpy.ndarray"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "next_action", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "phi_state_action", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 217, "col_offset": 42, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 224, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "params", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "_target", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "_next_q", "type": "float"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "_idx", "type": "int"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "self", "type": "FQI"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "self", "type": "FQI"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "self", "type": "FQI"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "_quiet", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "self", "type": "FQI"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "max", "type": "Any"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "q", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 97, "col_offset": 45, "nodeName": "self", "type": "FQI"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "self", "type": "FQI"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 54, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "_next_q", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "max", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "_next_q", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "self", "type": "FQI"}, {"lineNumber": 123, "col_offset": 63, "nodeName": "_idx", "type": "int"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "s", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "ss", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "ab", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 33, "nodeName": "parse_dataset", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "s", "type": "numpy.ndarray"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "ss", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "ab", "type": "numpy.ndarray"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "q_i", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "amax_q", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 203, "col_offset": 47, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "phi_next_state_next_action", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "T", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "matrix_rank", "type": "Any"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "_A", "type": "Any"}, {"lineNumber": 220, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "solve", "type": "Any"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "_A", "type": "Any"}, {"lineNumber": 221, "col_offset": 41, "nodeName": "_b", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 223, "col_offset": 44, "nodeName": "_b", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "params", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "BatchTD", "type": "Type[BatchTD]"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "params", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "self", "type": "FQI"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "self", "type": "FQI"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 95, "col_offset": 58, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "self", "type": "FQI"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 118, "col_offset": 58, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 123, "col_offset": 63, "nodeName": "self", "type": "FQI"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "DoubleFQI", "type": "Type[DoubleFQI]"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "state", "type": "List[numpy.ndarray]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "action", "type": "List[numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "reward", "type": "List[numpy.ndarray]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "next_state", "type": "List[numpy.ndarray]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "absorbing", "type": "List[numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "any", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "q_i", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 65, "nodeName": "amax_q", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "_target", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "state", "type": "List[numpy.ndarray]"}, {"lineNumber": 170, "col_offset": 44, "nodeName": "action", "type": "List[numpy.ndarray]"}, {"lineNumber": 170, "col_offset": 55, "nodeName": "_target", "type": "Any"}, {"lineNumber": 170, "col_offset": 76, "nodeName": "i", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "LSPI", "type": "Type[LSPI]"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 203, "col_offset": 47, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 208, "col_offset": 32, "nodeName": "q", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "phi_state_action", "type": "Any"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "dot", "type": "Any"}, {"lineNumber": 218, "col_offset": 43, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 220, "col_offset": 45, "nodeName": "_A", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 221, "col_offset": 41, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 223, "col_offset": 44, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "self", "type": "FQI"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "self", "type": "FQI"}, {"lineNumber": 113, "col_offset": 58, "nodeName": "_idx", "type": "int"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "self", "type": "FQI"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 160, "col_offset": 48, "nodeName": "next_state", "type": "List[numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 67, "nodeName": "i", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "absorbing", "type": "List[numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 164, "col_offset": 50, "nodeName": "q_i", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 165, "col_offset": 50, "nodeName": "next_state", "type": "List[numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "reward", "type": "List[numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 46, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 167, "col_offset": 68, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 170, "col_offset": 40, "nodeName": "i", "type": "Any"}, {"lineNumber": 170, "col_offset": 51, "nodeName": "i", "type": "Any"}, {"lineNumber": 170, "col_offset": 55, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 170, "col_offset": 68, "nodeName": "i", "type": "Any"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "params", "type": "Any"}, {"lineNumber": 203, "col_offset": 47, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "T", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 45, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "pinv", "type": "Any"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "_A", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "self", "type": "FQI"}, {"lineNumber": 113, "col_offset": 58, "nodeName": "self", "type": "FQI"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "self", "type": "FQI"}, {"lineNumber": 149, "col_offset": 49, "nodeName": "i", "type": "Any"}, {"lineNumber": 149, "col_offset": 53, "nodeName": "half", "type": "float"}, {"lineNumber": 149, "col_offset": 68, "nodeName": "half", "type": "float"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 160, "col_offset": 59, "nodeName": "i", "type": "Any"}, {"lineNumber": 161, "col_offset": 36, "nodeName": "i", "type": "Any"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 165, "col_offset": 61, "nodeName": "i", "type": "Any"}, {"lineNumber": 166, "col_offset": 58, "nodeName": "i", "type": "Any"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "i", "type": "Any"}, {"lineNumber": 167, "col_offset": 46, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "phi_state_action", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "self", "type": "LSPI"}, {"lineNumber": 149, "col_offset": 59, "nodeName": "i", "type": "Any"}, {"lineNumber": 167, "col_offset": 46, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "absorbing", "type": "List[numpy.ndarray]"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "i", "type": "Any"}]