[{"lineNumber": 8, "col_offset": 16, "nodeName": "Env", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "Env", "type": "Any"}, {"lineNumber": 8, "col_offset": 16, "nodeName": "gym", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "gym", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "action_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "horizon", "type": "int"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "gamma", "type": "float"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "_height", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "height", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "_width", "type": "Any"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "width", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_goal", "type": "Any"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "goal", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "action_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "horizon", "type": "int"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "gamma", "type": "float"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_height", "type": "Any"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "height", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_width", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "width", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_goal", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "goal", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 13, "col_offset": 33, "nodeName": "MultiDiscrete", "type": "Type[PyPi.utils.spaces.MultiDiscrete]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 15, "col_offset": 28, "nodeName": "Discrete", "type": "Type[PyPi.utils.spaces.Discrete]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "_seed", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "reset", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "np_random", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "seed", "type": "Any"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "np_random", "type": "Any"}, {"lineNumber": 34, "col_offset": 49, "nodeName": "seed", "type": "None"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "seed", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "state", "type": "None"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "_state", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "_state", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "get_state", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "_goal", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "reward", "type": "int"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "absorbing", "type": "bool"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "reward", "type": "int"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "absorbing", "type": "bool"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "reward", "type": "int"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "absorbing", "type": "bool"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "observation_space", "type": "PyPi.utils.spaces.MultiDiscrete"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "action_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "gamma", "type": "float"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "horizon", "type": "int"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "MultiDiscrete", "type": "Type[PyPi.utils.spaces.MultiDiscrete]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "Discrete", "type": "Type[PyPi.utils.spaces.Discrete]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "_seed", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "reset", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "np_random", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "seed", "type": "Any"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "np_random", "type": "Any"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "seed", "type": "None"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "seed", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "state", "type": "None"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "_state", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "_state", "type": "Any"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "get_state", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "_goal", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "reward", "type": "int"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "absorbing", "type": "bool"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "reward", "type": "int"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "absorbing", "type": "bool"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "reward", "type": "int"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "absorbing", "type": "bool"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "observation_space", "type": "PyPi.utils.spaces.MultiDiscrete"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "action_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "gamma", "type": "float"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "horizon", "type": "int"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 13, "col_offset": 33, "nodeName": "spaces", "type": "module"}, {"lineNumber": 15, "col_offset": 28, "nodeName": "spaces", "type": "module"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "_height", "type": "Any"}, {"lineNumber": 26, "col_offset": 64, "nodeName": "_width", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "seeding", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "get_state", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "_state", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "spaces", "type": "module"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "spaces", "type": "module"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "_height", "type": "Any"}, {"lineNumber": 99, "col_offset": 64, "nodeName": "_width", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "seeding", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "get_state", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "_state", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 14, "col_offset": 13, "nodeName": "Discrete", "type": "Type[PyPi.utils.spaces.Discrete]"}, {"lineNumber": 14, "col_offset": 29, "nodeName": "height", "type": "Any"}, {"lineNumber": 14, "col_offset": 38, "nodeName": "Discrete", "type": "Type[PyPi.utils.spaces.Discrete]"}, {"lineNumber": 14, "col_offset": 54, "nodeName": "width", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "_goal", "type": "Any"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 26, "col_offset": 48, "nodeName": "_goal", "type": "Any"}, {"lineNumber": 26, "col_offset": 64, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "_height", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "Discrete", "type": "Type[PyPi.utils.spaces.Discrete]"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "height", "type": "Any"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "Discrete", "type": "Type[PyPi.utils.spaces.Discrete]"}, {"lineNumber": 87, "col_offset": 54, "nodeName": "width", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "_goal", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "_goal", "type": "Any"}, {"lineNumber": 99, "col_offset": 64, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "_height", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 14, "col_offset": 13, "nodeName": "spaces", "type": "module"}, {"lineNumber": 14, "col_offset": 38, "nodeName": "spaces", "type": "module"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 26, "col_offset": 48, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "spaces", "type": "module"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "spaces", "type": "module"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "_width", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 129, "col_offset": 36, "nodeName": "_width", "type": "Any"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 129, "col_offset": 36, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "self", "type": "GridWorldVanHasselt"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "self", "type": "GridWorldVanHasselt"}]