[{"lineNumber": 13, "col_offset": 10, "nodeName": "Agent", "type": "Type[mushroom.algorithms.agent.Agent]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "Module", "type": "Any"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_fit_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_n_approximators", "type": "int"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "n_approximators", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_clip_reward", "type": "bool"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "clip_reward", "type": "bool"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "_target_update_frequency", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "target_update_frequency", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "apprx_params_train", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "apprx_params_target", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "initialized", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "initialized", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "max_a", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "double_q", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "double_q", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "_n_fitted_target_models", "type": "int"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "q", "type": "List[Any]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "_n_output", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "_n_atoms", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "n_atoms", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "_v_min", "type": "Any"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "v_min", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "_v_max", "type": "Any"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "v_max", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "delta", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "_a_values", "type": "Any"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "a_p", "type": "List[Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "a_p", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "features_network", "type": "Any"}, {"lineNumber": 281, "col_offset": 51, "nodeName": "CategoricalNetwork", "type": "Type[CategoricalNetwork]"}, {"lineNumber": 282, "col_offset": 60, "nodeName": "features_network", "type": "Any"}, {"lineNumber": 283, "col_offset": 51, "nodeName": "n_atoms", "type": "Any"}, {"lineNumber": 284, "col_offset": 49, "nodeName": "v_min", "type": "Any"}, {"lineNumber": 285, "col_offset": 49, "nodeName": "v_max", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "_n_atoms", "type": "Any"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "n_atoms", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "_v_min", "type": "Any"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "v_min", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "_v_max", "type": "Any"}, {"lineNumber": 289, "col_offset": 22, "nodeName": "v_max", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "_delta", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "_a_values", "type": "Any"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "initialized", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 50, "col_offset": 61, "nodeName": "fit_params", "type": "None"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "replay_memory", "type": "None"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "_replay_memory", "type": "Any"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "replay_memory", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "_fit_standard", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "approximator_params", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "approximator_params", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "set_q", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "_n_approximators", "type": "int"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "policy", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "add", "type": "Union[Any, Callable[[Any], None]]"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "_replay_memory", "type": "Union[Any, mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "_clip_reward", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "add", "type": "Union[Any, Callable[[Any], None]]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "_replay_memory", "type": "Union[Any, mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "_clip_reward", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "td_error", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "next_state", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "absorbing", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "q", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "draw_action", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 38, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "q", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 52, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 171, "col_offset": 64, "nodeName": "max_a", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "double_q", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "policy", "type": "Any"}, {"lineNumber": 186, "col_offset": 47, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 190, "col_offset": 58, "nodeName": "Ensemble", "type": "Type[mushroom.approximators._implementations.ensemble.Ensemble]"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "_n_approximators", "type": "int"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "_n_fitted_target_models", "type": "int"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "_n_approximators", "type": "int"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "_n_fitted_target_models", "type": "int"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "q", "type": "List[Any]"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "q", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "features_network", "type": "Any"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "arange", "type": "Any"}, {"lineNumber": 225, "col_offset": 38, "nodeName": "_v_min", "type": "Any"}, {"lineNumber": 225, "col_offset": 72, "nodeName": "delta", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "_a_values", "type": "Any"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "_n_output", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "_phi", "type": "Any"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 237, "col_offset": 36, "nodeName": "action", "type": "Any"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "stack", "type": "Any"}, {"lineNumber": 240, "col_offset": 26, "nodeName": "a_p", "type": "List[Any]"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "get_distribution", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 279, "col_offset": 27, "nodeName": "approximator_params", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 280, "col_offset": 40, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 280, "col_offset": 49, "nodeName": "approximator_params", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "arange", "type": "Any"}, {"lineNumber": 291, "col_offset": 35, "nodeName": "v_min", "type": "Any"}, {"lineNumber": 291, "col_offset": 63, "nodeName": "_delta", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "PyTorchApproximator", "type": "Type[mushroom.approximators.parametric.pytorch_network.PyTorchApproximator]"}, {"lineNumber": 293, "col_offset": 46, "nodeName": "policy", "type": "Any"}, {"lineNumber": 293, "col_offset": 54, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 296, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "_clip_reward", "type": "bool"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "a_max", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "l", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "u", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "fit_params", "type": "None"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "replay_memory", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "PrioritizedReplayMemory", "type": "Type[mushroom.utils.replay_memory.PrioritizedReplayMemory]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "_fit_prioritized", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "_fit_standard", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "ReplayMemory", "type": "Type[mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "initial_replay_size", "type": "int"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "max_replay_size", "type": "int"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 72, "col_offset": 54, "nodeName": "apprx_params_train", "type": "Any"}, {"lineNumber": 74, "col_offset": 54, "nodeName": "_n_approximators", "type": "int"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "apprx_params_target", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "_n_approximators", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "_target_update_frequency", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "_update_target", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_replay_memory", "type": "Union[Any, mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "self", "type": "DQN"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "get", "type": "Union[Any, Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]]"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "self", "type": "DQN"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "_next_q", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "next_state", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 46, "nodeName": "absorbing", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "action", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "q", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_replay_memory", "type": "Union[Any, mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "max_priority", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "self", "type": "DQN"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "get", "type": "Union[Any, Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]]"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "self", "type": "DQN"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "_next_q", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "next_state", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "absorbing", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "q", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 123, "col_offset": 39, "nodeName": "td_error", "type": "Any"}, {"lineNumber": 123, "col_offset": 49, "nodeName": "idxs", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 125, "col_offset": 41, "nodeName": "action", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 125, "col_offset": 49, "nodeName": "q", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "array", "type": "Any"}, {"lineNumber": 155, "col_offset": 55, "nodeName": "state", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 186, "col_offset": 59, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 51, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 219, "col_offset": 62, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "_v_max", "type": "Any"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "_v_min", "type": "Any"}, {"lineNumber": 224, "col_offset": 47, "nodeName": "_n_atoms", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 225, "col_offset": 38, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 225, "col_offset": 51, "nodeName": "_v_max", "type": "Any"}, {"lineNumber": 225, "col_offset": 65, "nodeName": "delta", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 233, "col_offset": 36, "nodeName": "weight", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 239, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "empty", "type": "Any"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "q", "type": "Any"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "a_p", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "v_max", "type": "Any"}, {"lineNumber": 290, "col_offset": 31, "nodeName": "v_min", "type": "Any"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "n_atoms", "type": "Any"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 291, "col_offset": 42, "nodeName": "v_max", "type": "Any"}, {"lineNumber": 291, "col_offset": 50, "nodeName": "_delta", "type": "Any"}, {"lineNumber": 291, "col_offset": 63, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 293, "col_offset": 66, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "get", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 299, "col_offset": 40, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 304, "col_offset": 21, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 54, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 307, "col_offset": 21, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 307, "col_offset": 54, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 307, "col_offset": 66, "nodeName": "a_max", "type": "Any"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "clip", "type": "Any"}, {"lineNumber": 311, "col_offset": 60, "nodeName": "_v_min", "type": "Any"}, {"lineNumber": 312, "col_offset": 60, "nodeName": "_v_max", "type": "Any"}, {"lineNumber": 314, "col_offset": 41, "nodeName": "_delta", "type": "Any"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 315, "col_offset": 35, "nodeName": "int", "type": "Any"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 316, "col_offset": 34, "nodeName": "int", "type": "Any"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 319, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "_n_atoms", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 326, "col_offset": 34, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 326, "col_offset": 41, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 326, "col_offset": 49, "nodeName": "m", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "self", "type": "DQN"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "self", "type": "DQN"}, {"lineNumber": 74, "col_offset": 54, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "self", "type": "DQN"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "self", "type": "DQN"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "self", "type": "DQN"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "_replay_memory", "type": "Union[Any, mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "self", "type": "DQN"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "reward", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "self", "type": "DQN"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 107, "col_offset": 54, "nodeName": "_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "_replay_memory", "type": "Union[Any, mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "_replay_memory", "type": "Union[Any, mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "self", "type": "DQN"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "reward", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "self", "type": "DQN"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 120, "col_offset": 47, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 53, "nodeName": "state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 121, "col_offset": 60, "nodeName": "action", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "_replay_memory", "type": "Union[Any, mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 125, "col_offset": 60, "nodeName": "is_weight", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "self", "type": "DQN"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "DoubleDQN"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "self", "type": "DoubleDQN"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "q", "type": "List[Any]"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 54, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 224, "col_offset": 47, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 225, "col_offset": 51, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "_a_values", "type": "Any"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 230, "col_offset": 35, "nodeName": "n_atoms", "type": "Any"}, {"lineNumber": 230, "col_offset": 48, "nodeName": "_", "type": "int"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "init", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "F", "type": "Any"}, {"lineNumber": 239, "col_offset": 36, "nodeName": "features", "type": "Any"}, {"lineNumber": 239, "col_offset": 60, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 239, "col_offset": 66, "nodeName": "_n_output", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "_a_values", "type": "Any"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 254, "col_offset": 51, "nodeName": "_n_atoms", "type": "Any"}, {"lineNumber": 256, "col_offset": 23, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 291, "col_offset": 50, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 299, "col_offset": 40, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 302, "col_offset": 33, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 304, "col_offset": 21, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 306, "col_offset": 47, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 307, "col_offset": 21, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 311, "col_offset": 60, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 312, "col_offset": 60, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 314, "col_offset": 17, "nodeName": "bell_a", "type": "Any"}, {"lineNumber": 314, "col_offset": 26, "nodeName": "_v_min", "type": "Any"}, {"lineNumber": 314, "col_offset": 41, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 315, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 316, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 318, "col_offset": 44, "nodeName": "_n_atoms", "type": "Any"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 327, "col_offset": 36, "nodeName": "_fit_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 331, "col_offset": 33, "nodeName": "_target_update_frequency", "type": "Any"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "_update_target", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 107, "col_offset": 54, "nodeName": "self", "type": "DQN"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "self", "type": "DQN"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "self", "type": "DQN"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "absorbing", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "idx", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 204, "col_offset": 70, "nodeName": "idx", "type": "int"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 230, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 230, "col_offset": 59, "nodeName": "_n_output", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 233, "col_offset": 36, "nodeName": "_p", "type": "Any"}, {"lineNumber": 234, "col_offset": 41, "nodeName": "calculate_gain", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "_p", "type": "Any"}, {"lineNumber": 239, "col_offset": 66, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "a_p", "type": "Any"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "a_p", "type": "Any"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "i", "type": "int"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "a_p", "type": "Any"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "gather", "type": "Any"}, {"lineNumber": 248, "col_offset": 49, "nodeName": "action", "type": "Any"}, {"lineNumber": 254, "col_offset": 51, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 256, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 256, "col_offset": 37, "nodeName": "gather", "type": "Any"}, {"lineNumber": 256, "col_offset": 51, "nodeName": "action", "type": "Any"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 21, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 307, "col_offset": 21, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 310, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 310, "col_offset": 46, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 311, "col_offset": 46, "nodeName": "gamma_z", "type": "Any"}, {"lineNumber": 314, "col_offset": 26, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "floor", "type": "Any"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 316, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 318, "col_offset": 44, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "l", "type": "Any"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "u", "type": "Any"}, {"lineNumber": 323, "col_offset": 49, "nodeName": "p_next", "type": "Any"}, {"lineNumber": 324, "col_offset": 49, "nodeName": "p_next", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 327, "col_offset": 36, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 331, "col_offset": 33, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "self", "type": "DQN"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "self", "type": "DQN"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "self", "type": "DQN"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 230, "col_offset": 59, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 233, "col_offset": 36, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 233, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 234, "col_offset": 41, "nodeName": "init", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "self", "type": "CategoricalNetwork"}, {"lineNumber": 239, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "q", "type": "Any"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 256, "col_offset": 37, "nodeName": "a_p", "type": "Any"}, {"lineNumber": 309, "col_offset": 45, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "_a_values", "type": "Any"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 323, "col_offset": 65, "nodeName": "u", "type": "Any"}, {"lineNumber": 323, "col_offset": 75, "nodeName": "b", "type": "Any"}, {"lineNumber": 324, "col_offset": 65, "nodeName": "b", "type": "Any"}, {"lineNumber": 324, "col_offset": 75, "nodeName": "l", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 234, "col_offset": 41, "nodeName": "nn", "type": "Any"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "long", "type": "Any"}, {"lineNumber": 309, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "reward", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 323, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 323, "col_offset": 37, "nodeName": "l", "type": "Any"}, {"lineNumber": 323, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 324, "col_offset": 37, "nodeName": "u", "type": "Any"}, {"lineNumber": 324, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "self", "type": "DQN"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "action", "type": "Any"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "u", "type": "Any"}, {"lineNumber": 320, "col_offset": 41, "nodeName": "l", "type": "Any"}, {"lineNumber": 320, "col_offset": 52, "nodeName": "u", "type": "Any"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "l", "type": "Any"}, {"lineNumber": 321, "col_offset": 36, "nodeName": "_n_atoms", "type": "Any"}, {"lineNumber": 321, "col_offset": 59, "nodeName": "l", "type": "Any"}, {"lineNumber": 321, "col_offset": 70, "nodeName": "u", "type": "Any"}, {"lineNumber": 323, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 323, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 323, "col_offset": 32, "nodeName": "m", "type": "Any"}, {"lineNumber": 323, "col_offset": 70, "nodeName": "i", "type": "int"}, {"lineNumber": 323, "col_offset": 80, "nodeName": "i", "type": "int"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 324, "col_offset": 32, "nodeName": "m", "type": "Any"}, {"lineNumber": 324, "col_offset": 70, "nodeName": "i", "type": "int"}, {"lineNumber": 324, "col_offset": 80, "nodeName": "i", "type": "int"}, {"lineNumber": 321, "col_offset": 36, "nodeName": "self", "type": "CategoricalDQN"}, {"lineNumber": 323, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 324, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 320, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 320, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 320, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 321, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 321, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 321, "col_offset": 75, "nodeName": "i", "type": "int"}]