[{"lineNumber": 5, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "agent", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "agent", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "fit_params", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "_dataset", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "iteration", "type": "int"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "Js", "type": "List[nothing]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "Js", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "n_steps", "type": "int"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "Js", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "_dataset", "type": "List[nothing]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "reset", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "initial_dataset_size", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "iterate_over", "type": "str"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "how_many", "type": "int"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "J", "type": "float"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "J", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "n_steps", "type": "int"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "render", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "last", "type": "int"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "collect", "type": "bool"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "iterate_over", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "callbacks", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "_dataset", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "logging", "type": "module"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 24, "col_offset": 51, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "iterate_over", "type": "Any"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "iterate_over", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "move", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "initial_dataset_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "iterate_over", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "n_fit_steps", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "apply_callbacks", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "move", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "how_many", "type": "Any"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "iterate_over", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "n_fit_steps", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "reset", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "move", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "draw_action", "type": "Any"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "reward", "type": "Any"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "_", "type": "Any"}, {"lineNumber": 133, "col_offset": 47, "nodeName": "step", "type": "Any"}, {"lineNumber": 133, "col_offset": 61, "nodeName": "action", "type": "Any"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "reward", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "last", "type": "int"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "n_steps", "type": "int"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "policy", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "render", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 67, "col_offset": 67, "nodeName": "render", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "policy", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "initial_states", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 94, "col_offset": 40, "nodeName": "initial_states", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 95, "col_offset": 71, "nodeName": "render", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "Js", "type": "List[nothing]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "agent", "type": "Any"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 132, "col_offset": 61, "nodeName": "force_max_action", "type": "bool"}, {"lineNumber": 133, "col_offset": 47, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "n_steps", "type": "int"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "render", "type": "Any"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "last", "type": "int"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "state", "type": "Any"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "action", "type": "Any"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "reward", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 150, "col_offset": 31, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "sample", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "iterate_over", "type": "str"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "reset", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "J", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "iterate_over", "type": "str"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "iterate_over", "type": "str"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "agent", "type": "Any"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "agent", "type": "Any"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "agent", "type": "Any"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "agent", "type": "Any"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "agent", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 133, "col_offset": 47, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "n_steps", "type": "int"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "horizon", "type": "Any"}, {"lineNumber": 140, "col_offset": 59, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "_dataset", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "Js", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "how_many", "type": "int"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 177, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 177, "col_offset": 66, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 179, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 179, "col_offset": 67, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "initial_states", "type": "Any"}, {"lineNumber": 94, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "reward", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "state", "type": "Any"}, {"lineNumber": 159, "col_offset": 50, "nodeName": "reward", "type": "Any"}, {"lineNumber": 159, "col_offset": 58, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 41, "nodeName": "state", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 170, "col_offset": 41, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "self", "type": "Algorithm"}, {"lineNumber": 169, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "self", "type": "Algorithm"}]