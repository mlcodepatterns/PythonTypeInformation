[{"lineNumber": 35, "col_offset": 0, "nodeName": "test_pytorch_approximator", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 17, "nodeName": "Module", "type": "Any"}, {"lineNumber": 12, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "n_actions", "type": "int"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "q", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "x_s", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "x_a", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "y_test", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "y_test", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "gradient_test", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "gradient_test", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "old_weights", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "random_weights", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "random_weight_new", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "_q", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "n_actions", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "TorchApproximator", "type": "Type[mushroom.approximators.parametric.torch_approximator.TorchApproximator]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "s", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "q", "type": "Any"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "rand", "type": "Any"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "randint", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "n_actions", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "x_s", "type": "Any"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "x_a", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "y_test", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "x_s", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "y_test", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "diff", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "gradient_test", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "diff", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "gradient_test", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "old_weights", "type": "Any"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "old_weights", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 85, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "random_weights", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "random_weights", "type": "Any"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "random_weight_new", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "ExampleNet"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "float", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "_q", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "a", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "q", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "q_acted", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "q_acted", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "torch", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 45, "col_offset": 58, "nodeName": "n_actions", "type": "int"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "ExampleNet", "type": "Type[ExampleNet]"}, {"lineNumber": 48, "col_offset": 60, "nodeName": "mse_loss", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "x_s", "type": "Any"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "x_a", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "x_s", "type": "Any"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 17, "col_offset": 44, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "_q", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "self", "type": "ExampleNet"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "long", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 48, "col_offset": 60, "nodeName": "F", "type": "Any"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "equal", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "random_weights", "type": "Any"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "old_weights", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "ExampleNet", "type": "Type[ExampleNet]"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "self", "type": "ExampleNet"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "self", "type": "ExampleNet"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "calculate_gain", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "gather", "type": "Any"}, {"lineNumber": 30, "col_offset": 48, "nodeName": "action", "type": "Any"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "optim", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "init", "type": "Any"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "q", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "old_weights", "type": "Any"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "nn", "type": "Any"}]