[{"lineNumber": 9, "col_offset": 14, "nodeName": "Agent", "type": "Type[mushroom.algorithms.agent.Agent]"}, {"lineNumber": 23, "col_offset": 10, "nodeName": "BatchTD", "type": "Type[BatchTD]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "_quiet", "type": "Union[Any, bool]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "_boosted", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "_boosted", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "_boosted", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "sa", "type": "List[numpy.ndarray]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "target", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "sa", "type": "List[numpy.ndarray]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "_idx", "type": "int"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "_extractor", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "_max_no_op_actions", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "_no_op_action_value", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "_no_op_actions", "type": "None"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "get", "type": "Callable"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 17, "col_offset": 52, "nodeName": "policy", "type": "Any"}, {"lineNumber": 17, "col_offset": 60, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "policy", "type": "Any"}, {"lineNumber": 32, "col_offset": 56, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "_idx", "type": "int"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "self", "type": "FQI"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 54, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 58, "nodeName": "parse_dataset", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 82, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "target", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "sa", "type": "List[numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "target", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 54, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 58, "nodeName": "parse_dataset", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 107, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "target", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "sa", "type": "List[numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "target", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 135, "col_offset": 54, "nodeName": "policy", "type": "Any"}, {"lineNumber": 135, "col_offset": 62, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "WeightedFQI"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 151, "col_offset": 56, "nodeName": "policy", "type": "Any"}, {"lineNumber": 151, "col_offset": 64, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "Buffer", "type": "Type[mushroom.utils.replay_memory.Buffer]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 38, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 178, "col_offset": 52, "nodeName": "policy", "type": "Any"}, {"lineNumber": 178, "col_offset": 60, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "_no_op_actions", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "extended_state", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "randint", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "size", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 17, "col_offset": 69, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 65, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "_idx", "type": "int"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "_", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "max_QA", "type": "Callable[[Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 53, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "_", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "max_QA", "type": "Callable[[Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 53, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "self", "type": "FQI"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 71, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 73, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 178, "col_offset": 69, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "get", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "draw_action", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 54, "nodeName": "feature_state", "type": "Any"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "_max_no_op_actions", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "BatchTD", "type": "Type[BatchTD]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "_quiet", "type": "Union[Any, bool]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "_partial_fit_boosted", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 59, "col_offset": 60, "nodeName": "target", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "_quiet", "type": "Union[Any, bool]"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "_partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "target", "type": "Any"}, {"lineNumber": 86, "col_offset": 53, "nodeName": "self", "type": "FQI"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 111, "col_offset": 53, "nodeName": "self", "type": "FQI"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "DoubleFQI", "type": "Type[DoubleFQI]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "WeightedFQI", "type": "Type[WeightedFQI]"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "self", "type": "WeightedFQI"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "DeepFQI", "type": "Type[DeepFQI]"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "_no_op_action_value", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "policy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "predict", "type": "Any"}, {"lineNumber": 193, "col_offset": 67, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "self", "type": "FQI"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "self", "type": "FQI"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "self", "type": "FQI"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "self", "type": "FQI"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "self", "type": "FQI"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "self", "type": "FQI"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "_idx", "type": "int"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "_extractor", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "extended_state", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "DeepFQI", "type": "Type[DeepFQI]"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 60, "col_offset": 53, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "self", "type": "FQI"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 53, "nodeName": "self", "type": "FQI"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "self", "type": "FQI"}]