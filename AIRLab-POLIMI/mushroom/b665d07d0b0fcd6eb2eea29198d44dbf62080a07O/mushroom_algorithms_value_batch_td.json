[{"lineNumber": 9, "col_offset": 14, "nodeName": "Agent", "type": "Type[mushroom.algorithms.agent.Agent]"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "BatchTD", "type": "Type[BatchTD]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "_quiet", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "_boosted", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "_boosted", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "_boosted", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "target", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "_idx", "type": "int"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "set_q", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "policy", "type": "Any"}, {"lineNumber": 29, "col_offset": 46, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 29, "col_offset": 53, "nodeName": "params", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "policy", "type": "Any"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 44, "col_offset": 63, "nodeName": "params", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "_next_q", "type": "float"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "_idx", "type": "int"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "self", "type": "FQI"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 58, "nodeName": "parse_dataset", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 93, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "target", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "target", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 54, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 58, "nodeName": "parse_dataset", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 121, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "target", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "_next_q", "type": "float"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "target", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 153, "col_offset": 54, "nodeName": "policy", "type": "Any"}, {"lineNumber": 153, "col_offset": 62, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 153, "col_offset": 69, "nodeName": "params", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "WeightedFQI"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 169, "col_offset": 56, "nodeName": "policy", "type": "Any"}, {"lineNumber": 169, "col_offset": 64, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 169, "col_offset": 71, "nodeName": "params", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "_next_q", "type": "float"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "_idx", "type": "int"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "target", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "target", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "max", "type": "Any"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "q", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 54, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "_next_q", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "max", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "_next_q", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "self", "type": "FQI"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 136, "col_offset": 57, "nodeName": "_idx", "type": "int"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 26, "col_offset": 40, "nodeName": "params", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "BatchTD", "type": "Type[BatchTD]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "params", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "_quiet", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "_partial_fit_boosted", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 73, "col_offset": 60, "nodeName": "target", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "_quiet", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "_partial_fit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 43, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 77, "col_offset": 52, "nodeName": "target", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 102, "col_offset": 44, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "self", "type": "FQI"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 136, "col_offset": 57, "nodeName": "self", "type": "FQI"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "DoubleFQI", "type": "Type[DoubleFQI]"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "WeightedFQI", "type": "Type[WeightedFQI]"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "self", "type": "WeightedFQI"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "self", "type": "FQI"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "self", "type": "FQI"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "self", "type": "FQI"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "self", "type": "FQI"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "self", "type": "FQI"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "self", "type": "FQI"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "self", "type": "FQI"}, {"lineNumber": 126, "col_offset": 58, "nodeName": "_idx", "type": "int"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "self", "type": "FQI"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 58, "nodeName": "self", "type": "FQI"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "absorbing", "type": "numpy.ndarray"}]