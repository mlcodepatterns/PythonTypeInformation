[{"lineNumber": 12, "col_offset": 0, "nodeName": "test_linear_approximator", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "test_pytorch_approximator", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "Module", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "noise", "type": "float"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "k", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "khat", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "deltaK", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "point", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "derivative", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "lp", "type": "int"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "noise", "type": "float"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "k", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "bhat", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "error", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "error_inf", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "LinearApproximator", "type": "Type[mushroom.approximators.parametric.linear.LinearApproximator]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "khat", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "noise", "type": "float"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "diff", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "point", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "point", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_h", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "o", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "PyTorchApproximator", "type": "Type[mushroom.approximators.parametric.pytorch_network.PyTorchApproximator]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "max", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "error_inf", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "error", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "dot", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 20, "col_offset": 44, "nodeName": "noise", "type": "float"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "norm", "type": "Any"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "deltaK", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "ExampleNet"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "n_neurons", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "h", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "n_hidden", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "n_neurons", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "h", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "_h", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "float", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "_h", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "o", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "torch", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "dot", "type": "Any"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 83, "col_offset": 52, "nodeName": "noise", "type": "float"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "ExampleNet", "type": "Type[ExampleNet]"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "mse_loss", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "norm", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "abs", "type": "Any"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "bhat", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "randn", "type": "Any"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "T", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "derivative", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "_h", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "n_neurons", "type": "Any"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "n_neurons", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "h", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "_h", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "self", "type": "ExampleNet"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "weight", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "self", "type": "ExampleNet"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "relu", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "_h", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "randn", "type": "Any"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "F", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "bhat", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "bhat", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 48, "nodeName": "point", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "ExampleNet", "type": "Type[ExampleNet]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "self", "type": "ExampleNet"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "ExampleNet"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "_h", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "ExampleNet"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "init", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "h", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "_h", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "calculate_gain", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "h", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "o", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "self", "type": "ExampleNet"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "sin", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "optim", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "derivative", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "ExampleNet"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "calculate_gain", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "self", "type": "ExampleNet"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "init", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "init", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "nn", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "lp", "type": "int"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "lp", "type": "int"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "i", "type": "int"}]