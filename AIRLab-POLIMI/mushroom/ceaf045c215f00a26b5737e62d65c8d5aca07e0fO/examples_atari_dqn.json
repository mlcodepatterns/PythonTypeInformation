[{"lineNumber": 99, "col_offset": 0, "nodeName": "print_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "get_stats", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "experiment", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "Module", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "Module", "type": "Any"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "score", "type": "Tuple[Any, Any, Any, int]"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "score", "type": "Tuple[Any, Any, Any, int]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "arg_game", "type": "argparse._ArgumentGroup"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "arg_mem", "type": "argparse._ArgumentGroup"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "arg_net", "type": "argparse._ArgumentGroup"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "arg_utils", "type": "argparse._ArgumentGroup"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "scores", "type": "List[nothing]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "optimizer", "type": "Dict[str, Any]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 253, "col_offset": 7, "nodeName": "debug", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 275, "col_offset": 7, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 408, "col_offset": 11, "nodeName": "scores", "type": "List[nothing]"}, {"lineNumber": 411, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "n_input", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "n_output", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "_h1", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "_h2", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "_h3", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "_h4", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "_h5", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "n_input", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_h1", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "_h2", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "_h3", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_h4", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "h", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "epoch", "type": "int"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "compute_metrics", "type": "Callable[..., Tuple[Any, Any, Any, int]]"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "initial_replay_size", "type": "int"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "max_replay_size", "type": "int"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "train_frequency", "type": "int"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "target_update_frequency", "type": "int"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "test_samples", "type": "int"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "evaluation_frequency", "type": "int"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "max_steps", "type": "int"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "max_replay_size", "type": "Any"}, {"lineNumber": 263, "col_offset": 26, "nodeName": "max_replay_size", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "train_frequency", "type": "Any"}, {"lineNumber": 264, "col_offset": 26, "nodeName": "train_frequency", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "target_update_frequency", "type": "Any"}, {"lineNumber": 265, "col_offset": 34, "nodeName": "target_update_frequency", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "evaluation_frequency", "type": "Any"}, {"lineNumber": 267, "col_offset": 31, "nodeName": "evaluation_frequency", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "max_steps", "type": "Any"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "max_steps", "type": "Any"}, {"lineNumber": 271, "col_offset": 10, "nodeName": "Atari", "type": "Type[mushroom_rl.environments.atari.Atari]"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 271, "col_offset": 27, "nodeName": "screen_width", "type": "Any"}, {"lineNumber": 271, "col_offset": 46, "nodeName": "screen_height", "type": "Any"}, {"lineNumber": 275, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "agent", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "epsilon_test", "type": "mushroom_rl.utils.parameters.Parameter"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "core_test", "type": "mushroom_rl.core.core.Core"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "epsilon", "type": "mushroom_rl.utils.parameters.LinearParameter"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "epsilon_test", "type": "mushroom_rl.utils.parameters.Parameter"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "epsilon_random", "type": "mushroom_rl.utils.parameters.Parameter"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "pi", "type": "mushroom_rl.policy.td_policy.EpsGreedy"}, {"lineNumber": 299, "col_offset": 30, "nodeName": "Module", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "approximator", "type": "Type[mushroom_rl.approximators.parametric.torch_approximator.TorchApproximator]"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "TorchApproximator", "type": "Type[mushroom_rl.approximators.parametric.torch_approximator.TorchApproximator]"}, {"lineNumber": 319, "col_offset": 11, "nodeName": "prioritized", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "core", "type": "mushroom_rl.core.core.Core"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "save", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "n_epoch", "type": "int"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "experiment", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "n_input", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "n_features", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "n_features", "type": "int"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "n_output", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "_h5", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "h", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "q", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "q_acted", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "q_acted", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "FeatureNetwork"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "n_input", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "FeatureNetwork"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "FeatureNetwork"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "FeatureNetwork"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "n_features", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "score", "type": "Tuple[Any, Any, Any, int]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "arg_game", "type": "argparse._ArgumentGroup"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "arg_game", "type": "argparse._ArgumentGroup"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "arg_game", "type": "argparse._ArgumentGroup"}, {"lineNumber": 126, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "arg_mem", "type": "argparse._ArgumentGroup"}, {"lineNumber": 130, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "arg_mem", "type": "argparse._ArgumentGroup"}, {"lineNumber": 132, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "arg_mem", "type": "argparse._ArgumentGroup"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "arg_net", "type": "argparse._ArgumentGroup"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "arg_net", "type": "argparse._ArgumentGroup"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "arg_net", "type": "argparse._ArgumentGroup"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "arg_net", "type": "argparse._ArgumentGroup"}, {"lineNumber": 151, "col_offset": 43, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 167, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 169, "col_offset": 59, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 172, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 179, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 181, "col_offset": 59, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 184, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 186, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 189, "col_offset": 57, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 191, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 194, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 197, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 199, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 201, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "arg_utils", "type": "argparse._ArgumentGroup"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "arg_utils", "type": "argparse._ArgumentGroup"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "arg_utils", "type": "argparse._ArgumentGroup"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "arg_utils", "type": "argparse._ArgumentGroup"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "arg_utils", "type": "argparse._ArgumentGroup"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "arg_utils", "type": "argparse._ArgumentGroup"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "optimizer", "type": "Dict[str, Any]"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "optim", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "optimizer", "type": "Dict[str, Any]"}, {"lineNumber": 229, "col_offset": 9, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "Adadelta", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "strftime", "type": "Callable[[str], str]"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 263, "col_offset": 26, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 264, "col_offset": 26, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 265, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 267, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 271, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 271, "col_offset": 46, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 272, "col_offset": 50, "nodeName": "history_length", "type": "Any"}, {"lineNumber": 273, "col_offset": 34, "nodeName": "max_no_op_actions", "type": "Any"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "Parameter", "type": "Type[mushroom_rl.utils.parameters.Parameter]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "set_epsilon", "type": "Any"}, {"lineNumber": 279, "col_offset": 33, "nodeName": "epsilon_test", "type": "mushroom_rl.utils.parameters.Parameter"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "Core", "type": "Type[mushroom_rl.core.core.Core]"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "agent", "type": "Any"}, {"lineNumber": 282, "col_offset": 32, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 285, "col_offset": 18, "nodeName": "evaluate", "type": "Callable[..., Any]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "get_stats", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 18, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "LinearParameter", "type": "Type[mushroom_rl.utils.parameters.LinearParameter]"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "Parameter", "type": "Type[mushroom_rl.utils.parameters.Parameter]"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "Parameter", "type": "Type[mushroom_rl.utils.parameters.Parameter]"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "EpsGreedy", "type": "Type[mushroom_rl.policy.td_policy.EpsGreedy]"}, {"lineNumber": 299, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 306, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 319, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "replay_memory", "type": "mushroom_rl.utils.replay_memory.PrioritizedReplayMemory"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "replay_memory", "type": "None"}, {"lineNumber": 329, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 337, "col_offset": 11, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "agent", "type": "mushroom_rl.algorithms.value.dqn.dqn.DQN"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "Core", "type": "Type[mushroom_rl.core.core.Core]"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "agent", "type": "Union[mushroom_rl.algorithms.value.dqn.categorical_dqn.CategoricalDQN, mushroom_rl.algorithms.value.dqn.dueling_dqn.DuelingDQN, mushroom_rl.algorithms.value.dqn.maxmin_dqn.MaxminDQN, mushroom_rl.algorithms.value.dqn.averaged_dqn.AveragedDQN, mushroom_rl.algorithms.value.dqn.double_dqn.DoubleDQN, mushroom_rl.algorithms.value.dqn.dqn.DQN]"}, {"lineNumber": 366, "col_offset": 27, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "print_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "learn", "type": "Callable[..., None]"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "set_epsilon", "type": "Callable[[Any], None]"}, {"lineNumber": 379, "col_offset": 23, "nodeName": "epsilon_test", "type": "mushroom_rl.utils.parameters.Parameter"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "set_episode_end", "type": "Callable[[Any], None]"}, {"lineNumber": 381, "col_offset": 18, "nodeName": "evaluate", "type": "Callable[..., Any]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 385, "col_offset": 45, "nodeName": "scores", "type": "List[nothing]"}, {"lineNumber": 386, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "save", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "self", "type": "Network"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "self", "type": "Network"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "_h1", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "_h2", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "_h3", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "_h4", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "_h5", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "_h1", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "_h2", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "_h3", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "_h4", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "Network"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "Network", "type": "Type[Network]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "_h1", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "_h2", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "_h3", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "_h4", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "_h1", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "_h2", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "_h3", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "_h4", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 38, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 229, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "optimizer", "type": "Dict[str, Any]"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "optim", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "optimizer", "type": "Dict[str, Any]"}, {"lineNumber": 233, "col_offset": 9, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "RMSprop", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 272, "col_offset": 50, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 273, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "DQN", "type": "Type[mushroom_rl.algorithms.value.dqn.dqn.DQN]"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 278, "col_offset": 39, "nodeName": "test_exploration_rate", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 285, "col_offset": 18, "nodeName": "core_test", "type": "mushroom_rl.core.core.Core"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 286, "col_offset": 44, "nodeName": "render", "type": "Any"}, {"lineNumber": 287, "col_offset": 43, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 292, "col_offset": 40, "nodeName": "initial_exploration_rate", "type": "Any"}, {"lineNumber": 293, "col_offset": 50, "nodeName": "final_exploration_rate", "type": "Any"}, {"lineNumber": 294, "col_offset": 36, "nodeName": "final_exploration_frame", "type": "Any"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "test_exploration_rate", "type": "Any"}, {"lineNumber": 297, "col_offset": 31, "nodeName": "epsilon_random", "type": "mushroom_rl.utils.parameters.Parameter"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 310, "col_offset": 22, "nodeName": "n", "type": "Any"}, {"lineNumber": 311, "col_offset": 23, "nodeName": "n_features", "type": "int"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "optimizer", "type": "Dict[str, Any]"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 320, "col_offset": 28, "nodeName": "PrioritizedReplayMemory", "type": "Type[mushroom_rl.utils.replay_memory.PrioritizedReplayMemory]"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 321, "col_offset": 37, "nodeName": "max_replay_size", "type": "Any"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 332, "col_offset": 26, "nodeName": "replay_memory", "type": "Optional[mushroom_rl.utils.replay_memory.PrioritizedReplayMemory]"}, {"lineNumber": 333, "col_offset": 32, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 334, "col_offset": 28, "nodeName": "max_replay_size", "type": "Any"}, {"lineNumber": 337, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "DQN", "type": "Type[mushroom_rl.algorithms.value.dqn.dqn.DQN]"}, {"lineNumber": 338, "col_offset": 24, "nodeName": "info", "type": "Any"}, {"lineNumber": 338, "col_offset": 34, "nodeName": "pi", "type": "mushroom_rl.policy.td_policy.EpsGreedy"}, {"lineNumber": 338, "col_offset": 38, "nodeName": "approximator", "type": "Type[mushroom_rl.approximators.parametric.torch_approximator.TorchApproximator]"}, {"lineNumber": 341, "col_offset": 13, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "agent", "type": "mushroom_rl.algorithms.value.dqn.double_dqn.DoubleDQN"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "core", "type": "mushroom_rl.core.core.Core"}, {"lineNumber": 372, "col_offset": 27, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 373, "col_offset": 35, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 373, "col_offset": 62, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "pi", "type": "mushroom_rl.policy.td_policy.EpsGreedy"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 381, "col_offset": 18, "nodeName": "core", "type": "mushroom_rl.core.core.Core"}, {"lineNumber": 381, "col_offset": 40, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 381, "col_offset": 61, "nodeName": "render", "type": "Any"}, {"lineNumber": 382, "col_offset": 38, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "scores", "type": "List[nothing]"}, {"lineNumber": 383, "col_offset": 22, "nodeName": "get_stats", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 385, "col_offset": 16, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "print_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 387, "col_offset": 24, "nodeName": "n_epoch", "type": "int"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "set_epsilon", "type": "Callable[[Any], None]"}, {"lineNumber": 390, "col_offset": 27, "nodeName": "epsilon", "type": "mushroom_rl.utils.parameters.LinearParameter"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "set_episode_end", "type": "Callable[[Any], None]"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "learn", "type": "Callable[..., None]"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "set_epsilon", "type": "Callable[[Any], None]"}, {"lineNumber": 400, "col_offset": 27, "nodeName": "epsilon_test", "type": "mushroom_rl.utils.parameters.Parameter"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "set_episode_end", "type": "Callable[[Any], None]"}, {"lineNumber": 402, "col_offset": 22, "nodeName": "evaluate", "type": "Callable[..., Any]"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 406, "col_offset": 49, "nodeName": "scores", "type": "List[nothing]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "self", "type": "Network"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "calculate_gain", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "self", "type": "Network"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "calculate_gain", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "self", "type": "Network"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "calculate_gain", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "self", "type": "Network"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "calculate_gain", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "self", "type": "Network"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "calculate_gain", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "self", "type": "Network"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "self", "type": "Network"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "self", "type": "Network"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "self", "type": "Network"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "view", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "gather", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "self", "type": "FeatureNetwork"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "calculate_gain", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "self", "type": "FeatureNetwork"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "calculate_gain", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "self", "type": "FeatureNetwork"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "calculate_gain", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "self", "type": "FeatureNetwork"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "calculate_gain", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "self", "type": "FeatureNetwork"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "self", "type": "FeatureNetwork"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "self", "type": "FeatureNetwork"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "self", "type": "FeatureNetwork"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "view", "type": "Any"}, {"lineNumber": 227, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 231, "col_offset": 38, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 233, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "optimizer", "type": "Dict[str, Any]"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "optim", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "optimizer", "type": "Dict[str, Any]"}, {"lineNumber": 238, "col_offset": 9, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "RMSprop", "type": "Any"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "now", "type": "Callable"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "pathlib", "type": "module"}, {"lineNumber": 278, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "agent", "type": "Any"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 286, "col_offset": 44, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 287, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 292, "col_offset": 40, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 293, "col_offset": 50, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 294, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "clamp", "type": "Any"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "Network", "type": "Type[Network]"}, {"lineNumber": 307, "col_offset": 61, "nodeName": "FeatureNetwork", "type": "Type[FeatureNetwork]"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 310, "col_offset": 22, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 311, "col_offset": 23, "nodeName": "Network", "type": "Type[Network]"}, {"lineNumber": 313, "col_offset": 17, "nodeName": "smooth_l1_loss", "type": "Any"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 331, "col_offset": 36, "nodeName": "target_update_frequency", "type": "Any"}, {"lineNumber": 331, "col_offset": 63, "nodeName": "train_frequency", "type": "Any"}, {"lineNumber": 338, "col_offset": 24, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 339, "col_offset": 44, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 340, "col_offset": 26, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 341, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "DoubleDQN", "type": "Type[mushroom_rl.algorithms.value.dqn.double_dqn.DoubleDQN]"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "info", "type": "Any"}, {"lineNumber": 342, "col_offset": 40, "nodeName": "pi", "type": "mushroom_rl.policy.td_policy.EpsGreedy"}, {"lineNumber": 342, "col_offset": 44, "nodeName": "approximator", "type": "Type[mushroom_rl.approximators.parametric.torch_approximator.TorchApproximator]"}, {"lineNumber": 345, "col_offset": 13, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "agent", "type": "mushroom_rl.algorithms.value.dqn.averaged_dqn.AveragedDQN"}, {"lineNumber": 373, "col_offset": 62, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "agent", "type": "Union[mushroom_rl.algorithms.value.dqn.categorical_dqn.CategoricalDQN, mushroom_rl.algorithms.value.dqn.dueling_dqn.DuelingDQN, mushroom_rl.algorithms.value.dqn.maxmin_dqn.MaxminDQN, mushroom_rl.algorithms.value.dqn.averaged_dqn.AveragedDQN, mushroom_rl.algorithms.value.dqn.double_dqn.DoubleDQN, mushroom_rl.algorithms.value.dqn.dqn.DQN]"}, {"lineNumber": 376, "col_offset": 23, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 381, "col_offset": 61, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 382, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 386, "col_offset": 32, "nodeName": "max_steps", "type": "Any"}, {"lineNumber": 386, "col_offset": 45, "nodeName": "evaluation_frequency", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "pi", "type": "mushroom_rl.policy.td_policy.EpsGreedy"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "core", "type": "mushroom_rl.core.core.Core"}, {"lineNumber": 392, "col_offset": 31, "nodeName": "evaluation_frequency", "type": "Any"}, {"lineNumber": 393, "col_offset": 39, "nodeName": "train_frequency", "type": "Any"}, {"lineNumber": 393, "col_offset": 62, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 396, "col_offset": 16, "nodeName": "save", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "pi", "type": "mushroom_rl.policy.td_policy.EpsGreedy"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 402, "col_offset": 22, "nodeName": "core", "type": "mushroom_rl.core.core.Core"}, {"lineNumber": 402, "col_offset": 44, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 402, "col_offset": 65, "nodeName": "render", "type": "Any"}, {"lineNumber": 403, "col_offset": 42, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "scores", "type": "List[nothing]"}, {"lineNumber": 404, "col_offset": 26, "nodeName": "get_stats", "type": "Callable[[Any], Any]"}, {"lineNumber": 404, "col_offset": 36, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 20, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "init", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "init", "type": "Any"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "init", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "init", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "init", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "float", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "q", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "long", "type": "Any"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "init", "type": "Any"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "init", "type": "Any"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "init", "type": "Any"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "init", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "float", "type": "Any"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "h", "type": "Any"}, {"lineNumber": 231, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 235, "col_offset": 38, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 236, "col_offset": 41, "nodeName": "decay", "type": "Any"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 238, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "optimizer", "type": "Dict[str, Any]"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "optim", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "optimizer", "type": "Dict[str, Any]"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "input", "type": "Any"}, {"lineNumber": 303, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "info", "type": "Any"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 310, "col_offset": 22, "nodeName": "info", "type": "Any"}, {"lineNumber": 313, "col_offset": 37, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 313, "col_offset": 17, "nodeName": "F", "type": "Any"}, {"lineNumber": 313, "col_offset": 67, "nodeName": "CategoricalLoss", "type": "Type[Any]"}, {"lineNumber": 322, "col_offset": 21, "nodeName": "LinearParameter", "type": "Type[mushroom_rl.utils.parameters.LinearParameter]"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 343, "col_offset": 50, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 345, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "AveragedDQN", "type": "Type[mushroom_rl.algorithms.value.dqn.averaged_dqn.AveragedDQN]"}, {"lineNumber": 346, "col_offset": 32, "nodeName": "info", "type": "Any"}, {"lineNumber": 346, "col_offset": 42, "nodeName": "pi", "type": "mushroom_rl.policy.td_policy.EpsGreedy"}, {"lineNumber": 346, "col_offset": 46, "nodeName": "approximator", "type": "Type[mushroom_rl.approximators.parametric.torch_approximator.TorchApproximator]"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "agent", "type": "mushroom_rl.algorithms.value.dqn.maxmin_dqn.MaxminDQN"}, {"lineNumber": 393, "col_offset": 62, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 396, "col_offset": 16, "nodeName": "agent", "type": "Union[mushroom_rl.algorithms.value.dqn.categorical_dqn.CategoricalDQN, mushroom_rl.algorithms.value.dqn.dueling_dqn.DuelingDQN, mushroom_rl.algorithms.value.dqn.maxmin_dqn.MaxminDQN, mushroom_rl.algorithms.value.dqn.averaged_dqn.AveragedDQN, mushroom_rl.algorithms.value.dqn.double_dqn.DoubleDQN, mushroom_rl.algorithms.value.dqn.dqn.DQN]"}, {"lineNumber": 402, "col_offset": 65, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 403, "col_offset": 42, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "action", "type": "Any"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 235, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 236, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 240, "col_offset": 38, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 241, "col_offset": 41, "nodeName": "decay", "type": "Any"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "datetime", "type": "module"}, {"lineNumber": 303, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 303, "col_offset": 34, "nodeName": "target", "type": "Any"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "info", "type": "Any"}, {"lineNumber": 310, "col_offset": 22, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 313, "col_offset": 37, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 346, "col_offset": 32, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 347, "col_offset": 52, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 348, "col_offset": 48, "nodeName": "n_approximators", "type": "Any"}, {"lineNumber": 349, "col_offset": 34, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 351, "col_offset": 20, "nodeName": "MaxminDQN", "type": "Type[mushroom_rl.algorithms.value.dqn.maxmin_dqn.MaxminDQN]"}, {"lineNumber": 351, "col_offset": 30, "nodeName": "info", "type": "Any"}, {"lineNumber": 351, "col_offset": 40, "nodeName": "pi", "type": "mushroom_rl.policy.td_policy.EpsGreedy"}, {"lineNumber": 351, "col_offset": 44, "nodeName": "approximator", "type": "Type[mushroom_rl.approximators.parametric.torch_approximator.TorchApproximator]"}, {"lineNumber": 355, "col_offset": 13, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "agent", "type": "mushroom_rl.algorithms.value.dqn.dueling_dqn.DuelingDQN"}, {"lineNumber": 303, "col_offset": 43, "nodeName": "log", "type": "Any"}, {"lineNumber": 303, "col_offset": 53, "nodeName": "input", "type": "Any"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 323, "col_offset": 39, "nodeName": "max_steps", "type": "Any"}, {"lineNumber": 323, "col_offset": 52, "nodeName": "train_frequency", "type": "Any"}, {"lineNumber": 348, "col_offset": 48, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 351, "col_offset": 30, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 352, "col_offset": 50, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 353, "col_offset": 46, "nodeName": "n_approximators", "type": "Any"}, {"lineNumber": 354, "col_offset": 32, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 355, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 356, "col_offset": 20, "nodeName": "DuelingDQN", "type": "Type[mushroom_rl.algorithms.value.dqn.dueling_dqn.DuelingDQN]"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "info", "type": "Any"}, {"lineNumber": 356, "col_offset": 41, "nodeName": "pi", "type": "mushroom_rl.policy.td_policy.EpsGreedy"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "agent", "type": "mushroom_rl.algorithms.value.dqn.categorical_dqn.CategoricalDQN"}, {"lineNumber": 396, "col_offset": 27, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 396, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 396, "col_offset": 57, "nodeName": "n_epoch", "type": "int"}, {"lineNumber": 303, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 353, "col_offset": 46, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 357, "col_offset": 51, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 358, "col_offset": 33, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 360, "col_offset": 20, "nodeName": "CategoricalDQN", "type": "Type[mushroom_rl.algorithms.value.dqn.categorical_dqn.CategoricalDQN]"}, {"lineNumber": 360, "col_offset": 35, "nodeName": "info", "type": "Any"}, {"lineNumber": 360, "col_offset": 45, "nodeName": "pi", "type": "mushroom_rl.policy.td_policy.EpsGreedy"}, {"lineNumber": 360, "col_offset": 35, "nodeName": "mdp", "type": "mushroom_rl.environments.atari.Atari"}, {"lineNumber": 361, "col_offset": 55, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 362, "col_offset": 43, "nodeName": "n_atoms", "type": "Any"}, {"lineNumber": 362, "col_offset": 63, "nodeName": "v_min", "type": "Any"}, {"lineNumber": 363, "col_offset": 41, "nodeName": "v_max", "type": "Any"}, {"lineNumber": 363, "col_offset": 55, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 362, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 362, "col_offset": 63, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 363, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}]