[{"lineNumber": 242, "col_offset": 0, "nodeName": "experiment", "type": "Callable[[], Any]"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "scale_coeff", "type": "float"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "initial_dataset_size", "type": "int"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "target_update_frequency", "type": "int"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "max_dataset_size", "type": "int"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "evaluation_update_frequency", "type": "int"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "max_steps", "type": "int"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "final_exploration_frame", "type": "int"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "n_test_episodes", "type": "int"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "mdp_name", "type": "str"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "mdp_test", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "epsilon", "type": "PyPi.utils.parameters.Parameter"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "epsilon_test", "type": "PyPi.utils.parameters.Parameter"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "approximator", "type": "PyPi.approximators.regressor.Regressor"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "fit_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "agent", "type": "PyPi.algorithms.dqn.DQN"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "agent_test", "type": "PyPi.algorithms.dqn.DQN"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "core", "type": "PyPi.core.core.Core"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "core_test", "type": "PyPi.core.core.Core"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "score", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 309, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "output_dim", "type": "int"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "output_dim", "type": "int"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "nb_actions", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "nb_actions", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "output_shape", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "args", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "base_absolute_indices", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "bai_repeated", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "absolute_indices", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "ai_flat", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "ai_onehot", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "group_shape", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "masks", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "zero", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "bool_masks", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "ai_mask", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "reduced_output", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "u", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "gather", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "all_q", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 247, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 248, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 257, "col_offset": 10, "nodeName": "Atari", "type": "Type[PyPi.environments.atari.Atari]"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "mdp_name", "type": "str"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "Atari", "type": "Type[PyPi.environments.atari.Atari]"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "mdp_name", "type": "str"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "Parameter", "type": "Type[PyPi.utils.parameters.Parameter]"}, {"lineNumber": 263, "col_offset": 9, "nodeName": "EpsGreedy", "type": "Type[PyPi.policy.policy.EpsGreedy]"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "Parameter", "type": "Type[PyPi.utils.parameters.Parameter]"}, {"lineNumber": 266, "col_offset": 14, "nodeName": "EpsGreedy", "type": "Type[PyPi.policy.policy.EpsGreedy]"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "Regressor", "type": "Type[PyPi.approximators.regressor.Regressor]"}, {"lineNumber": 272, "col_offset": 29, "nodeName": "ConvNet", "type": "Type[ConvNet]"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 283, "col_offset": 40, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 284, "col_offset": 34, "nodeName": "fit_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "DQN", "type": "Type[PyPi.algorithms.dqn.DQN]"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "approximator", "type": "PyPi.approximators.regressor.Regressor"}, {"lineNumber": 285, "col_offset": 30, "nodeName": "pi", "type": "PyPi.policy.policy.EpsGreedy"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "DQN", "type": "Type[PyPi.algorithms.dqn.DQN]"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "approximator", "type": "PyPi.approximators.regressor.Regressor"}, {"lineNumber": 286, "col_offset": 35, "nodeName": "pi_test", "type": "PyPi.policy.policy.EpsGreedy"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "Core", "type": "Type[PyPi.core.core.Core]"}, {"lineNumber": 289, "col_offset": 16, "nodeName": "agent", "type": "PyPi.algorithms.dqn.DQN"}, {"lineNumber": 289, "col_offset": 23, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "Core", "type": "Type[PyPi.core.core.Core]"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "agent_test", "type": "PyPi.algorithms.dqn.DQN"}, {"lineNumber": 290, "col_offset": 33, "nodeName": "mdp_test", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "learn", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "evaluate", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "compute_scores", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "set_epsilon", "type": "Any"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "score", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "Logger", "type": "Type[PyPi.utils.logger.Logger]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "experiment", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "GatherLayer"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "GatherLayer"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "build", "type": "Any"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "gather_layer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "nb_actions", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "output_shape", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "self", "type": "GatherLayer"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "output_shape", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "full_output", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "indices", "type": "Any"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 96, "col_offset": 44, "nodeName": "indices", "type": "Any"}, {"lineNumber": 96, "col_offset": 53, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "tile", "type": "Any"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "base_absolute_indices", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "add", "type": "Any"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "bai_repeated", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "absolute_indices", "type": "Any"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "ai_flat", "type": "Any"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "ai_onehot", "type": "Any"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "group_shape", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "not_equal", "type": "Any"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "masks", "type": "Any"}, {"lineNumber": 156, "col_offset": 41, "nodeName": "zero", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "where", "type": "Any"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "bool_masks", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "gather_nd", "type": "Any"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "full_output", "type": "Any"}, {"lineNumber": 171, "col_offset": 51, "nodeName": "ai_mask", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "reduced_output", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "Input", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "Input", "type": "Any"}, {"lineNumber": 189, "col_offset": 66, "nodeName": "input", "type": "Any"}, {"lineNumber": 193, "col_offset": 66, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 197, "col_offset": 66, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 200, "col_offset": 54, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 201, "col_offset": 60, "nodeName": "features", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "Model", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 206, "col_offset": 17, "nodeName": "Model", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "compile", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 233, "col_offset": 33, "nodeName": "y", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 236, "col_offset": 27, "nodeName": "w", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 247, "col_offset": 37, "nodeName": "scale_coeff", "type": "float"}, {"lineNumber": 249, "col_offset": 33, "nodeName": "scale_coeff", "type": "float"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "epsilon", "type": "PyPi.utils.parameters.Parameter"}, {"lineNumber": 263, "col_offset": 54, "nodeName": "observation_space", "type": "PyPi.utils.spaces.Box"}, {"lineNumber": 264, "col_offset": 32, "nodeName": "action_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 266, "col_offset": 32, "nodeName": "epsilon_test", "type": "PyPi.utils.parameters.Parameter"}, {"lineNumber": 267, "col_offset": 42, "nodeName": "observation_space", "type": "PyPi.utils.spaces.Box"}, {"lineNumber": 268, "col_offset": 37, "nodeName": "action_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 271, "col_offset": 41, "nodeName": "n", "type": "Any"}, {"lineNumber": 272, "col_offset": 58, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "initial_dataset_size", "type": "int"}, {"lineNumber": 281, "col_offset": 32, "nodeName": "target_update_frequency", "type": "int"}, {"lineNumber": 285, "col_offset": 36, "nodeName": "agent_params", "type": "Dict[str, Union[Dict[nothing, nothing], Dict[Any, Any]]]"}, {"lineNumber": 286, "col_offset": 46, "nodeName": "agent_params", "type": "Dict[str, Union[Dict[nothing, nothing], Dict[Any, Any]]]"}, {"lineNumber": 289, "col_offset": 45, "nodeName": "max_dataset_size", "type": "int"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "core", "type": "PyPi.core.core.Core"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "evaluation_update_frequency", "type": "int"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "core_test", "type": "PyPi.core.core.Core"}, {"lineNumber": 295, "col_offset": 34, "nodeName": "n_test_episodes", "type": "int"}, {"lineNumber": 296, "col_offset": 27, "nodeName": "get_dataset", "type": "Callable[[], List[Tuple[Any, Any, Any, Any, Any, bool]]]"}, {"lineNumber": 297, "col_offset": 62, "nodeName": "score", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "policy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "LinearDecayParameter", "type": "Type[PyPi.utils.parameters.LinearDecayParameter]"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "max_steps", "type": "int"}, {"lineNumber": 301, "col_offset": 32, "nodeName": "evaluation_update_frequency", "type": "int"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "learn", "type": "Callable[..., None]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "evaluate", "type": "Callable[..., None]"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "compute_scores", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "logger", "type": "module"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "self", "type": "GatherLayer"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "self", "type": "GatherLayer"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "self", "type": "GatherLayer"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "self", "type": "GatherLayer"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 58, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "range", "type": "Any"}, {"lineNumber": 113, "col_offset": 57, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 128, "col_offset": 54, "nodeName": "nb_actions", "type": "Any"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 141, "col_offset": 54, "nodeName": "nb_actions", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 47, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "Convolution2D", "type": "Any"}, {"lineNumber": 189, "col_offset": 66, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "Convolution2D", "type": "Any"}, {"lineNumber": 193, "col_offset": 66, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "Convolution2D", "type": "Any"}, {"lineNumber": 197, "col_offset": 66, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "Flatten", "type": "Any"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 200, "col_offset": 54, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 201, "col_offset": 60, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "GatherLayer", "type": "Type[GatherLayer]"}, {"lineNumber": 202, "col_offset": 37, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 202, "col_offset": 49, "nodeName": "output", "type": "Any"}, {"lineNumber": 202, "col_offset": 62, "nodeName": "u", "type": "Any"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "clip", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "mean_squared_error_clipped", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 220, "col_offset": 27, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "predict", "type": "Any"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "predict", "type": "Any"}, {"lineNumber": 229, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 233, "col_offset": 38, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 54, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 264, "col_offset": 32, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 267, "col_offset": 42, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 268, "col_offset": 37, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 271, "col_offset": 41, "nodeName": "action_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "Regressor", "type": "Type[PyPi.approximators.regressor.Regressor]"}, {"lineNumber": 277, "col_offset": 38, "nodeName": "ConvNet", "type": "Type[ConvNet]"}, {"lineNumber": 296, "col_offset": 27, "nodeName": "core_test", "type": "PyPi.core.core.Core"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "agent", "type": "PyPi.algorithms.dqn.DQN"}, {"lineNumber": 300, "col_offset": 54, "nodeName": "final_exploration_frame", "type": "int"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "core", "type": "PyPi.core.core.Core"}, {"lineNumber": 302, "col_offset": 32, "nodeName": "evaluation_update_frequency", "type": "int"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "core_test", "type": "PyPi.core.core.Core"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "core_test", "type": "PyPi.core.core.Core"}, {"lineNumber": 305, "col_offset": 38, "nodeName": "n_test_episodes", "type": "int"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "get_dataset", "type": "Callable[[], List[Tuple[Any, Any, Any, Any, Any, bool]]]"}, {"lineNumber": 307, "col_offset": 66, "nodeName": "score", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "GatherLayer", "type": "Type[GatherLayer]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "self", "type": "GatherLayer"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "GatherLayer", "type": "Type[GatherLayer]"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "self", "type": "GatherLayer"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 202, "col_offset": 49, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 202, "col_offset": 62, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 205, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 205, "col_offset": 58, "nodeName": "input", "type": "Any"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "gather", "type": "Any"}, {"lineNumber": 206, "col_offset": 54, "nodeName": "input", "type": "Any"}, {"lineNumber": 206, "col_offset": 66, "nodeName": "u", "type": "Any"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 212, "col_offset": 26, "nodeName": "mean", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "q", "type": "Any"}, {"lineNumber": 227, "col_offset": 39, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "all_q", "type": "Any"}, {"lineNumber": 229, "col_offset": 43, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 271, "col_offset": 41, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 279, "col_offset": 40, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "core_test", "type": "PyPi.core.core.Core"}, {"lineNumber": 205, "col_offset": 36, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 205, "col_offset": 58, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 206, "col_offset": 54, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 206, "col_offset": 66, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 212, "col_offset": 26, "nodeName": "K", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "square", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "K", "type": "Any"}, {"lineNumber": 212, "col_offset": 42, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 212, "col_offset": 51, "nodeName": "y_true", "type": "Any"}]