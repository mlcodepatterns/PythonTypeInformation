[{"lineNumber": 4, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "_input_preprocessor", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "_output_preprocessor", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "_input_preprocessor", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "_actions_with_value", "type": "bool"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "discrete_actions", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "input_preprocessor", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "output_preprocessor", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "_preprocess_fit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "_preprocess_fit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "_preprocess_predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "predict", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "n_states", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "_input_preprocessor", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "y_0", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "y_0", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "action", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "discrete_actions", "type": "Any"}, {"lineNumber": 28, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "_actions_with_value", "type": "bool"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "discrete_actions", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "_actions_with_value", "type": "bool"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "input_preprocessor", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "output_preprocessor", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "predict_params", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "samples", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 117, "col_offset": 36, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 139, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "x", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "x", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 49, "nodeName": "discrete_actions", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "discrete_actions", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "discrete_actions", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "discrete_actions", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 168, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "discrete_actions", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "discrete_actions", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "n_states", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "a", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "predict", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "samples", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "n_states", "type": "Any"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 115, "col_offset": 49, "nodeName": "shape", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "discrete_actions", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "a", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "arange", "type": "Any"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "discrete_actions", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "discrete_actions", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 114, "col_offset": 48, "nodeName": "predict_params", "type": "Dict[str, Any]"}, {"lineNumber": 115, "col_offset": 49, "nodeName": "y_0", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "n_states", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 119, "col_offset": 68, "nodeName": "action", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 49, "nodeName": "a", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "predict", "type": "Any"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "samples", "type": "Any"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "discrete_actions", "type": "Any"}, {"lineNumber": 179, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 52, "nodeName": "predict_params", "type": "Dict[str, Any]"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 173, "col_offset": 64, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 173, "col_offset": 64, "nodeName": "x", "type": "Any"}]