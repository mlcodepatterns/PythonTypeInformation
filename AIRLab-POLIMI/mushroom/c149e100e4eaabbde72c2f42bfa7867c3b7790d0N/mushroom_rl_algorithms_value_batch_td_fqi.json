[{"lineNumber": 8, "col_offset": 10, "nodeName": "BatchTD", "type": "Type[mushroom_rl.algorithms.value.batch_td.batch_td.BatchTD]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "_n_iterations", "type": "Any"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "_quiet", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "_boosted", "type": "bool"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "boosted", "type": "bool"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "_boosted", "type": "bool"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_target", "type": "None"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "_boosted", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_target", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "_target", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "_idx", "type": "int"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "state", "type": "List[numpy.ndarray]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "action", "type": "List[numpy.ndarray]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "reward", "type": "List[numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "next_state", "type": "List[numpy.ndarray]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "absorbing", "type": "List[numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "half", "type": "int"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "_next_q", "type": "float"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "_idx", "type": "int"}, {"lineNumber": 35, "col_offset": 46, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "_add_save_attr", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "policy", "type": "Any"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "approximator_params", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "fit_params", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "self", "type": "FQI"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "_fit_boosted", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "trange", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "_n_iterations", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 43, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 54, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "parse_dataset", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 78, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "_target", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "_target", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "_target", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "_target", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 54, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 58, "nodeName": "parse_dataset", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 100, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "_target", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "_target", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "_next_q", "type": "float"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "_target", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "self", "type": "FQI"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "self", "type": "FQI"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 45, "nodeName": "_target", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "approximator_params", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "policy", "type": "Any"}, {"lineNumber": 132, "col_offset": 43, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 132, "col_offset": 57, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "approximator_params", "type": "Any"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "fit_params", "type": "Any"}, {"lineNumber": 133, "col_offset": 58, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "_target", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "_target", "type": "List[numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "reward", "type": "List[numpy.ndarray]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "approximator_params", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "_target", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "_next_q", "type": "float"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "_idx", "type": "int"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "self", "type": "FQI"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "self", "type": "FQI"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "self", "type": "FQI"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "_quiet", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "self", "type": "FQI"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "max", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "q", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "self", "type": "FQI"}, {"lineNumber": 90, "col_offset": 61, "nodeName": "_fit_params", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "self", "type": "FQI"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 54, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "_next_q", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "max", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "_next_q", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 115, "col_offset": 45, "nodeName": "self", "type": "FQI"}, {"lineNumber": 115, "col_offset": 63, "nodeName": "_idx", "type": "int"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "_fit_params", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "s", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "ss", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "ab", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "parse_dataset", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "s", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "ss", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "ab", "type": "numpy.ndarray"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "q_i", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "amax_q", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "self", "type": "FQI"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "self", "type": "FQI"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 87, "col_offset": 58, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 90, "col_offset": 61, "nodeName": "self", "type": "FQI"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "self", "type": "FQI"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 115, "col_offset": 63, "nodeName": "self", "type": "FQI"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "self", "type": "FQI"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 144, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "state", "type": "List[numpy.ndarray]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "action", "type": "List[numpy.ndarray]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "reward", "type": "List[numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "next_state", "type": "List[numpy.ndarray]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "absorbing", "type": "List[numpy.ndarray]"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 65, "nodeName": "amax_q", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "any", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "_target", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 165, "col_offset": 34, "nodeName": "state", "type": "List[numpy.ndarray]"}, {"lineNumber": 165, "col_offset": 44, "nodeName": "action", "type": "List[numpy.ndarray]"}, {"lineNumber": 165, "col_offset": 55, "nodeName": "_target", "type": "Any"}, {"lineNumber": 165, "col_offset": 76, "nodeName": "i", "type": "int"}, {"lineNumber": 166, "col_offset": 36, "nodeName": "_fit_params", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "self", "type": "FQI"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "_idx", "type": "int"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 155, "col_offset": 48, "nodeName": "next_state", "type": "List[numpy.ndarray]"}, {"lineNumber": 155, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 157, "col_offset": 50, "nodeName": "q_i", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 158, "col_offset": 50, "nodeName": "next_state", "type": "List[numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "absorbing", "type": "List[numpy.ndarray]"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "reward", "type": "List[numpy.ndarray]"}, {"lineNumber": 162, "col_offset": 46, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 162, "col_offset": 68, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 165, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 165, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 165, "col_offset": 55, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 165, "col_offset": 68, "nodeName": "i", "type": "int"}, {"lineNumber": 166, "col_offset": 36, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "self", "type": "FQI"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "self", "type": "FQI"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "self", "type": "FQI"}, {"lineNumber": 144, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 144, "col_offset": 53, "nodeName": "half", "type": "int"}, {"lineNumber": 144, "col_offset": 68, "nodeName": "half", "type": "int"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 155, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 158, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 159, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "absorbing", "type": "List[numpy.ndarray]"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 162, "col_offset": 46, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 144, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 162, "col_offset": 46, "nodeName": "self", "type": "DoubleFQI"}]