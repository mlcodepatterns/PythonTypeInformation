[{"lineNumber": 5, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "features", "type": "Optional[Any]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "input_scaled", "type": "Union[Any, bool]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "output_scaled", "type": "Union[Any, bool]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "features", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "input_scaled", "type": "Union[Any, bool]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "output_scaled", "type": "Union[Any, bool]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "features", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "input_scaled", "type": "Union[Any, bool]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "approximator_class", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "exclude_actions", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "pre_x", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "pre_y", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "exclude_actions", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "predict", "type": "Any"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "output_scaled", "type": "Union[Any, bool]"}, {"lineNumber": 81, "col_offset": 74, "nodeName": "y", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "apprx_params", "type": "Dict[str, Any]"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "apprx_params", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "apprx_params", "type": "Dict[str, Any]"}, {"lineNumber": 22, "col_offset": 42, "nodeName": "apprx_params", "type": "Dict[str, Any]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "StandardScaler", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "StandardScaler", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "transform", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "transform", "type": "Any"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "inverse_transform", "type": "Any"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "features", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "pre_x", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "pre_y", "type": "Any"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "features", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "pre_x", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "pre_y", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "y", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "self", "type": "Regressor"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "self", "type": "Regressor"}]