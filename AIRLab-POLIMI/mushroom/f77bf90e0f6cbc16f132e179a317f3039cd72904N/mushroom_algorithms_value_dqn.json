[{"lineNumber": 8, "col_offset": 10, "nodeName": "Agent", "type": "Type[mushroom.algorithms.agent.Agent]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "AveragedDQN", "type": "Type[AveragedDQN]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "_n_approximators", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "_clip_reward", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "_train_frequency", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "_max_no_op_actions", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_no_op_action_value", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "_no_op_actions", "type": "None"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "apprx_params_train", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "apprx_params_target", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "max_a", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "_n_fitted_target_models", "type": "int"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "q", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "idx", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "W", "type": "Any"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "params", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "get", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 18, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "get", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 21, "col_offset": 40, "nodeName": "get", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 24, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "ReplayMemory", "type": "Type[mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "Buffer", "type": "Type[mushroom.utils.replay_memory.Buffer]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "params", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "set_q", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "_n_approximators", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "policy", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "params", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "_clip_reward", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "q", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[Any], None]"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[Any], None]"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "mdp_info", "type": "Dict[Any, Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "_no_op_actions", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "extended_state", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "randint", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "size", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "q", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 158, "col_offset": 60, "nodeName": "max_a", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 169, "col_offset": 56, "nodeName": "policy", "type": "Any"}, {"lineNumber": 169, "col_offset": 64, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 169, "col_offset": 71, "nodeName": "params", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 173, "col_offset": 58, "nodeName": "Ensemble", "type": "Type[mushroom.approximators._implementations.ensemble.Ensemble]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "_n_fitted_target_models", "type": "int"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "q", "type": "List[Any]"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "q", "type": "Any"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "_n_fitted_target_models", "type": "int"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "means", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "max_idx", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "count", "type": "Any"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "max_count", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 218, "col_offset": 18, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 18, "col_offset": 32, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 21, "col_offset": 40, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 24, "col_offset": 35, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 26, "col_offset": 43, "nodeName": "get", "type": "Any"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "get", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "apprx_params_train", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "apprx_params_target", "type": "Any"}, {"lineNumber": 38, "col_offset": 54, "nodeName": "apprx_params_train", "type": "Any"}, {"lineNumber": 40, "col_offset": 54, "nodeName": "_n_approximators", "type": "Any"}, {"lineNumber": 41, "col_offset": 47, "nodeName": "apprx_params_target", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "_n_approximators", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "get", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "self", "type": "DQN"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "_next_q", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "action", "type": "Any"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "q", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "_update_target", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "_target_update_frequency", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "self", "type": "DQN"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "self", "type": "DQN"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "self", "type": "DQN"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "get", "type": "Callable[[], Any]"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "draw_action", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 50, "nodeName": "extended_state", "type": "Any"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "_max_no_op_actions", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "_target_update_frequency", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "_n_approximators", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "_n_fitted_target_models", "type": "int"}, {"lineNumber": 182, "col_offset": 46, "nodeName": "_n_approximators", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "_n_fitted_target_models", "type": "int"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "_n_fitted_target_models", "type": "int"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "n", "type": "Any"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "self", "type": "WeightedDQN"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 206, "col_offset": 58, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "mean", "type": "Any"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "max_idx", "type": "Any"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "max_count", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "unique", "type": "Any"}, {"lineNumber": 212, "col_offset": 43, "nodeName": "max_idx", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "n", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "count", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "count", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "w", "type": "Any"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "means", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 26, "col_offset": 43, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 40, "col_offset": 54, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "self", "type": "DQN"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "reward", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "self", "type": "DQN"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "self", "type": "DQN"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "self", "type": "DQN"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "self", "type": "DQN"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "_no_op_action_value", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "policy", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "self", "type": "DQN"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "DoubleDQN"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "self", "type": "DoubleDQN"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "AveragedDQN", "type": "Type[AveragedDQN]"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 182, "col_offset": 46, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "q", "type": "List[Any]"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 54, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "self", "type": "WeightedDQN"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 207, "col_offset": 62, "nodeName": "i", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "samples", "type": "Any"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "samples", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "max_idx", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 215, "col_offset": 30, "nodeName": "_n_fitted_target_models", "type": "int"}, {"lineNumber": 216, "col_offset": 14, "nodeName": "i", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "self", "type": "DQN"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 78, "col_offset": 54, "nodeName": "params", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "self", "type": "DQN"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "self", "type": "DQN"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "self", "type": "DQN"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 188, "col_offset": 70, "nodeName": "idx", "type": "Any"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "mdp_info", "type": "Dict[Any, Any]"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "self", "type": "WeightedDQN"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "mdp_info", "type": "Dict[Any, Any]"}, {"lineNumber": 215, "col_offset": 30, "nodeName": "self", "type": "WeightedDQN"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 78, "col_offset": 54, "nodeName": "self", "type": "DQN"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "idx", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "self", "type": "WeightedDQN"}, {"lineNumber": 210, "col_offset": 39, "nodeName": "i", "type": "Any"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "i", "type": "Any"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "self", "type": "WeightedDQN"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "target_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "i", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "self", "type": "AveragedDQN"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "self", "type": "AveragedDQN"}]