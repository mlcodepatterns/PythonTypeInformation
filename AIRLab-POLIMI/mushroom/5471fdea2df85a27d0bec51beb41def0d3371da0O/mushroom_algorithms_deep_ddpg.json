[{"lineNumber": 12, "col_offset": 11, "nodeName": "Agent", "type": "Type[mushroom.algorithms.agent.Agent]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "_critic_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "tau", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "target_actor_params", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "target_critic_params", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "initialized", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "critic", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "_network", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "actor", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "_network", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "critic_weights", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "critic_weights", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "actor_weights", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "actor_weights", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 23, "col_offset": 75, "nodeName": "critic_fit_params", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "ReplayMemory", "type": "Type[mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 28, "col_offset": 64, "nodeName": "max_replay_size", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "actor_params", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 35, "col_offset": 45, "nodeName": "PyTorchApproximator", "type": "Type[mushroom.approximators.parametric.pytorch_network.PyTorchApproximator]"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "PyTorchApproximator", "type": "Type[mushroom.approximators.parametric.pytorch_network.PyTorchApproximator]"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 39, "col_offset": 52, "nodeName": "PyTorchApproximator", "type": "Type[mushroom.approximators.parametric.pytorch_network.PyTorchApproximator]"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 41, "col_offset": 53, "nodeName": "PyTorchApproximator", "type": "Type[mushroom.approximators.parametric.pytorch_network.PyTorchApproximator]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "policy_class", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "policy", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "critic", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 90, "col_offset": 53, "nodeName": "critic_weights", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "actor_weights", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "_target_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 108, "col_offset": 44, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 53, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 109, "col_offset": 65, "nodeName": "a", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 23, "col_offset": 44, "nodeName": "critic_fit_params", "type": "Any"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "actor_params", "type": "Any"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 40, "col_offset": 54, "nodeName": "target_actor_params", "type": "Any"}, {"lineNumber": 42, "col_offset": 55, "nodeName": "target_critic_params", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "policy_params", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "get", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "_next_q", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 49, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 57, "nodeName": "q", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "_update_actor", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "_update_target", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "actor", "type": "Any"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_target_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "_tau", "type": "Any"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "_target_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "_target_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_target_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_target_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "_critic_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "model", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "_target_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "_target_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "_critic_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "_actor_approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "self", "type": "DDPG"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "self", "type": "DDPG"}]