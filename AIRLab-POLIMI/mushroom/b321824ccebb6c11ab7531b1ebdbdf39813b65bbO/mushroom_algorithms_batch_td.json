[{"lineNumber": 9, "col_offset": 14, "nodeName": "Agent", "type": "Type[mushroom.algorithms.agent.Agent]"}, {"lineNumber": 22, "col_offset": 10, "nodeName": "BatchTD", "type": "Type[BatchTD]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "_quiet", "type": "Union[Any, bool]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "target", "type": "None"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "sa", "type": "List[numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_extractor", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_clip_reward", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "_max_no_op_actions", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_no_op_action_value", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_no_op_actions", "type": "None"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "x", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "_clip_reward", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "apprx_input", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "get", "type": "Callable"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 16, "col_offset": 38, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 16, "col_offset": 52, "nodeName": "policy", "type": "Any"}, {"lineNumber": 16, "col_offset": 60, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 31, "col_offset": 48, "nodeName": "policy", "type": "Any"}, {"lineNumber": 31, "col_offset": 56, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 54, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 58, "nodeName": "parse_dataset", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 58, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "sa", "type": "List[numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 81, "col_offset": 54, "nodeName": "policy", "type": "Any"}, {"lineNumber": 81, "col_offset": 62, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "WeightedFQI"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 97, "col_offset": 56, "nodeName": "policy", "type": "Any"}, {"lineNumber": 97, "col_offset": 64, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "Buffer", "type": "Type[mushroom.utils.replay_memory.Buffer]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "get", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 116, "col_offset": 52, "nodeName": "policy", "type": "Any"}, {"lineNumber": 116, "col_offset": 60, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "reward", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 119, "col_offset": 43, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 119, "col_offset": 54, "nodeName": "_", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "reward", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "state", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "action", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "apprx_input", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "_no_op_actions", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "extended_state", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "randint", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "size", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 16, "col_offset": 69, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 31, "col_offset": 65, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "_quiet", "type": "Union[Any, bool]"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "_partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "target", "type": "None"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "maxq", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "max_QA", "type": "Callable[[Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 52, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 71, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 73, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 116, "col_offset": 69, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "clip", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "reward", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "maxq", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "max_QA", "type": "Callable[[Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 125, "col_offset": 41, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 125, "col_offset": 52, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 129, "col_offset": 48, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "get", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "s", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "features", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "action", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "policy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "_max_no_op_actions", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "BatchTD", "type": "Type[BatchTD]"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "self", "type": "FQI"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "self", "type": "FQI"}, {"lineNumber": 62, "col_offset": 52, "nodeName": "self", "type": "FQI"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "maxq", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "DoubleFQI", "type": "Type[DoubleFQI]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "WeightedFQI", "type": "Type[WeightedFQI]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "self", "type": "WeightedFQI"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "DeepFQI", "type": "Type[DeepFQI]"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 52, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 126, "col_offset": 39, "nodeName": "maxq", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "_no_op_action_value", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "predict_all", "type": "Any"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "features", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "self", "type": "FQI"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "_epsilon", "type": "Any"}, {"lineNumber": 141, "col_offset": 62, "nodeName": "extended_state", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 142, "col_offset": 36, "nodeName": "extended_state", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "predict", "type": "Any"}, {"lineNumber": 143, "col_offset": 51, "nodeName": "s", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "self", "type": "FQI"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "policy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "_extractor", "type": "Any"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "choice", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "mdp_info", "type": "Dict[Any, Any]"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "argwhere", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "q", "type": "Any"}, {"lineNumber": 146, "col_offset": 55, "nodeName": "max", "type": "Any"}, {"lineNumber": 146, "col_offset": 62, "nodeName": "q", "type": "Any"}, {"lineNumber": 146, "col_offset": 55, "nodeName": "np", "type": "module"}]