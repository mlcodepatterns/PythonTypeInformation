[{"lineNumber": 9, "col_offset": 14, "nodeName": "Agent", "type": "Type[mushroom.algorithms.agent.Agent]"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "BatchTD", "type": "Type[BatchTD]"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "_quiet", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_target", "type": "None"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "_boosted", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "_boosted", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "_boosted", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "_target", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "_target", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "_idx", "type": "int"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "state", "type": "List[numpy.ndarray]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "action", "type": "List[numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "reward", "type": "List[numpy.ndarray]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "next_state", "type": "List[numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "absorbing", "type": "List[numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "half", "type": "float"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "set_q", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "policy", "type": "Any"}, {"lineNumber": 29, "col_offset": 46, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 29, "col_offset": 53, "nodeName": "params", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "policy", "type": "Any"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 44, "col_offset": 63, "nodeName": "params", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "_next_q", "type": "float"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "_idx", "type": "int"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "self", "type": "FQI"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "_fit_boosted", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 54, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 58, "nodeName": "parse_dataset", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 89, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "_target", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "_target", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "_target", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "_target", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 43, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 54, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 58, "nodeName": "parse_dataset", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 111, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "_target", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "_target", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "_next_q", "type": "float"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "_target", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "self", "type": "FQI"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "self", "type": "FQI"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "_target", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 143, "col_offset": 54, "nodeName": "policy", "type": "Any"}, {"lineNumber": 143, "col_offset": 62, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 143, "col_offset": 69, "nodeName": "params", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "_target", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "_target", "type": "List[numpy.ndarray]"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "reward", "type": "List[numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "WeightedFQI"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 189, "col_offset": 42, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 189, "col_offset": 56, "nodeName": "policy", "type": "Any"}, {"lineNumber": 189, "col_offset": 64, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 189, "col_offset": 71, "nodeName": "params", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "_target", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "_prediction", "type": "float"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "_next_q", "type": "float"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "_idx", "type": "int"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "self", "type": "FQI"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "self", "type": "FQI"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "_quiet", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "self", "type": "FQI"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "max", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "q", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "self", "type": "FQI"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "self", "type": "FQI"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 54, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "_next_q", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "max", "type": "Any"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "_next_q", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "self", "type": "FQI"}, {"lineNumber": 126, "col_offset": 63, "nodeName": "_idx", "type": "int"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "s", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "ss", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "ab", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "parse_dataset", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "s", "type": "numpy.ndarray"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "ss", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "ab", "type": "numpy.ndarray"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "q_i", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "amax_q", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 26, "col_offset": 40, "nodeName": "params", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "BatchTD", "type": "Type[BatchTD]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "params", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "self", "type": "FQI"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "self", "type": "FQI"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 98, "col_offset": 50, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "self", "type": "FQI"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 126, "col_offset": 63, "nodeName": "self", "type": "FQI"}, {"lineNumber": 127, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "DoubleFQI", "type": "Type[DoubleFQI]"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "state", "type": "List[numpy.ndarray]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "action", "type": "List[numpy.ndarray]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "reward", "type": "List[numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "next_state", "type": "List[numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "absorbing", "type": "List[numpy.ndarray]"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "any", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "q_i", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 65, "nodeName": "amax_q", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "_target", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 175, "col_offset": 34, "nodeName": "state", "type": "List[numpy.ndarray]"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "action", "type": "List[numpy.ndarray]"}, {"lineNumber": 175, "col_offset": 55, "nodeName": "_target", "type": "Any"}, {"lineNumber": 175, "col_offset": 76, "nodeName": "i", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "WeightedFQI", "type": "Type[WeightedFQI]"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "self", "type": "WeightedFQI"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "self", "type": "FQI"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "self", "type": "FQI"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "self", "type": "FQI"}, {"lineNumber": 116, "col_offset": 58, "nodeName": "_idx", "type": "int"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "self", "type": "FQI"}, {"lineNumber": 127, "col_offset": 32, "nodeName": "self", "type": "FQI"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 165, "col_offset": 48, "nodeName": "next_state", "type": "List[numpy.ndarray]"}, {"lineNumber": 165, "col_offset": 67, "nodeName": "i", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "absorbing", "type": "List[numpy.ndarray]"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 40, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 169, "col_offset": 50, "nodeName": "q_i", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 170, "col_offset": 50, "nodeName": "next_state", "type": "List[numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "reward", "type": "List[numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 172, "col_offset": 60, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "i", "type": "Any"}, {"lineNumber": 175, "col_offset": 51, "nodeName": "i", "type": "Any"}, {"lineNumber": 175, "col_offset": 55, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 175, "col_offset": 68, "nodeName": "i", "type": "Any"}, {"lineNumber": 176, "col_offset": 36, "nodeName": "params", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 58, "nodeName": "self", "type": "FQI"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 49, "nodeName": "i", "type": "Any"}, {"lineNumber": 154, "col_offset": 53, "nodeName": "half", "type": "float"}, {"lineNumber": 154, "col_offset": 68, "nodeName": "half", "type": "float"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 165, "col_offset": 59, "nodeName": "i", "type": "Any"}, {"lineNumber": 166, "col_offset": 36, "nodeName": "i", "type": "Any"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 169, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 170, "col_offset": 61, "nodeName": "i", "type": "Any"}, {"lineNumber": 171, "col_offset": 58, "nodeName": "i", "type": "Any"}, {"lineNumber": 172, "col_offset": 41, "nodeName": "i", "type": "Any"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 176, "col_offset": 36, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 154, "col_offset": 59, "nodeName": "i", "type": "Any"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "absorbing", "type": "List[numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "i", "type": "Any"}]