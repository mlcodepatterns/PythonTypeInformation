[{"lineNumber": 185, "col_offset": 0, "nodeName": "experiment", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "scale_coeff", "type": "float"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "render", "type": "bool"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "quiet", "type": "bool"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "initial_dataset_size", "type": "int"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "target_update_frequency", "type": "int"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "max_dataset_size", "type": "int"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "evaluation_update_frequency", "type": "int"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "max_steps", "type": "int"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "final_exploration_frame", "type": "int"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "n_test_episodes", "type": "int"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "mdp_name", "type": "str"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "epsilon_test", "type": "PyPi.utils.parameters.Parameter"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "epsilon_random", "type": "PyPi.utils.parameters.Parameter"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "fit_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "agent", "type": "PyPi.algorithms.dqn.DQN"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "core", "type": "PyPi.core.core.Core"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "core_test", "type": "PyPi.core.core.Core"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "score", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 272, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "args", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "idx_flat", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "idx_onehot", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "squared_rho", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "rho", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "decay", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "initial_decay", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "decay", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "iterations", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "grads", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "shapes", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "a_accumulators", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "b_accumulators", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "lr", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "u", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "gather", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "all_q", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "writer", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 197, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 202, "col_offset": 10, "nodeName": "Atari", "type": "Type[PyPi.environments.atari.Atari]"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "mdp_name", "type": "str"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "LinearDecayParameter", "type": "Type[PyPi.utils.parameters.LinearDecayParameter]"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "Parameter", "type": "Type[PyPi.utils.parameters.Parameter]"}, {"lineNumber": 209, "col_offset": 21, "nodeName": "Parameter", "type": "Type[PyPi.utils.parameters.Parameter]"}, {"lineNumber": 210, "col_offset": 9, "nodeName": "EpsGreedy", "type": "Type[PyPi.policy.policy.EpsGreedy]"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "Regressor", "type": "Type[PyPi.approximators.regressor.Regressor]"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "ConvNet", "type": "Type[ConvNet]"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "Regressor", "type": "Type[PyPi.approximators.regressor.Regressor]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "ConvNet", "type": "Type[ConvNet]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 236, "col_offset": 40, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 237, "col_offset": 34, "nodeName": "fit_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "DQN", "type": "Type[PyPi.algorithms.dqn.DQN]"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "approximator", "type": "PyPi.approximators.regressor.Regressor"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "pi", "type": "PyPi.policy.policy.EpsGreedy"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "Core", "type": "Type[PyPi.core.core.Core]"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "agent", "type": "PyPi.algorithms.dqn.DQN"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "Core", "type": "Type[PyPi.core.core.Core]"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "agent", "type": "PyPi.algorithms.dqn.DQN"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "learn", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "set_epsilon", "type": "Callable[[Any], None]"}, {"lineNumber": 251, "col_offset": 19, "nodeName": "epsilon_test", "type": "PyPi.utils.parameters.Parameter"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "set_episode_end", "type": "Callable[[Any], None]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "evaluate", "type": "Callable[..., None]"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "compute_scores", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 13, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "score", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "Logger", "type": "Type[PyPi.utils.logger.Logger]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "experiment", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "GatherLayer"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "build", "type": "Any"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "gather_layer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "full_output", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "indices", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "indices", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "idx_flat", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "idx_onehot", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "full_output", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "variable", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "lr", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "variable", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "squared_rho", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "variable", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "rho", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "variable", "type": "Any"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "decay", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "variable", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "get_gradients", "type": "Any"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "loss", "type": "Any"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "params", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "a_accumulators", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "b_accumulators", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "initial_decay", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "g", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "a", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "grads", "type": "Any"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "a_accumulators", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "b_accumulators", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "new_a", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "new_b", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "new_p", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "Input", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "Input", "type": "Any"}, {"lineNumber": 128, "col_offset": 66, "nodeName": "input", "type": "Any"}, {"lineNumber": 132, "col_offset": 66, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 136, "col_offset": 66, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 139, "col_offset": 54, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 140, "col_offset": 60, "nodeName": "features", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "Model", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "Model", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "compile", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "FileWriter", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 173, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "Summary", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "add_summary", "type": "Any"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "summary", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "w", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 192, "col_offset": 37, "nodeName": "scale_coeff", "type": "float"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "scale_coeff", "type": "float"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "final_exploration_frame", "type": "int"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "epsilon_random", "type": "PyPi.utils.parameters.Parameter"}, {"lineNumber": 211, "col_offset": 37, "nodeName": "observation_space", "type": "PyPi.utils.spaces.Box"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "action_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 215, "col_offset": 41, "nodeName": "n", "type": "Any"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 226, "col_offset": 10, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 227, "col_offset": 42, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "target_approximator", "type": "PyPi.approximators.regressor.Regressor"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "initial_dataset_size", "type": "int"}, {"lineNumber": 234, "col_offset": 32, "nodeName": "target_update_frequency", "type": "int"}, {"lineNumber": 238, "col_offset": 36, "nodeName": "agent_params", "type": "Dict[str, Union[Dict[nothing, nothing], Dict[Any, Any]]]"}, {"lineNumber": 241, "col_offset": 45, "nodeName": "max_dataset_size", "type": "int"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "core", "type": "PyPi.core.core.Core"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "evaluation_update_frequency", "type": "int"}, {"lineNumber": 248, "col_offset": 60, "nodeName": "quiet", "type": "bool"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "pi", "type": "PyPi.policy.policy.EpsGreedy"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "core_test", "type": "PyPi.core.core.Core"}, {"lineNumber": 253, "col_offset": 34, "nodeName": "n_test_episodes", "type": "int"}, {"lineNumber": 253, "col_offset": 58, "nodeName": "render", "type": "bool"}, {"lineNumber": 253, "col_offset": 72, "nodeName": "quiet", "type": "bool"}, {"lineNumber": 254, "col_offset": 27, "nodeName": "get_dataset", "type": "Callable[[], List[Tuple[Any, Any, Any, Any, Any, bool]]]"}, {"lineNumber": 256, "col_offset": 62, "nodeName": "score", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "max_steps", "type": "int"}, {"lineNumber": 257, "col_offset": 32, "nodeName": "evaluation_update_frequency", "type": "int"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "set_epsilon", "type": "Callable[[Any], None]"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "epsilon", "type": "PyPi.utils.parameters.LinearDecayParameter"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "set_episode_end", "type": "Callable[[Any], None]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "learn", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "set_epsilon", "type": "Callable[[Any], None]"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "epsilon_test", "type": "PyPi.utils.parameters.Parameter"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "set_episode_end", "type": "Callable[[Any], None]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "evaluate", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "compute_scores", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "logger", "type": "module"}, {"lineNumber": 28, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "self", "type": "GatherLayer"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "self", "type": "GatherLayer"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "K", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "K", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "K", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "K", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "get_variable_shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "p", "type": "Any"}, {"lineNumber": 84, "col_offset": 51, "nodeName": "params", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "shapes", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 86, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 86, "col_offset": 54, "nodeName": "shapes", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "new_p", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "Convolution2D", "type": "Any"}, {"lineNumber": 128, "col_offset": 66, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "Convolution2D", "type": "Any"}, {"lineNumber": 132, "col_offset": 66, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "Convolution2D", "type": "Any"}, {"lineNumber": 136, "col_offset": 66, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "Flatten", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 139, "col_offset": 54, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 140, "col_offset": 60, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "GatherLayer", "type": "Type[GatherLayer]"}, {"lineNumber": 141, "col_offset": 34, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "output", "type": "Any"}, {"lineNumber": 141, "col_offset": 59, "nodeName": "u", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "mean", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "mean_squared_error_clipped", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "summary", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "predict", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "predict", "type": "Any"}, {"lineNumber": 170, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 173, "col_offset": 45, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "writer", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 37, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 215, "col_offset": 41, "nodeName": "action_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "target_approximator", "type": "PyPi.approximators.regressor.Regressor"}, {"lineNumber": 227, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 254, "col_offset": 27, "nodeName": "core_test", "type": "PyPi.core.core.Core"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "pi", "type": "PyPi.policy.policy.EpsGreedy"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "core", "type": "PyPi.core.core.Core"}, {"lineNumber": 261, "col_offset": 32, "nodeName": "evaluation_update_frequency", "type": "int"}, {"lineNumber": 262, "col_offset": 64, "nodeName": "quiet", "type": "bool"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "pi", "type": "PyPi.policy.policy.EpsGreedy"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "core_test", "type": "PyPi.core.core.Core"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "core_test", "type": "PyPi.core.core.Core"}, {"lineNumber": 268, "col_offset": 38, "nodeName": "n_test_episodes", "type": "int"}, {"lineNumber": 268, "col_offset": 62, "nodeName": "render", "type": "bool"}, {"lineNumber": 268, "col_offset": 76, "nodeName": "quiet", "type": "bool"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "get_dataset", "type": "Callable[[], List[Tuple[Any, Any, Any, Any, Any, bool]]]"}, {"lineNumber": 270, "col_offset": 66, "nodeName": "score", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "GatherLayer", "type": "Type[GatherLayer]"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "self", "type": "GatherLayer"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "GatherLayer", "type": "Type[GatherLayer]"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "self", "type": "GatherLayer"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "RMSpropGraves", "type": "Type[RMSpropGraves]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "K", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "K", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "K", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "update_add", "type": "Any"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "iterations", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "squared_rho", "type": "Any"}, {"lineNumber": 97, "col_offset": 39, "nodeName": "a", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "rho", "type": "Any"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 98, "col_offset": 53, "nodeName": "g", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "update", "type": "Any"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "a", "type": "Any"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "new_a", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "update", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 100, "col_offset": 44, "nodeName": "new_b", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "c", "type": "Any"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "new_p", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "update", "type": "Any"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "p", "type": "Any"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "new_p", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "get_value", "type": "Any"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "lr", "type": "Any"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "get_value", "type": "Any"}, {"lineNumber": 112, "col_offset": 51, "nodeName": "squared_rho", "type": "Any"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "get_value", "type": "Any"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "rho", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "get_value", "type": "Any"}, {"lineNumber": 114, "col_offset": 45, "nodeName": "decay", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "RMSpropGraves", "type": "Type[RMSpropGraves]"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 141, "col_offset": 59, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "input", "type": "Any"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "gather", "type": "Any"}, {"lineNumber": 145, "col_offset": 54, "nodeName": "input", "type": "Any"}, {"lineNumber": 145, "col_offset": 66, "nodeName": "u", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "square", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "q", "type": "Any"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "all_q", "type": "Any"}, {"lineNumber": 170, "col_offset": 43, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 215, "col_offset": 41, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 218, "col_offset": 43, "nodeName": "Scaler", "type": "Type[PyPi.utils.preprocessor.Scaler]"}, {"lineNumber": 218, "col_offset": 50, "nodeName": "high", "type": "Any"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "Scaler", "type": "Type[PyPi.utils.preprocessor.Scaler]"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "high", "type": "Any"}, {"lineNumber": 227, "col_offset": 42, "nodeName": "approximator", "type": "PyPi.approximators.regressor.Regressor"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "core_test", "type": "PyPi.core.core.Core"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "decay", "type": "Any"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "iterations", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "K", "type": "Any"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "squared_rho", "type": "Any"}, {"lineNumber": 97, "col_offset": 69, "nodeName": "square", "type": "Any"}, {"lineNumber": 97, "col_offset": 78, "nodeName": "g", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "rho", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "K", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "K", "type": "Any"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "lr", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "g", "type": "Any"}, {"lineNumber": 101, "col_offset": 58, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "p", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "K", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "K", "type": "Any"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "K", "type": "Any"}, {"lineNumber": 112, "col_offset": 51, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "K", "type": "Any"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "K", "type": "Any"}, {"lineNumber": 114, "col_offset": 45, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "items", "type": "Any"}, {"lineNumber": 117, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 145, "col_offset": 54, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 145, "col_offset": 66, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "K", "type": "Any"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "clip", "type": "Any"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "self", "type": "ConvNet"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "Value", "type": "Any"}, {"lineNumber": 218, "col_offset": 50, "nodeName": "observation_space", "type": "PyPi.utils.spaces.Box"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "observation_space", "type": "PyPi.utils.spaces.Box"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 97, "col_offset": 69, "nodeName": "K", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "new_a", "type": "Any"}, {"lineNumber": 101, "col_offset": 58, "nodeName": "self", "type": "RMSpropGraves"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 117, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "K", "type": "Any"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 152, "col_offset": 51, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "Summary", "type": "Any"}, {"lineNumber": 175, "col_offset": 66, "nodeName": "loss", "type": "Any"}, {"lineNumber": 218, "col_offset": 50, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "mdp", "type": "PyPi.environments.atari.Atari"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "new_b", "type": "Any"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "K", "type": "Any"}]