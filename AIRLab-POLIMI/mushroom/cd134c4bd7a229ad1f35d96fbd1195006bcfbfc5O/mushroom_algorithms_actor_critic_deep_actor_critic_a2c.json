[{"lineNumber": 13, "col_offset": 10, "nodeName": "DeepAC", "type": "Type[mushroom.algorithms.actor_critic.deep_actor_critic.deep_actor_critic.DeepAC]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "_critic_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "_entropy_coeff", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "ent_coeff", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_V", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "adv_t", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "gradient_loss", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "entropy_loss", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "A2C"}, {"lineNumber": 40, "col_offset": 75, "nodeName": "critic_fit_params", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "A2C"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "A2C"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "Regressor", "type": "Type[mushroom.approximators.regressor.Regressor]"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "TorchApproximator", "type": "Type[mushroom.approximators.parametric.torch_approximator.TorchApproximator]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "actor_optimizer", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "clipping_params", "type": "Dict[Any, Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "policy", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "actor_optimizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 58, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 62, "nodeName": "parse_dataset", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 55, "col_offset": 76, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "compute_advantage_montecarlo", "type": "Callable[[Any, Any, Any, Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "_V", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 57, "col_offset": 59, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 66, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 78, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 50, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 61, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "_loss", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 45, "nodeName": "adv", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "_optimize_actor_parameters", "type": "Callable[[Any], None]"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "loss", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "policy", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "to_float_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "to_float_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "action", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "to_float_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "adv", "type": "Any"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "gradient_loss", "type": "Any"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "critic_fit_params", "type": "Any"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "critic_params", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "actor_optimizer", "type": "Any"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "max_grad_norm", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "actor_optimizer", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 52, "col_offset": 60, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "self", "type": "A2C"}, {"lineNumber": 58, "col_offset": 61, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "_V", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "_critic_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "self", "type": "A2C"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "A2C"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "self", "type": "A2C"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "entropy_t", "type": "Any"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "s", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "_entropy_coeff", "type": "Any"}, {"lineNumber": 75, "col_offset": 53, "nodeName": "entropy_loss", "type": "Any"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "max_grad_norm", "type": "Any"}, {"lineNumber": 49, "col_offset": 54, "nodeName": "clip_grad_norm_", "type": "Any"}, {"lineNumber": 50, "col_offset": 54, "nodeName": "clipping_params", "type": "Dict[Any, Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 52, "col_offset": 60, "nodeName": "policy", "type": "Any"}, {"lineNumber": 58, "col_offset": 61, "nodeName": "self", "type": "A2C"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "A2C"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "self", "type": "A2C"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 65, "nodeName": "adv_t", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "policy", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "self", "type": "A2C"}, {"lineNumber": 49, "col_offset": 54, "nodeName": "utils", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "log_prob_t", "type": "Any"}, {"lineNumber": 72, "col_offset": 59, "nodeName": "s", "type": "Any"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "a", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "self", "type": "A2C"}, {"lineNumber": 49, "col_offset": 54, "nodeName": "nn", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "policy", "type": "Any"}, {"lineNumber": 49, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "self", "type": "A2C"}]