[{"lineNumber": 8, "col_offset": 0, "nodeName": "test_cmac_approximator", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "k1", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "k2", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "tilings", "type": "List[mushroom_rl.features.tiles.tiles.Tiles]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "y_hat", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "y_true", "type": "numpy.ndarray"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "y_test", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "point", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "derivative", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "old_weights", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "random_weights", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "random_weight_new", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "n_actions", "type": "int"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "q", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "tilings", "type": "List[mushroom_rl.features.tiles.tiles.Tiles]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "x_s", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "x_a", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "y_test", "type": "numpy.ndarray"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "y_test", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "y_test", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "y_test", "type": "numpy.ndarray"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "rand", "type": "Any"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "rand", "type": "Any"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "generate", "type": "Callable[..., List[mushroom_rl.features.tiles.tiles.Tiles]]"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "Regressor", "type": "Type[mushroom_rl.approximators.regressor.Regressor]"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "CMAC", "type": "Type[mushroom_rl.approximators.parametric.cmac.CMAC]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "y_hat", "type": "Any"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "y_test", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "diff", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "point", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "weights_size", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "old_weights", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "old_weights", "type": "Any"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 48, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "random_weights", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "random_weights", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "random_weight_new", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "n_actions", "type": "int"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "generate", "type": "Callable[..., List[mushroom_rl.features.tiles.tiles.Tiles]]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "Regressor", "type": "Type[mushroom_rl.approximators.regressor.Regressor]"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "CMAC", "type": "Type[mushroom_rl.approximators.parametric.cmac.CMAC]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "s", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "q", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "rand", "type": "Any"}, {"lineNumber": 71, "col_offset": 10, "nodeName": "randint", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "n_actions", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "x_s", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "x_a", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "y_test", "type": "numpy.ndarray"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "x_s", "type": "Any"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "x_a", "type": "Any"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "y_test", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "x_s", "type": "Any"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "x_a", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "y_test", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "x_s", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "y_test", "type": "numpy.ndarray"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "Tiles", "type": "Type[mushroom_rl.features.tiles.tiles.Tiles]"}, {"lineNumber": 19, "col_offset": 43, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 19, "col_offset": 56, "nodeName": "ones", "type": "Any"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "tilings", "type": "List[mushroom_rl.features.tiles.tiles.Tiles]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "derivative", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "derivative", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "Tiles", "type": "Type[mushroom_rl.features.tiles.tiles.Tiles]"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 61, "col_offset": 60, "nodeName": "ones", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "tilings", "type": "List[mushroom_rl.features.tiles.tiles.Tiles]"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "n_actions", "type": "int"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 71, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "equal", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "random_weights", "type": "Any"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "old_weights", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "sin", "type": "Any"}, {"lineNumber": 17, "col_offset": 45, "nodeName": "sin", "type": "Any"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "sin", "type": "Any"}, {"lineNumber": 29, "col_offset": 54, "nodeName": "sin", "type": "Any"}, {"lineNumber": 39, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 37, "nodeName": "pi", "type": "Any"}, {"lineNumber": 17, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 64, "nodeName": "pi", "type": "Any"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 46, "nodeName": "pi", "type": "Any"}, {"lineNumber": 29, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 77, "nodeName": "pi", "type": "Any"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "old_weights", "type": "Any"}, {"lineNumber": 17, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 77, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "dot", "type": "Any"}, {"lineNumber": 17, "col_offset": 31, "nodeName": "k1", "type": "Any"}, {"lineNumber": 17, "col_offset": 52, "nodeName": "dot", "type": "Any"}, {"lineNumber": 17, "col_offset": 58, "nodeName": "k2", "type": "Any"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "dot", "type": "Any"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "k1", "type": "Any"}, {"lineNumber": 29, "col_offset": 61, "nodeName": "dot", "type": "Any"}, {"lineNumber": 29, "col_offset": 67, "nodeName": "k2", "type": "Any"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 17, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 61, "nodeName": "x", "type": "Any"}]