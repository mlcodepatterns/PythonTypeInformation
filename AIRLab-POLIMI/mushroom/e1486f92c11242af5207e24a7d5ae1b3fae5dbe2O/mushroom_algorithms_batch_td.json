[{"lineNumber": 8, "col_offset": 14, "nodeName": "Agent", "type": "Type[mushroom.algorithms.agent.Agent]"}, {"lineNumber": 20, "col_offset": 10, "nodeName": "BatchTD", "type": "Type[BatchTD]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "target", "type": "None"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "sa", "type": "List[numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_extractor", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_n_epochs", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_predict_next_state", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_clip_reward", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "_max_no_op_actions", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "_no_op_action_value", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "_episode_steps", "type": "None"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "_no_op_actions", "type": "None"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "_predict_next_state", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "sa", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "_episode_steps", "type": "Any"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 14, "col_offset": 38, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 14, "col_offset": 52, "nodeName": "policy", "type": "Any"}, {"lineNumber": 14, "col_offset": 60, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "policy", "type": "Any"}, {"lineNumber": 29, "col_offset": 56, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "next_states", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 55, "nodeName": "last", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 62, "nodeName": "parse_dataset", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 55, "col_offset": 76, "nodeName": "x", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "sa", "type": "List[numpy.ndarray]"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 78, "col_offset": 54, "nodeName": "policy", "type": "Any"}, {"lineNumber": 78, "col_offset": 62, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "WeightedFQI"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 42, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 94, "col_offset": 56, "nodeName": "policy", "type": "Any"}, {"lineNumber": 94, "col_offset": 64, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "get", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "get", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "ReplayMemory", "type": "Type[mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "Buffer", "type": "Type[mushroom.utils.replay_memory.Buffer]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 126, "col_offset": 52, "nodeName": "policy", "type": "Any"}, {"lineNumber": 126, "col_offset": 60, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "generator", "type": "Callable[[Any], Generator[Any, Any, None]]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "e", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "sa", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "state_feature", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "target", "type": "None"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "e", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "state_feature", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "next_state_feature", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "target", "type": "None"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 207, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "sa", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[Any], None]"}, {"lineNumber": 241, "col_offset": 40, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[Any], None]"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "mdp_info", "type": "Dict[Any, Any]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "_episode_steps", "type": "Any"}, {"lineNumber": 248, "col_offset": 33, "nodeName": "_no_op_actions", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "randint", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "_history_length", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 14, "col_offset": 69, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 65, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "_partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "target", "type": "None"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "maxq", "type": "Any"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "max_QA", "type": "Callable[[Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "next_states", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 71, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 94, "col_offset": 73, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "get", "type": "Any"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "get", "type": "Any"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 126, "col_offset": 69, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "_extractor", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "_n_epochs", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "replay_memory_generator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "get", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "state", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "action", "type": "Any"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "predict", "type": "Any"}, {"lineNumber": 147, "col_offset": 52, "nodeName": "sa", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "sa_n", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "state_feature", "type": "Any"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "action", "type": "Any"}, {"lineNumber": 155, "col_offset": 54, "nodeName": "reward", "type": "Any"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "next_state_feature", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "_n_epochs", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "replay_memory_generator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "get", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "size", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "state", "type": "Any"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "predict", "type": "Any"}, {"lineNumber": 180, "col_offset": 52, "nodeName": "state", "type": "Any"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "predict", "type": "Any"}, {"lineNumber": 181, "col_offset": 57, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "state_feature", "type": "Any"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "action", "type": "Any"}, {"lineNumber": 183, "col_offset": 54, "nodeName": "reward", "type": "Any"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "next_state_feature", "type": "Any"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "max", "type": "Any"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "q", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 207, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 207, "col_offset": 41, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "sa", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "max", "type": "Any"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "q", "type": "Any"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 229, "col_offset": 39, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 248, "col_offset": 33, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "policy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 252, "col_offset": 62, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 273, "col_offset": 49, "nodeName": "_max_no_op_actions", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "BatchTD", "type": "Type[BatchTD]"}, {"lineNumber": 14, "col_offset": 23, "nodeName": "self", "type": "BatchTD"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "FQI", "type": "Type[FQI]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "self", "type": "FQI"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "self", "type": "FQI"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "maxq", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "DoubleFQI", "type": "Type[DoubleFQI]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "self", "type": "DoubleFQI"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "WeightedFQI", "type": "Type[WeightedFQI]"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "self", "type": "WeightedFQI"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "DeepFQI", "type": "Type[DeepFQI]"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "sa", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 145, "col_offset": 44, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "_extractor", "type": "Any"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 151, "col_offset": 59, "nodeName": "i", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 152, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "next_state_feature", "type": "Any"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "predict", "type": "Any"}, {"lineNumber": 153, "col_offset": 67, "nodeName": "sa_n", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "_partial_fit_next_state", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "feature_dataset", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "target", "type": "None"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "_extractor", "type": "Any"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "_extractor", "type": "Any"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "_extractor", "type": "Any"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "_extractor", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "_partial_fit_state", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 49, "nodeName": "feature_dataset", "type": "List[Any]"}, {"lineNumber": 189, "col_offset": 66, "nodeName": "target", "type": "None"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "size", "type": "Any"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "predict", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 40, "nodeName": "size", "type": "Any"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "predict", "type": "Any"}, {"lineNumber": 220, "col_offset": 52, "nodeName": "sa", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 225, "col_offset": 37, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "DeepFQI", "type": "Type[DeepFQI]"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "_no_op_action_value", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "policy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 252, "col_offset": 46, "nodeName": "state", "type": "Any"}, {"lineNumber": 252, "col_offset": 62, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 273, "col_offset": 49, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "self", "type": "FQI"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 140, "col_offset": 51, "nodeName": "sa", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "size", "type": "Any"}, {"lineNumber": 149, "col_offset": 44, "nodeName": "state_feature", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "next_state_feature", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "_extractor", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "q", "type": "Any"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "q", "type": "Any"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 219, "col_offset": 58, "nodeName": "i", "type": "Any"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "self", "type": "FQI"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 139, "col_offset": 36, "nodeName": "batch", "type": "Any"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "_extractor", "type": "Any"}, {"lineNumber": 141, "col_offset": 51, "nodeName": "batch", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "i", "type": "Any"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "_extractor", "type": "Any"}, {"lineNumber": 171, "col_offset": 51, "nodeName": "batch", "type": "Any"}, {"lineNumber": 172, "col_offset": 51, "nodeName": "batch", "type": "Any"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 190, "col_offset": 51, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "unique", "type": "Any"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "i", "type": "Any"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 200, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 200, "col_offset": 57, "nodeName": "i", "type": "Any"}, {"lineNumber": 217, "col_offset": 40, "nodeName": "unique", "type": "Any"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 220, "col_offset": 21, "nodeName": "i", "type": "Any"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 142, "col_offset": 53, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "unique", "type": "Any"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "action", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 173, "col_offset": 53, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 51, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 217, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 53, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "state_feature", "type": "Any"}, {"lineNumber": 173, "col_offset": 53, "nodeName": "self", "type": "DeepFQI"}, {"lineNumber": 219, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 219, "col_offset": 37, "nodeName": "x", "type": "Any"}]