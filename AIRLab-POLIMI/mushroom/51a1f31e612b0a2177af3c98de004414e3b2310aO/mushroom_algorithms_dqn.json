[{"lineNumber": 7, "col_offset": 10, "nodeName": "Agent", "type": "Type[mushroom.algorithms.agent.Agent]"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "_clip_reward", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "_target_approximator", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "_train_frequency", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_max_no_op_actions", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "_no_op_action_value", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "_no_op_actions", "type": "None"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "__name__", "type": "str"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "max_a", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "params", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "get", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "get", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 20, "col_offset": 36, "nodeName": "get", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 22, "col_offset": 40, "nodeName": "get", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "ReplayMemory", "type": "Type[mushroom.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "Buffer", "type": "Type[mushroom.utils.replay_memory.Buffer]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "policy", "type": "Any"}, {"lineNumber": 35, "col_offset": 56, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 35, "col_offset": 63, "nodeName": "params", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "_clip_reward", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "predict", "type": "Any"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "q", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[Any], None]"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[Any], None]"}, {"lineNumber": 97, "col_offset": 39, "nodeName": "mdp_info", "type": "Dict[Any, Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "_episode_steps", "type": "int"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "_no_op_actions", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "extended_state", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "randint", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "size", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "self", "type": "DQN"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "DoubleDQN"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 134, "col_offset": 54, "nodeName": "policy", "type": "Any"}, {"lineNumber": 134, "col_offset": 62, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 134, "col_offset": 69, "nodeName": "params", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "predict", "type": "Any"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "q", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "predict", "type": "Any"}, {"lineNumber": 142, "col_offset": 49, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 142, "col_offset": 61, "nodeName": "max_a", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "draw_action", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 20, "col_offset": 36, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 22, "col_offset": 40, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "get", "type": "Any"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "get", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "get", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "self", "type": "DQN"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "_next_q", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "action", "type": "Any"}, {"lineNumber": 61, "col_offset": 49, "nodeName": "q", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "_target_approximator", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 97, "col_offset": 39, "nodeName": "self", "type": "DQN"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "self", "type": "DQN"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "self", "type": "DQN"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "get", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "draw_action", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "extended_state", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "_max_no_op_actions", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "_target_approximator", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "_target_approximator", "type": "Any"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "self", "type": "DQN"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "_replay_memory", "type": "mushroom.utils.replay_memory.ReplayMemory"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "self", "type": "DQN"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "reward", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "self", "type": "DQN"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "_target_update_frequency", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "self", "type": "DQN"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "_no_op_action_value", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "policy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "_buffer", "type": "mushroom.utils.replay_memory.Buffer"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "self", "type": "DQN"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "DoubleDQN", "type": "Type[DoubleDQN]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "self", "type": "DoubleDQN"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "DoubleDQN"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "self", "type": "DoubleDQN"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "DoubleDQN", "type": "Type[DoubleDQN]"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "self", "type": "DoubleDQN"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "self", "type": "DoubleDQN"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "self", "type": "DQN"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "params", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "self", "type": "DQN"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "self", "type": "DQN"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "self", "type": "DQN"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "self", "type": "DQN"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "self", "type": "DQN"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "absorbing", "type": "Any"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "self", "type": "DQN"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "_target_approximator", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "self", "type": "DQN"}]