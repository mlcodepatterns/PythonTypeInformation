[{"lineNumber": 14, "col_offset": 0, "nodeName": "experiment", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "mdp", "type": "PyPi.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "learning_rate", "type": "PyPi.utils.parameters.DecayParameter"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "fit_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "agent", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "collect_dataset", "type": "PyPi.utils.callbacks.CollectDataset"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "callbacks", "type": "List[Union[PyPi.utils.callbacks.CollectDataset, PyPi.utils.callbacks.CollectMaxQ]]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "core", "type": "PyPi.core.core.Core"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "max_Qs", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "n_experiment", "type": "int"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 18, "col_offset": 10, "nodeName": "GridWorldVanHasselt", "type": "Type[PyPi.environments.grid_world.GridWorldVanHasselt]"}, {"lineNumber": 21, "col_offset": 14, "nodeName": "DecayParameter", "type": "Type[PyPi.utils.parameters.DecayParameter]"}, {"lineNumber": 23, "col_offset": 9, "nodeName": "EpsGreedy", "type": "Type[PyPi.policy.policy.EpsGreedy]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "size", "type": "Tuple[Any, ...]"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "size", "type": "Tuple[Any, ...]"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "algorithm_class", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "approximator", "type": "PyPi.approximators.regressor.Regressor"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "DecayParameter", "type": "Type[PyPi.utils.parameters.DecayParameter]"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "fit_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "algorithm_class", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "approximator", "type": "Union[PyPi.approximators.regressor.Regressor, PyPi.approximators.ensemble.Ensemble]"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "pi", "type": "PyPi.policy.policy.EpsGreedy"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "CollectDataset", "type": "Type[PyPi.utils.callbacks.CollectDataset]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "CollectMaxQ", "type": "Type[PyPi.utils.callbacks.CollectMaxQ]"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "approximator", "type": "Union[PyPi.approximators.regressor.Regressor, PyPi.approximators.ensemble.Ensemble]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "values", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "collect_dataset", "type": "PyPi.utils.callbacks.CollectDataset"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "collect_max_Q", "type": "PyPi.utils.callbacks.CollectMaxQ"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "Core", "type": "Type[PyPi.core.core.Core]"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "agent", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "mdp", "type": "PyPi.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "callbacks", "type": "List[Union[PyPi.utils.callbacks.CollectDataset, PyPi.utils.callbacks.CollectMaxQ]]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "learn", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 7, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "parse_dataset", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "get_values", "type": "Callable[[], List[Any]]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "max_Qs", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "max_Qs", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "max_Qs", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "size", "type": "Tuple[Any, ...]"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "epsilon", "type": "PyPi.utils.parameters.DecayParameter"}, {"lineNumber": 23, "col_offset": 54, "nodeName": "observation_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 24, "col_offset": 32, "nodeName": "action_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "observation_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "action_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "QLearning", "type": "Type[PyPi.algorithms.td.QLearning]"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "WeightedQLearning", "type": "Type[PyPi.algorithms.td.WeightedQLearning]"}, {"lineNumber": 29, "col_offset": 57, "nodeName": "SpeedyQLearning", "type": "Type[PyPi.algorithms.td.SpeedyQLearning]"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "Regressor", "type": "Type[PyPi.approximators.regressor.Regressor]"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "Tabular", "type": "Type[PyPi.approximators.tabular.Tabular]"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "algorithm_class", "type": "Any"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "DoubleQLearning", "type": "Type[PyPi.algorithms.td.DoubleQLearning]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "approximator", "type": "PyPi.approximators.ensemble.Ensemble"}, {"lineNumber": 35, "col_offset": 63, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "learning_rate", "type": "PyPi.utils.parameters.DecayParameter"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "agent_params", "type": "Dict[str, Union[Dict[nothing, nothing], Dict[Any, Any]]]"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "action_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "core", "type": "PyPi.core.core.Core"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "get", "type": "Callable[[], List[Any]]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "collect_max_Q", "type": "PyPi.utils.callbacks.CollectMaxQ"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "QLearning", "type": "Type[PyPi.algorithms.td.QLearning]"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "DoubleQLearning", "type": "Type[PyPi.algorithms.td.DoubleQLearning]"}, {"lineNumber": 64, "col_offset": 55, "nodeName": "WeightedQLearning", "type": "Type[PyPi.algorithms.td.WeightedQLearning]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "SpeedyQLearning", "type": "Type[PyPi.algorithms.td.SpeedyQLearning]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "convolve", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "max_Qs", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 75, "col_offset": 63, "nodeName": "r", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "max_Qs", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "observation_space", "type": "PyPi.utils.spaces.Discrete"}, {"lineNumber": 23, "col_offset": 54, "nodeName": "mdp", "type": "PyPi.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 24, "col_offset": 32, "nodeName": "mdp", "type": "PyPi.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "mdp", "type": "PyPi.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "mdp", "type": "PyPi.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 30, "col_offset": 44, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "Ensemble", "type": "Type[PyPi.approximators.ensemble.Ensemble]"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "Tabular", "type": "Type[PyPi.approximators.tabular.Tabular]"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "_start", "type": "Any"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "mdp", "type": "PyPi.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "collect_dataset", "type": "PyPi.utils.callbacks.CollectDataset"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "Parallel", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "r", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "mdp", "type": "PyPi.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 32, "col_offset": 46, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "mdp", "type": "PyPi.environments.grid_world.GridWorldVanHasselt"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "a", "type": "Union[Type[PyPi.algorithms.td.SpeedyQLearning], Type[PyPi.algorithms.td.WeightedQLearning], Type[PyPi.algorithms.td.QLearning], Type[PyPi.algorithms.td.DoubleQLearning]]"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "_", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "o", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "o", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "out", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "o", "type": "Any"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "o", "type": "Any"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "out", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "ones", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "delayed", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "experiment", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 67, "col_offset": 51, "nodeName": "n_experiment", "type": "int"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "i", "type": "int"}]