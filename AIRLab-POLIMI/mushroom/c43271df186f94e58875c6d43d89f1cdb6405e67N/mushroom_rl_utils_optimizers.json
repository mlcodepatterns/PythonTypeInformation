[{"lineNumber": 8, "col_offset": 16, "nodeName": "Serializable", "type": "Type[mushroom_rl.core.serialization.Serializable]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "get_value", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "_maximize", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "maximize", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "_eps", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "eps", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "grads", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "_maximize", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "_maximize", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "_maximize", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "lr", "type": "Any"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "_lr", "type": "mushroom_rl.utils.parameters.Parameter"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "_lr", "type": "Any"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "lr", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "_add_save_attr", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "AdaptiveOptimizer"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_add_save_attr", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "grads", "type": "Any"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "get_value", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "_maximize", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "grads", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "nat_gradient", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "lambda_v", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "lambda_v", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "step_length", "type": "Union[Any, float]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "step_length", "type": "Union[float, Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "lr", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "maximize", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "_maximize", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "grads", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "lr", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "maximize", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "_add_save_attr", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "grads", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "_lr", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "update", "type": "Any"}, {"lineNumber": 155, "col_offset": 38, "nodeName": "params", "type": "Any"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "grads", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "lr", "type": "Any"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "maximize", "type": "Any"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "AdaGrad", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "_add_save_attr", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "self", "type": "AdaGradOptimizer"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "grads", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "_lr", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "update", "type": "Any"}, {"lineNumber": 187, "col_offset": 38, "nodeName": "params", "type": "Any"}, {"lineNumber": 187, "col_offset": 46, "nodeName": "grads", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "lr", "type": "Any"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "maximize", "type": "Any"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "RMSProp", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "_add_save_attr", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "self", "type": "RMSPropOptimizer"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "grads", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 220, "col_offset": 42, "nodeName": "_lr", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "update", "type": "Any"}, {"lineNumber": 221, "col_offset": 38, "nodeName": "params", "type": "Any"}, {"lineNumber": 221, "col_offset": 46, "nodeName": "grads", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "Parameter", "type": "Type[mushroom_rl.utils.parameters.Parameter]"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "lr", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "maximize", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "AdaptiveOptimizer"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "self", "type": "AdaptiveOptimizer"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "self", "type": "AdaptiveOptimizer"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "lr", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "grads", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "item", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "max", "type": "Callable"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "lambda_v", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "self", "type": "SGDOptimizer"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "grads", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "decay1", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "decay2", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "AdaGradOptimizer"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "self", "type": "AdaGradOptimizer"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 209, "col_offset": 18, "nodeName": "decay", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "RMSPropOptimizer"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 220, "col_offset": 42, "nodeName": "self", "type": "RMSPropOptimizer"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "lambda_v", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "get_value", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "_lr", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "neural_nets", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "_lr", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "neural_nets", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "_lr", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "AdaGradOptimizer"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "self", "type": "AdaGradOptimizer"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "neural_nets", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "_lr", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "RMSPropOptimizer"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "self", "type": "RMSPropOptimizer"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "nat_gradient", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "_eps", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "self", "type": "AdaptiveOptimizer"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 94, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "self", "type": "SGDOptimizer"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "npml", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "npml", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "self", "type": "AdaGradOptimizer"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "npml", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "self", "type": "RMSPropOptimizer"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "self", "type": "AdaptiveOptimizer"}]