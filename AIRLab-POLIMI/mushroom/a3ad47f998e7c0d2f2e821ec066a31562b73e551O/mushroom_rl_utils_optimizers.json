[{"lineNumber": 7, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "_maximize", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "maximize", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_eps", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "eps", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "grads", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "_maximize", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "_maximize", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "_maximize", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "lr", "type": "Any"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "_lr", "type": "mushroom_rl.utils.parameters.Parameter"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "_lr", "type": "Any"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "lr", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "AdaGradOptimizer"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "AdaptiveOptimizer"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "grads", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "get_value", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "_maximize", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "grads", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "nat_gradient", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "lambda_v", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "lambda_v", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "step_length", "type": "Union[Any, float]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "step_length", "type": "Union[Any, float]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "lr", "type": "Any"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "maximize", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "_maximize", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "grads", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "lr", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "maximize", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "grads", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 145, "col_offset": 42, "nodeName": "_lr", "type": "Union[mushroom_rl.utils.parameters.Parameter, Any]"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "update", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "params", "type": "Any"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "grads", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "lr", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "maximize", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "AdaGrad", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "self", "type": "AdaGradOptimizer"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "grads", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "_lr", "type": "Union[mushroom_rl.utils.parameters.Parameter, Any]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "update", "type": "Any"}, {"lineNumber": 176, "col_offset": 38, "nodeName": "params", "type": "Any"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "grads", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "lr", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "maximize", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "RMSProp", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "self", "type": "RMSPropOptimizer"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "grads", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "_lr", "type": "Union[mushroom_rl.utils.parameters.Parameter, Any]"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "update", "type": "Any"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "params", "type": "Any"}, {"lineNumber": 208, "col_offset": 46, "nodeName": "grads", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "self", "type": "AdaGradOptimizer"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "Parameter", "type": "Type[mushroom_rl.utils.parameters.Parameter]"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "lr", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "self", "type": "AdaGradOptimizer"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "maximize", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "self", "type": "AdaptiveOptimizer"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "self", "type": "AdaptiveOptimizer"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "lr", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "grads", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "item", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "max", "type": "Callable"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "lambda_v", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "self", "type": "SGDOptimizer"}, {"lineNumber": 112, "col_offset": 37, "nodeName": "grads", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "decay1", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "decay2", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 145, "col_offset": 42, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "self", "type": "AdaGradOptimizer"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "decay", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "self", "type": "RMSPropOptimizer"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "lambda_v", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "get_value", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "_lr", "type": "Union[mushroom_rl.utils.parameters.Parameter, Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "neural_nets", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "_lr", "type": "Union[mushroom_rl.utils.parameters.Parameter, Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "neural_nets", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "_lr", "type": "Union[mushroom_rl.utils.parameters.Parameter, Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "AdaGradOptimizer"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "self", "type": "AdaGradOptimizer"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "neural_nets", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "_lr", "type": "Union[mushroom_rl.utils.parameters.Parameter, Any]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "RMSPropOptimizer"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "self", "type": "RMSPropOptimizer"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "nat_gradient", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "_eps", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "self", "type": "AdaptiveOptimizer"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 87, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "self", "type": "SGDOptimizer"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "npml", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "npml", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "self", "type": "AdaGradOptimizer"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "npml", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "self", "type": "RMSPropOptimizer"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "self", "type": "AdaptiveOptimizer"}]