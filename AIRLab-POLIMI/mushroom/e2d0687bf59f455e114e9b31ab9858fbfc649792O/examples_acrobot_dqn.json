[{"lineNumber": 251, "col_offset": 0, "nodeName": "print_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 0, "nodeName": "get_stats", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 0, "nodeName": "experiment", "type": "Callable[[], Any]"}, {"lineNumber": 248, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "score", "type": "Tuple[Any, Any, Any, int]"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "score", "type": "Tuple[Any, Any, Any, int]"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "arg_mdp", "type": "argparse._ArgumentGroup"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "arg_mem", "type": "argparse._ArgumentGroup"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "arg_net", "type": "argparse._ArgumentGroup"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "arg_utils", "type": "argparse._ArgumentGroup"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "scores", "type": "List[nothing]"}, {"lineNumber": 357, "col_offset": 7, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 519, "col_offset": 11, "nodeName": "scores", "type": "List[nothing]"}, {"lineNumber": 522, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "_name", "type": "Any"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "_folder_name", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "folder_name", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_session", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_train_count", "type": "int"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "_scope_name", "type": "str"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "_train_count", "type": "int"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "_x", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "_action", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "features2", "type": "List[Any]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "q", "type": "List[Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "q_acted", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "_features", "type": "List[Any]"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "_features2", "type": "List[Any]"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "features2", "type": "List[Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "_q", "type": "List[Any]"}, {"lineNumber": 240, "col_offset": 18, "nodeName": "q", "type": "List[Any]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "_q_acted", "type": "List[Any]"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "q_acted", "type": "List[Any]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "_target_q", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "_merged", "type": "Any"}, {"lineNumber": 248, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "epoch", "type": "int"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "compute_scores", "type": "Callable[[Any], Tuple[Any, Any, Any, int]]"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 269, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 275, "col_offset": 14, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 281, "col_offset": 14, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 299, "col_offset": 14, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 354, "col_offset": 13, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 357, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "mdp", "type": "mushroom.environments.gym_env.Gym"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "epsilon_test", "type": "mushroom.utils.parameters.Parameter"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "pi", "type": "mushroom.policy.td_policy.EpsGreedy"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "approximator", "type": "Type[SimpleNet]"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "SimpleNet", "type": "Type[SimpleNet]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "core_test", "type": "mushroom.core.core.Core"}, {"lineNumber": 414, "col_offset": 11, "nodeName": "debug", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "mdp", "type": "mushroom.environments.gym_env.Gym"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "epsilon_test", "type": "mushroom.utils.parameters.Parameter"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "epsilon_random", "type": "mushroom.utils.parameters.Parameter"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "pi", "type": "mushroom.policy.td_policy.EpsGreedy"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "approximator", "type": "Type[SimpleNet]"}, {"lineNumber": 457, "col_offset": 23, "nodeName": "SimpleNet", "type": "Type[SimpleNet]"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "core", "type": "mushroom.core.core.Core"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "save", "type": "Any"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "n_epoch", "type": "int"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "experiment", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "Session", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "_name", "type": "Any"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "res", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "run", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "only_trainable", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "w", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "_session", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "import_meta_graph", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "restore", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "_session", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "_restore_collection", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "convnet_pars", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "_features", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "_features2", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "_q", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "_q_acted", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "loss", "type": "float"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "_train_step", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "_folder_name", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "_add_collection", "type": "Callable[[], Any]"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "add_to_collection", "type": "Any"}, {"lineNumber": 207, "col_offset": 54, "nodeName": "_x", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "add_to_collection", "type": "Any"}, {"lineNumber": 208, "col_offset": 59, "nodeName": "_action", "type": "Any"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "add_to_collection", "type": "Any"}, {"lineNumber": 217, "col_offset": 61, "nodeName": "_target_q", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "add_to_collection", "type": "Any"}, {"lineNumber": 218, "col_offset": 59, "nodeName": "_merged", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "add_to_collection", "type": "Any"}, {"lineNumber": 219, "col_offset": 63, "nodeName": "_train_step", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 228, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "score", "type": "Tuple[Any, Any, Any, int]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 269, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "arg_mdp", "type": "argparse._ArgumentGroup"}, {"lineNumber": 272, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "arg_mdp", "type": "argparse._ArgumentGroup"}, {"lineNumber": 273, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 275, "col_offset": 14, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "arg_mem", "type": "argparse._ArgumentGroup"}, {"lineNumber": 276, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "arg_mem", "type": "argparse._ArgumentGroup"}, {"lineNumber": 278, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 281, "col_offset": 14, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "arg_net", "type": "argparse._ArgumentGroup"}, {"lineNumber": 282, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "arg_net", "type": "argparse._ArgumentGroup"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "arg_net", "type": "argparse._ArgumentGroup"}, {"lineNumber": 290, "col_offset": 49, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "arg_net", "type": "argparse._ArgumentGroup"}, {"lineNumber": 293, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "arg_net", "type": "argparse._ArgumentGroup"}, {"lineNumber": 296, "col_offset": 43, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 299, "col_offset": 14, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 300, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 303, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 305, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 307, "col_offset": 59, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 310, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 313, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 316, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 318, "col_offset": 59, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 321, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 323, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 326, "col_offset": 57, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 328, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 330, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 334, "col_offset": 54, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "arg_alg", "type": "argparse._ArgumentGroup"}, {"lineNumber": 336, "col_offset": 42, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "arg_utils", "type": "argparse._ArgumentGroup"}, {"lineNumber": 339, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "arg_utils", "type": "argparse._ArgumentGroup"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "arg_utils", "type": "argparse._ArgumentGroup"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "arg_utils", "type": "argparse._ArgumentGroup"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "arg_utils", "type": "argparse._ArgumentGroup"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 359, "col_offset": 14, "nodeName": "Gym", "type": "Type[mushroom.environments.gym_env.Gym]"}, {"lineNumber": 359, "col_offset": 32, "nodeName": "horizon", "type": "Any"}, {"lineNumber": 359, "col_offset": 46, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "Parameter", "type": "Type[mushroom.utils.parameters.Parameter]"}, {"lineNumber": 362, "col_offset": 13, "nodeName": "EpsGreedy", "type": "Type[mushroom.policy.td_policy.EpsGreedy]"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 366, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 383, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "DQN", "type": "Type[mushroom.algorithms.value.dqn.DQN]"}, {"lineNumber": 394, "col_offset": 20, "nodeName": "approximator", "type": "Type[SimpleNet]"}, {"lineNumber": 394, "col_offset": 34, "nodeName": "pi", "type": "mushroom.policy.td_policy.EpsGreedy"}, {"lineNumber": 394, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 398, "col_offset": 20, "nodeName": "Core", "type": "Type[mushroom.core.core.Core]"}, {"lineNumber": 398, "col_offset": 25, "nodeName": "agent", "type": "mushroom.algorithms.value.dqn.DQN"}, {"lineNumber": 398, "col_offset": 32, "nodeName": "mdp", "type": "mushroom.environments.gym_env.Gym"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "set_epsilon", "type": "Callable[[Any], None]"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "epsilon_test", "type": "mushroom.utils.parameters.Parameter"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "evaluate", "type": "Callable[..., Any]"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "get_stats", "type": "Callable[[Any], Any]"}, {"lineNumber": 405, "col_offset": 18, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 414, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "initial_replay_size", "type": "int"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "max_replay_size", "type": "int"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "train_frequency", "type": "int"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "target_update_frequency", "type": "int"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "test_samples", "type": "int"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "evaluation_frequency", "type": "int"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "max_steps", "type": "int"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 423, "col_offset": 34, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "max_replay_size", "type": "Any"}, {"lineNumber": 424, "col_offset": 30, "nodeName": "max_replay_size", "type": "Any"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "train_frequency", "type": "Any"}, {"lineNumber": 425, "col_offset": 30, "nodeName": "train_frequency", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "target_update_frequency", "type": "Any"}, {"lineNumber": 426, "col_offset": 38, "nodeName": "target_update_frequency", "type": "Any"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 427, "col_offset": 27, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "evaluation_frequency", "type": "Any"}, {"lineNumber": 428, "col_offset": 35, "nodeName": "evaluation_frequency", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "max_steps", "type": "Any"}, {"lineNumber": 429, "col_offset": 24, "nodeName": "max_steps", "type": "Any"}, {"lineNumber": 432, "col_offset": 14, "nodeName": "Gym", "type": "Type[mushroom.environments.gym_env.Gym]"}, {"lineNumber": 432, "col_offset": 32, "nodeName": "horizon", "type": "Any"}, {"lineNumber": 432, "col_offset": 46, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 435, "col_offset": 18, "nodeName": "LinearDecayParameter", "type": "Type[mushroom.utils.parameters.LinearDecayParameter]"}, {"lineNumber": 438, "col_offset": 23, "nodeName": "Parameter", "type": "Type[mushroom.utils.parameters.Parameter]"}, {"lineNumber": 439, "col_offset": 25, "nodeName": "Parameter", "type": "Type[mushroom.utils.parameters.Parameter]"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "EpsGreedy", "type": "Type[mushroom.policy.td_policy.EpsGreedy]"}, {"lineNumber": 443, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 444, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 460, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 474, "col_offset": 16, "nodeName": "DQN", "type": "Type[mushroom.algorithms.value.dqn.DQN]"}, {"lineNumber": 474, "col_offset": 20, "nodeName": "approximator", "type": "Type[SimpleNet]"}, {"lineNumber": 474, "col_offset": 34, "nodeName": "pi", "type": "mushroom.policy.td_policy.EpsGreedy"}, {"lineNumber": 474, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 480, "col_offset": 15, "nodeName": "Core", "type": "Type[mushroom.core.core.Core]"}, {"lineNumber": 480, "col_offset": 20, "nodeName": "agent", "type": "mushroom.algorithms.value.dqn.DQN"}, {"lineNumber": 480, "col_offset": 27, "nodeName": "mdp", "type": "mushroom.environments.gym_env.Gym"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "print_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "learn", "type": "Callable[..., None]"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "set_epsilon", "type": "Callable[[Any], None]"}, {"lineNumber": 493, "col_offset": 23, "nodeName": "epsilon_test", "type": "mushroom.utils.parameters.Parameter"}, {"lineNumber": 494, "col_offset": 18, "nodeName": "evaluate", "type": "Callable[..., Any]"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 498, "col_offset": 45, "nodeName": "scores", "type": "List[nothing]"}, {"lineNumber": 499, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 507, "col_offset": 15, "nodeName": "save", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "_load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "convnet_pars", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "_build", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "convnet_pars", "type": "Dict[str, Any]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "Saver", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "_name", "type": "Any"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "_session", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "_merged", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "_train_step", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "add_summary", "type": "Any"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "summaries", "type": "Any"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "_train_count", "type": "int"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "w", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "weights", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "w", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "_session", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "_train_saver", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "train", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "restorer", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "_action", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "_x", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "loss", "type": "Union[Any, float]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "merge", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "convnet_pars", "type": "Dict[str, Any]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "_session", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "FileWriter", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "_features", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 207, "col_offset": 54, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 208, "col_offset": 59, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "_features", "type": "List[Any]"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "add_to_collection", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "add_to_collection", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "add_to_collection", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "add_to_collection", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 217, "col_offset": 61, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 218, "col_offset": 59, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 219, "col_offset": 63, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 222, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "convnet_pars", "type": "Dict[str, Any]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 359, "col_offset": 46, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 361, "col_offset": 39, "nodeName": "test_exploration_rate", "type": "Any"}, {"lineNumber": 362, "col_offset": 31, "nodeName": "epsilon_test", "type": "mushroom.utils.parameters.Parameter"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 367, "col_offset": 23, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 368, "col_offset": 28, "nodeName": "n_approximators", "type": "Any"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "n", "type": "Any"}, {"lineNumber": 373, "col_offset": 22, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 389, "col_offset": 27, "nodeName": "history_length", "type": "Any"}, {"lineNumber": 390, "col_offset": 30, "nodeName": "max_no_op_actions", "type": "Any"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "no_op_action_value", "type": "Any"}, {"lineNumber": 392, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 394, "col_offset": 38, "nodeName": "mdp", "type": "mushroom.environments.gym_env.Gym"}, {"lineNumber": 395, "col_offset": 40, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 395, "col_offset": 63, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "pi", "type": "mushroom.policy.td_policy.EpsGreedy"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "core_test", "type": "mushroom.core.core.Core"}, {"lineNumber": 402, "col_offset": 45, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 403, "col_offset": 44, "nodeName": "render", "type": "Any"}, {"lineNumber": 404, "col_offset": 43, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 411, "col_offset": 24, "nodeName": "strftime", "type": "Callable[[str], str]"}, {"lineNumber": 423, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 424, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 425, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 426, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 427, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 428, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 429, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 432, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 432, "col_offset": 46, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 435, "col_offset": 45, "nodeName": "initial_exploration_rate", "type": "Any"}, {"lineNumber": 436, "col_offset": 49, "nodeName": "final_exploration_rate", "type": "Any"}, {"lineNumber": 437, "col_offset": 41, "nodeName": "final_exploration_frame", "type": "Any"}, {"lineNumber": 438, "col_offset": 39, "nodeName": "test_exploration_rate", "type": "Any"}, {"lineNumber": 440, "col_offset": 31, "nodeName": "epsilon_random", "type": "mushroom.utils.parameters.Parameter"}, {"lineNumber": 443, "col_offset": 22, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 445, "col_offset": 23, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 446, "col_offset": 28, "nodeName": "n_approximators", "type": "Any"}, {"lineNumber": 447, "col_offset": 24, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 449, "col_offset": 22, "nodeName": "n", "type": "Any"}, {"lineNumber": 450, "col_offset": 24, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 461, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 462, "col_offset": 28, "nodeName": "n_approximators", "type": "Any"}, {"lineNumber": 463, "col_offset": 32, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 464, "col_offset": 28, "nodeName": "max_replay_size", "type": "Any"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "history_length", "type": "Any"}, {"lineNumber": 466, "col_offset": 28, "nodeName": "train_frequency", "type": "Any"}, {"lineNumber": 467, "col_offset": 36, "nodeName": "target_update_frequency", "type": "Any"}, {"lineNumber": 468, "col_offset": 30, "nodeName": "max_no_op_actions", "type": "Any"}, {"lineNumber": 469, "col_offset": 31, "nodeName": "no_op_action_value", "type": "Any"}, {"lineNumber": 470, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 474, "col_offset": 38, "nodeName": "mdp", "type": "mushroom.environments.gym_env.Gym"}, {"lineNumber": 475, "col_offset": 40, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 476, "col_offset": 22, "nodeName": "algorithm_params", "type": "Dict[Any, Any]"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "core", "type": "mushroom.core.core.Core"}, {"lineNumber": 486, "col_offset": 27, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 487, "col_offset": 35, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 487, "col_offset": 62, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "pi", "type": "mushroom.policy.td_policy.EpsGreedy"}, {"lineNumber": 494, "col_offset": 18, "nodeName": "core", "type": "mushroom.core.core.Core"}, {"lineNumber": 494, "col_offset": 40, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 494, "col_offset": 61, "nodeName": "render", "type": "Any"}, {"lineNumber": 495, "col_offset": 38, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "scores", "type": "List[nothing]"}, {"lineNumber": 496, "col_offset": 22, "nodeName": "get_stats", "type": "Callable[[Any], Any]"}, {"lineNumber": 496, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 498, "col_offset": 16, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "print_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 500, "col_offset": 24, "nodeName": "n_epoch", "type": "int"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "set_epsilon", "type": "Callable[[Any], None]"}, {"lineNumber": 503, "col_offset": 27, "nodeName": "epsilon", "type": "mushroom.utils.parameters.LinearDecayParameter"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "learn", "type": "Callable[..., None]"}, {"lineNumber": 507, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 510, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "set_epsilon", "type": "Callable[[Any], None]"}, {"lineNumber": 512, "col_offset": 27, "nodeName": "epsilon_test", "type": "mushroom.utils.parameters.Parameter"}, {"lineNumber": 513, "col_offset": 22, "nodeName": "evaluate", "type": "Callable[..., Any]"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 517, "col_offset": 49, "nodeName": "scores", "type": "List[nothing]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "train", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "_target_w", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "_w", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "run", "type": "Any"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "_q", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "_x", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "_action", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "_target_q", "type": "Any"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "s", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "_train_writer", "type": "Any"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "_session", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "_w", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 98, "col_offset": 55, "nodeName": "_scope_name", "type": "str"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 50, "nodeName": "_name", "type": "Any"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "get_name_scope", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "_action", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "convnet_pars", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "convnet_pars", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "summary", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "summary", "type": "Any"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 161, "col_offset": 58, "nodeName": "_q", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "summary", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "SUMMARIES", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "RMSPropOptimizer", "type": "Any"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "opt", "type": "Any"}, {"lineNumber": 184, "col_offset": 49, "nodeName": "loss", "type": "Union[Any, float]"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "summary", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "_features", "type": "List[Any]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "_features2", "type": "List[Any]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 214, "col_offset": 68, "nodeName": "_q", "type": "List[Any]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "_q_acted", "type": "List[Any]"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 222, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 222, "col_offset": 36, "nodeName": "_scope_name", "type": "str"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 223, "col_offset": 41, "nodeName": "_scope_name", "type": "str"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "features2", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "q", "type": "List[Any]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "q_acted", "type": "List[Any]"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 242, "col_offset": 43, "nodeName": "_scope_name", "type": "str"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "_scope_name", "type": "str"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "_scope_name", "type": "str"}, {"lineNumber": 361, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "info", "type": "Any"}, {"lineNumber": 367, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 368, "col_offset": 28, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 370, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 373, "col_offset": 22, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 374, "col_offset": 31, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 375, "col_offset": 29, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 376, "col_offset": 32, "nodeName": "decay", "type": "Any"}, {"lineNumber": 377, "col_offset": 34, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 389, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 390, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 392, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 402, "col_offset": 45, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 403, "col_offset": 44, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 404, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 435, "col_offset": 45, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 436, "col_offset": 49, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 437, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 438, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 443, "col_offset": 22, "nodeName": "info", "type": "Any"}, {"lineNumber": 445, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 446, "col_offset": 28, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 448, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 449, "col_offset": 22, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 451, "col_offset": 31, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 452, "col_offset": 29, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 453, "col_offset": 32, "nodeName": "decay", "type": "Any"}, {"lineNumber": 454, "col_offset": 34, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 461, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 462, "col_offset": 28, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 468, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 469, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 470, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 487, "col_offset": 62, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 494, "col_offset": 61, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 495, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 499, "col_offset": 32, "nodeName": "max_steps", "type": "Any"}, {"lineNumber": 499, "col_offset": 45, "nodeName": "evaluation_frequency", "type": "Any"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "pi", "type": "mushroom.policy.td_policy.EpsGreedy"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "core", "type": "mushroom.core.core.Core"}, {"lineNumber": 504, "col_offset": 31, "nodeName": "evaluation_frequency", "type": "Any"}, {"lineNumber": 505, "col_offset": 39, "nodeName": "train_frequency", "type": "Any"}, {"lineNumber": 505, "col_offset": 62, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "save", "type": "Any"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "pi", "type": "mushroom.policy.td_policy.EpsGreedy"}, {"lineNumber": 513, "col_offset": 22, "nodeName": "core", "type": "mushroom.core.core.Core"}, {"lineNumber": 513, "col_offset": 44, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 513, "col_offset": 65, "nodeName": "render", "type": "Any"}, {"lineNumber": 514, "col_offset": 42, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "scores", "type": "List[nothing]"}, {"lineNumber": 515, "col_offset": 26, "nodeName": "get_stats", "type": "Callable[[Any], Any]"}, {"lineNumber": 515, "col_offset": 36, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 517, "col_offset": 20, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "_session", "type": "Any"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "astype", "type": "Any"}, {"lineNumber": 57, "col_offset": 54, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 58, "col_offset": 50, "nodeName": "q", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 94, "col_offset": 55, "nodeName": "_scope_name", "type": "str"}, {"lineNumber": 98, "col_offset": 55, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 103, "col_offset": 50, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "convnet_pars", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "losses", "type": "Any"}, {"lineNumber": 158, "col_offset": 53, "nodeName": "_target_q", "type": "Any"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "_q_acted", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 58, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "train", "type": "Any"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "RMSPropOptimizer", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "_folder_name", "type": "Any"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 210, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 210, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 211, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 212, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 212, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 213, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 214, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 214, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 214, "col_offset": 68, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 214, "col_offset": 76, "nodeName": "i", "type": "int"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 215, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 215, "col_offset": 70, "nodeName": "i", "type": "int"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 216, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 222, "col_offset": 36, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 223, "col_offset": 41, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 230, "col_offset": 28, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 232, "col_offset": 29, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 242, "col_offset": 43, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "mdp", "type": "mushroom.environments.gym_env.Gym"}, {"lineNumber": 370, "col_offset": 26, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "info", "type": "Any"}, {"lineNumber": 374, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 375, "col_offset": 29, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 376, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 377, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 411, "col_offset": 24, "nodeName": "now", "type": "Callable"}, {"lineNumber": 443, "col_offset": 22, "nodeName": "mdp", "type": "mushroom.environments.gym_env.Gym"}, {"lineNumber": 448, "col_offset": 26, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 449, "col_offset": 22, "nodeName": "info", "type": "Any"}, {"lineNumber": 451, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 452, "col_offset": 29, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 453, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 454, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 505, "col_offset": 62, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 513, "col_offset": 65, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 514, "col_offset": 42, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 50, "col_offset": 55, "nodeName": "_x", "type": "Any"}, {"lineNumber": 50, "col_offset": 64, "nodeName": "s", "type": "Any"}, {"lineNumber": 57, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "_target_w", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 60, "nodeName": "weights", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "_folder_name", "type": "Any"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "_scope_name", "type": "Any"}, {"lineNumber": 94, "col_offset": 55, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "path", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "_scope_name", "type": "str"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "convnet_pars", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "_features", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 42, "nodeName": "dense", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "_features2", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "dense", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "_q", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "dense", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "_q_acted", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 53, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 159, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 169, "col_offset": 62, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 170, "col_offset": 54, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 171, "col_offset": 56, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "train", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "AdamOptimizer", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 230, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 232, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 370, "col_offset": 26, "nodeName": "info", "type": "Any"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "mdp", "type": "mushroom.environments.gym_env.Gym"}, {"lineNumber": 411, "col_offset": 24, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 448, "col_offset": 26, "nodeName": "info", "type": "Any"}, {"lineNumber": 449, "col_offset": 22, "nodeName": "mdp", "type": "mushroom.environments.gym_env.Gym"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "agent", "type": "mushroom.algorithms.value.dqn.DQN"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "w", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 50, "col_offset": 55, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 72, "col_offset": 68, "nodeName": "i", "type": "int"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "path", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "_scope_name", "type": "str"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 108, "col_offset": 56, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 126, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 126, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 127, "col_offset": 42, "nodeName": "layers", "type": "Any"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "convnet_pars", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "relu", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "layers", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "_features", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 43, "nodeName": "convnet_pars", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "relu", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "layers", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "_features2", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "action_one_hot", "type": "Any"}, {"lineNumber": 158, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 174, "col_offset": 62, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 175, "col_offset": 54, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 176, "col_offset": 56, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "train", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "AdadeltaOptimizer", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "_scope_name", "type": "str"}, {"lineNumber": 231, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 231, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "_scope_name", "type": "str"}, {"lineNumber": 233, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 233, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 234, "col_offset": 39, "nodeName": "_scope_name", "type": "str"}, {"lineNumber": 234, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 234, "col_offset": 70, "nodeName": "i", "type": "int"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "_scope_name", "type": "str"}, {"lineNumber": 236, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 236, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 370, "col_offset": 26, "nodeName": "mdp", "type": "mushroom.environments.gym_env.Gym"}, {"lineNumber": 411, "col_offset": 24, "nodeName": "datetime", "type": "module"}, {"lineNumber": 448, "col_offset": 26, "nodeName": "mdp", "type": "mushroom.environments.gym_env.Gym"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "agent", "type": "mushroom.algorithms.value.dqn.DQN"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "_target_w", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 44, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "_w", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "assign", "type": "Any"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "a", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "convnet_pars", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "glorot_uniform_initializer", "type": "Any"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "glorot_uniform_initializer", "type": "Any"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "convnet_pars", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "glorot_uniform_initializer", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "_q", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 59, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "train", "type": "Any"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 234, "col_offset": 39, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 67, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "_target_w", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 131, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 148, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 148, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 180, "col_offset": 63, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 44, "col_offset": 61, "nodeName": "w", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "w", "type": "Any"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "self", "type": "SimpleNet"}, {"lineNumber": 46, "col_offset": 66, "nodeName": "i", "type": "int"}, {"lineNumber": 44, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 45, "col_offset": 67, "nodeName": "w", "type": "Any"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 45, "col_offset": 69, "nodeName": "i", "type": "int"}]