[{"lineNumber": 49, "col_offset": 0, "nodeName": "learn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "test_dqn", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "test_prioritized_dqn", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "test_double_dqn", "type": "Callable[[], Any]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "test_averaged_dqn", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "test_categorical_dqn", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "Module", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "Module", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "mdp", "type": "mushroom.environments.inverted_pendulum.InvertedPendulumDiscrete"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "epsilon_random", "type": "mushroom.utils.parameters.Parameter"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "pi", "type": "mushroom.policy.td_policy.EpsGreedy"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "core", "type": "mushroom.core.core.Core"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "n_input", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "n_output", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "_h1", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "n_input", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "n_output", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "n_input", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "InvertedPendulumDiscrete", "type": "Type[mushroom.environments.inverted_pendulum.InvertedPendulumDiscrete]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "Parameter", "type": "Type[mushroom.utils.parameters.Parameter]"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "EpsGreedy", "type": "Type[mushroom.policy.td_policy.EpsGreedy]"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 72, "col_offset": 7, "nodeName": "alg", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "CategoricalDQN", "type": "Type[mushroom.algorithms.value.dqn.categorical_dqn.CategoricalDQN]"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "Core", "type": "Type[mushroom.core.core.Core]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "agent", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "mdp", "type": "mushroom.environments.inverted_pendulum.InvertedPendulumDiscrete"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "learn", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "agent", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "learn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "DQN", "type": "Type[mushroom.algorithms.value.dqn.dqn.DQN]"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "w_test", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "PrioritizedReplayMemory", "type": "Type[mushroom.utils.replay_memory.PrioritizedReplayMemory]"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "learn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "DQN", "type": "Type[mushroom.algorithms.value.dqn.dqn.DQN]"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "w_test", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "learn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "DoubleDQN", "type": "Type[mushroom.algorithms.value.dqn.dqn.DoubleDQN]"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "w_test", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "learn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "AveragedDQN", "type": "Type[mushroom.algorithms.value.dqn.dqn.AveragedDQN]"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "w_test", "type": "Any"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "learn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "CategoricalDQN", "type": "Type[mushroom.algorithms.value.dqn.categorical_dqn.CategoricalDQN]"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "w_test", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "n_input", "type": "Any"}, {"lineNumber": 21, "col_offset": 38, "nodeName": "n_output", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "q", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "q_acted", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "q_acted", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "float", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "torch", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "epsilon_random", "type": "mushroom.utils.parameters.Parameter"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "info", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "smooth_l1_loss", "type": "Any"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "n", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "alg", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "TorchApproximator", "type": "Type[mushroom.approximators.parametric.torch_approximator.TorchApproximator]"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "pi", "type": "mushroom.policy.td_policy.EpsGreedy"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "info", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "alg", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "pi", "type": "mushroom.policy.td_policy.EpsGreedy"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "info", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "core", "type": "mushroom.core.core.Core"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "replay_memory", "type": "mushroom.utils.replay_memory.PrioritizedReplayMemory"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "approximator", "type": "mushroom.approximators.regressor.Regressor"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "_h1", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "_h1", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "long", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "mdp", "type": "mushroom.environments.inverted_pendulum.InvertedPendulumDiscrete"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "Network", "type": "Type[Network]"}, {"lineNumber": 62, "col_offset": 81, "nodeName": "FeatureNetwork", "type": "Type[FeatureNetwork]"}, {"lineNumber": 63, "col_offset": 51, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "F", "type": "Any"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "mdp", "type": "mushroom.environments.inverted_pendulum.InvertedPendulumDiscrete"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 74, "col_offset": 63, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "mdp", "type": "mushroom.environments.inverted_pendulum.InvertedPendulumDiscrete"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "approximator_params", "type": "Dict[Any, Any]"}, {"lineNumber": 77, "col_offset": 63, "nodeName": "alg_params", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "LinearParameter", "type": "Type[mushroom.utils.parameters.LinearParameter]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "self", "type": "Network"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "calculate_gain", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "self", "type": "Network"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "float", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "action", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "gather", "type": "Any"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "action", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 62, "col_offset": 50, "nodeName": "alg", "type": "Any"}, {"lineNumber": 62, "col_offset": 61, "nodeName": "CategoricalDQN", "type": "Type[mushroom.algorithms.value.dqn.categorical_dqn.CategoricalDQN]"}, {"lineNumber": 63, "col_offset": 51, "nodeName": "optim", "type": "Any"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "info", "type": "Any"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "info", "type": "Any"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "init", "type": "Any"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "q", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "mdp", "type": "mushroom.environments.inverted_pendulum.InvertedPendulumDiscrete"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "mdp", "type": "mushroom.environments.inverted_pendulum.InvertedPendulumDiscrete"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "state", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "torch", "type": "Any"}]