[{"lineNumber": 7, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "n_models", "type": "Any"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "n_models", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "fit_actions", "type": "bool"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "models", "type": "List[PyPi.approximators.regressor.Regressor]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "n_models", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "n_models", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "fit_actions", "type": "bool"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "regressor_class", "type": "Type[PyPi.approximators.regressor.Regressor]"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "Regressor", "type": "Type[PyPi.approximators.regressor.Regressor]"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "n_models", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "n_models", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "n_models", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "models", "type": "List[PyPi.approximators.regressor.Regressor]"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "fit_actions", "type": "bool"}, {"lineNumber": 78, "col_offset": 73, "nodeName": "s", "type": "str"}, {"lineNumber": 24, "col_offset": 35, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "predict", "type": "Any"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "predict_all", "type": "Any"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "actions", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "idx", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "models", "type": "List[PyPi.approximators.regressor.Regressor]"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "regressor_class", "type": "Type[PyPi.approximators.regressor.Regressor]"}, {"lineNumber": 34, "col_offset": 47, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "n_models", "type": "Any"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 34, "col_offset": 63, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "models", "type": "List[PyPi.approximators.regressor.Regressor]"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "actions", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "models", "type": "List[PyPi.approximators.regressor.Regressor]"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 78, "col_offset": 55, "nodeName": "models", "type": "List[PyPi.approximators.regressor.Regressor]"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "self", "type": "Ensemble"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 78, "col_offset": 55, "nodeName": "self", "type": "Ensemble"}]