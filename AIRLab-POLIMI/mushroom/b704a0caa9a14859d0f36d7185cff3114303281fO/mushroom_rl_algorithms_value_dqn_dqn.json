[{"lineNumber": 11, "col_offset": 18, "nodeName": "Agent", "type": "Type[mushroom_rl.algorithms.agent.Agent]"}, {"lineNumber": 80, "col_offset": 10, "nodeName": "AbstractDQN", "type": "Type[AbstractDQN]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "_clip_reward", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "clip_reward", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_target_update_frequency", "type": "Any"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "target_update_frequency", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "apprx_params_train", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "apprx_params_target", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "initialized", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "initialized", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 39, "col_offset": 61, "nodeName": "fit_params", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "replay_memory", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "_replay_memory", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "replay_memory", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "_fit", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "_fit_standard", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "approximator_params", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "approximator_params", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_initialize_regressors", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "apprx_params_train", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "apprx_params_target", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "set_q", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_add_save_attr", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "policy", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "Regressor", "type": "Type[mushroom_rl.approximators.regressor.Regressor]"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "Regressor", "type": "Type[mushroom_rl.approximators.regressor.Regressor]"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_fit", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "add", "type": "Union[Any, Callable[[Any], None]]"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "_replay_memory", "type": "Union[Any, mushroom_rl.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "_clip_reward", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "add", "type": "Union[Any, Callable[[Any], None]]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "_replay_memory", "type": "Union[Any, mushroom_rl.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "_clip_reward", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "td_error", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 45, "nodeName": "next_state", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "absorbing", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "q", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "draw_action", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "_replay_memory", "type": "Union[Any, mushroom_rl.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "PrioritizedReplayMemory", "type": "Type[mushroom_rl.utils.replay_memory.PrioritizedReplayMemory]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "_fit", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "_fit_prioritized", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "_fit", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "_fit_standard", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "set_q", "type": "Any"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "fit_params", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "replay_memory", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "PrioritizedReplayMemory", "type": "Type[mushroom_rl.utils.replay_memory.PrioritizedReplayMemory]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "_fit", "type": "Any"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "_fit_prioritized", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "_fit", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "_fit_standard", "type": "Any"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "ReplayMemory", "type": "Type[mushroom_rl.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 52, "col_offset": 47, "nodeName": "initial_replay_size", "type": "Any"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "max_replay_size", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 89, "col_offset": 54, "nodeName": "apprx_params_train", "type": "Any"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "apprx_params_target", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "target_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 92, "col_offset": 45, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "_n_updates", "type": "int"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "_target_update_frequency", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "_update_target", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "_replay_memory", "type": "Union[Any, mushroom_rl.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "self", "type": "DQN"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "action", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "reward", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "next_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "absorbing", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 104, "col_offset": 58, "nodeName": "_", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "get", "type": "Union[Any, Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]]"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "self", "type": "DQN"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "_next_q", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "next_state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 110, "col_offset": 46, "nodeName": "absorbing", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "_replay_memory", "type": "Union[Any, mushroom_rl.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "max_priority", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "self", "type": "DQN"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "state", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "action", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "reward", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "next_state", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "absorbing", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 58, "nodeName": "_", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 61, "nodeName": "idxs", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 67, "nodeName": "is_weight", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "get", "type": "Union[Any, Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]]"}, {"lineNumber": 123, "col_offset": 40, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "self", "type": "DQN"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "_next_q", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "next_state", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 128, "col_offset": 46, "nodeName": "absorbing", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "reward", "type": "Any"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "q", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "td_error", "type": "Any"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "idxs", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "target_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "target_approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "array", "type": "Any"}, {"lineNumber": 168, "col_offset": 55, "nodeName": "state", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "self", "type": "DQN"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "self", "type": "DQN"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "self", "type": "DQN"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "self", "type": "DQN"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "self", "type": "AbstractDQN"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 92, "col_offset": 45, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "self", "type": "DQN"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "self", "type": "DQN"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "_replay_memory", "type": "Union[Any, mushroom_rl.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "self", "type": "DQN"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "reward", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "self", "type": "DQN"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 114, "col_offset": 45, "nodeName": "action", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 114, "col_offset": 53, "nodeName": "q", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "fit", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "state", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "action", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "q", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "_replay_memory", "type": "Union[Any, mushroom_rl.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "_replay_memory", "type": "Union[Any, mushroom_rl.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 123, "col_offset": 40, "nodeName": "self", "type": "DQN"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "reward", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "self", "type": "DQN"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "q_next", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 53, "nodeName": "state", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 130, "col_offset": 60, "nodeName": "action", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "_replay_memory", "type": "Union[Any, mushroom_rl.utils.replay_memory.ReplayMemory]"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "state", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "action", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 53, "nodeName": "q", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "fit", "type": "Any"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "state", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "action", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "q", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "DQN", "type": "Type[DQN]"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "self", "type": "DQN"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "DQN"}, {"lineNumber": 92, "col_offset": 45, "nodeName": "self", "type": "DQN"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 114, "col_offset": 58, "nodeName": "_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 116, "col_offset": 53, "nodeName": "_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "self", "type": "DQN"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 135, "col_offset": 64, "nodeName": "is_weight", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 138, "col_offset": 59, "nodeName": "is_weight", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "_fit_params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "self", "type": "DQN"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "absorbing", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "self", "type": "DQN"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 114, "col_offset": 58, "nodeName": "self", "type": "DQN"}, {"lineNumber": 116, "col_offset": 53, "nodeName": "self", "type": "DQN"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "self", "type": "DQN"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "self", "type": "DQN"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "self", "type": "DQN"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "self", "type": "DQN"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "self", "type": "DQN"}]