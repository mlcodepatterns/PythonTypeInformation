[{"lineNumber": 14, "col_offset": 18, "nodeName": "Policy", "type": "Type[mushroom_rl.policy.policy.Policy]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "draw_action", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "distribution", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "entropy", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "draw_action_t", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "log_prob_t", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "entropy_t", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "distribution_t", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "set_weights", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "get_weights", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "reset", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "use_cuda", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "TorchPolicy", "type": "Type[TorchPolicy]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "draw_action_t", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "log_prob_t", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "entropy_t", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "distribution_t", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "get_mean_and_covariance", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "set_weights", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "get_weights", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 27, "nodeName": "TorchPolicy", "type": "Type[TorchPolicy]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "draw_action_t", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "log_prob_t", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "entropy_t", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "distribution_t", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "set_weights", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "get_weights", "type": "Callable[[Any], Any]"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "_use_cuda", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "_use_cuda", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "_action_dim", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "log_sigma_init", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "_use_cuda", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "_log_sigma", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "log_sigma_data", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "log_sigma_data", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "mu_weights", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "sigma_weights", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "_action_dim", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "_beta", "type": "Any"}, {"lineNumber": 281, "col_offset": 21, "nodeName": "beta", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TorchPolicy"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "_add_save_attr", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "to_float_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 50, "nodeName": "_use_cuda", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "to_float_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 51, "nodeName": "_use_cuda", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "exp", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "to_float_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "_use_cuda", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "distribution_t", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "s", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "Regressor", "type": "Type[mushroom_rl.approximators.regressor.Regressor]"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "TorchApproximator", "type": "Any"}, {"lineNumber": 204, "col_offset": 48, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 204, "col_offset": 61, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "log_sigma_init", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 212, "col_offset": 26, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 212, "col_offset": 39, "nodeName": "log_sigma_init", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "_add_save_attr", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "detach", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "mu", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "get_mean_and_covariance", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 49, "nodeName": "state", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "MultivariateNormal", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "log_sigma_data", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "_log_sigma", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "BoltzmannTorchPolicy"}, {"lineNumber": 277, "col_offset": 27, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "Regressor", "type": "Type[mushroom_rl.approximators.regressor.Regressor]"}, {"lineNumber": 279, "col_offset": 33, "nodeName": "TorchApproximator", "type": "Any"}, {"lineNumber": 279, "col_offset": 52, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 279, "col_offset": 65, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "BoltzmannTorchPolicy"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "_add_save_attr", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "detach", "type": "Any"}, {"lineNumber": 293, "col_offset": 19, "nodeName": "action", "type": "Any"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "Categorical", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "set_weights", "type": "Callable[[Any], None]"}, {"lineNumber": 308, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "get_weights", "type": "Callable[[], Any]"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TorchPolicy"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "atleast_2d", "type": "Any"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "state", "type": "Any"}, {"lineNumber": 35, "col_offset": 50, "nodeName": "self", "type": "TorchPolicy"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "atleast_2d", "type": "Any"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "action", "type": "Any"}, {"lineNumber": 36, "col_offset": 51, "nodeName": "self", "type": "TorchPolicy"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "to_float_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 54, "nodeName": "_use_cuda", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "draw_action_t", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "s", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "self", "type": "TorchPolicy"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "self", "type": "TorchPolicy"}, {"lineNumber": 76, "col_offset": 54, "nodeName": "state", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "to_float_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "_use_cuda", "type": "Any"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "network", "type": "Any"}, {"lineNumber": 205, "col_offset": 55, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 205, "col_offset": 67, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 207, "col_offset": 36, "nodeName": "_action_dim", "type": "Any"}, {"lineNumber": 207, "col_offset": 56, "nodeName": "log", "type": "Any"}, {"lineNumber": 207, "col_offset": 63, "nodeName": "std_0", "type": "Any"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 212, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 224, "col_offset": 51, "nodeName": "action", "type": "Any"}, {"lineNumber": 227, "col_offset": 65, "nodeName": "sum", "type": "Any"}, {"lineNumber": 227, "col_offset": 75, "nodeName": "_log_sigma", "type": "Any"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "distributions", "type": "Any"}, {"lineNumber": 231, "col_offset": 58, "nodeName": "mu", "type": "Any"}, {"lineNumber": 231, "col_offset": 80, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "_mu", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 234, "col_offset": 52, "nodeName": "diag", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 237, "col_offset": 42, "nodeName": "weights", "type": "Any"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "_mu", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "weights", "type": "Any"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "_mu", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 31, "nodeName": "mu_weights", "type": "Any"}, {"lineNumber": 248, "col_offset": 43, "nodeName": "sigma_weights", "type": "Any"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 251, "col_offset": 59, "nodeName": "_log_sigma", "type": "Any"}, {"lineNumber": 280, "col_offset": 41, "nodeName": "network", "type": "Any"}, {"lineNumber": 280, "col_offset": 59, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 280, "col_offset": 71, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "BoltzmannTorchPolicy"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 295, "col_offset": 19, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "_logits", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 304, "col_offset": 30, "nodeName": "state", "type": "Any"}, {"lineNumber": 304, "col_offset": 59, "nodeName": "_beta", "type": "Any"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "distributions", "type": "Any"}, {"lineNumber": 305, "col_offset": 54, "nodeName": "logits", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "_logits", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "_logits", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "network", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "atleast_2d", "type": "Any"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "state", "type": "Any"}, {"lineNumber": 42, "col_offset": 54, "nodeName": "self", "type": "TorchPolicy"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "self", "type": "TorchPolicy"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "self", "type": "TorchPolicy"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 207, "col_offset": 36, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 207, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "log_sigma_init", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "_action_dim", "type": "Any"}, {"lineNumber": 227, "col_offset": 38, "nodeName": "log", "type": "Any"}, {"lineNumber": 227, "col_offset": 65, "nodeName": "torch", "type": "Any"}, {"lineNumber": 227, "col_offset": 75, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 234, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 234, "col_offset": 63, "nodeName": "exp", "type": "Any"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "log_sigma_data", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "network", "type": "Any"}, {"lineNumber": 251, "col_offset": 59, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 295, "col_offset": 19, "nodeName": "action", "type": "Any"}, {"lineNumber": 298, "col_offset": 51, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "self", "type": "BoltzmannTorchPolicy"}, {"lineNumber": 304, "col_offset": 59, "nodeName": "self", "type": "BoltzmannTorchPolicy"}, {"lineNumber": 304, "col_offset": 70, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "BoltzmannTorchPolicy"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "self", "type": "BoltzmannTorchPolicy"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "log_prob_t", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "s", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "a", "type": "Any"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "distribution_t", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 35, "nodeName": "state", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 227, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 57, "nodeName": "e", "type": "Any"}, {"lineNumber": 234, "col_offset": 63, "nodeName": "torch", "type": "Any"}, {"lineNumber": 234, "col_offset": 77, "nodeName": "_log_sigma", "type": "Any"}, {"lineNumber": 237, "col_offset": 51, "nodeName": "_action_dim", "type": "Any"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "_action_dim", "type": "Any"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "distribution_t", "type": "Callable[[Any], Any]"}, {"lineNumber": 298, "col_offset": 35, "nodeName": "state", "type": "Any"}, {"lineNumber": 298, "col_offset": 51, "nodeName": "action", "type": "Any"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "distribution_t", "type": "Callable[[Any], Any]"}, {"lineNumber": 301, "col_offset": 46, "nodeName": "state", "type": "Any"}, {"lineNumber": 304, "col_offset": 70, "nodeName": "state", "type": "Any"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "_logits", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "self", "type": "TorchPolicy"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "distribution_t", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 35, "nodeName": "state", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 227, "col_offset": 49, "nodeName": "pi", "type": "Any"}, {"lineNumber": 227, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 77, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 237, "col_offset": 51, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "detach", "type": "Any"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "_mu", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "distribution_t", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 37, "nodeName": "state", "type": "Any"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "self", "type": "BoltzmannTorchPolicy"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "self", "type": "BoltzmannTorchPolicy"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "self", "type": "BoltzmannTorchPolicy"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 227, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "self", "type": "BoltzmannTorchPolicy"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "_log_sigma", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "self", "type": "GaussianTorchPolicy"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "entropy_t", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "s", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "self", "type": "TorchPolicy"}]