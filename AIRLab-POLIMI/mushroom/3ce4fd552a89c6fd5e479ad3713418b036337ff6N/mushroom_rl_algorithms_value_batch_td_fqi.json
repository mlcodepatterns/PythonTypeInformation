[{"lineNumber": 8, "col_offset": 10, "nodeName": "BatchTD", "type": "Type[mushroom_rl.algorithms.value.batch_td.batch_td.BatchTD]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_n_iterations", "type": "Any"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "n_iterations", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "_quiet", "type": "Any"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "_target", "type": "None"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "_add_save_attr", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "policy", "type": "Any"}, {"lineNumber": 34, "col_offset": 43, "nodeName": "approximator", "type": "Any"}, {"lineNumber": 34, "col_offset": 57, "nodeName": "approximator_params", "type": "Any"}, {"lineNumber": 34, "col_offset": 78, "nodeName": "fit_params", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "trange", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "_n_iterations", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "FQI"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "self", "type": "FQI"}, {"lineNumber": 37, "col_offset": 72, "nodeName": "_quiet", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 47, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 58, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 62, "nodeName": "parse_dataset", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 38, "col_offset": 76, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "_target", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "_target", "type": "numpy.ndarray"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "_target", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "_target", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 37, "col_offset": 72, "nodeName": "self", "type": "FQI"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "self", "type": "FQI"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "next_state", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "any", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "q", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "q", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "self", "type": "FQI"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "reward", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "self", "type": "FQI"}, {"lineNumber": 49, "col_offset": 65, "nodeName": "_fit_params", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "approximator", "type": "mushroom_rl.approximators.regressor.Regressor"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 47, "col_offset": 62, "nodeName": "max_q", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "FQI"}, {"lineNumber": 49, "col_offset": 65, "nodeName": "self", "type": "FQI"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "self", "type": "FQI"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "mdp_info", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "absorbing", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "self", "type": "FQI"}]