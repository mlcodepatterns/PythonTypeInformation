[{"lineNumber": 5, "col_offset": 13, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 5, "col_offset": 13, "nodeName": "layers", "type": "Any"}, {"lineNumber": 5, "col_offset": 13, "nodeName": "keras", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "return_masked", "type": "Any"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "return_masked", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "return_masked", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "token_mask", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "masked", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "return_masked", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "masked", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "return_masked", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Masked"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Masked"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "return_masked", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "self", "type": "Masked"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "not_equal", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "all", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "self", "type": "Masked"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "identity", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "self", "type": "Masked"}, {"lineNumber": 21, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "self", "type": "Masked"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "K", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "K", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "stack", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "masked", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "K", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 21, "col_offset": 14, "nodeName": "Masked", "type": "Type[Masked]"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "self", "type": "Masked"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "Masked", "type": "Type[Masked]"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "self", "type": "Masked"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 30, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "K", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "token_mask", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "cast", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "items", "type": "Any"}, {"lineNumber": 30, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 39, "col_offset": 44, "nodeName": "mask", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "K", "type": "Any"}, {"lineNumber": 47, "col_offset": 71, "nodeName": "floatx", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 30, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "compute_mask", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 47, "col_offset": 61, "nodeName": "mask", "type": "Any"}, {"lineNumber": 47, "col_offset": 71, "nodeName": "K", "type": "Any"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "self", "type": "Masked"}]