[{"lineNumber": 4, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 7, "col_offset": 20, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 7, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 7, "col_offset": 20, "nodeName": "keras", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "embeddings_initializer", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "embeddings_regularizer", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "embeddings_constraint", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "mask_zero", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "mask_zero", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "embeddings", "type": "None"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "output_mask", "type": "None"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "output_mask", "type": "Optional[Any]"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "task_embed", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "mask_zero", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "get", "type": "Any"}, {"lineNumber": 38, "col_offset": 55, "nodeName": "embeddings_initializer", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "get", "type": "Any"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "embeddings_regularizer", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "get", "type": "Any"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "embeddings_constraint", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "add_weight", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "build", "type": "Any"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "mask", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "output_mask", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "gather", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "task_embed", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "task_embed", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "task_embed", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "mask_zero", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "embeddings_initializer", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "embeddings_regularizer", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "embeddings_constraint", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "mask", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "cast", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "K", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "task_embed", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "backend", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "task_embed", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 79, "col_offset": 61, "nodeName": "embeddings_initializer", "type": "Any"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 80, "col_offset": 61, "nodeName": "embeddings_regularizer", "type": "Any"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 81, "col_offset": 59, "nodeName": "embeddings_constraint", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "TaskEmbedding", "type": "Type[TaskEmbedding]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "TaskEmbedding", "type": "Type[TaskEmbedding]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "K", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "K", "type": "Any"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "K", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "K", "type": "Any"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 79, "col_offset": 61, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 80, "col_offset": 61, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 81, "col_offset": 59, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "TaskEmbedding", "type": "Type[TaskEmbedding]"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "self", "type": "TaskEmbedding"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "K", "type": "Any"}, {"lineNumber": 70, "col_offset": 52, "nodeName": "cast", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "items", "type": "Any"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 70, "col_offset": 52, "nodeName": "K", "type": "Any"}, {"lineNumber": 70, "col_offset": 59, "nodeName": "not_equal", "type": "Any"}, {"lineNumber": 70, "col_offset": 71, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 70, "col_offset": 82, "nodeName": "floatx", "type": "Any"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 59, "nodeName": "K", "type": "Any"}, {"lineNumber": 70, "col_offset": 82, "nodeName": "K", "type": "Any"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "K", "type": "Any"}]