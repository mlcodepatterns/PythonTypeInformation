[{"lineNumber": 6, "col_offset": 27, "nodeName": "RunOnlyRegressionTest", "type": "Type[reframe.core.pipeline.RunOnlyRegressionTest]"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "RegressionTest", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "SlurmCompiledBaseCheck", "type": "Type[SlurmCompiledBaseCheck]"}, {"lineNumber": 6, "col_offset": 27, "nodeName": "rfm", "type": "module"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "rfm", "type": "module"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "variables", "type": "Dict[str, str]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "num_matches", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "options", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "options", "type": "List[str]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "time_limit", "type": "Tuple[int, int, int]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "sourcepath", "type": "str"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "options", "type": "Any"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "exclusive_access", "type": "bool"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "num_tasks", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "exclusive_access", "type": "bool"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "num_tasks", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "HostnameCheck"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "count", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "assert_eq", "type": "Any"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "num_tasks", "type": "Any"}, {"lineNumber": 67, "col_offset": 60, "nodeName": "num_matches", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "EnvironmentVariableCheck"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "EnvironmentVariableCheck"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "EnvironmentVariableCheck"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "EnvironmentVariableCheck"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "count", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "EnvironmentVariableCheck"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "assert_eq", "type": "Any"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 82, "col_offset": 60, "nodeName": "num_matches", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "RequiredConstraintCheck"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "RequiredConstraintCheck"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "RequiredConstraintCheck"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "stderr", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "RequestLargeMemoryNodeCheck"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "RequestLargeMemoryNodeCheck"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "RequestLargeMemoryNodeCheck"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 106, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "RequestLargeMemoryNodeCheck"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "assert_bounded", "type": "Any"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "mem_obtained", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "job", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "DefaultRequestGPU"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "DefaultRequestGPU"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 121, "col_offset": 45, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "DefaultRequestGPUSetsGRES"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "DefaultRequestGPUSetsGRES"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 131, "col_offset": 47, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "DefaultRequestMC"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "DefaultRequestMC"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "DefaultRequestMC"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 142, "col_offset": 54, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 152, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "job", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "add", "type": "Callable"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 170, "col_offset": 56, "nodeName": "stderr", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "job", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "sn", "type": "module"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "findall", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "sn", "type": "module"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "findall", "type": "Any"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "self", "type": "EnvironmentVariableCheck"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "self", "type": "RequiredConstraintCheck"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "sn", "type": "module"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "self", "type": "RequestLargeMemoryNodeCheck"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 121, "col_offset": 45, "nodeName": "self", "type": "DefaultRequestGPU"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 131, "col_offset": 47, "nodeName": "self", "type": "DefaultRequestGPUSetsGRES"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 142, "col_offset": 54, "nodeName": "self", "type": "DefaultRequestMC"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 152, "col_offset": 58, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 170, "col_offset": 56, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "tags", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "tags", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "hostname_string", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "self", "type": "EnvironmentVariableCheck"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "fullname", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "current_partition", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "self", "type": "Any"}]