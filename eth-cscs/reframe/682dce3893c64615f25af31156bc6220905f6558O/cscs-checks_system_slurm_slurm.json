[{"lineNumber": 6, "col_offset": 27, "nodeName": "RunOnlyRegressionTest", "type": "Type[reframe.core.pipeline.RunOnlyRegressionTest]"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "RegressionTest", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 130, "col_offset": 39, "nodeName": "SlurmSimpleBaseCheck", "type": "Type[SlurmSimpleBaseCheck]"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "SlurmCompiledBaseCheck", "type": "Type[SlurmCompiledBaseCheck]"}, {"lineNumber": 6, "col_offset": 27, "nodeName": "rfm", "type": "module"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "rfm", "type": "module"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "variables", "type": "Dict[str, str]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "num_matches", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "options", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "options", "type": "List[str]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "time_limit", "type": "Tuple[int, int, int]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "sourcepath", "type": "str"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "options", "type": "Any"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "setup", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "num_tasks", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "HostnameCheck"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "count", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "HostnameCheck"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "assert_eq", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 61, "col_offset": 60, "nodeName": "num_matches", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "setup", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "partition", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "environ", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "EnvironmentVariableCheck"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "EnvironmentVariableCheck"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "EnvironmentVariableCheck"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "EnvironmentVariableCheck"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "count", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "EnvironmentVariableCheck"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "assert_eq", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 77, "col_offset": 60, "nodeName": "num_matches", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "RequestLargeMemoryNodeCheck"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "RequestLargeMemoryNodeCheck"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "RequestLargeMemoryNodeCheck"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 88, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "RequestLargeMemoryNodeCheck"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "assert_bounded", "type": "Any"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "mem_obtained", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "setup", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "partition", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "environ", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "job", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "DefaultRequestGPU"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "DefaultRequestGPU"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "DefaultRequestGPUSetsGRES"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "DefaultRequestGPUSetsGRES"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 115, "col_offset": 47, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "DefaultRequestMC"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "DefaultRequestMC"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "DefaultRequestMC"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 126, "col_offset": 54, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 136, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "setup", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "partition", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "environ", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "job", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "add", "type": "Callable"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "stderr", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "setup", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "partition", "type": "Any"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "environ", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "job", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 21, "col_offset": 23, "nodeName": "args", "type": "Tuple[Any, Any]"}, {"lineNumber": 21, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "args", "type": "Tuple[Any, Any]"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "sn", "type": "module"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "findall", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "self", "type": "HostnameCheck"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "job_opts", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "sn", "type": "module"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "findall", "type": "Any"}, {"lineNumber": 76, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "self", "type": "EnvironmentVariableCheck"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "sn", "type": "module"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "self", "type": "RequestLargeMemoryNodeCheck"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "job_opts", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "RequestLargeMemoryNodeCheck"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "self", "type": "DefaultRequestGPU"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 115, "col_offset": 47, "nodeName": "self", "type": "DefaultRequestGPUSetsGRES"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 126, "col_offset": 54, "nodeName": "self", "type": "DefaultRequestMC"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 136, "col_offset": 58, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "job_opts", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 157, "col_offset": 44, "nodeName": "job_opts", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "hostname_string", "type": "Dict[str, str]"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "self", "type": "HostnameCheck"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 76, "col_offset": 58, "nodeName": "self", "type": "EnvironmentVariableCheck"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "self", "type": "ConstraintRequestCabinetGrouping"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "MemoryOverconsumptionCheck"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "HostnameCheck"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "fullname", "type": "Any"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "partition", "type": "Any"}]