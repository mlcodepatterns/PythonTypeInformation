[{"lineNumber": 10, "col_offset": 0, "nodeName": "deferrable", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "_deferred", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "_fn", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "fn", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "_args", "type": "Tuple[Any, ...]"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_cached", "type": "Tuple[()]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "fn_args", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "arg", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "_args", "type": "Tuple[Any, ...]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "fn_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "_cached", "type": "Tuple[Any]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 278, "col_offset": 13, "nodeName": "b", "type": "Any"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 283, "col_offset": 13, "nodeName": "b", "type": "Any"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 288, "col_offset": 13, "nodeName": "b", "type": "Any"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 293, "col_offset": 13, "nodeName": "b", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "b", "type": "Any"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 303, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "b", "type": "Any"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 318, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 323, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 328, "col_offset": 13, "nodeName": "b", "type": "Any"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 333, "col_offset": 13, "nodeName": "b", "type": "Any"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 338, "col_offset": 13, "nodeName": "b", "type": "Any"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "_DeferredExpression", "type": "Type[_DeferredExpression]"}, {"lineNumber": 15, "col_offset": 35, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "_fn", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "ret", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "ret", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "_cached", "type": "Union[Tuple[()], Tuple[Any]]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "seq", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "key", "type": "Any"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "seq", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "a", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "a", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "a", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "a", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 353, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 15, "col_offset": 42, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 15, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "fn_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 63, "nodeName": "v", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "fn_args", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "fn_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "builtins", "type": "module"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "evaluate", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "evaluate", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "evaluate", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "_cached", "type": "Union[Tuple[()], Tuple[Any]]"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "__floordiv__", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "other", "type": "Any"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "__mod__", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 55, "nodeName": "other", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "__rfloordiv__", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "other", "type": "Any"}, {"lineNumber": 245, "col_offset": 43, "nodeName": "__rmod__", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 57, "nodeName": "other", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "fn_args", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 67, "nodeName": "arg", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "k", "type": "str"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "v", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "ret", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 245, "col_offset": 43, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "arg", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 59, "col_offset": 55, "nodeName": "self", "type": "_DeferredExpression"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "arg", "type": "Any"}]