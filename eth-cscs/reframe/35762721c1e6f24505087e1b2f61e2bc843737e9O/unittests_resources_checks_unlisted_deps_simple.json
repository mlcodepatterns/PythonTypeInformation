[{"lineNumber": 6, "col_offset": 12, "nodeName": "RunOnlyRegressionTest", "type": "Type[reframe.core.pipeline.RunOnlyRegressionTest]"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "RunOnlyRegressionTest", "type": "Type[reframe.core.pipeline.RunOnlyRegressionTest]"}, {"lineNumber": 6, "col_offset": 12, "nodeName": "rfm", "type": "module"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "rfm", "type": "module"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "executable_opts", "type": "List[Any]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "executable_opts", "type": "List[Any]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "self", "type": "Test0"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "self", "type": "Test0"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "self", "type": "Test0"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "Test0"}, {"lineNumber": 11, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "Test0"}, {"lineNumber": 12, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 12, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 12, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "DEPEND_FULLY", "type": "int"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "DEPEND_BY_ENV", "type": "int"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "DEPEND_EXACT", "type": "int"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 28, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 11, "col_offset": 32, "nodeName": "self", "type": "Test0"}, {"lineNumber": 12, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 12, "col_offset": 47, "nodeName": "self", "type": "Test0"}, {"lineNumber": 12, "col_offset": 58, "nodeName": "self", "type": "Test0"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "rfm", "type": "module"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "rfm", "type": "module"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "rfm", "type": "module"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "depends_on", "type": "Any"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "DEPEND_EXACT", "type": "int"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "kindspec", "type": "Dict[str, int]"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "rfm", "type": "module"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "depends_on", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "depends_on", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "kind", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "kindspec", "type": "Dict[str, int]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "kindspec", "type": "Dict[str, int]"}, {"lineNumber": 32, "col_offset": 46, "nodeName": "kind", "type": "Any"}, {"lineNumber": 35, "col_offset": 46, "nodeName": "kind", "type": "Any"}]