[{"lineNumber": 6, "col_offset": 23, "nodeName": "RunOnlyRegressionTest", "type": "Type[reframe.core.pipeline.RunOnlyRegressionTest]"}, {"lineNumber": 6, "col_offset": 23, "nodeName": "rfm", "type": "module"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "sourcesdir", "type": "None"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "echo_args", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "self", "type": "SSHLoginEnvCheck"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "SSHLoginEnvCheck"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "SSHLoginEnvCheck"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "SSHLoginEnvCheck"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "SSHLoginEnvCheck"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "SSHLoginEnvCheck"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "all", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "SSHLoginEnvCheck"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "SSHLoginEnvCheck"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "reference", "type": "Dict[str, str]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "reference", "type": "Dict[str, str]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "reference", "type": "Dict[str, str]"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 37, "col_offset": 49, "nodeName": "echo_args", "type": "str"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "map", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "assert_envvar", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "sn", "type": "module"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "v", "type": "Any"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "self", "type": "SSHLoginEnvCheck"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "self", "type": "SSHLoginEnvCheck"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 35, "col_offset": 47, "nodeName": "i", "type": "str"}, {"lineNumber": 35, "col_offset": 54, "nodeName": "i", "type": "str"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "sn", "type": "module"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "self", "type": "SSHLoginEnvCheck"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 35, "col_offset": 59, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 39, "col_offset": 44, "nodeName": "items", "type": "Callable"}, {"lineNumber": 35, "col_offset": 59, "nodeName": "reference", "type": "Dict[str, str]"}, {"lineNumber": 39, "col_offset": 44, "nodeName": "reference", "type": "Dict[str, str]"}]