[{"lineNumber": 8, "col_offset": 15, "nodeName": "RegressionTest", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "IorCheck", "type": "Type[IorCheck]"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "IorCheck", "type": "Type[IorCheck]"}, {"lineNumber": 8, "col_offset": 15, "nodeName": "rfm", "type": "module"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "tags", "type": "Set[Union[str, Any]]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 14, "col_offset": 24, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "username", "type": "str"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "pre_run", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "data", "type": "Union[Dict[str, Union[Dict[str, Union[List[str], int]], str, List[str], Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]], Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], str, List[str], Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[nothing, nothing], List[str], str, Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, int], List[str], str, Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "cur_sys", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "num_tasks", "type": "Union[int, List[str], Tuple[int, None, None, str]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "tpn", "type": "Union[int, List[str], Tuple[int, None, None, str]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "Union[List[str], int, Tuple[int, None, None, str]]"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "tpn", "type": "Union[List[str], int, Tuple[int, None, None, str]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "ior_block_size", "type": "str"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "ior_access_type", "type": "str"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "sourcesdir", "type": "str"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "vpe", "type": "str"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "penv", "type": "Union[List[str], int, Tuple[int, None, None, str]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "Union[List[str], int, Tuple[int, None, None, str]]"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "penv", "type": "Union[List[str], int, Tuple[int, None, None, str]]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "options", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "max_concurrency", "type": "int"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "time_limit", "type": "Tuple[int, int, int]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "tags", "type": "Union[Set[Union[str, Any]], Set[str]]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "executable_opts", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "tags", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 11, "col_offset": 40, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 12, "col_offset": 28, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "getuser", "type": "Callable[[], str]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 16, "col_offset": 37, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 16, "col_offset": 52, "nodeName": "username", "type": "str"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 18, "col_offset": 38, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "values", "type": "Callable"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "cur_sys", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "cur_sys", "type": "str"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "get", "type": "Callable"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "ior_block_size", "type": "str"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "ior_access_type", "type": "str"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "test_file", "type": "str"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "resourcesdir", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "vpe", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "umask", "type": "Callable[[int], int]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 128, "col_offset": 64, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "perf_patterns", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 42, "nodeName": "pow", "type": "Callable"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 150, "col_offset": 63, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "perf_patterns", "type": "Dict[str, Any]"}, {"lineNumber": 157, "col_offset": 41, "nodeName": "pow", "type": "Callable"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "getpass", "type": "module"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 16, "col_offset": 37, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 16, "col_offset": 52, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 18, "col_offset": 38, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "fs", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[List[str], int]], str, List[str], Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]], Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], str, List[str], Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[nothing, nothing], List[str], str, Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, int], List[str], str, Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]]]]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "fs", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[List[str], int]], str, List[str], Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]], Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], str, List[str], Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[nothing, nothing], List[str], str, Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, int], List[str], str, Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]]]]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "fs", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[List[str], int]], str, List[str], Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]], Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], str, List[str], Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[nothing, nothing], List[str], str, Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, int], List[str], str, Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]]]]"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "fs", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[List[str], int]], str, List[str], Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]], Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], str, List[str], Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[nothing, nothing], List[str], str, Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, int], List[str], str, Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]]]]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "fs", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[List[str], int]], str, List[str], Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]], Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], str, List[str], Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[nothing, nothing], List[str], str, Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, int], List[str], str, Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]]]]"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 128, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 131, "col_offset": 60, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 150, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 153, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "data", "type": "Union[Dict[str, Union[Dict[str, int], List[str], str, Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]], Dict[str, Union[Dict[nothing, nothing], List[str], str, Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], str, List[str], Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, Union[List[str], int]], str, List[str], Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]]]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "data", "type": "Union[Dict[str, Union[Dict[str, int], List[str], str, Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]], Dict[str, Union[Dict[nothing, nothing], List[str], str, Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], str, List[str], Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, Union[List[str], int]], str, List[str], Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]]]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "data", "type": "Union[Dict[str, Union[Dict[str, int], List[str], str, Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]], Dict[str, Union[Dict[nothing, nothing], List[str], str, Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], str, List[str], Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, Union[List[str], int]], str, List[str], Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]]]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "data", "type": "Union[Dict[str, Union[Dict[str, int], List[str], str, Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]], Dict[str, Union[Dict[nothing, nothing], List[str], str, Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], str, List[str], Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, Union[List[str], int]], str, List[str], Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]]]"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "fs", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[List[str], int]], str, List[str], Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]], Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], str, List[str], Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[nothing, nothing], List[str], str, Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, int], List[str], str, Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]]]]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "sn", "type": "module"}, {"lineNumber": 131, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "sn", "type": "module"}, {"lineNumber": 153, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "fs", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[List[str], int]], str, List[str], Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]], Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], str, List[str], Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[nothing, nothing], List[str], str, Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, int], List[str], str, Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]]]]"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "cur_sys", "type": "Any"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "fs", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[List[str], int]], str, List[str], Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]], Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], str, List[str], Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[nothing, nothing], List[str], str, Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, int], List[str], str, Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]]]]"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "cur_sys", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "fs", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Union[List[str], int]], str, List[str], Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]], Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], str, List[str], Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[nothing, nothing], List[str], str, Dict[str, Tuple[int, None, None, str]]]], Dict[str, Union[Dict[str, int], List[str], str, Dict[str, Tuple[int, None, None, str]], Dict[nothing, nothing]]]]]"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "cur_sys", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "self", "type": "IorCheck"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "base_dir", "type": "Any"}]