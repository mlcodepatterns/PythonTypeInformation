[{"lineNumber": 11, "col_offset": 16, "nodeName": "RunOnlyRegressionTest", "type": "Type[reframe.core.pipeline.RunOnlyRegressionTest]"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "Cp2kCheck", "type": "Type[Cp2kCheck]"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "Cp2kCheck", "type": "Type[Cp2kCheck]"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "rfm", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "energy", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "energy_reference", "type": "float"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "energy_diff", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "strict_check", "type": "bool"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "references", "type": "Dict[str, Dict[str, Dict[str, Dict[str, Tuple[float, None, float, str]]]]]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "reference", "type": "Dict[str, Dict[str, Tuple[float, None, float, str]]]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "num_cpus_per_task", "type": "int"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "references", "type": "Dict[str, Dict[str, Dict[str, Dict[str, Tuple[float, None, float, str]]]]]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "reference", "type": "Dict[str, Dict[str, Tuple[float, None, float, str]]]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "tags", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "executable", "type": "str"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "executable", "type": "str"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "extractsingle", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 24, "col_offset": 57, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "abs", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "all", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "scale", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "scale", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "sn", "type": "module"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "sn", "type": "module"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "energy", "type": "Any"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "energy_reference", "type": "float"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "extractsingle", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 37, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 56, "col_offset": 59, "nodeName": "scale", "type": "Any"}, {"lineNumber": 56, "col_offset": 66, "nodeName": "variant", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "references", "type": "Dict[str, Dict[str, Dict[str, Dict[str, Tuple[float, None, float, str]]]]]"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "scale", "type": "Any"}, {"lineNumber": 128, "col_offset": 59, "nodeName": "scale", "type": "Any"}, {"lineNumber": 128, "col_offset": 66, "nodeName": "variant", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "num_cpus_per_task", "type": "int"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "references", "type": "Dict[str, Dict[str, Dict[str, Dict[str, Tuple[float, None, float, str]]]]]"}, {"lineNumber": 163, "col_offset": 45, "nodeName": "scale", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "assert_found", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 51, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "assert_eq", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "assert_lt", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "energy_diff", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "sn", "type": "module"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "num_cpus_per_task", "type": "int"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "num_tasks_per_core", "type": "int"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "use_multithreading", "type": "bool"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "num_cpus_per_task", "type": "int"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "num_tasks_per_core", "type": "int"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "use_multithreading", "type": "bool"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "variant", "type": "Any"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "variant", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "variant", "type": "Any"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "variant", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "sn", "type": "module"}, {"lineNumber": 28, "col_offset": 51, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "sn", "type": "module"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "count", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "sn", "type": "module"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "sn", "type": "module"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "extractall", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "sn", "type": "module"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "self", "type": "Cp2kCheck"}]