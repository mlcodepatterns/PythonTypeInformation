[{"lineNumber": 10, "col_offset": 27, "nodeName": "RunOnlyRegressionTest", "type": "Type[reframe.core.pipeline.RunOnlyRegressionTest]"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "QuantumESPRESSOCheck", "type": "Type[QuantumESPRESSOCheck]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "QuantumESPRESSOCheck", "type": "Type[QuantumESPRESSOCheck]"}, {"lineNumber": 10, "col_offset": 27, "nodeName": "rfm", "type": "module"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "strict_check", "type": "bool"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "energy_diff", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "reference", "type": "Dict[str, Dict[str, Tuple[float, None, float, str]]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "num_cpus_per_task", "type": "int"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "energy_diff", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "reference", "type": "Dict[str, Dict[str, Tuple[float, None, float, str]]]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "tags", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "QuantumESPRESSOCheck"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "QuantumESPRESSOCheck"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "QuantumESPRESSOCheck"}, {"lineNumber": 16, "col_offset": 31, "nodeName": "all", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "QuantumESPRESSOCheck"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "QuantumESPRESSOCheck"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "QuantumESPRESSOCheck"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "scale", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "energy_reference", "type": "float"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "energy_reference", "type": "float"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 55, "col_offset": 57, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "abs", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "all", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "scale", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "energy_reference", "type": "float"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "energy_reference", "type": "float"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 111, "col_offset": 57, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "abs", "type": "Any"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "all", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 16, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 22, "col_offset": 59, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 41, "col_offset": 60, "nodeName": "scale", "type": "Any"}, {"lineNumber": 41, "col_offset": 69, "nodeName": "variant", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "sn", "type": "module"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "sn", "type": "module"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "energy", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "energy_reference", "type": "float"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "references", "type": "Dict[str, Dict[str, Dict[str, Dict[str, Tuple[float, None, float, str]]]]]"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "scale", "type": "Any"}, {"lineNumber": 95, "col_offset": 60, "nodeName": "scale", "type": "Any"}, {"lineNumber": 95, "col_offset": 69, "nodeName": "variant", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "sn", "type": "module"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "sn", "type": "module"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "energy", "type": "Any"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "energy_reference", "type": "float"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "references", "type": "Dict[str, Dict[str, Dict[str, Dict[str, Tuple[float, None, float, str]]]]]"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "scale", "type": "Any"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 17, "col_offset": 62, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "sn", "type": "module"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "self", "type": "QuantumESPRESSOCheck"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "assert_lt", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "energy_diff", "type": "Any"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "variant", "type": "Any"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "variant", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "assert_lt", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "energy_diff", "type": "Any"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "variant", "type": "Any"}, {"lineNumber": 142, "col_offset": 39, "nodeName": "variant", "type": "Any"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "sn", "type": "module"}, {"lineNumber": 17, "col_offset": 62, "nodeName": "self", "type": "QuantumESPRESSOCheck"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "sn", "type": "module"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "sn", "type": "module"}]