[{"lineNumber": 7, "col_offset": 22, "nodeName": "RunOnlyRegressionTest", "type": "Type[reframe.core.pipeline.RunOnlyRegressionTest]"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "LAMMPSBaseCheck", "type": "Type[LAMMPSBaseCheck]"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "LAMMPSBaseCheck", "type": "Type[LAMMPSBaseCheck]"}, {"lineNumber": 7, "col_offset": 22, "nodeName": "rfm", "type": "module"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "energy_reference", "type": "float"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "energy_diff", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "strict_check", "type": "bool"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "variables", "type": "Dict[str, str]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "reference", "type": "Dict[str, Dict[str, Tuple[int, float, None, str]]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "reference", "type": "Dict[str, Dict[str, Tuple[int, float, None, str]]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "tags", "type": "Any"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "self", "type": "LAMMPSBaseCheck"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "self", "type": "LAMMPSBaseCheck"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "LAMMPSBaseCheck"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 13, "col_offset": 39, "nodeName": "resourcesdir", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 18, "col_offset": 35, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "abs", "type": "Any"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "all", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "LAMMPSBaseCheck"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "LAMMPSBaseCheck"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "LAMMPSBaseCheck"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "scale", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "scale", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 13, "col_offset": 39, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "sn", "type": "module"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "self", "type": "LAMMPSBaseCheck"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 21, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "sn", "type": "module"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "energy", "type": "Any"}, {"lineNumber": 23, "col_offset": 36, "nodeName": "energy_reference", "type": "float"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "references", "type": "Dict[str, Dict[str, Dict[str, Dict[str, Tuple[int, float, None, str]]]]]"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "scale", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "references", "type": "Dict[str, Dict[str, Dict[str, Dict[str, Tuple[int, float, None, str]]]]]"}, {"lineNumber": 112, "col_offset": 45, "nodeName": "scale", "type": "Any"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 13, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "sn", "type": "module"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "self", "type": "LAMMPSBaseCheck"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 25, "col_offset": 49, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "assert_lt", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "energy_diff", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "variant", "type": "Any"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "variant", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "variant", "type": "Any"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "variant", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "sn", "type": "module"}, {"lineNumber": 25, "col_offset": 49, "nodeName": "self", "type": "LAMMPSBaseCheck"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "sn", "type": "module"}]