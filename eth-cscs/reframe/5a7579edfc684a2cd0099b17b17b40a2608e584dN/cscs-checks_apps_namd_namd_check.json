[{"lineNumber": 12, "col_offset": 20, "nodeName": "RunOnlyRegressionTest", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "NamdBaseCheck", "type": "Type[NamdBaseCheck]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "NamdBaseCheck", "type": "Type[NamdBaseCheck]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "rfm", "type": "module"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "use_multithreading", "type": "bool"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "num_tasks_per_core", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "energy_reference", "type": "float"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "energy_diff", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "num_cpus_per_task", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "tags", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "tags", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 19, "col_offset": 39, "nodeName": "resourcesdir", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "scale", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "avg", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "abs", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "all", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "scale", "type": "Any"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "variant", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "scale", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "scale", "type": "Any"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "variant", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "num_tasks_per_core", "type": "int"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "num_cpus_per_task", "type": "int"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "scale", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 14, "col_offset": 46, "nodeName": "arch", "type": "Any"}, {"lineNumber": 14, "col_offset": 52, "nodeName": "variant", "type": "Any"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 19, "col_offset": 39, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "sn", "type": "module"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "extractall", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "sn", "type": "module"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "energy", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "energy_reference", "type": "float"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "avg", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "sn", "type": "module"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "assert_eq", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "assert_lt", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "energy_diff", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "sn", "type": "module"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "extractall", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 81, "col_offset": 39, "nodeName": "variant", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "variant", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "sn", "type": "module"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "count", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "sn", "type": "module"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "sn", "type": "module"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "self", "type": "NamdBaseCheck"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "sn", "type": "module"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "extractall", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "sn", "type": "module"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "self", "type": "NamdBaseCheck"}]