[{"lineNumber": 12, "col_offset": 27, "nodeName": "RegressionTest", "type": "Any"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "rfm", "type": "module"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "sourcepath", "type": "str"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "cflags", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "assert_eq", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "count", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "sn", "type": "module"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "findall", "type": "Any"}, {"lineNumber": 28, "col_offset": 55, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "sn", "type": "module"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "sn", "type": "module"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "sn", "type": "module"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "sn", "type": "module"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "sn", "type": "module"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "sn", "type": "module"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "sn", "type": "module"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "sn", "type": "module"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "sn", "type": "module"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "current_environ", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "sn", "type": "module"}, {"lineNumber": 28, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "self", "type": "Any"}]