[{"lineNumber": 22, "col_offset": 0, "nodeName": "run_command_inline", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "argv_save", "type": "List[str]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "environ_save", "type": "reframe.core.environments.EnvironmentSnapshot"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "captured_stdout", "type": "io.StringIO"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "captured_stderr", "type": "io.StringIO"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "argv", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "argv", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "exitcode", "type": "None"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "EnvironmentSnapshot", "type": "Type[reframe.core.environments.EnvironmentSnapshot]"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "exitcode", "type": "Optional[int]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "ret", "type": "List[Union[str, Any]]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "mode", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "system", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "ret", "type": "Union[List[Any], List[str]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "local", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "more_options", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "prefix", "type": "str"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "system", "type": "str"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "environs", "type": "List[str]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "local", "type": "bool"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "more_options", "type": "List[nothing]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "mode", "type": "None"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "logfile", "type": "str"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "stagedir", "type": "str"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "partitions", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "logdir", "type": "str"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "partitions", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "outputdir", "type": "str"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "system", "type": "Any"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "HOST", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "partition", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "local", "type": "bool"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "system", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "fullname", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "environs", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "local", "type": "bool"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "checkpath", "type": "List[nothing]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "system", "type": "str"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "checkpath", "type": "List[nothing]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "checkpath", "type": "List[nothing]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "checkpath", "type": "List[nothing]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "more_options", "type": "List[nothing]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "checkpath", "type": "List[nothing]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "environs", "type": "List[nothing]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "local", "type": "bool"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "redirect_stdout", "type": "Type[contextlib.redirect_stdout]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "captured_stdout", "type": "io.StringIO"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "ret", "type": "List[Union[str, Any]]"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "ret", "type": "Union[List[str], List[Union[str, Any]], List[Any]]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "prefix", "type": "str"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "run_command_inline", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "argv", "type": "Any"}, {"lineNumber": 115, "col_offset": 45, "nodeName": "main", "type": "Callable[[], None]"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "prefix", "type": "str"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "e", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "environs", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "prefix", "type": "str"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "logfile", "type": "str"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "prefix", "type": "str"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "stdout", "type": "str"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assert_log_file_is_saved", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "fixtures", "type": "module"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "partition_with_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "init_modules_system", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "modules_system", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "partition", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "stdout", "type": "str"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 182, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 203, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 203, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assert_log_file_is_saved", "type": "Callable[[], Any]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 244, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 38, "nodeName": "stdout", "type": "str"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 259, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 265, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 265, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "num_checks_in_checkdir", "type": "str"}, {"lineNumber": 268, "col_offset": 49, "nodeName": "num_checks_default", "type": "str"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 271, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 30, "nodeName": "num_checks_in_checkdir", "type": "str"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 277, "col_offset": 34, "nodeName": "prefix", "type": "str"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 278, "col_offset": 35, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 278, "col_offset": 53, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 294, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 294, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 35, "nodeName": "stdout", "type": "str"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 41, "nodeName": "stdout", "type": "str"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "prefix", "type": "str"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "redirect_stderr", "type": "Type[contextlib.redirect_stderr]"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "captured_stderr", "type": "io.StringIO"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "exitcode", "type": "None"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "SystemExit", "type": "Type[SystemExit]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "argv_save", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "captured_stdout", "type": "io.StringIO"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "captured_stderr", "type": "io.StringIO"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "mode", "type": "Any"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "system", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "itertools", "type": "module"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "itertools", "type": "module"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "logfile", "type": "str"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 115, "col_offset": 45, "nodeName": "cli", "type": "module"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "path", "type": "str"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "logdir", "type": "str"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "p", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "logfile", "type": "str"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "fixtures", "type": "module"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "system", "type": "Any"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 182, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "_stage_exists", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 198, "col_offset": 54, "nodeName": "environs", "type": "List[str]"}, {"lineNumber": 203, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "_stage_exists", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 211, "col_offset": 54, "nodeName": "environs", "type": "Union[List[str], List[Any], List[nothing]]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "_perflog_exists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "_", "type": "List[str]"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 244, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "_", "type": "List[str]"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 259, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 265, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 271, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 277, "col_offset": 34, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "_", "type": "List[str]"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "_", "type": "List[str]"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 286, "col_offset": 39, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 294, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "funct", "type": "Callable[[], None]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "exitcode", "type": "int"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "code", "type": "int"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "init_native_modules_system", "type": "Callable[[], None]"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "stagedir", "type": "str"}, {"lineNumber": 121, "col_offset": 46, "nodeName": "p", "type": "Any"}, {"lineNumber": 121, "col_offset": 49, "nodeName": "check_name", "type": "Any"}, {"lineNumber": 121, "col_offset": 61, "nodeName": "e", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 130, "col_offset": 46, "nodeName": "check_name", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "logfile", "type": "str"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "outputdir", "type": "str"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "environs", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 198, "col_offset": 54, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 211, "col_offset": 54, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 260, "col_offset": 29, "nodeName": "search", "type": "Callable"}, {"lineNumber": 261, "col_offset": 33, "nodeName": "stdout", "type": "str"}, {"lineNumber": 261, "col_offset": 41, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 266, "col_offset": 33, "nodeName": "search", "type": "Callable"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "stdout", "type": "str"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "search", "type": "Callable"}, {"lineNumber": 273, "col_offset": 33, "nodeName": "stdout", "type": "str"}, {"lineNumber": 273, "col_offset": 41, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 32, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "e", "type": "SystemExit"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "environ_save", "type": "reframe.core.environments.EnvironmentSnapshot"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "fixtures", "type": "module"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "c", "type": "Any"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "c", "type": "Any"}, {"lineNumber": 57, "col_offset": 52, "nodeName": "checkpath", "type": "Any"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "e", "type": "Any"}, {"lineNumber": 58, "col_offset": 47, "nodeName": "e", "type": "Any"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "environs", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "path", "type": "str"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "logfile", "type": "str"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "partition", "type": "Any"}, {"lineNumber": 260, "col_offset": 29, "nodeName": "re", "type": "module"}, {"lineNumber": 261, "col_offset": 41, "nodeName": "re", "type": "module"}, {"lineNumber": 266, "col_offset": 33, "nodeName": "re", "type": "module"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "re", "type": "module"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "re", "type": "module"}, {"lineNumber": 273, "col_offset": 41, "nodeName": "re", "type": "module"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 57, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "os", "type": "module"}]