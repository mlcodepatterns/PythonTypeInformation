[{"lineNumber": 6, "col_offset": 16, "nodeName": "RunOnlyRegressionTest", "type": "Type[reframe.core.pipeline.RunOnlyRegressionTest]"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "Cp2kCheck", "type": "Type[Cp2kCheck]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "Cp2kCheck", "type": "Type[Cp2kCheck]"}, {"lineNumber": 6, "col_offset": 16, "nodeName": "rfm", "type": "module"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "descr", "type": "Any"}, {"lineNumber": 9, "col_offset": 21, "nodeName": "check_descr", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "energy_reference", "type": "float"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "energy_diff", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "strict_check", "type": "bool"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "variables", "type": "Dict[str, str]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 8, "col_offset": 25, "nodeName": "check_name", "type": "Any"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 17, "col_offset": 57, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "abs", "type": "Any"}, {"lineNumber": 20, "col_offset": 31, "nodeName": "all", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "variant", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "variant", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 8, "col_offset": 37, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 8, "col_offset": 53, "nodeName": "__file__", "type": "str"}, {"lineNumber": 8, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "sn", "type": "module"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "sn", "type": "module"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "energy", "type": "Any"}, {"lineNumber": 19, "col_offset": 36, "nodeName": "energy_reference", "type": "float"}, {"lineNumber": 20, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 30, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "variant", "type": "Any"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "variant", "type": "Any"}, {"lineNumber": 84, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 8, "col_offset": 37, "nodeName": "path", "type": "module"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 21, "col_offset": 51, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "assert_eq", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "assert_lt", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "energy_diff", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "sn", "type": "module"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 8, "col_offset": 37, "nodeName": "os", "type": "module"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "sn", "type": "module"}, {"lineNumber": 21, "col_offset": 51, "nodeName": "self", "type": "Cp2kCheck"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "sn", "type": "module"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "count", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "sn", "type": "module"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "sn", "type": "module"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "extractall", "type": "Any"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "sn", "type": "module"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "self", "type": "Cp2kCheck"}]