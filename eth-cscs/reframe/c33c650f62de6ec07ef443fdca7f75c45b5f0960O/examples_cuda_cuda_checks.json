[{"lineNumber": 91, "col_offset": 0, "nodeName": "_get_checks", "type": "Callable[..., Any]"}, {"lineNumber": 6, "col_offset": 16, "nodeName": "RegressionTest", "type": "Type[reframe.core.pipeline.RegressionTest]"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "CudaCheck", "type": "Type[CudaCheck]"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "CudaCheck", "type": "Type[CudaCheck]"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "CudaCheck", "type": "Type[CudaCheck]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "CudaCheck", "type": "Type[CudaCheck]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "CudaCheck", "type": "Type[CudaCheck]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "cxxflags", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "sourcepath", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "sourcepath", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "sourcepath", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "sourcepath", "type": "str"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "sourcepath", "type": "str"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "BandwidthCheck"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "current_environ", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "compile", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "MatrixmulCublasCheck"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "MatrixmulCublasCheck"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "BandwidthCheck"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "BandwidthCheck"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "DeviceQueryCheck"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "DeviceQueryCheck"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "ConcurrentKernelsCheck"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "ConcurrentKernelsCheck"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "SimpleMPICheck"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "SimpleMPICheck"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "SimpleMPICheck"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "SimpleMPICheck"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "SimpleMPICheck"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "BandwidthCheck", "type": "Type[BandwidthCheck]"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "ConcurrentKernelsCheck", "type": "Type[ConcurrentKernelsCheck]"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "DeviceQueryCheck", "type": "Type[DeviceQueryCheck]"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "MatrixmulCublasCheck", "type": "Type[MatrixmulCublasCheck]"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "SimpleMPICheck", "type": "Type[SimpleMPICheck]"}, {"lineNumber": 8, "col_offset": 43, "nodeName": "name", "type": "str"}, {"lineNumber": 9, "col_offset": 25, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 9, "col_offset": 41, "nodeName": "__file__", "type": "str"}, {"lineNumber": 9, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "CudaCheck"}, {"lineNumber": 35, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 9, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 9, "col_offset": 25, "nodeName": "os", "type": "module"}]