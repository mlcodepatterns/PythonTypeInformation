[{"lineNumber": 110, "col_offset": 0, "nodeName": "_get_checks", "type": "Callable[..., Any]"}, {"lineNumber": 9, "col_offset": 20, "nodeName": "RunOnlyRegressionTest", "type": "Type[reframe.core.pipeline.RunOnlyRegressionTest]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "VASPBaseCheck", "type": "Type[VASPBaseCheck]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "VASPBaseCheck", "type": "Type[VASPBaseCheck]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "keep_files", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "parser", "type": "reframe.utility.parsers.StatefulParser"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "pre_run", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "sourcesdir", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "variables", "type": "Dict[str, str]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "sourcesdir", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 11, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "VASPBaseCheck"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "VASPBaseCheck"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "StatefulParser", "type": "Type[reframe.utility.parsers.StatefulParser]"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "standard_threshold", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "setup", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "system", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "environ", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "job", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "VASPGPUCheck"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "VASPGPUCheck"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "sourcesdir", "type": "str"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "VASPGPUCheck"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "VASPGPUCheck"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "VASPGPUCheck"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "VASPCPUCheck"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "VASPCPUCheck"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "sourcesdir", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "VASPCPUCheck"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "VASPGPUCheck", "type": "Type[VASPGPUCheck]"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "VASPCPUCheck", "type": "Type[VASPCPUCheck]"}, {"lineNumber": 11, "col_offset": 31, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 11, "col_offset": 47, "nodeName": "__file__", "type": "str"}, {"lineNumber": 11, "col_offset": 60, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "job_opts", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "VASPBaseCheck"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "self", "type": "VASPGPUCheck"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "self", "type": "VASPCPUCheck"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 52, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 11, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 11, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "on", "type": "Callable[..., bool]"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "match", "type": "Callable[..., bool]"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "parser", "type": "reframe.utility.parsers.StatefulParser"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "parser", "type": "reframe.utility.parsers.StatefulParser"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "standard_threshold", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "value", "type": "Any"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "self", "type": "VASPBaseCheck"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "self", "type": "VASPBaseCheck"}]