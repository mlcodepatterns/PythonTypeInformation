[{"lineNumber": 5, "col_offset": 26, "nodeName": "RegressionTest", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "CollectivesBaseTest", "type": "Type[CollectivesBaseTest]"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "CollectivesBaseTest", "type": "Type[CollectivesBaseTest]"}, {"lineNumber": 5, "col_offset": 26, "nodeName": "rfm", "type": "module"}, {"lineNumber": 7, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "variables", "type": "Dict[str, str]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "builddir", "type": "str"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "strict_check", "type": "bool"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "sourcesdir", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "prebuild_cmd", "type": "List[str]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "sourcesdir", "type": "str"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "prebuild_cmd", "type": "List[str]"}, {"lineNumber": 7, "col_offset": 8, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 11, "col_offset": 11, "nodeName": "variant", "type": "Any"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "exclusive_access", "type": "bool"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "num_tasks_per_socket", "type": "int"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "config_opts", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "max_concurrency", "type": "int"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 52, "col_offset": 65, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "sysname", "type": "str"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "sysname", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "ref", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "variant", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "variant", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "variables", "type": "Dict[str, str]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "build_system", "type": "str"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "build_system", "type": "str"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "config_opts", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "max_concurrency", "type": "int"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "max_concurrency", "type": "int"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 52, "col_offset": 65, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 55, "col_offset": 61, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "ref", "type": "float"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 12, "col_offset": 43, "nodeName": "variant", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "variables", "type": "Dict[str, str]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "build_system", "type": "str"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "build_system", "type": "str"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "build_system", "type": "str"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "sn", "type": "module"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "bench_reference", "type": "Any"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "variant", "type": "Any"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "ref", "type": "Union[float, Any]"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "ref", "type": "Union[float, Any]"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "ref", "type": "Union[float, Any]"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "ref", "type": "Union[float, Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "CollectivesBaseTest"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "sysname", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "self", "type": "CollectivesBaseTest"}]