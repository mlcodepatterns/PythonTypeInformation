[{"lineNumber": 10, "col_offset": 16, "nodeName": "RunOnlyRegressionTest", "type": "Type[reframe.core.pipeline.RunOnlyRegressionTest]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "VASPCheck", "type": "Type[VASPCheck]"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "VASPCheck", "type": "Type[VASPCheck]"}, {"lineNumber": 10, "col_offset": 16, "nodeName": "rfm", "type": "module"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "keep_files", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "strict_check", "type": "bool"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "reference", "type": "Dict[str, Dict[str, Tuple[float, None, float, str]]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "options", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "options", "type": "List[str]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "variables", "type": "Dict[str, str]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "reference", "type": "Dict[str, Dict[str, Tuple[float, None, float, str]]]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "tags", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "VASPCheck"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 14, "col_offset": 33, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 14, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 15, "col_offset": 31, "nodeName": "assert_reference", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "force", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "VASPCheck"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "VASPCheck"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "VASPCheck"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "VASPCheck"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "use_multithreading", "type": "bool"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "references", "type": "Dict[str, Dict[str, Dict[str, Tuple[float, None, float, str]]]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "job", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "launcher", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "references", "type": "Dict[str, Dict[str, Dict[str, Tuple[float, None, float, str]]]]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "sn", "type": "module"}, {"lineNumber": 14, "col_offset": 33, "nodeName": "self", "type": "VASPCheck"}, {"lineNumber": 15, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 22, "col_offset": 45, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 38, "col_offset": 49, "nodeName": "variant", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "num_cpus_per_task", "type": "int"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "num_tasks_per_core", "type": "int"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "use_multithreading", "type": "bool"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "use_multithreading", "type": "bool"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "variant", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "job", "type": "Any"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "variant", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "variant", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "sn", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "variant", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "variant", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "num_cpus_per_task", "type": "int"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "self", "type": "Any"}]