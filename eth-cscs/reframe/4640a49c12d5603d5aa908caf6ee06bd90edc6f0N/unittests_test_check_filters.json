[{"lineNumber": 10, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 10, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "ret", "type": "reframe.core.pipeline.RegressionTest"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "ret", "type": "reframe.core.pipeline.RegressionTest"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 12, "col_offset": 14, "nodeName": "RegressionTest", "type": "Type[reframe.core.pipeline.RegressionTest]"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 13, "col_offset": 15, "nodeName": "v", "type": "Union[int, List[str], Set[str], str]"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "count", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "partition", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "partition", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "attrs", "type": "Dict[str, Union[int, List[str], Set[str], str]]"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 14, "col_offset": 20, "nodeName": "ret", "type": "reframe.core.pipeline.RegressionTest"}, {"lineNumber": 14, "col_offset": 25, "nodeName": "k", "type": "str"}, {"lineNumber": 14, "col_offset": 28, "nodeName": "v", "type": "Union[List[str], Set[str], int, str]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "create_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "create_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "create_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "sn", "type": "module"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "filter_fn", "type": "Any"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "checks", "type": "List[reframe.core.pipeline.RegressionTest]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "system", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "count_checks", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "system", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "count_checks", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "count_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "have_name", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "have_name", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "have_name", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "have_name", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "have_name", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "have_name", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 54, "col_offset": 46, "nodeName": "have_not_name", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "have_not_name", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "have_not_name", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "have_not_name", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "have_not_name", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "have_tag", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "have_tag", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "have_tag", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "have_prgenv", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "have_prgenv", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "have_prgenv", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "have_prgenv", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "have_partition", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "have_partition", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "have_gpu_only", "type": "Callable[[], Callable[[Any], Any]]"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "self", "type": "TestCheckFilters"}, {"lineNumber": 92, "col_offset": 46, "nodeName": "have_cpu_only", "type": "Callable[[], Callable[[Any], Any]]"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "filters", "type": "module"}, {"lineNumber": 54, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "filters", "type": "module"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "filters", "type": "module"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "filters", "type": "module"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "filters", "type": "module"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "filters", "type": "module"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "runtime", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 84, "col_offset": 70, "nodeName": "p", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "runtime", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 86, "col_offset": 70, "nodeName": "p", "type": "Any"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 92, "col_offset": 46, "nodeName": "filters", "type": "module"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "rt", "type": "module"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "rt", "type": "module"}]