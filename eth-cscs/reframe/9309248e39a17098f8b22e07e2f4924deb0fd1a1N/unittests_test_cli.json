[{"lineNumber": 19, "col_offset": 0, "nodeName": "run_command_inline", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "argv_save", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "environ_save", "type": "reframe.core.environments._EnvironmentSnapshot"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "argv", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "argv", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "exitcode", "type": "None"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "captured_stdout", "type": "io.StringIO"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "captured_stderr", "type": "io.StringIO"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "snapshot", "type": "Callable[[], reframe.core.environments._EnvironmentSnapshot]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "exitcode", "type": "Optional[int]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "ret", "type": "List[Union[str, Any]]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "mode", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "system", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "config_file", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "local", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "ignore_check_conflicts", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "perflogdir", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "more_options", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "prefix", "type": "str"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "system", "type": "str"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "environs", "type": "List[str]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "local", "type": "bool"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "more_options", "type": "List[nothing]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "mode", "type": "None"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "config_file", "type": "str"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "logfile", "type": "str"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "ignore_check_conflicts", "type": "bool"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "perflogdir", "type": "str"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "stagedir", "type": "str"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "partitions", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "logfile", "type": "str"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "outputdir", "type": "str"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "partition", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "config_file", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "USER_CONFIG_FILE", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "local", "type": "bool"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "system", "type": "Any"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "fullname", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "environs", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "local", "type": "bool"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "local", "type": "bool"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "checkpath", "type": "List[nothing]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "system", "type": "str"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "checkpath", "type": "List[nothing]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "checkpath", "type": "List[nothing]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "checkpath", "type": "List[nothing]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "more_options", "type": "List[nothing]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "checkpath", "type": "List[nothing]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "environs", "type": "List[nothing]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "local", "type": "bool"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "ignore_check_conflicts", "type": "bool"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "ignore_check_conflicts", "type": "bool"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "timefmt", "type": "str"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "environs", "type": "List[nothing]"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "environs", "type": "List[str]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "environs", "type": "List[nothing]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "system", "type": "str"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "system", "type": "str"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "system", "type": "str"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "system", "type": "str"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "ms", "type": "Any"}, {"lineNumber": 448, "col_offset": 13, "nodeName": "modules_system", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "env", "type": "module"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "redirect_stdout", "type": "Type[contextlib.redirect_stdout]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "captured_stdout", "type": "io.StringIO"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "ret", "type": "List[Union[str, Any]]"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "ret", "type": "List[Union[Any, str]]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "prefix", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "perflogdir", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "force_remove_file", "type": "Callable[[Any], None]"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "logfile", "type": "str"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "run_command_inline", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "argv", "type": "Any"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "main", "type": "Callable[[], None]"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "prefix", "type": "str"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "e", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "environs", "type": "Any"}, {"lineNumber": 117, "col_offset": 57, "nodeName": "check_name", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "logfile", "type": "str"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "prefix", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "stdout", "type": "str"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assert_log_file_is_saved", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "partition_with_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "partition", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "fixtures", "type": "module"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "partition", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "returncode", "type": "Any"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "_", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "_run_reframe", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "returncode", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 177, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 38, "nodeName": "stdout", "type": "str"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "stdout", "type": "str"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 38, "nodeName": "stdout", "type": "str"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 213, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 38, "nodeName": "stdout", "type": "str"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 229, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 229, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 45, "nodeName": "stdout", "type": "str"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 43, "nodeName": "stdout", "type": "str"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 243, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assert_log_file_is_saved", "type": "Callable[[], Any]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 263, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 263, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 38, "nodeName": "stdout", "type": "str"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 279, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "num_checks", "type": "str"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 288, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 292, "col_offset": 61, "nodeName": "tmp", "type": "nothing"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "checks_link", "type": "str"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "checkpath", "type": "List[str]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "num_checks_in_checkdir", "type": "str"}, {"lineNumber": 301, "col_offset": 49, "nodeName": "num_checks_default", "type": "str"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 306, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 306, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 312, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 312, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 312, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "num_checks_in_checkdir", "type": "str"}, {"lineNumber": 315, "col_offset": 49, "nodeName": "num_checks_default", "type": "str"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 318, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 318, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 321, "col_offset": 30, "nodeName": "num_checks_in_checkdir", "type": "str"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 324, "col_offset": 34, "nodeName": "prefix", "type": "str"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 325, "col_offset": 53, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 326, "col_offset": 25, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 327, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 332, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 341, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 341, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 38, "nodeName": "stdout", "type": "str"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 343, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 344, "col_offset": 35, "nodeName": "stdout", "type": "str"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 41, "nodeName": "stdout", "type": "str"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 354, "col_offset": 31, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "strftime", "type": "Callable[[str], str]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 365, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 365, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 31, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 367, "col_offset": 22, "nodeName": "timefmt", "type": "str"}, {"lineNumber": 367, "col_offset": 31, "nodeName": "stdout", "type": "str"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 374, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 374, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 375, "col_offset": 42, "nodeName": "stdout", "type": "str"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 376, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 383, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 383, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 384, "col_offset": 42, "nodeName": "stdout", "type": "str"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 385, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 392, "col_offset": 28, "nodeName": "_", "type": "str"}, {"lineNumber": 392, "col_offset": 32, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 42, "nodeName": "stdout", "type": "str"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 399, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 399, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 400, "col_offset": 38, "nodeName": "stdout", "type": "str"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 402, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 408, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 408, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 408, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 409, "col_offset": 38, "nodeName": "stdout", "type": "str"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 410, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 411, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 417, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 417, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 417, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 418, "col_offset": 38, "nodeName": "stdout", "type": "str"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 420, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 426, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 426, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 426, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 427, "col_offset": 38, "nodeName": "stdout", "type": "str"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 428, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 429, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 435, "col_offset": 20, "nodeName": "stdout", "type": "str"}, {"lineNumber": 435, "col_offset": 28, "nodeName": "stderr", "type": "str"}, {"lineNumber": 435, "col_offset": 37, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 436, "col_offset": 32, "nodeName": "stdout", "type": "str"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 437, "col_offset": 38, "nodeName": "stdout", "type": "str"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 438, "col_offset": 38, "nodeName": "stderr", "type": "str"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 439, "col_offset": 28, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 449, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "action", "type": "str"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 460, "col_offset": 34, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 461, "col_offset": 34, "nodeName": "stderr", "type": "Any"}, {"lineNumber": 462, "col_offset": 15, "nodeName": "returncode", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "sys", "type": "module"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "redirect_stderr", "type": "Type[contextlib.redirect_stderr]"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "captured_stderr", "type": "io.StringIO"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "SystemExit", "type": "Type[SystemExit]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "argv_save", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "captured_stdout", "type": "io.StringIO"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "captured_stderr", "type": "io.StringIO"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "mode", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "system", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "config_file", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "itertools", "type": "module"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "itertools", "type": "module"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "perflogdir", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "os_ext", "type": "module"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "os_ext", "type": "module"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "os_ext", "type": "module"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "cli", "type": "module"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "path", "type": "str"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "logfile", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "fixtures", "type": "module"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "_stage_exists", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 54, "nodeName": "environs", "type": "List[str]"}, {"lineNumber": 213, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "_stage_exists", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 54, "nodeName": "environs", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "_perflog_exists", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 243, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "_", "type": "List[str]"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 263, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "_", "type": "List[str]"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 279, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 288, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 293, "col_offset": 39, "nodeName": "tmp", "type": "nothing"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "symlink", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 296, "col_offset": 60, "nodeName": "checks_link", "type": "str"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "returncode", "type": "Optional[int]"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "stdout", "type": "str"}, {"lineNumber": 297, "col_offset": 32, "nodeName": "_", "type": "str"}, {"lineNumber": 297, "col_offset": 36, "nodeName": "_run_reframe", "type": "Callable[[], Any]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 306, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 312, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 318, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 324, "col_offset": 34, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 326, "col_offset": 21, "nodeName": "_", "type": "List[str]"}, {"lineNumber": 326, "col_offset": 25, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "more_options", "type": "List[str]"}, {"lineNumber": 331, "col_offset": 21, "nodeName": "_", "type": "List[str]"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 333, "col_offset": 39, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 341, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "_", "type": "List[str]"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 365, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 374, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 383, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 392, "col_offset": 32, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 399, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 408, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 417, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 426, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 435, "col_offset": 37, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 448, "col_offset": 13, "nodeName": "runtime", "type": "Callable[[], Any]"}, {"lineNumber": 449, "col_offset": 11, "nodeName": "ms", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "skip", "type": "Any"}, {"lineNumber": 452, "col_offset": 13, "nodeName": "module_use", "type": "Type[reframe.core.runtime.module_use]"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "load_module", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "returncode", "type": "Any"}, {"lineNumber": 456, "col_offset": 24, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 456, "col_offset": 32, "nodeName": "stderr", "type": "Any"}, {"lineNumber": 456, "col_offset": 41, "nodeName": "_run_reframe", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "unload_module", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "exitcode", "type": "None"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "exitcode", "type": "int"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "code", "type": "int"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "restore", "type": "Callable[[], None]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "stagedir", "type": "str"}, {"lineNumber": 110, "col_offset": 46, "nodeName": "p", "type": "Any"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "e", "type": "Any"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "check_name", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "outputdir", "type": "str"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 208, "col_offset": 54, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 222, "col_offset": 54, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "search", "type": "Callable"}, {"lineNumber": 281, "col_offset": 34, "nodeName": "stdout", "type": "str"}, {"lineNumber": 281, "col_offset": 42, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 289, "col_offset": 29, "nodeName": "search", "type": "Callable"}, {"lineNumber": 290, "col_offset": 34, "nodeName": "stdout", "type": "str"}, {"lineNumber": 290, "col_offset": 42, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "checks_link", "type": "str"}, {"lineNumber": 297, "col_offset": 36, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "search", "type": "Callable"}, {"lineNumber": 308, "col_offset": 34, "nodeName": "stdout", "type": "str"}, {"lineNumber": 308, "col_offset": 42, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 313, "col_offset": 33, "nodeName": "search", "type": "Callable"}, {"lineNumber": 314, "col_offset": 34, "nodeName": "stdout", "type": "str"}, {"lineNumber": 314, "col_offset": 42, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 319, "col_offset": 33, "nodeName": "search", "type": "Callable"}, {"lineNumber": 320, "col_offset": 34, "nodeName": "stdout", "type": "str"}, {"lineNumber": 320, "col_offset": 42, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "now", "type": "Callable"}, {"lineNumber": 448, "col_offset": 13, "nodeName": "rt", "type": "module"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 452, "col_offset": 13, "nodeName": "rt", "type": "module"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "ms", "type": "Any"}, {"lineNumber": 456, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "ms", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "temp_runtime", "type": "Type[reframe.core.runtime.temp_runtime]"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "funct", "type": "Callable[[], None]"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "e", "type": "SystemExit"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "environ_save", "type": "reframe.core.environments._EnvironmentSnapshot"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "c", "type": "Any"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "c", "type": "Any"}, {"lineNumber": 59, "col_offset": 52, "nodeName": "checkpath", "type": "Any"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "e", "type": "Any"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "e", "type": "Any"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "environs", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "path", "type": "str"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 124, "col_offset": 53, "nodeName": "logfile", "type": "str"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "re", "type": "module"}, {"lineNumber": 281, "col_offset": 42, "nodeName": "re", "type": "module"}, {"lineNumber": 289, "col_offset": 29, "nodeName": "re", "type": "module"}, {"lineNumber": 290, "col_offset": 42, "nodeName": "re", "type": "module"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 298, "col_offset": 37, "nodeName": "search", "type": "Callable"}, {"lineNumber": 299, "col_offset": 38, "nodeName": "stdout", "type": "str"}, {"lineNumber": 299, "col_offset": 46, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "re", "type": "module"}, {"lineNumber": 308, "col_offset": 42, "nodeName": "re", "type": "module"}, {"lineNumber": 313, "col_offset": 33, "nodeName": "re", "type": "module"}, {"lineNumber": 314, "col_offset": 42, "nodeName": "re", "type": "module"}, {"lineNumber": 319, "col_offset": 33, "nodeName": "re", "type": "module"}, {"lineNumber": 320, "col_offset": 42, "nodeName": "re", "type": "module"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "rt", "type": "module"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 33, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 59, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 124, "col_offset": 53, "nodeName": "self", "type": "TestFrontend"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "environs", "type": "List[str]"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 298, "col_offset": 37, "nodeName": "re", "type": "module"}, {"lineNumber": 299, "col_offset": 46, "nodeName": "re", "type": "module"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "partition", "type": "Any"}]