[{"lineNumber": 6, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 6, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "parser", "type": "reframe.frontend.argparse.ArgumentParser"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "foo_options", "type": "reframe.frontend.argparse._ArgumentGroup"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "bar_options", "type": "reframe.frontend.argparse._ArgumentGroup"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "options", "type": "Any"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 8, "col_offset": 22, "nodeName": "ArgumentParser", "type": "Type[reframe.frontend.argparse.ArgumentParser]"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 9, "col_offset": 27, "nodeName": "add_argument_group", "type": "Callable[..., reframe.frontend.argparse._ArgumentGroup]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 10, "col_offset": 27, "nodeName": "add_argument_group", "type": "Callable[..., reframe.frontend.argparse._ArgumentGroup]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., Any]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., Any]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., Any]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "add_argument", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "foobar", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "foo_bar", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "foo", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "foolist", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "barfoo", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "unfoo", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "foobar", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "bar", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "barlist", "type": "Any"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "options", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "foo", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "foolist", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "foobar", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "unfoo", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "bar", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "barlist", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "barfoo", "type": "Any"}, {"lineNumber": 9, "col_offset": 27, "nodeName": "parser", "type": "reframe.frontend.argparse.ArgumentParser"}, {"lineNumber": 10, "col_offset": 27, "nodeName": "parser", "type": "reframe.frontend.argparse.ArgumentParser"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "foo_options", "type": "reframe.frontend.argparse._ArgumentGroup"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "foo_options", "type": "reframe.frontend.argparse._ArgumentGroup"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "foo_options", "type": "reframe.frontend.argparse._ArgumentGroup"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "foo_options", "type": "reframe.frontend.argparse._ArgumentGroup"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "bar_options", "type": "reframe.frontend.argparse._ArgumentGroup"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "bar_options", "type": "reframe.frontend.argparse._ArgumentGroup"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "foo_options", "type": "reframe.frontend.argparse._ArgumentGroup"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "foo_options", "type": "reframe.frontend.argparse._ArgumentGroup"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "foo_options", "type": "reframe.frontend.argparse._ArgumentGroup"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "foo_options", "type": "reframe.frontend.argparse._ArgumentGroup"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "parser", "type": "reframe.frontend.argparse.ArgumentParser"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "options", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "options", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "parser", "type": "reframe.frontend.argparse.ArgumentParser"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "options", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "options", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "options", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "options", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "options", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "options", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "options", "type": "Any"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "parser", "type": "reframe.frontend.argparse.ArgumentParser"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "options", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "options", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "options", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "options", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "options", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "options", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "options", "type": "Any"}, {"lineNumber": 9, "col_offset": 27, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 10, "col_offset": 27, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "self", "type": "TestArgumentParser"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "self", "type": "TestArgumentParser"}]