[{"lineNumber": 10, "col_offset": 20, "nodeName": "RunOnlyRegressionTest", "type": "Any"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "NumpyBaseTest", "type": "Type[NumpyBaseTest]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "NumpyBaseTest", "type": "Type[NumpyBaseTest]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 20, "nodeName": "rfm", "type": "module"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "use_multithreading", "type": "bool"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "num_cpus_per_task", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "num_cpus_per_task", "type": "int"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "sn", "type": "module"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "sn", "type": "module"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "sn", "type": "module"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "sn", "type": "module"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "sn", "type": "module"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "self", "type": "NumpyBaseTest"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}]