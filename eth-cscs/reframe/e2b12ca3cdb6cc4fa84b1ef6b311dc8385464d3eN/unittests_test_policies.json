[{"lineNumber": 16, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "assert_all_dead", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "test_runall", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "test_runall_skip_system_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "test_runall_skip_prgenv_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_runall_skip_sanity_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "test_runall_skip_performance_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_strict_performance_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test_kbd_interrupt_within_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "test_system_exit_within_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "TaskEventListener", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "on_task_run", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "on_task_exit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "on_task_success", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "on_task_failure", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "TestSerialExecutionPolicy", "type": "Type[TestSerialExecutionPolicy]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "set_max_jobs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "read_timestamps", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "test_concurrency_unlimited", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "test_concurrency_limited", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "test_concurrency_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "_run_checks", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "test_kbd_interrupt_in_wait_with_concurrency", "type": "Callable[[Any], Any]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "test_kbd_interrupt_in_wait_with_limited_concurrency", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "test_kbd_interrupt_in_setup_with_concurrency", "type": "Callable[[Any], Any]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "test_kbd_interrupt_in_setup_with_limited_concurrency", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "executors", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "resourcesdir", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "checks", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "skip_system_check", "type": "bool"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "skip_environ_check", "type": "bool"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "skip_sanity_check", "type": "bool"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "skip_performance_check", "type": "bool"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "strict_check", "type": "bool"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "check", "type": "unittests.resources.frontend_checks.KeyboardInterruptCheck"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "check", "type": "unittests.resources.frontend_checks.SystemExitCheck"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "tasks", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "last", "type": "int"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "last", "type": "int"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "keep_stage_files", "type": "bool"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "partitions", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "begin_stamps", "type": "List[float]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "end_stamps", "type": "List[float]"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "num_checks", "type": "int"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "RegressionCheckLoader", "type": "Type[reframe.frontend.loader.RegressionCheckLoader]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "Runner", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "load_all", "type": "Callable[[], List[Any]]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "resourcesdir", "type": "str"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "alltasks", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "runall", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "checks", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "runall", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "checks", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "runall", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "checks", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "runall", "type": "Any"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "checks", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "runall", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "checks", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "runall", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "checks", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "KeyboardInterruptCheck", "type": "Type[unittests.resources.frontend_checks.KeyboardInterruptCheck]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "runall", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assert_all_dead", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "SystemExitCheck", "type": "Type[unittests.resources.frontend_checks.SystemExitCheck]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "runall", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TaskEventMonitor"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TaskEventMonitor"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "on_task_run", "type": "Any"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "task", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "task", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "Runner", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "TaskEventMonitor", "type": "Type[TaskEventMonitor]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 165, "col_offset": 49, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "system", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "_max_jobs", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "set_max_jobs", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "runall", "type": "Any"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "read_timestamps", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "tasks", "type": "List[nothing]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "set_max_jobs", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "runall", "type": "Any"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "read_timestamps", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "tasks", "type": "List[nothing]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "set_max_jobs", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "runall", "type": "Any"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "read_timestamps", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "tasks", "type": "List[nothing]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "set_max_jobs", "type": "Callable[[Any], Any]"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "max_jobs", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 272, "col_offset": 26, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 272, "col_offset": 45, "nodeName": "runall", "type": "Any"}, {"lineNumber": 272, "col_offset": 65, "nodeName": "checks", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assert_all_dead", "type": "Callable[[], Any]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "_run_checks", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "checks", "type": "List[Union[unittests.resources.frontend_checks.KeyboardInterruptCheck, unittests.resources.frontend_checks.SleepCheck]]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "_run_checks", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "checks", "type": "List[Union[unittests.resources.frontend_checks.KeyboardInterruptCheck, unittests.resources.frontend_checks.SleepCheck]]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "_run_checks", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "checks", "type": "List[Union[unittests.resources.frontend_checks.SleepCheck, unittests.resources.frontend_checks.KeyboardInterruptCheck]]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "_run_checks", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "checks", "type": "List[Union[unittests.resources.frontend_checks.SleepCheck, unittests.resources.frontend_checks.KeyboardInterruptCheck]]"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "executors", "type": "module"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "SerialExecutionPolicy", "type": "Type[reframe.frontend.executors.policies.SerialExecutionPolicy]"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "loader", "type": "reframe.frontend.loader.RegressionCheckLoader"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "stats", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "finished", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "JobNotStartedError", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "finished", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "num_failures", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "num_failures", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "num_failures", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "num_failures", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "num_failures", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "num_failures", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "num_failures_stage", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "runner", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "check", "type": "unittests.resources.frontend_checks.KeyboardInterruptCheck"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "num_failures", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "check", "type": "unittests.resources.frontend_checks.SystemExitCheck"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "num_failures", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "self", "type": "TaskEventMonitor"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "last", "type": "int"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "tasks", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "self", "type": "TaskEventMonitor"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "last", "type": "int"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "executors", "type": "module"}, {"lineNumber": 162, "col_offset": 39, "nodeName": "AsynchronousExecutionPolicy", "type": "Type[reframe.frontend.executors.policies.AsynchronousExecutionPolicy]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "task_listeners", "type": "Any"}, {"lineNumber": 165, "col_offset": 49, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 179, "col_offset": 56, "nodeName": "f", "type": "file"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "begin_stamps", "type": "List[float]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "end_stamps", "type": "List[float]"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 187, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "num_failures", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "max", "type": "Callable"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "begin_stamps", "type": "List[float]"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "end_stamps", "type": "List[float]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "skipTest", "type": "Callable[[Any], None]"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "num_failures", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 221, "col_offset": 35, "nodeName": "max", "type": "Callable"}, {"lineNumber": 221, "col_offset": 39, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 230, "col_offset": 27, "nodeName": "b", "type": "float"}, {"lineNumber": 230, "col_offset": 31, "nodeName": "e", "type": "float"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "begin_after_end", "type": "Generator[bool, Any, None]"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "begin_stamps", "type": "List[float]"}, {"lineNumber": 245, "col_offset": 43, "nodeName": "end_stamps", "type": "List[float]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "skipTest", "type": "Callable[[Any], None]"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "num_failures", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "max", "type": "Callable"}, {"lineNumber": 259, "col_offset": 32, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "b", "type": "float"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "e", "type": "float"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "begin_after_end", "type": "Generator[bool, Any, None]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 272, "col_offset": 45, "nodeName": "runner", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "num_failures", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 279, "col_offset": 18, "nodeName": "KeyboardInterruptCheck", "type": "Type[unittests.resources.frontend_checks.KeyboardInterruptCheck]"}, {"lineNumber": 279, "col_offset": 44, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 280, "col_offset": 18, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 280, "col_offset": 34, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "KeyboardInterruptCheck", "type": "Type[unittests.resources.frontend_checks.KeyboardInterruptCheck]"}, {"lineNumber": 290, "col_offset": 18, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 290, "col_offset": 34, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 290, "col_offset": 50, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 294, "col_offset": 18, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 294, "col_offset": 33, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 294, "col_offset": 48, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "KeyboardInterruptCheck", "type": "Type[unittests.resources.frontend_checks.KeyboardInterruptCheck]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 299, "col_offset": 33, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "SleepCheck", "type": "Type[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 300, "col_offset": 18, "nodeName": "KeyboardInterruptCheck", "type": "Type[unittests.resources.frontend_checks.KeyboardInterruptCheck]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "policies", "type": "module"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "runner", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "poll", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "finished", "type": "bool"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TaskEventMonitor"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TaskEventMonitor"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TaskEventMonitor"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 162, "col_offset": 39, "nodeName": "policies", "type": "module"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 187, "col_offset": 43, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "stats", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "stats", "type": "Any"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 221, "col_offset": 39, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 222, "col_offset": 58, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "b", "type": "float"}, {"lineNumber": 230, "col_offset": 40, "nodeName": "e", "type": "float"}, {"lineNumber": 230, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 245, "col_offset": 43, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 249, "col_offset": 43, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "stats", "type": "Any"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 259, "col_offset": 32, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 266, "col_offset": 37, "nodeName": "b", "type": "float"}, {"lineNumber": 266, "col_offset": 40, "nodeName": "e", "type": "float"}, {"lineNumber": 266, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 272, "col_offset": 45, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "check", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "runtime", "type": "module"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "begin_stamps", "type": "List[float]"}, {"lineNumber": 180, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "end_stamps", "type": "List[float]"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "runner", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "runner", "type": "Any"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 197, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 65, "nodeName": "checks", "type": "List[unittests.resources.frontend_checks.SleepCheck]"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "runner", "type": "Any"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "runner", "type": "Any"}, {"lineNumber": 221, "col_offset": 39, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 230, "col_offset": 49, "nodeName": "begin_stamps", "type": "List[float]"}, {"lineNumber": 231, "col_offset": 49, "nodeName": "end_stamps", "type": "List[float]"}, {"lineNumber": 245, "col_offset": 29, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "runner", "type": "Any"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "runner", "type": "Any"}, {"lineNumber": 259, "col_offset": 32, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 266, "col_offset": 49, "nodeName": "begin_stamps", "type": "List[float]"}, {"lineNumber": 267, "col_offset": 49, "nodeName": "end_stamps", "type": "List[float]"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "runner", "type": "Any"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "runner", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "t", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "check", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 180, "col_offset": 47, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 181, "col_offset": 45, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 230, "col_offset": 49, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 230, "col_offset": 67, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 231, "col_offset": 49, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 266, "col_offset": 49, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 267, "col_offset": 49, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "t", "type": "Any"}, {"lineNumber": 231, "col_offset": 67, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 180, "col_offset": 47, "nodeName": "readline", "type": "Callable[..., str]"}, {"lineNumber": 181, "col_offset": 45, "nodeName": "readline", "type": "Callable[..., str]"}, {"lineNumber": 180, "col_offset": 47, "nodeName": "f", "type": "file"}, {"lineNumber": 181, "col_offset": 45, "nodeName": "f", "type": "file"}]