[{"lineNumber": 29, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "_num_failures_stage", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assert_all_dead", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_runall", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "test_runall_skip_system_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "test_runall_skip_prgenv_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "test_runall_skip_sanity_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "test_runall_skip_performance_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "test_strict_performance_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "test_force_local_execution", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "test_kbd_interrupt_within_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "test_system_exit_within_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test_retries_bad_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "test_retries_good_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "test_pass_in_retries", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "TaskEventListener", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "on_task_run", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "on_task_exit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "on_task_success", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "on_task_failure", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 233, "col_offset": 38, "nodeName": "TestSerialExecutionPolicy", "type": "Type[TestSerialExecutionPolicy]"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "set_max_jobs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "read_timestamps", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "test_concurrency_unlimited", "type": "Callable[[Any], Any]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "test_concurrency_limited", "type": "Callable[[Any], Any]"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "test_concurrency_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "_run_checks", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "test_kbd_interrupt_in_wait_with_concurrency", "type": "Callable[[Any], Any]"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "test_kbd_interrupt_in_wait_with_limited_concurrency", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "test_kbd_interrupt_in_setup_with_concurrency", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "test_kbd_interrupt_in_setup_with_limited_concurrency", "type": "Callable[[Any], Any]"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "test_poll_fails_main_loop", "type": "Callable[[Any], Any]"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "test_poll_fails_busy_loop", "type": "Callable[[Any], Any]"}, {"lineNumber": 398, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "has_edge", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "num_deps", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "find_case", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "test_build_deps", "type": "Callable[[Any], Any]"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "test_build_deps_unknown_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "test_build_deps_unknown_target_env", "type": "Callable[[Any], Any]"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "test_build_deps_unknown_source_env", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "executors", "type": "module"}, {"lineNumber": 398, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "__hash__", "type": "Callable[[Any], Any]"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "__repr__", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "checks", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "prefix", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "_current_run", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "cases", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "skip_sanity_check", "type": "bool"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "skip_performance_check", "type": "bool"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "strict_check", "type": "bool"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "force_local", "type": "bool"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "check", "type": "unittests.resources.checks.frontend_checks.KeyboardInterruptCheck"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "check", "type": "unittests.resources.checks.frontend_checks.SystemExitCheck"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "max_retries", "type": "int"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "checks", "type": "List[Union[unittests.resources.checks.frontend_checks.BadSetupCheck, unittests.resources.checks.frontend_checks.BadSetupCheckEarly]]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "_max_retries", "type": "int"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "max_retries", "type": "int"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "max_retries", "type": "int"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "checks", "type": "List[unittests.resources.checks.hellocheck.HelloTest]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "_max_retries", "type": "int"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "max_retries", "type": "int"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "max_retries", "type": "int"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "run_to_pass", "type": "int"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.RetriesCheck]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "_max_retries", "type": "int"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "max_retries", "type": "int"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "tasks", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "last", "type": "int"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "last", "type": "int"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "keep_stage_files", "type": "bool"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "partitions", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "begin_stamps", "type": "List[float]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "end_stamps", "type": "List[float]"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "num_checks", "type": "int"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheckPollFail]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "num_checks", "type": "int"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheckPollFailLate]"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "num_checks", "type": "int"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "stats", "type": "Any"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "c", "type": "Any"}, {"lineNumber": 437, "col_offset": 17, "nodeName": "checks", "type": "Any"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "c", "type": "Any"}, {"lineNumber": 444, "col_offset": 17, "nodeName": "cases", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "prefix", "type": "str"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "Node", "type": "Type[Any]"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "Node", "type": "Type[Any]"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "has_edge", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 462, "col_offset": 19, "nodeName": "has_edge", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "num_deps", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 463, "col_offset": 19, "nodeName": "num_deps", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 464, "col_offset": 21, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "find_case", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 465, "col_offset": 20, "nodeName": "find_case", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "cases", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "deps", "type": "Dict[Any, Any]"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "p", "type": "str"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "p", "type": "str"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "p", "type": "str"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "check_e0", "type": "Any"}, {"lineNumber": 505, "col_offset": 19, "nodeName": "check", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "check_e1", "type": "Any"}, {"lineNumber": 506, "col_offset": 19, "nodeName": "check", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 521, "col_offset": 21, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "checks", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "test0", "type": "Optional[Any]"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "depkind", "type": "str"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 542, "col_offset": 21, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "checks", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "test0", "type": "Optional[Any]"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "test1", "type": "Optional[Any]"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 554, "col_offset": 21, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "num_deps", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 555, "col_offset": 19, "nodeName": "num_deps", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "checks", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "test0", "type": "Optional[Any]"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "test1", "type": "Optional[Any]"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "deps", "type": "Dict[Any, Any]"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "RegressionCheckLoader", "type": "Type[reframe.frontend.loader.RegressionCheckLoader]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "Runner", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "load_all", "type": "Callable[[], List[Any]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "resources", "type": "Any"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "rmtree", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "generate_testcases", "type": "Any"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "runall", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "cases", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "checks", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "checks", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "checks", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "checks", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "checks", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "checks", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "KeyboardInterruptCheck", "type": "Type[unittests.resources.checks.frontend_checks.KeyboardInterruptCheck]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 137, "col_offset": 45, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assert_all_dead", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "SystemExitCheck", "type": "Type[unittests.resources.checks.frontend_checks.SystemExitCheck]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "checks", "type": "List[Union[unittests.resources.checks.frontend_checks.BadSetupCheck, unittests.resources.checks.frontend_checks.BadSetupCheckEarly]]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "max_retries", "type": "int"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "current_run", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "retry_report", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "checks", "type": "List[unittests.resources.checks.hellocheck.HelloTest]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "current_run", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 69, "nodeName": "fp", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.RetriesCheck]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "run_to_pass", "type": "int"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "current_run", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TaskEventMonitor"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TaskEventMonitor"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "on_task_run", "type": "Any"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "task", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "task", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "Runner", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 238, "col_offset": 23, "nodeName": "TaskEventMonitor", "type": "Type[TaskEventMonitor]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "system", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "_max_jobs", "type": "Any"}, {"lineNumber": 243, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "set_max_jobs", "type": "Callable[[Any], Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "read_timestamps", "type": "Callable[[Any], Any]"}, {"lineNumber": 273, "col_offset": 29, "nodeName": "tasks", "type": "List[nothing]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "set_max_jobs", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "read_timestamps", "type": "Callable[[Any], Any]"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "tasks", "type": "List[nothing]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 324, "col_offset": 25, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "set_max_jobs", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "read_timestamps", "type": "Callable[[Any], Any]"}, {"lineNumber": 336, "col_offset": 29, "nodeName": "tasks", "type": "List[nothing]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "set_max_jobs", "type": "Callable[[Any], Any]"}, {"lineNumber": 345, "col_offset": 26, "nodeName": "max_jobs", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 346, "col_offset": 26, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 346, "col_offset": 45, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 346, "col_offset": 58, "nodeName": "checks", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "assert_all_dead", "type": "Callable[[], Any]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "_run_checks", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "checks", "type": "List[Union[unittests.resources.checks.frontend_checks.KeyboardInterruptCheck, unittests.resources.checks.frontend_checks.SleepCheck]]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "_run_checks", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 365, "col_offset": 25, "nodeName": "checks", "type": "List[Union[unittests.resources.checks.frontend_checks.KeyboardInterruptCheck, unittests.resources.checks.frontend_checks.SleepCheck]]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "_run_checks", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 370, "col_offset": 25, "nodeName": "checks", "type": "List[Union[unittests.resources.checks.frontend_checks.SleepCheck, unittests.resources.checks.frontend_checks.KeyboardInterruptCheck]]"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "_run_checks", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 375, "col_offset": 25, "nodeName": "checks", "type": "List[Union[unittests.resources.checks.frontend_checks.SleepCheck, unittests.resources.checks.frontend_checks.KeyboardInterruptCheck]]"}, {"lineNumber": 380, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 380, "col_offset": 25, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheckPollFail]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "set_max_jobs", "type": "Callable[[Any], Any]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 20, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheckPollFail]"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 390, "col_offset": 25, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheckPollFailLate]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "set_max_jobs", "type": "Callable[[Any], Any]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "runall", "type": "Callable[..., Any]"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheckPollFailLate]"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "runner", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 25, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 395, "col_offset": 25, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "NotImplemented", "type": "NotImplementedType"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "dst", "type": "Any"}, {"lineNumber": 430, "col_offset": 22, "nodeName": "deps", "type": "Any"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 449, "col_offset": 22, "nodeName": "RegressionCheckLoader", "type": "Type[reframe.frontend.loader.RegressionCheckLoader]"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "resources", "type": "Any"}, {"lineNumber": 454, "col_offset": 40, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "rmtree", "type": "Any"}, {"lineNumber": 457, "col_offset": 22, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "TestDependencies", "type": "Type[TestDependencies]"}, {"lineNumber": 462, "col_offset": 19, "nodeName": "TestDependencies", "type": "Type[TestDependencies]"}, {"lineNumber": 463, "col_offset": 19, "nodeName": "TestDependencies", "type": "Type[TestDependencies]"}, {"lineNumber": 464, "col_offset": 21, "nodeName": "TestDependencies", "type": "Type[TestDependencies]"}, {"lineNumber": 465, "col_offset": 20, "nodeName": "TestDependencies", "type": "Type[TestDependencies]"}, {"lineNumber": 467, "col_offset": 16, "nodeName": "generate_testcases", "type": "Any"}, {"lineNumber": 468, "col_offset": 15, "nodeName": "build_deps", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 468, "col_offset": 37, "nodeName": "cases", "type": "Any"}, {"lineNumber": 473, "col_offset": 16, "nodeName": "e0", "type": "str"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "e", "type": "str"}, {"lineNumber": 507, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 508, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 509, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 521, "col_offset": 21, "nodeName": "TestDependencies", "type": "Type[TestDependencies]"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "load_all", "type": "Any"}, {"lineNumber": 525, "col_offset": 16, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 525, "col_offset": 36, "nodeName": "checks", "type": "Any"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "test1", "type": "Optional[Any]"}, {"lineNumber": 542, "col_offset": 21, "nodeName": "TestDependencies", "type": "Type[TestDependencies]"}, {"lineNumber": 543, "col_offset": 17, "nodeName": "load_all", "type": "Any"}, {"lineNumber": 546, "col_offset": 16, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 546, "col_offset": 36, "nodeName": "checks", "type": "Any"}, {"lineNumber": 547, "col_offset": 16, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 547, "col_offset": 44, "nodeName": "checks", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "depends_on", "type": "Any"}, {"lineNumber": 548, "col_offset": 34, "nodeName": "DEPEND_EXACT", "type": "Any"}, {"lineNumber": 554, "col_offset": 21, "nodeName": "TestDependencies", "type": "Type[TestDependencies]"}, {"lineNumber": 555, "col_offset": 19, "nodeName": "TestDependencies", "type": "Type[TestDependencies]"}, {"lineNumber": 556, "col_offset": 17, "nodeName": "load_all", "type": "Any"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 559, "col_offset": 36, "nodeName": "checks", "type": "Any"}, {"lineNumber": 560, "col_offset": 16, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 560, "col_offset": 44, "nodeName": "checks", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "depends_on", "type": "Any"}, {"lineNumber": 561, "col_offset": 34, "nodeName": "DEPEND_EXACT", "type": "Any"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "build_deps", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "executors", "type": "module"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "SerialExecutionPolicy", "type": "Type[reframe.frontend.executors.policies.SerialExecutionPolicy]"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "loader", "type": "reframe.frontend.loader.RegressionCheckLoader"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "os_ext", "type": "module"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "resources", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "executors", "type": "module"}, {"lineNumber": 48, "col_offset": 54, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 48, "col_offset": 62, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "t", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "stats", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "finished", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "JobNotStartedError", "type": "Type[reframe.core.exceptions.JobNotStartedError]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "finished", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "_num_failures_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "stats", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "local", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 137, "col_offset": 45, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 137, "col_offset": 59, "nodeName": "check", "type": "unittests.resources.checks.frontend_checks.KeyboardInterruptCheck"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "check", "type": "unittests.resources.checks.frontend_checks.SystemExitCheck"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "BadSetupCheck", "type": "Type[unittests.resources.checks.frontend_checks.BadSetupCheck]"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "BadSetupCheckEarly", "type": "Type[unittests.resources.checks.frontend_checks.BadSetupCheckEarly]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "HelloTest", "type": "Type[unittests.resources.checks.hellocheck.HelloTest]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "RetriesCheck", "type": "Type[unittests.resources.checks.frontend_checks.RetriesCheck]"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "run_to_pass", "type": "int"}, {"lineNumber": 183, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "fp", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "self", "type": "TaskEventMonitor"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 219, "col_offset": 30, "nodeName": "last", "type": "int"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "tasks", "type": "List[Any]"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "self", "type": "TaskEventMonitor"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "last", "type": "int"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "executors", "type": "module"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "AsynchronousExecutionPolicy", "type": "Type[reframe.frontend.executors.policies.AsynchronousExecutionPolicy]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "task_listeners", "type": "Any"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 253, "col_offset": 56, "nodeName": "f", "type": "file"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "begin_stamps", "type": "List[float]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "end_stamps", "type": "List[float]"}, {"lineNumber": 261, "col_offset": 18, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 261, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 262, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 266, "col_offset": 38, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 270, "col_offset": 38, "nodeName": "max", "type": "Callable"}, {"lineNumber": 270, "col_offset": 42, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 271, "col_offset": 38, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 273, "col_offset": 29, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "begin_stamps", "type": "List[float]"}, {"lineNumber": 280, "col_offset": 35, "nodeName": "end_stamps", "type": "List[float]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "skipTest", "type": "Callable[[Any], None]"}, {"lineNumber": 285, "col_offset": 18, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 285, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 286, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 292, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 295, "col_offset": 35, "nodeName": "max", "type": "Callable"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 296, "col_offset": 35, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 304, "col_offset": 27, "nodeName": "b", "type": "float"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "e", "type": "float"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 306, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 306, "col_offset": 28, "nodeName": "begin_after_end", "type": "Generator[bool, Any, None]"}, {"lineNumber": 319, "col_offset": 11, "nodeName": "begin_stamps", "type": "List[float]"}, {"lineNumber": 319, "col_offset": 43, "nodeName": "end_stamps", "type": "List[float]"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "skipTest", "type": "Callable[[Any], None]"}, {"lineNumber": 323, "col_offset": 18, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 323, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 329, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 329, "col_offset": 38, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 333, "col_offset": 28, "nodeName": "max", "type": "Callable"}, {"lineNumber": 333, "col_offset": 32, "nodeName": "num_tasks", "type": "List[int]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 336, "col_offset": 29, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 340, "col_offset": 27, "nodeName": "b", "type": "float"}, {"lineNumber": 340, "col_offset": 31, "nodeName": "e", "type": "float"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "begin_after_end", "type": "Generator[bool, Any, None]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 346, "col_offset": 45, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 348, "col_offset": 28, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 353, "col_offset": 18, "nodeName": "KeyboardInterruptCheck", "type": "Type[unittests.resources.checks.frontend_checks.KeyboardInterruptCheck]"}, {"lineNumber": 354, "col_offset": 18, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 354, "col_offset": 34, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 354, "col_offset": 50, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 363, "col_offset": 18, "nodeName": "KeyboardInterruptCheck", "type": "Type[unittests.resources.checks.frontend_checks.KeyboardInterruptCheck]"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 364, "col_offset": 34, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 364, "col_offset": 50, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 368, "col_offset": 18, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 368, "col_offset": 33, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 368, "col_offset": 48, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 369, "col_offset": 18, "nodeName": "KeyboardInterruptCheck", "type": "Type[unittests.resources.checks.frontend_checks.KeyboardInterruptCheck]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 373, "col_offset": 18, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 373, "col_offset": 33, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 373, "col_offset": 48, "nodeName": "SleepCheck", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 374, "col_offset": 18, "nodeName": "KeyboardInterruptCheck", "type": "Type[unittests.resources.checks.frontend_checks.KeyboardInterruptCheck]"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 379, "col_offset": 18, "nodeName": "SleepCheckPollFail", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheckPollFail]"}, {"lineNumber": 379, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 384, "col_offset": 36, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 385, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 389, "col_offset": 18, "nodeName": "SleepCheckPollFailLate", "type": "Type[unittests.resources.checks.frontend_checks.SleepCheckPollFailLate]"}, {"lineNumber": 389, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 394, "col_offset": 36, "nodeName": "num_cases", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 395, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "cname", "type": "Any"}, {"lineNumber": 408, "col_offset": 24, "nodeName": "pname", "type": "Any"}, {"lineNumber": 408, "col_offset": 36, "nodeName": "ename", "type": "Any"}, {"lineNumber": 408, "col_offset": 49, "nodeName": "cname", "type": "Any"}, {"lineNumber": 408, "col_offset": 56, "nodeName": "pname", "type": "Any"}, {"lineNumber": 408, "col_offset": 63, "nodeName": "ename", "type": "Any"}, {"lineNumber": 411, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 411, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 416, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 438, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 438, "col_offset": 25, "nodeName": "name", "type": "TestDependencies"}, {"lineNumber": 439, "col_offset": 23, "nodeName": "c", "type": "Any"}, {"lineNumber": 446, "col_offset": 23, "nodeName": "c", "type": "Any"}, {"lineNumber": 454, "col_offset": 40, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "os_ext", "type": "module"}, {"lineNumber": 457, "col_offset": 22, "nodeName": "resources", "type": "Any"}, {"lineNumber": 467, "col_offset": 16, "nodeName": "executors", "type": "module"}, {"lineNumber": 467, "col_offset": 45, "nodeName": "load_all", "type": "Any"}, {"lineNumber": 468, "col_offset": 15, "nodeName": "dependency", "type": "module"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "num_deps", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "deps", "type": "Dict[Any, Any]"}, {"lineNumber": 474, "col_offset": 20, "nodeName": "e1", "type": "str"}, {"lineNumber": 480, "col_offset": 15, "nodeName": "num_deps", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 480, "col_offset": 24, "nodeName": "deps", "type": "Dict[Any, Any]"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "num_deps", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 481, "col_offset": 24, "nodeName": "deps", "type": "Dict[Any, Any]"}, {"lineNumber": 492, "col_offset": 15, "nodeName": "num_deps", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 492, "col_offset": 24, "nodeName": "deps", "type": "Dict[Any, Any]"}, {"lineNumber": 494, "col_offset": 19, "nodeName": "has_edge", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 494, "col_offset": 28, "nodeName": "deps", "type": "Dict[Any, Any]"}, {"lineNumber": 497, "col_offset": 19, "nodeName": "has_edge", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 497, "col_offset": 28, "nodeName": "deps", "type": "Dict[Any, Any]"}, {"lineNumber": 500, "col_offset": 19, "nodeName": "has_edge", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "deps", "type": "Dict[Any, Any]"}, {"lineNumber": 505, "col_offset": 19, "nodeName": "find_case", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 505, "col_offset": 50, "nodeName": "cases", "type": "Any"}, {"lineNumber": 506, "col_offset": 19, "nodeName": "find_case", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 506, "col_offset": 50, "nodeName": "cases", "type": "Any"}, {"lineNumber": 510, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 510, "col_offset": 27, "nodeName": "DependencyError", "type": "Type[reframe.core.exceptions.DependencyError]"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "getdep", "type": "Any"}, {"lineNumber": 513, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 513, "col_offset": 27, "nodeName": "DependencyError", "type": "Type[reframe.core.exceptions.DependencyError]"}, {"lineNumber": 514, "col_offset": 12, "nodeName": "getdep", "type": "Any"}, {"lineNumber": 516, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 516, "col_offset": 27, "nodeName": "DependencyError", "type": "Type[reframe.core.exceptions.DependencyError]"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "getdep", "type": "Any"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "loader", "type": "Any"}, {"lineNumber": 527, "col_offset": 20, "nodeName": "find_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 527, "col_offset": 51, "nodeName": "checks", "type": "Any"}, {"lineNumber": 528, "col_offset": 15, "nodeName": "depkind", "type": "str"}, {"lineNumber": 543, "col_offset": 17, "nodeName": "loader", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "test1", "type": "Optional[Any]"}, {"lineNumber": 548, "col_offset": 34, "nodeName": "rfm", "type": "module"}, {"lineNumber": 549, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 549, "col_offset": 27, "nodeName": "DependencyError", "type": "Type[reframe.core.exceptions.DependencyError]"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "build_deps", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 556, "col_offset": 17, "nodeName": "loader", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "test1", "type": "Any"}, {"lineNumber": 561, "col_offset": 34, "nodeName": "rfm", "type": "module"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "dependency", "type": "module"}, {"lineNumber": 565, "col_offset": 37, "nodeName": "generate_testcases", "type": "Any"}, {"lineNumber": 565, "col_offset": 66, "nodeName": "checks", "type": "Any"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "num_deps", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 566, "col_offset": 24, "nodeName": "deps", "type": "Dict[Any, Any]"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "policies", "type": "module"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "rt", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "t", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "runner", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "poll", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "finished", "type": "bool"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "HelloTest", "type": "Type[unittests.resources.checks.hellocheck.HelloTest]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "check", "type": "Any"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "fp", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 183, "col_offset": 44, "nodeName": "fp", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TaskEventMonitor"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TaskEventMonitor"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "TaskEventMonitor"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "policies", "type": "module"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 261, "col_offset": 43, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 266, "col_offset": 38, "nodeName": "stats", "type": "Any"}, {"lineNumber": 267, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 270, "col_offset": 42, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 271, "col_offset": 38, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 273, "col_offset": 29, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 280, "col_offset": 35, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 285, "col_offset": 43, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "stats", "type": "Any"}, {"lineNumber": 292, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 296, "col_offset": 35, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 296, "col_offset": 58, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 304, "col_offset": 37, "nodeName": "b", "type": "float"}, {"lineNumber": 304, "col_offset": 40, "nodeName": "e", "type": "float"}, {"lineNumber": 304, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 319, "col_offset": 11, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 319, "col_offset": 43, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 323, "col_offset": 43, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 329, "col_offset": 38, "nodeName": "stats", "type": "Any"}, {"lineNumber": 330, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 333, "col_offset": 32, "nodeName": "monitor", "type": "TaskEventMonitor"}, {"lineNumber": 336, "col_offset": 29, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 340, "col_offset": 37, "nodeName": "b", "type": "float"}, {"lineNumber": 340, "col_offset": 40, "nodeName": "e", "type": "float"}, {"lineNumber": 340, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 348, "col_offset": 28, "nodeName": "stats", "type": "Any"}, {"lineNumber": 349, "col_offset": 32, "nodeName": "failures", "type": "Any"}, {"lineNumber": 379, "col_offset": 50, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 379, "col_offset": 56, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 384, "col_offset": 36, "nodeName": "stats", "type": "Any"}, {"lineNumber": 385, "col_offset": 40, "nodeName": "failures", "type": "Any"}, {"lineNumber": 389, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 389, "col_offset": 55, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 394, "col_offset": 36, "nodeName": "stats", "type": "Any"}, {"lineNumber": 395, "col_offset": 40, "nodeName": "failures", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 408, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 408, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 411, "col_offset": 33, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 411, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "executors", "type": "module"}, {"lineNumber": 424, "col_offset": 57, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 424, "col_offset": 62, "nodeName": "ename", "type": "Any"}, {"lineNumber": 427, "col_offset": 41, "nodeName": "cname", "type": "Any"}, {"lineNumber": 427, "col_offset": 53, "nodeName": "pname", "type": "Any"}, {"lineNumber": 427, "col_offset": 65, "nodeName": "ename", "type": "Any"}, {"lineNumber": 430, "col_offset": 22, "nodeName": "graph", "type": "TestDependencies"}, {"lineNumber": 433, "col_offset": 35, "nodeName": "c", "type": "Any"}, {"lineNumber": 438, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 445, "col_offset": 31, "nodeName": "cname", "type": "TestDependencies"}, {"lineNumber": 445, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 445, "col_offset": 59, "nodeName": "ename", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 467, "col_offset": 45, "nodeName": "loader", "type": "Any"}, {"lineNumber": 484, "col_offset": 23, "nodeName": "has_edge", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 484, "col_offset": 32, "nodeName": "deps", "type": "Dict[Any, Any]"}, {"lineNumber": 487, "col_offset": 23, "nodeName": "has_edge", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 487, "col_offset": 32, "nodeName": "deps", "type": "Dict[Any, Any]"}, {"lineNumber": 495, "col_offset": 28, "nodeName": "Node", "type": "Type[Any]"}, {"lineNumber": 495, "col_offset": 48, "nodeName": "p", "type": "str"}, {"lineNumber": 496, "col_offset": 28, "nodeName": "Node", "type": "Type[Any]"}, {"lineNumber": 496, "col_offset": 42, "nodeName": "p", "type": "str"}, {"lineNumber": 498, "col_offset": 28, "nodeName": "Node", "type": "Type[Any]"}, {"lineNumber": 498, "col_offset": 48, "nodeName": "p", "type": "str"}, {"lineNumber": 499, "col_offset": 28, "nodeName": "Node", "type": "Type[Any]"}, {"lineNumber": 499, "col_offset": 42, "nodeName": "p", "type": "str"}, {"lineNumber": 501, "col_offset": 28, "nodeName": "Node", "type": "Type[Any]"}, {"lineNumber": 501, "col_offset": 48, "nodeName": "p", "type": "str"}, {"lineNumber": 502, "col_offset": 28, "nodeName": "Node", "type": "Type[Any]"}, {"lineNumber": 502, "col_offset": 42, "nodeName": "p", "type": "str"}, {"lineNumber": 507, "col_offset": 15, "nodeName": "getdep", "type": "Any"}, {"lineNumber": 508, "col_offset": 15, "nodeName": "getdep", "type": "Any"}, {"lineNumber": 509, "col_offset": 15, "nodeName": "getdep", "type": "Any"}, {"lineNumber": 510, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "check_e0", "type": "Any"}, {"lineNumber": 513, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 514, "col_offset": 12, "nodeName": "check_e0", "type": "Any"}, {"lineNumber": 516, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "check_e1", "type": "Any"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 527, "col_offset": 42, "nodeName": "depkind", "type": "str"}, {"lineNumber": 529, "col_offset": 16, "nodeName": "depends_on", "type": "Any"}, {"lineNumber": 530, "col_offset": 17, "nodeName": "depkind", "type": "str"}, {"lineNumber": 537, "col_offset": 17, "nodeName": "raises", "type": "Any"}, {"lineNumber": 537, "col_offset": 31, "nodeName": "DependencyError", "type": "Type[reframe.core.exceptions.DependencyError]"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "build_deps", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 543, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 549, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "dependency", "type": "module"}, {"lineNumber": 550, "col_offset": 34, "nodeName": "generate_testcases", "type": "Any"}, {"lineNumber": 550, "col_offset": 63, "nodeName": "checks", "type": "Any"}, {"lineNumber": 556, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 565, "col_offset": 37, "nodeName": "executors", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "rt", "type": "module"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "failures", "type": "Any"}, {"lineNumber": 53, "col_offset": 51, "nodeName": "failed_stage", "type": "Any"}, {"lineNumber": 53, "col_offset": 69, "nodeName": "stage", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "check", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "t", "type": "Any"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "runner", "type": "Any"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "rt", "type": "module"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "runner", "type": "Any"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "rt", "type": "module"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "runner", "type": "Any"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "rt", "type": "module"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "runner", "type": "Any"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "rt", "type": "module"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "begin_stamps", "type": "List[float]"}, {"lineNumber": 254, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "end_stamps", "type": "List[float]"}, {"lineNumber": 255, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 266, "col_offset": 38, "nodeName": "runner", "type": "Any"}, {"lineNumber": 267, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 270, "col_offset": 42, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 271, "col_offset": 38, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 271, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 271, "col_offset": 65, "nodeName": "checks", "type": "List[unittests.resources.checks.frontend_checks.SleepCheck]"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "runner", "type": "Any"}, {"lineNumber": 292, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 296, "col_offset": 35, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 304, "col_offset": 49, "nodeName": "begin_stamps", "type": "List[float]"}, {"lineNumber": 305, "col_offset": 49, "nodeName": "end_stamps", "type": "List[float]"}, {"lineNumber": 319, "col_offset": 29, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 329, "col_offset": 38, "nodeName": "runner", "type": "Any"}, {"lineNumber": 330, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 333, "col_offset": 32, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 340, "col_offset": 49, "nodeName": "begin_stamps", "type": "List[float]"}, {"lineNumber": 341, "col_offset": 49, "nodeName": "end_stamps", "type": "List[float]"}, {"lineNumber": 348, "col_offset": 28, "nodeName": "runner", "type": "Any"}, {"lineNumber": 349, "col_offset": 32, "nodeName": "stats", "type": "Any"}, {"lineNumber": 385, "col_offset": 40, "nodeName": "stats", "type": "Any"}, {"lineNumber": 389, "col_offset": 64, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 395, "col_offset": 40, "nodeName": "stats", "type": "Any"}, {"lineNumber": 412, "col_offset": 24, "nodeName": "cname", "type": "Any"}, {"lineNumber": 412, "col_offset": 38, "nodeName": "cname", "type": "Any"}, {"lineNumber": 413, "col_offset": 24, "nodeName": "pname", "type": "Any"}, {"lineNumber": 413, "col_offset": 38, "nodeName": "pname", "type": "Any"}, {"lineNumber": 414, "col_offset": 24, "nodeName": "ename", "type": "Any"}, {"lineNumber": 414, "col_offset": 38, "nodeName": "ename", "type": "Any"}, {"lineNumber": 417, "col_offset": 24, "nodeName": "cname", "type": "Any"}, {"lineNumber": 417, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 418, "col_offset": 24, "nodeName": "pname", "type": "Any"}, {"lineNumber": 418, "col_offset": 38, "nodeName": "fullname", "type": "Any"}, {"lineNumber": 419, "col_offset": 24, "nodeName": "ename", "type": "Any"}, {"lineNumber": 419, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 424, "col_offset": 19, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 424, "col_offset": 24, "nodeName": "cname", "type": "Any"}, {"lineNumber": 424, "col_offset": 38, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 424, "col_offset": 43, "nodeName": "pname", "type": "Any"}, {"lineNumber": 424, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 427, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 427, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 427, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 430, "col_offset": 28, "nodeName": "src", "type": "Any"}, {"lineNumber": 433, "col_offset": 40, "nodeName": "values", "type": "Any"}, {"lineNumber": 434, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 434, "col_offset": 38, "nodeName": "cname", "type": "Any"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "check", "type": "Any"}, {"lineNumber": 445, "col_offset": 41, "nodeName": "environ", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "rt", "type": "module"}, {"lineNumber": 457, "col_offset": 22, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 467, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 475, "col_offset": 27, "nodeName": "has_edge", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 475, "col_offset": 36, "nodeName": "deps", "type": "Dict[Any, Any]"}, {"lineNumber": 485, "col_offset": 32, "nodeName": "Node", "type": "Type[Any]"}, {"lineNumber": 485, "col_offset": 53, "nodeName": "p", "type": "str"}, {"lineNumber": 485, "col_offset": 56, "nodeName": "e", "type": "str"}, {"lineNumber": 486, "col_offset": 32, "nodeName": "Node", "type": "Type[Any]"}, {"lineNumber": 486, "col_offset": 46, "nodeName": "p", "type": "str"}, {"lineNumber": 486, "col_offset": 49, "nodeName": "e", "type": "str"}, {"lineNumber": 488, "col_offset": 32, "nodeName": "Node", "type": "Type[Any]"}, {"lineNumber": 488, "col_offset": 54, "nodeName": "p", "type": "str"}, {"lineNumber": 488, "col_offset": 57, "nodeName": "e", "type": "str"}, {"lineNumber": 489, "col_offset": 32, "nodeName": "Node", "type": "Type[Any]"}, {"lineNumber": 489, "col_offset": 46, "nodeName": "p", "type": "str"}, {"lineNumber": 489, "col_offset": 49, "nodeName": "e", "type": "str"}, {"lineNumber": 507, "col_offset": 15, "nodeName": "check_e0", "type": "Any"}, {"lineNumber": 508, "col_offset": 15, "nodeName": "check_e0", "type": "Any"}, {"lineNumber": 509, "col_offset": 15, "nodeName": "check_e1", "type": "Any"}, {"lineNumber": 529, "col_offset": 16, "nodeName": "test1", "type": "Optional[Any]"}, {"lineNumber": 531, "col_offset": 16, "nodeName": "depends_on", "type": "Any"}, {"lineNumber": 531, "col_offset": 42, "nodeName": "DEPEND_EXACT", "type": "Any"}, {"lineNumber": 532, "col_offset": 17, "nodeName": "depkind", "type": "str"}, {"lineNumber": 537, "col_offset": 17, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "dependency", "type": "module"}, {"lineNumber": 538, "col_offset": 38, "nodeName": "generate_testcases", "type": "Any"}, {"lineNumber": 538, "col_offset": 67, "nodeName": "checks", "type": "Any"}, {"lineNumber": 550, "col_offset": 34, "nodeName": "executors", "type": "module"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "rt", "type": "module"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "stats", "type": "Any"}, {"lineNumber": 53, "col_offset": 51, "nodeName": "t", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "t", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "runner", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "runner", "type": "Any"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "runner", "type": "Any"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "runner", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "check", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 255, "col_offset": 45, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 266, "col_offset": 38, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 267, "col_offset": 32, "nodeName": "runner", "type": "Any"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 292, "col_offset": 32, "nodeName": "runner", "type": "Any"}, {"lineNumber": 304, "col_offset": 49, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 304, "col_offset": 67, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 305, "col_offset": 49, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 329, "col_offset": 38, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 330, "col_offset": 32, "nodeName": "runner", "type": "Any"}, {"lineNumber": 340, "col_offset": 49, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 341, "col_offset": 49, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 348, "col_offset": 28, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 349, "col_offset": 32, "nodeName": "runner", "type": "Any"}, {"lineNumber": 412, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 412, "col_offset": 38, "nodeName": "other", "type": "Any"}, {"lineNumber": 413, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 413, "col_offset": 38, "nodeName": "other", "type": "Any"}, {"lineNumber": 414, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 414, "col_offset": 38, "nodeName": "other", "type": "Any"}, {"lineNumber": 417, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 417, "col_offset": 38, "nodeName": "check", "type": "Any"}, {"lineNumber": 418, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 418, "col_offset": 38, "nodeName": "partition", "type": "Any"}, {"lineNumber": 419, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 419, "col_offset": 38, "nodeName": "environ", "type": "Any"}, {"lineNumber": 424, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 424, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 433, "col_offset": 40, "nodeName": "graph", "type": "TestDependencies"}, {"lineNumber": 434, "col_offset": 22, "nodeName": "check", "type": "Any"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 445, "col_offset": 41, "nodeName": "c", "type": "Any"}, {"lineNumber": 457, "col_offset": 22, "nodeName": "rt", "type": "module"}, {"lineNumber": 476, "col_offset": 36, "nodeName": "Node", "type": "Type[Any]"}, {"lineNumber": 476, "col_offset": 56, "nodeName": "p", "type": "str"}, {"lineNumber": 476, "col_offset": 59, "nodeName": "e0", "type": "str"}, {"lineNumber": 477, "col_offset": 36, "nodeName": "Node", "type": "Type[Any]"}, {"lineNumber": 477, "col_offset": 50, "nodeName": "p", "type": "str"}, {"lineNumber": 477, "col_offset": 53, "nodeName": "e1", "type": "str"}, {"lineNumber": 531, "col_offset": 16, "nodeName": "test1", "type": "Optional[Any]"}, {"lineNumber": 531, "col_offset": 42, "nodeName": "rfm", "type": "module"}, {"lineNumber": 533, "col_offset": 16, "nodeName": "depends_on", "type": "Any"}, {"lineNumber": 533, "col_offset": 42, "nodeName": "DEPEND_FULLY", "type": "Any"}, {"lineNumber": 534, "col_offset": 17, "nodeName": "depkind", "type": "str"}, {"lineNumber": 538, "col_offset": 38, "nodeName": "executors", "type": "module"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "self", "type": "TestSerialExecutionPolicy"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "t", "type": "Any"}, {"lineNumber": 267, "col_offset": 32, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 292, "col_offset": 32, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 305, "col_offset": 67, "nodeName": "max_jobs", "type": "int"}, {"lineNumber": 330, "col_offset": 32, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 349, "col_offset": 32, "nodeName": "self", "type": "TestAsynchronousExecutionPolicy"}, {"lineNumber": 417, "col_offset": 38, "nodeName": "other", "type": "Any"}, {"lineNumber": 418, "col_offset": 38, "nodeName": "other", "type": "Any"}, {"lineNumber": 419, "col_offset": 38, "nodeName": "other", "type": "Any"}, {"lineNumber": 434, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 533, "col_offset": 16, "nodeName": "test1", "type": "Optional[Any]"}, {"lineNumber": 533, "col_offset": 42, "nodeName": "rfm", "type": "module"}, {"lineNumber": 535, "col_offset": 16, "nodeName": "depends_on", "type": "Any"}, {"lineNumber": 535, "col_offset": 42, "nodeName": "DEPEND_BY_ENV", "type": "Any"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "readline", "type": "Callable[..., str]"}, {"lineNumber": 255, "col_offset": 45, "nodeName": "readline", "type": "Callable[..., str]"}, {"lineNumber": 535, "col_offset": 16, "nodeName": "test1", "type": "Optional[Any]"}, {"lineNumber": 535, "col_offset": 42, "nodeName": "rfm", "type": "module"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "f", "type": "file"}, {"lineNumber": 255, "col_offset": 45, "nodeName": "f", "type": "file"}]