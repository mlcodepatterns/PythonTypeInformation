[{"lineNumber": 45, "col_offset": 0, "nodeName": "_get_checks", "type": "Callable[..., Any]"}, {"lineNumber": 7, "col_offset": 17, "nodeName": "RegressionTest", "type": "Type[reframe.core.pipeline.RegressionTest]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "ret", "type": "List[NetCDFTest]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "lang", "type": "str"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "ret", "type": "List[NetCDFTest]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "flags", "type": "str"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "sourcepath", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "cflags", "type": "str"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "flags", "type": "str"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "cxxflags", "type": "str"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "flags", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "fflags", "type": "str"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "flags", "type": "str"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "linkage", "type": "str"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 12, "col_offset": 31, "nodeName": "linkage", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 20, "col_offset": 39, "nodeName": "resourcesdir", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 22, "col_offset": 49, "nodeName": "lang", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 29, "col_offset": 59, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "current_environ", "type": "Any"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "current_environ", "type": "Any"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "current_environ", "type": "Any"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "compile", "type": "Callable[..., None]"}, {"lineNumber": 10, "col_offset": 25, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 10, "col_offset": 41, "nodeName": "__file__", "type": "str"}, {"lineNumber": 10, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 19, "col_offset": 58, "nodeName": "capitalize", "type": "Any"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 20, "col_offset": 39, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 29, "col_offset": 59, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 9, "col_offset": 54, "nodeName": "linkage", "type": "Any"}, {"lineNumber": 9, "col_offset": 63, "nodeName": "lang", "type": "Any"}, {"lineNumber": 10, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "lang_names", "type": "Dict[str, str]"}, {"lineNumber": 19, "col_offset": 58, "nodeName": "linkage", "type": "Any"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 20, "col_offset": 39, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "ret", "type": "List[NetCDFTest]"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "NetCDFTest", "type": "Type[NetCDFTest]"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "lang", "type": "str"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "linkage", "type": "str"}, {"lineNumber": 10, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "self", "type": "NetCDFTest"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "lang", "type": "Any"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[str, Any]"}]