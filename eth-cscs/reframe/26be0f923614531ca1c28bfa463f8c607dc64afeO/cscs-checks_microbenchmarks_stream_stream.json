[{"lineNumber": 7, "col_offset": 17, "nodeName": "RegressionTest", "type": "Any"}, {"lineNumber": 7, "col_offset": 17, "nodeName": "rfm", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "exclusive_access", "type": "bool"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "sourcepath", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "num_tasks_per_node", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "cflags", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "exclusive_access", "type": "bool"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 52, "col_offset": 56, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "fullname", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "variables", "type": "Any"}, {"lineNumber": 101, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 101, "col_offset": 48, "nodeName": "num_cpus_per_task", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "envname", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "envname", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "build_system", "type": "Any"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 107, "col_offset": 57, "nodeName": "envname", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "envname", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "reference", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "setup", "type": "Any"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "partition", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "environ", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 52, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 55, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "stream_cpus_per_task", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "partition", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "current_system", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "replace", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "environ", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "prgenv_flags", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "variables", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "stream_bw_reference", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "reference", "type": "Dict[str, Dict[str, Tuple[float, None, None, str]]]"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "job_opts", "type": "Dict[str, Any]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "sn", "type": "module"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 54, "nodeName": "envname", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "environ", "type": "Any"}]