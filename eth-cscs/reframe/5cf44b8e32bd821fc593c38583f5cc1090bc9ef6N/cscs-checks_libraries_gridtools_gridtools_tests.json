[{"lineNumber": 11, "col_offset": 26, "nodeName": "CompileOnlyRegressionTest", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "GridToolsBuildCheck", "type": "Type[GridToolsBuildCheck]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "GridToolsBuildCheck", "type": "Type[GridToolsBuildCheck]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "RunOnlyRegressionTest", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "RunOnlyRegressionTest", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "RegressionTest", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 26, "nodeName": "rfm", "type": "module"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "rfm", "type": "module"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "rfm", "type": "module"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "rfm", "type": "module"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "sourcesdir", "type": "str"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "flags_from_environ", "type": "bool"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "postbuild_cmds", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "max_concurrency", "type": "int"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "make_opts", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "config_opts", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "valid_systems", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "config_opts", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "reference", "type": "Dict[str, Dict[str, Tuple[float, None, float, str]]]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "reference", "type": "Dict[str, Dict[str, Tuple[float, None, float, str]]]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "descr", "type": "str"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "valid_prog_environs", "type": "List[str]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "is_cuda_test", "type": "bool"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "is_cuda_test", "type": "bool"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "sourcesdir", "type": "str"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "is_cuda_test", "type": "bool"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "flags_from_environ", "type": "bool"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "is_cuda_test", "type": "bool"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "sanity_patterns", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "max_concurrency", "type": "int"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "make_opts", "type": "List[str]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "executable", "type": "str"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "executable_opts", "type": "List[str]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "reference", "type": "Dict[str, Dict[str, Tuple[float, None, float, str]]]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "tags", "type": "Set[str]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "maintainers", "type": "List[str]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "GridToolsBuildCheck"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "GridToolsBuildCheck"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "GridToolsBuildCheck"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "GridToolsBuildCheck"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "GridToolsBuildCheck"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "GridToolsBuildCheck"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "GridToolsBuildCheck"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 35, "col_offset": 47, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "GridToolsBuildCheck"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "GridToolsBuildCheck"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "GridToolsCPUBuildCheck"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "build_system", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "GridToolsCPUBuildCheck"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "GridToolsGPUBuildCheck"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "build_system", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "depends_on", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "depends_on", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 148, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "variant", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "config_opts", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "config_opts", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "valid_systems", "type": "List[str]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "num_gpus_per_node", "type": "int"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "assert_found", "type": "Any"}, {"lineNumber": 233, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "build_system", "type": "str"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "GridToolsBuildCheck"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 35, "col_offset": 47, "nodeName": "self", "type": "GridToolsBuildCheck"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "GridToolsBuildCheck"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "GridToolsBuildCheck"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "GridToolsCPUBuildCheck"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "modules", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "GridToolsGPUBuildCheck"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 84, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "variant_data", "type": "Dict[str, Dict[str, Union[List[str], Dict[str, Dict[str, Tuple[float, None, float, str]]]]]]"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "variant_data", "type": "Dict[str, Dict[str, Union[List[str], Dict[str, Dict[str, Tuple[float, None, float, str]]]]]]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 148, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 151, "col_offset": 38, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 151, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "variant_data", "type": "Dict[str, Dict[str, Union[List[str], Dict[str, Dict[str, Tuple[float, None, float, str]]]]]]"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "variant_data", "type": "Dict[str, Dict[str, Union[List[str], Dict[str, Dict[str, Tuple[float, None, float, str]]]]]]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "build_system", "type": "str"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "build_system", "type": "str"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "sn", "type": "module"}, {"lineNumber": 233, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "extractsingle", "type": "Any"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 236, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "variant_data", "type": "Dict[str, Dict[str, Union[List[str], Dict[str, Dict[str, Tuple[float, None, float, str]]]]]]"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "variant_data", "type": "Dict[str, Dict[str, Union[List[str], Dict[str, Dict[str, Tuple[float, None, float, str]]]]]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "GridToolsGPUBuildCheck"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "sn", "type": "module"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "variant", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "variant", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "sn", "type": "module"}, {"lineNumber": 151, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 49, "nodeName": "variant", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 43, "nodeName": "variant", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "modules", "type": "List[str]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "sn", "type": "module"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 49, "nodeName": "variant", "type": "Any"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 306, "col_offset": 43, "nodeName": "variant", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "self", "type": "Any"}]