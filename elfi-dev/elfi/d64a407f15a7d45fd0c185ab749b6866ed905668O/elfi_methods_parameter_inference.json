[{"lineNumber": 3, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 384, "col_offset": 14, "nodeName": "ParameterInference", "type": "Type[ParameterInference]"}, {"lineNumber": 416, "col_offset": 16, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 615, "col_offset": 10, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 798, "col_offset": 27, "nodeName": "ParameterInference", "type": "Type[ParameterInference]"}, {"lineNumber": 1155, "col_offset": 12, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "client", "type": "module"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "computation_context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "pool", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "seed", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 238, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "vis_opt", "type": "Dict[nothing, nothing]"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "vis", "type": "None"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "n_batches", "type": "Union[Any, int]"}, {"lineNumber": 342, "col_offset": 62, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "output_names", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "checked_names", "type": "List[Any]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "output_names", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 381, "col_offset": 15, "nodeName": "checked_names", "type": "List[Any]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "bar", "type": "Union[Any, bool]"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "state_key", "type": "str"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 449, "col_offset": 32, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 472, "col_offset": 11, "nodeName": "quantile", "type": "Union[Any, float]"}, {"lineNumber": 476, "col_offset": 11, "nodeName": "n_sim", "type": "Union[Any, int]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "e_noarr", "type": "str"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "e_len", "type": "str"}, {"lineNumber": 529, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 529, "col_offset": 20, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 550, "col_offset": 32, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "sort_mask", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "o", "type": "Dict[str, Any]"}, {"lineNumber": 566, "col_offset": 12, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 593, "col_offset": 38, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "_prior", "type": "elfi.methods.utils.ModelPrior"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 639, "col_offset": 32, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "_rejection", "type": "None"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "_round_random_state", "type": "None"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 686, "col_offset": 11, "nodeName": "finished", "type": "Any"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 720, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "round", "type": "Any"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "reinit_msg", "type": "str"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "dashes", "type": "str"}, {"lineNumber": 732, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "_round_random_state", "type": "Any"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "method_name", "type": "str"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 751, "col_offset": 25, "nodeName": "w", "type": "Any"}, {"lineNumber": 752, "col_offset": 29, "nodeName": "cov", "type": "Any"}, {"lineNumber": 753, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 758, "col_offset": 11, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "cov", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "n_batches", "type": "nothing"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 789, "col_offset": 17, "nodeName": "samples_array", "type": "Any"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 858, "col_offset": 8, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 860, "col_offset": 8, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 860, "col_offset": 27, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 861, "col_offset": 28, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 863, "col_offset": 8, "nodeName": "n_precomputed", "type": "int"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "batches_per_acquisition", "type": "Any"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 877, "col_offset": 34, "nodeName": "n_initial", "type": "int"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "n_precomputed_evidence", "type": "int"}, {"lineNumber": 878, "col_offset": 38, "nodeName": "n_precomputed", "type": "int"}, {"lineNumber": 879, "col_offset": 8, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 879, "col_offset": 31, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 880, "col_offset": 8, "nodeName": "async_acq", "type": "Any"}, {"lineNumber": 880, "col_offset": 25, "nodeName": "async_acq", "type": "Any"}, {"lineNumber": 882, "col_offset": 35, "nodeName": "n_precomputed_evidence", "type": "int"}, {"lineNumber": 883, "col_offset": 39, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 888, "col_offset": 8, "nodeName": "precomputed", "type": "None"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "n_required", "type": "Any"}, {"lineNumber": 890, "col_offset": 8, "nodeName": "n_required", "type": "int"}, {"lineNumber": 943, "col_offset": 39, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 957, "col_offset": 8, "nodeName": "batch_min", "type": "Any"}, {"lineNumber": 958, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 959, "col_offset": 36, "nodeName": "Y", "type": "Any"}, {"lineNumber": 976, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 978, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 981, "col_offset": 8, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 983, "col_offset": 11, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 1001, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 1008, "col_offset": 8, "nodeName": "acquisition", "type": "Any"}, {"lineNumber": 1012, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 1015, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 1018, "col_offset": 8, "nodeName": "acq_batch_size", "type": "Any"}, {"lineNumber": 1019, "col_offset": 8, "nodeName": "initial_offset", "type": "int"}, {"lineNumber": 1020, "col_offset": 8, "nodeName": "starting_sim_index", "type": "Any"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 1023, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 1034, "col_offset": 11, "nodeName": "async_acq", "type": "Any"}, {"lineNumber": 1038, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 1044, "col_offset": 8, "nodeName": "acquisitions_left", "type": "int"}, {"lineNumber": 1051, "col_offset": 8, "nodeName": "current", "type": "Any"}, {"lineNumber": 1052, "col_offset": 8, "nodeName": "next_update", "type": "Any"}, {"lineNumber": 1056, "col_offset": 8, "nodeName": "str", "type": "str"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "fill", "type": "str"}, {"lineNumber": 1058, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 1067, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1071, "col_offset": 13, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1089, "col_offset": 8, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 1274, "col_offset": 8, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1275, "col_offset": 8, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1285, "col_offset": 8, "nodeName": "is_sampling", "type": "bool"}, {"lineNumber": 1287, "col_offset": 8, "nodeName": "tasks_ids", "type": "List[Any]"}, {"lineNumber": 1288, "col_offset": 8, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1298, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 1334, "col_offset": 8, "nodeName": "chains", "type": "List[Any]"}, {"lineNumber": 1335, "col_offset": 12, "nodeName": "id", "type": "Any"}, {"lineNumber": 1335, "col_offset": 18, "nodeName": "tasks_ids", "type": "List[Any]"}, {"lineNumber": 1338, "col_offset": 8, "nodeName": "chains", "type": "numpy.ndarray"}, {"lineNumber": 1345, "col_offset": 8, "nodeName": "is_sampling", "type": "bool"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 93, "col_offset": 69, "nodeName": "model", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "copy", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "_check_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "get_client", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "ComputationContext", "type": "Type[elfi.model.elfi_model.ComputationContext]"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "BatchHandler", "type": "Type[elfi.client.BatchHandler]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "max_parallel_batches", "type": "None"}, {"lineNumber": 107, "col_offset": 60, "nodeName": "num_cores", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "ProgressBar", "type": "Type[elfi.visualization.visualization.ProgressBar]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "vis", "type": "None"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "set_objective", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 18, "nodeName": "finished", "type": "Any"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "vis", "type": "None"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "bar", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "cancel_pending", "type": "Callable[[], None]"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "extract_result", "type": "Callable[[], Any]"}, {"lineNumber": 298, "col_offset": 14, "nodeName": "_allow_submit", "type": "Callable[[Any], Any]"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "next_index", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "next_batch", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "wait_next", "type": "Callable[[], Tuple[Any, int]]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 306, "col_offset": 27, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "_objective_n_batches", "type": "Any"}, {"lineNumber": 314, "col_offset": 20, "nodeName": "_has_batches_to_submit", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "_objective_n_batches", "type": "Any"}, {"lineNumber": 323, "col_offset": 26, "nodeName": "objective", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 334, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 335, "col_offset": 31, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "seed", "type": "Any"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 346, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 346, "col_offset": 29, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 348, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 350, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 350, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 350, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 356, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 363, "col_offset": 23, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 402, "col_offset": 14, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 404, "col_offset": 26, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 407, "col_offset": 17, "nodeName": "_extract_result_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 411, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 411, "col_offset": 19, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 412, "col_offset": 41, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 445, "col_offset": 34, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 445, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 445, "col_offset": 61, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 447, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 447, "col_offset": 47, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "quantile", "type": "float"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 470, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "n_sim", "type": "int"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "n_batches", "type": "int"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 481, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 497, "col_offset": 38, "nodeName": "batch", "type": "Any"}, {"lineNumber": 497, "col_offset": 45, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "_merge_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 501, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "_update_state_meta", "type": "Callable[[], Any]"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "_update_objective_n_batches", "type": "Callable[[], Any]"}, {"lineNumber": 517, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 518, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 518, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 521, "col_offset": 15, "nodeName": "Sample", "type": "Type[elfi.methods.results.Sample]"}, {"lineNumber": 529, "col_offset": 20, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 542, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 554, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 556, "col_offset": 18, "nodeName": "v", "type": "Any"}, {"lineNumber": 556, "col_offset": 23, "nodeName": "items", "type": "Any"}, {"lineNumber": 560, "col_offset": 20, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 561, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 561, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 561, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 566, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 568, "col_offset": 25, "nodeName": "item", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 569, "col_offset": 27, "nodeName": "min", "type": "Callable"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 577, "col_offset": 11, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 581, "col_offset": 11, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 584, "col_offset": 12, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "accept_rate_t", "type": "Any"}, {"lineNumber": 589, "col_offset": 12, "nodeName": "margin", "type": "Any"}, {"lineNumber": 590, "col_offset": 12, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 591, "col_offset": 12, "nodeName": "n_batches", "type": "int"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "objective", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 602, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "plot_sample", "type": "Callable[..., None]"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 633, "col_offset": 15, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 633, "col_offset": 34, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 633, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 633, "col_offset": 61, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 636, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 636, "col_offset": 41, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 638, "col_offset": 22, "nodeName": "ModelPrior", "type": "Type[elfi.methods.utils.ModelPrior]"}, {"lineNumber": 638, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "_init_new_round", "type": "Callable[[], Any]"}, {"lineNumber": 664, "col_offset": 14, "nodeName": "_extract_population", "type": "Callable[[], Any]"}, {"lineNumber": 665, "col_offset": 15, "nodeName": "SmcSample", "type": "Type[elfi.methods.results.SmcSample]"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 683, "col_offset": 32, "nodeName": "batch", "type": "Any"}, {"lineNumber": 683, "col_offset": 39, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 684, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 684, "col_offset": 38, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 686, "col_offset": 11, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "_update_objective", "type": "Callable[[], Any]"}, {"lineNumber": 715, "col_offset": 17, "nodeName": "rvs", "type": "Callable[..., Any]"}, {"lineNumber": 719, "col_offset": 16, "nodeName": "arr2d_to_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 719, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 719, "col_offset": 39, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 723, "col_offset": 16, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 725, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "reinit_progressbar", "type": "Callable[..., None]"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 732, "col_offset": 15, "nodeName": "seed", "type": "Any"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 733, "col_offset": 35, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 733, "col_offset": 57, "nodeName": "seed", "type": "Any"}, {"lineNumber": 735, "col_offset": 26, "nodeName": "Rejection", "type": "Type[Rejection]"}, {"lineNumber": 736, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "set_objective", "type": "Callable[..., Any]"}, {"lineNumber": 747, "col_offset": 17, "nodeName": "extract_result", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 750, "col_offset": 11, "nodeName": "cov", "type": "Any"}, {"lineNumber": 750, "col_offset": 17, "nodeName": "_compute_weights_and_cov", "type": "Callable[[Any], Any]"}, {"lineNumber": 750, "col_offset": 47, "nodeName": "sample", "type": "Any"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "meta", "type": "Any"}, {"lineNumber": 756, "col_offset": 17, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 758, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 763, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 777, "col_offset": 12, "nodeName": "cov", "type": "Any"}, {"lineNumber": 779, "col_offset": 15, "nodeName": "w", "type": "Any"}, {"lineNumber": 779, "col_offset": 18, "nodeName": "cov", "type": "Any"}, {"lineNumber": 783, "col_offset": 20, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "objective", "type": "Any"}, {"lineNumber": 784, "col_offset": 38, "nodeName": "n_batches", "type": "nothing"}, {"lineNumber": 788, "col_offset": 17, "nodeName": "_populations", "type": "Any"}, {"lineNumber": 789, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 790, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 790, "col_offset": 23, "nodeName": "cov", "type": "Any"}, {"lineNumber": 790, "col_offset": 35, "nodeName": "weights", "type": "Any"}, {"lineNumber": 853, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 853, "col_offset": 15, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 853, "col_offset": 29, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 853, "col_offset": 49, "nodeName": "model", "type": "Any"}, {"lineNumber": 853, "col_offset": 56, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 854, "col_offset": 39, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 855, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 856, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 856, "col_offset": 19, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 858, "col_offset": 23, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 860, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 864, "col_offset": 8, "nodeName": "n_initial", "type": "int"}, {"lineNumber": 864, "col_offset": 19, "nodeName": "precomputed", "type": "Optional[Any]"}, {"lineNumber": 864, "col_offset": 33, "nodeName": "_resolve_initial_evidence", "type": "Callable[[Any], Any]"}, {"lineNumber": 864, "col_offset": 64, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 865, "col_offset": 11, "nodeName": "precomputed", "type": "Optional[Any]"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 867, "col_offset": 12, "nodeName": "n_precomputed", "type": "int"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 870, "col_offset": 39, "nodeName": "batches_per_acquisition", "type": "Any"}, {"lineNumber": 870, "col_offset": 66, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 871, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 871, "col_offset": 34, "nodeName": "acquisition_method", "type": "Any"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 879, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 880, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 882, "col_offset": 35, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 883, "col_offset": 39, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 889, "col_offset": 21, "nodeName": "max", "type": "Callable"}, {"lineNumber": 890, "col_offset": 21, "nodeName": "ceil_to_batch_size", "type": "Callable[[Any, Any], int]"}, {"lineNumber": 890, "col_offset": 40, "nodeName": "n_required", "type": "Any"}, {"lineNumber": 890, "col_offset": 52, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 892, "col_offset": 11, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 893, "col_offset": 12, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 893, "col_offset": 33, "nodeName": "n_required", "type": "int"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 911, "col_offset": 12, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 913, "col_offset": 15, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 913, "col_offset": 35, "nodeName": "precomputed", "type": "Optional[Any]"}, {"lineNumber": 918, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 923, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 923, "col_offset": 33, "nodeName": "batches_per_acquisition", "type": "Any"}, {"lineNumber": 937, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 938, "col_offset": 12, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 940, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 940, "col_offset": 24, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 943, "col_offset": 8, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 944, "col_offset": 8, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 944, "col_offset": 34, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 944, "col_offset": 47, "nodeName": "n_precomputed_evidence", "type": "int"}, {"lineNumber": 954, "col_offset": 19, "nodeName": "stochastic_optimization", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 955, "col_offset": 12, "nodeName": "predict_mean", "type": "Union[Callable[[Any], Any], Any]"}, {"lineNumber": 955, "col_offset": 44, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 957, "col_offset": 20, "nodeName": "arr2d_to_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 957, "col_offset": 35, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 957, "col_offset": 42, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 958, "col_offset": 18, "nodeName": "arr2d_to_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 958, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 958, "col_offset": 54, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 959, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 959, "col_offset": 36, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 961, "col_offset": 15, "nodeName": "OptimizationResult", "type": "Type[elfi.methods.results.OptimizationResult]"}, {"lineNumber": 975, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 975, "col_offset": 49, "nodeName": "batch", "type": "Any"}, {"lineNumber": 975, "col_offset": 56, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 976, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 976, "col_offset": 36, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 978, "col_offset": 17, "nodeName": "batch_to_arr2d", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 978, "col_offset": 32, "nodeName": "batch", "type": "Any"}, {"lineNumber": 978, "col_offset": 39, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 979, "col_offset": 8, "nodeName": "_report_batch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 979, "col_offset": 27, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 979, "col_offset": 40, "nodeName": "params", "type": "Any"}, {"lineNumber": 981, "col_offset": 19, "nodeName": "_should_optimize", "type": "Callable[[], Any]"}, {"lineNumber": 982, "col_offset": 8, "nodeName": "update", "type": "Union[Callable[..., None], Any]"}, {"lineNumber": 982, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 982, "col_offset": 66, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 984, "col_offset": 43, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 1001, "col_offset": 12, "nodeName": "_get_acquisition_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 1001, "col_offset": 40, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 1004, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 1008, "col_offset": 22, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 1010, "col_offset": 12, "nodeName": "acquisition", "type": "Any"}, {"lineNumber": 1012, "col_offset": 16, "nodeName": "arr2d_to_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1012, "col_offset": 62, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 1013, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 1013, "col_offset": 36, "nodeName": "acquisition", "type": "Any"}, {"lineNumber": 1018, "col_offset": 25, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1018, "col_offset": 43, "nodeName": "batches_per_acquisition", "type": "Any"}, {"lineNumber": 1019, "col_offset": 25, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 1019, "col_offset": 51, "nodeName": "n_precomputed_evidence", "type": "int"}, {"lineNumber": 1020, "col_offset": 29, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1020, "col_offset": 47, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 1022, "col_offset": 53, "nodeName": "acq_batch_size", "type": "Any"}, {"lineNumber": 1028, "col_offset": 15, "nodeName": "total", "type": "Any"}, {"lineNumber": 1028, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1034, "col_offset": 11, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1038, "col_offset": 12, "nodeName": "_get_acquisition_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 1038, "col_offset": 40, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 1039, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 1044, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1045, "col_offset": 38, "nodeName": "has_pending", "type": "Any"}, {"lineNumber": 1051, "col_offset": 18, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 1051, "col_offset": 49, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1052, "col_offset": 53, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 1056, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1056, "col_offset": 44, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 1058, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1058, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1059, "col_offset": 12, "nodeName": "str", "type": "str"}, {"lineNumber": 1060, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 1060, "col_offset": 21, "nodeName": "str", "type": "str"}, {"lineNumber": 1067, "col_offset": 12, "nodeName": "gcf", "type": "Any"}, {"lineNumber": 1071, "col_offset": 13, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1074, "col_offset": 8, "nodeName": "draw_contour", "type": "Callable[..., None]"}, {"lineNumber": 1075, "col_offset": 12, "nodeName": "predict_mean", "type": "Union[Callable[[Any], Any], Any]"}, {"lineNumber": 1076, "col_offset": 12, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 1077, "col_offset": 12, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 1084, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 1085, "col_offset": 12, "nodeName": "point", "type": "Any"}, {"lineNumber": 1089, "col_offset": 20, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 1091, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 1099, "col_offset": 8, "nodeName": "_update_interactive", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1099, "col_offset": 34, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 1099, "col_offset": 44, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 1105, "col_offset": 8, "nodeName": "draw_contour", "type": "Callable[..., None]"}, {"lineNumber": 1106, "col_offset": 12, "nodeName": "acq", "type": "Callable[[Any], Any]"}, {"lineNumber": 1107, "col_offset": 12, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 1108, "col_offset": 12, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 1114, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 1129, "col_offset": 15, "nodeName": "plot_discrepancy", "type": "Callable[..., Any]"}, {"lineNumber": 1129, "col_offset": 36, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1129, "col_offset": 55, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 1151, "col_offset": 15, "nodeName": "plot_gp", "type": "Callable[..., Any]"}, {"lineNumber": 1151, "col_offset": 27, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1151, "col_offset": 46, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 1151, "col_offset": 68, "nodeName": "axes", "type": "Any"}, {"lineNumber": 1152, "col_offset": 27, "nodeName": "resol", "type": "Any"}, {"lineNumber": 1152, "col_offset": 34, "nodeName": "const", "type": "Any"}, {"lineNumber": 1152, "col_offset": 41, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 1152, "col_offset": 49, "nodeName": "true_params", "type": "Any"}, {"lineNumber": 1189, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 1191, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 1195, "col_offset": 8, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 1195, "col_offset": 19, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 1196, "col_offset": 15, "nodeName": "extract_posterior", "type": "Callable[..., Any]"}, {"lineNumber": 1196, "col_offset": 38, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1216, "col_offset": 15, "nodeName": "BolfiPosterior", "type": "Type[elfi.methods.posteriors.BolfiPosterior]"}, {"lineNumber": 1216, "col_offset": 30, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1271, "col_offset": 11, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 1274, "col_offset": 20, "nodeName": "extract_posterior", "type": "Callable[..., Any]"}, {"lineNumber": 1274, "col_offset": 43, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1275, "col_offset": 17, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1278, "col_offset": 11, "nodeName": "initials", "type": "Any"}, {"lineNumber": 1282, "col_offset": 12, "nodeName": "inds", "type": "Any"}, {"lineNumber": 1283, "col_offset": 12, "nodeName": "initials", "type": "numpy.ndarray"}, {"lineNumber": 1285, "col_offset": 8, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1289, "col_offset": 11, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 1298, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1298, "col_offset": 24, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 1299, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1331, "col_offset": 12, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1338, "col_offset": 17, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1338, "col_offset": 28, "nodeName": "chains", "type": "List[Any]"}, {"lineNumber": 1339, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 1342, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 1342, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 1342, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1342, "col_offset": 34, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 1345, "col_offset": 8, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1347, "col_offset": 15, "nodeName": "BolfiSample", "type": "Type[elfi.methods.results.BolfiSample]"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 93, "col_offset": 49, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "client", "type": "Any"}, {"lineNumber": 103, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 103, "col_offset": 65, "nodeName": "seed", "type": "None"}, {"lineNumber": 103, "col_offset": 76, "nodeName": "pool", "type": "None"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "client", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 105, "col_offset": 54, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 75, "nodeName": "client", "type": "Any"}, {"lineNumber": 107, "col_offset": 60, "nodeName": "client", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "num_cores", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "msg", "type": "str"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "msg", "type": "str"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 257, "col_offset": 36, "nodeName": "vis", "type": "None"}, {"lineNumber": 257, "col_offset": 41, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "args", "type": "Tuple[Any]"}, {"lineNumber": 259, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 261, "col_offset": 18, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "iterate", "type": "Callable[[], Any]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 298, "col_offset": 14, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "prepare_new_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "next_index", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "submit", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 32, "nodeName": "next_batch", "type": "Any"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 305, "col_offset": 43, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 310, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 313, "col_offset": 44, "nodeName": "num_pending", "type": "int"}, {"lineNumber": 314, "col_offset": 20, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 69, "nodeName": "num_pending", "type": "Any"}, {"lineNumber": 323, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "objective", "type": "Any"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "objective", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "n_batches", "type": "int"}, {"lineNumber": 334, "col_offset": 27, "nodeName": "__class__", "type": "Type[BayesianOptimization]"}, {"lineNumber": 335, "col_offset": 31, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 337, "col_offset": 21, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 338, "col_offset": 25, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 343, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 343, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 343, "col_offset": 29, "nodeName": "ElfiModel", "type": "Type[elfi.model.elfi_model.ElfiModel]"}, {"lineNumber": 343, "col_offset": 44, "nodeName": "target", "type": "Any"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 348, "col_offset": 20, "nodeName": "target", "type": "Any"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 353, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 353, "col_offset": 34, "nodeName": "default_reference_class", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 354, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 356, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 367, "col_offset": 32, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 368, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 368, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 370, "col_offset": 23, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 379, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 402, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 404, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 404, "col_offset": 48, "nodeName": "bar", "type": "Union[Any, bool]"}, {"lineNumber": 404, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "state_key", "type": "str"}, {"lineNumber": 409, "col_offset": 28, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 412, "col_offset": 41, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 445, "col_offset": 34, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 446, "col_offset": 44, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 446, "col_offset": 69, "nodeName": "output_names", "type": "Any"}, {"lineNumber": 447, "col_offset": 63, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "quantile", "type": "Any"}, {"lineNumber": 468, "col_offset": 32, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 468, "col_offset": 54, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 470, "col_offset": 50, "nodeName": "Inf", "type": "Any"}, {"lineNumber": 473, "col_offset": 20, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 477, "col_offset": 24, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 481, "col_offset": 40, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 481, "col_offset": 61, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 481, "col_offset": 82, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 498, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "_init_samples_lazy", "type": "Callable[[Any], Any]"}, {"lineNumber": 500, "col_offset": 36, "nodeName": "batch", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 513, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 514, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 519, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 521, "col_offset": 30, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 531, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 531, "col_offset": 27, "nodeName": "batch", "type": "Any"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "batch", "type": "Any"}, {"lineNumber": 542, "col_offset": 20, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 544, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 544, "col_offset": 23, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 554, "col_offset": 18, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 556, "col_offset": 23, "nodeName": "samples", "type": "Any"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 557, "col_offset": 46, "nodeName": "batch", "type": "Any"}, {"lineNumber": 561, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 562, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 573, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 577, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 577, "col_offset": 43, "nodeName": "k", "type": "str"}, {"lineNumber": 577, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 580, "col_offset": 75, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 580, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 586, "col_offset": 28, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 590, "col_offset": 63, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 591, "col_offset": 24, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 591, "col_offset": 29, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 602, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 604, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 609, "col_offset": 18, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 611, "col_offset": 21, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 612, "col_offset": 14, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 633, "col_offset": 34, "nodeName": "self", "type": "SMC"}, {"lineNumber": 634, "col_offset": 44, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 634, "col_offset": 69, "nodeName": "output_names", "type": "Any"}, {"lineNumber": 636, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 638, "col_offset": 33, "nodeName": "self", "type": "SMC"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 648, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 664, "col_offset": 14, "nodeName": "self", "type": "SMC"}, {"lineNumber": 666, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 668, "col_offset": 20, "nodeName": "weights", "type": "Any"}, {"lineNumber": 669, "col_offset": 22, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 686, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 687, "col_offset": 12, "nodeName": "cancel_pending", "type": "Callable[[], None]"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 710, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 715, "col_offset": 17, "nodeName": "GMDistribution", "type": "Type[elfi.methods.utils.GMDistribution]"}, {"lineNumber": 715, "col_offset": 37, "nodeName": "_gm_params", "type": "Tuple[nothing, nothing, nothing]"}, {"lineNumber": 715, "col_offset": 59, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 716, "col_offset": 49, "nodeName": "logpdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 717, "col_offset": 49, "nodeName": "_round_random_state", "type": "Any"}, {"lineNumber": 719, "col_offset": 39, "nodeName": "self", "type": "SMC"}, {"lineNumber": 723, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 725, "col_offset": 54, "nodeName": "round", "type": "Any"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "progress_bar", "type": "elfi.visualization.visualization.ProgressBar"}, {"lineNumber": 727, "col_offset": 56, "nodeName": "reinit_msg", "type": "str"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 732, "col_offset": 28, "nodeName": "round", "type": "Any"}, {"lineNumber": 732, "col_offset": 15, "nodeName": "self", "type": "SMC"}, {"lineNumber": 732, "col_offset": 44, "nodeName": "get_sub_seed", "type": "Callable[..., Any]"}, {"lineNumber": 732, "col_offset": 57, "nodeName": "seed", "type": "Any"}, {"lineNumber": 732, "col_offset": 68, "nodeName": "round", "type": "Any"}, {"lineNumber": 733, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 736, "col_offset": 12, "nodeName": "self", "type": "SMC"}, {"lineNumber": 737, "col_offset": 29, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 738, "col_offset": 25, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 739, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 740, "col_offset": 17, "nodeName": "seed", "type": "Any"}, {"lineNumber": 741, "col_offset": 33, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "_rejection", "type": "Rejection"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 744, "col_offset": 51, "nodeName": "current_population_threshold", "type": "nothing"}, {"lineNumber": 747, "col_offset": 17, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 750, "col_offset": 17, "nodeName": "self", "type": "SMC"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 756, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 756, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 763, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 763, "col_offset": 24, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 765, "col_offset": 11, "nodeName": "count_nonzero", "type": "Any"}, {"lineNumber": 765, "col_offset": 28, "nodeName": "w", "type": "Any"}, {"lineNumber": 766, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 771, "col_offset": 18, "nodeName": "diag", "type": "Any"}, {"lineNumber": 773, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 774, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 777, "col_offset": 18, "nodeName": "diag", "type": "Any"}, {"lineNumber": 783, "col_offset": 25, "nodeName": "n_batches", "type": "nothing"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 784, "col_offset": 50, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 788, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 790, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 790, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 795, "col_offset": 15, "nodeName": "objective", "type": "Any"}, {"lineNumber": 853, "col_offset": 29, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 854, "col_offset": 24, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 854, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 856, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 856, "col_offset": 58, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 858, "col_offset": 39, "nodeName": "GPyRegression", "type": "Type[elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 858, "col_offset": 53, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 864, "col_offset": 33, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 866, "col_offset": 21, "nodeName": "batch_to_arr2d", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 866, "col_offset": 36, "nodeName": "precomputed", "type": "Optional[Any]"}, {"lineNumber": 866, "col_offset": 49, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 867, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 867, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 868, "col_offset": 12, "nodeName": "update", "type": "Union[Callable[..., None], Any]"}, {"lineNumber": 868, "col_offset": 37, "nodeName": "params", "type": "Any"}, {"lineNumber": 870, "col_offset": 66, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 871, "col_offset": 56, "nodeName": "LCBSC", "type": "Type[elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 871, "col_offset": 62, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 890, "col_offset": 52, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 894, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 894, "col_offset": 24, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 895, "col_offset": 12, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 897, "col_offset": 12, "nodeName": "precomputed", "type": "Any"}, {"lineNumber": 897, "col_offset": 26, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 898, "col_offset": 12, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 901, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 903, "col_offset": 13, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 903, "col_offset": 34, "nodeName": "n_required", "type": "int"}, {"lineNumber": 907, "col_offset": 11, "nodeName": "precomputed", "type": "Optional[Any]"}, {"lineNumber": 908, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 911, "col_offset": 33, "nodeName": "ceil_to_batch_size", "type": "Callable[[Any, Any], int]"}, {"lineNumber": 911, "col_offset": 52, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 911, "col_offset": 72, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 918, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 923, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 923, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 938, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 938, "col_offset": 58, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 940, "col_offset": 24, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 941, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 943, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 944, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 944, "col_offset": 47, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 955, "col_offset": 12, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 955, "col_offset": 44, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 955, "col_offset": 75, "nodeName": "seed", "type": "Any"}, {"lineNumber": 957, "col_offset": 42, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 958, "col_offset": 33, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 958, "col_offset": 54, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 959, "col_offset": 16, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 959, "col_offset": 36, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 962, "col_offset": 18, "nodeName": "batch_min", "type": "Any"}, {"lineNumber": 962, "col_offset": 37, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 976, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 978, "col_offset": 39, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 979, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 979, "col_offset": 48, "nodeName": "batch", "type": "Any"}, {"lineNumber": 981, "col_offset": 19, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 982, "col_offset": 8, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 982, "col_offset": 41, "nodeName": "batch", "type": "Any"}, {"lineNumber": 984, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 984, "col_offset": 43, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1001, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1008, "col_offset": 22, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1009, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1009, "col_offset": 15, "nodeName": "acquisition", "type": "Any"}, {"lineNumber": 1010, "col_offset": 26, "nodeName": "acquire", "type": "Union[Any, Callable[..., Any]]"}, {"lineNumber": 1010, "col_offset": 58, "nodeName": "acq_batch_size", "type": "Any"}, {"lineNumber": 1012, "col_offset": 31, "nodeName": "acquisition", "type": "Any"}, {"lineNumber": 1012, "col_offset": 62, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1013, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1013, "col_offset": 48, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1018, "col_offset": 25, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1018, "col_offset": 43, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1019, "col_offset": 25, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1019, "col_offset": 51, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1020, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1022, "col_offset": 13, "nodeName": "starting_sim_index", "type": "Any"}, {"lineNumber": 1022, "col_offset": 34, "nodeName": "initial_offset", "type": "int"}, {"lineNumber": 1028, "col_offset": 15, "nodeName": "batches", "type": "Any"}, {"lineNumber": 1028, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 1031, "col_offset": 15, "nodeName": "_allow_submit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1031, "col_offset": 63, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 1038, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1044, "col_offset": 32, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 1045, "col_offset": 11, "nodeName": "acquisitions_left", "type": "int"}, {"lineNumber": 1045, "col_offset": 38, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 1051, "col_offset": 18, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1051, "col_offset": 49, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1052, "col_offset": 22, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 1052, "col_offset": 53, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1053, "col_offset": 15, "nodeName": "current", "type": "Any"}, {"lineNumber": 1053, "col_offset": 26, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 1053, "col_offset": 54, "nodeName": "current", "type": "Any"}, {"lineNumber": 1053, "col_offset": 65, "nodeName": "next_update", "type": "Any"}, {"lineNumber": 1058, "col_offset": 23, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1059, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1059, "col_offset": 41, "nodeName": "fill", "type": "str"}, {"lineNumber": 1060, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 1067, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 1068, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1068, "col_offset": 15, "nodeName": "axes", "type": "Any"}, {"lineNumber": 1069, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 1069, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 1069, "col_offset": 19, "nodeName": "subplots", "type": "Any"}, {"lineNumber": 1074, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 1075, "col_offset": 12, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1076, "col_offset": 12, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1077, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1079, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 1081, "col_offset": 14, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 1084, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 1085, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 1089, "col_offset": 20, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1091, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 1093, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 1099, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 1102, "col_offset": 19, "nodeName": "evaluate", "type": "Union[Any, Callable[..., Any]]"}, {"lineNumber": 1102, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 1105, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 1107, "col_offset": 12, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1108, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1112, "col_offset": 14, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 1114, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 1115, "col_offset": 12, "nodeName": "close", "type": "Any"}, {"lineNumber": 1129, "col_offset": 15, "nodeName": "vis", "type": "module"}, {"lineNumber": 1129, "col_offset": 36, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1129, "col_offset": 55, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1129, "col_offset": 82, "nodeName": "axes", "type": "Any"}, {"lineNumber": 1129, "col_offset": 90, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1151, "col_offset": 15, "nodeName": "vis", "type": "module"}, {"lineNumber": 1151, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1151, "col_offset": 46, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1152, "col_offset": 64, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1189, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 1192, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1195, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1195, "col_offset": 35, "nodeName": "bar", "type": "Any"}, {"lineNumber": 1196, "col_offset": 15, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1213, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 1214, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1216, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1216, "col_offset": 59, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1267, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 1268, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 1268, "col_offset": 21, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 1272, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1274, "col_offset": 20, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1275, "col_offset": 27, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 1279, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1282, "col_offset": 19, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 1283, "col_offset": 23, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1285, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1290, "col_offset": 15, "nodeName": "sigma_proposals", "type": "Any"}, {"lineNumber": 1299, "col_offset": 19, "nodeName": "get_sub_seed", "type": "Callable[..., Any]"}, {"lineNumber": 1299, "col_offset": 32, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1299, "col_offset": 43, "nodeName": "ii", "type": "int"}, {"lineNumber": 1301, "col_offset": 18, "nodeName": "isinf", "type": "Any"}, {"lineNumber": 1302, "col_offset": 16, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1307, "col_offset": 15, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 1336, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1338, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 1340, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1341, "col_offset": 32, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 1341, "col_offset": 42, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 1342, "col_offset": 34, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1343, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 1343, "col_offset": 18, "nodeName": "node", "type": "Any"}, {"lineNumber": 1345, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1349, "col_offset": 19, "nodeName": "chains", "type": "numpy.ndarray"}, {"lineNumber": 1350, "col_offset": 28, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 1351, "col_offset": 19, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1354, "col_offset": 17, "nodeName": "seed", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 95, "col_offset": 69, "nodeName": "model", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "elfi", "type": "module"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "elfi", "type": "module"}, {"lineNumber": 105, "col_offset": 75, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 107, "col_offset": 60, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "client", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "update_progressbar", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 268, "col_offset": 53, "nodeName": "_objective_n_batches", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 300, "col_offset": 49, "nodeName": "next_index", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 310, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 313, "col_offset": 44, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 314, "col_offset": 57, "nodeName": "has_ready", "type": "Callable[..., bool]"}, {"lineNumber": 318, "col_offset": 43, "nodeName": "state", "type": "Any"}, {"lineNumber": 318, "col_offset": 69, "nodeName": "batches", "type": "Any"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 326, "col_offset": 24, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 328, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 334, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 337, "col_offset": 21, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 338, "col_offset": 25, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 351, "col_offset": 27, "nodeName": "target", "type": "Any"}, {"lineNumber": 368, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "checked_names", "type": "List[Any]"}, {"lineNumber": 407, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 407, "col_offset": 23, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 407, "col_offset": 32, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 409, "col_offset": 28, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 410, "col_offset": 36, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 446, "col_offset": 24, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 446, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 447, "col_offset": 14, "nodeName": "Rejection", "type": "Type[Rejection]"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 470, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 473, "col_offset": 25, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 473, "col_offset": 37, "nodeName": "quantile", "type": "Union[Any, float]"}, {"lineNumber": 477, "col_offset": 29, "nodeName": "n_sim", "type": "Union[Any, int]"}, {"lineNumber": 477, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 497, "col_offset": 14, "nodeName": "Rejection", "type": "Type[Rejection]"}, {"lineNumber": 497, "col_offset": 25, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 498, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 513, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 518, "col_offset": 20, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 519, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 521, "col_offset": 41, "nodeName": "_extract_result_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 532, "col_offset": 22, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 534, "col_offset": 27, "nodeName": "node", "type": "Any"}, {"lineNumber": 535, "col_offset": 19, "nodeName": "is_array", "type": "Callable[[Any], bool]"}, {"lineNumber": 535, "col_offset": 28, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 536, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 537, "col_offset": 32, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 541, "col_offset": 72, "nodeName": "shape", "type": "Any"}, {"lineNumber": 544, "col_offset": 23, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 546, "col_offset": 16, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 546, "col_offset": 62, "nodeName": "inf", "type": "Any"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 548, "col_offset": 32, "nodeName": "empty", "type": "Any"}, {"lineNumber": 548, "col_offset": 41, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 557, "col_offset": 52, "nodeName": "node", "type": "Any"}, {"lineNumber": 560, "col_offset": 20, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 562, "col_offset": 21, "nodeName": "sort_mask", "type": "Any"}, {"lineNumber": 569, "col_offset": 34, "nodeName": "o", "type": "Dict[str, Any]"}, {"lineNumber": 569, "col_offset": 51, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 573, "col_offset": 11, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 577, "col_offset": 24, "nodeName": "objective", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 580, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 580, "col_offset": 69, "nodeName": "t", "type": "Any"}, {"lineNumber": 584, "col_offset": 24, "nodeName": "objective", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 586, "col_offset": 43, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 589, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 589, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 590, "col_offset": 53, "nodeName": "margin", "type": "Any"}, {"lineNumber": 590, "col_offset": 63, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 594, "col_offset": 58, "nodeName": "objective", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 604, "col_offset": 12, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 605, "col_offset": 16, "nodeName": "HTML", "type": "Any"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 609, "col_offset": 18, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 610, "col_offset": 14, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 634, "col_offset": 24, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 634, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 636, "col_offset": 14, "nodeName": "SMC", "type": "Type[SMC]"}, {"lineNumber": 636, "col_offset": 19, "nodeName": "self", "type": "SMC"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 649, "col_offset": 26, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 650, "col_offset": 26, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 652, "col_offset": 27, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 666, "col_offset": 20, "nodeName": "pop", "type": "Any"}, {"lineNumber": 668, "col_offset": 20, "nodeName": "pop", "type": "Any"}, {"lineNumber": 669, "col_offset": 22, "nodeName": "pop", "type": "Any"}, {"lineNumber": 670, "col_offset": 14, "nodeName": "_extract_result_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 683, "col_offset": 14, "nodeName": "SMC", "type": "Type[SMC]"}, {"lineNumber": 683, "col_offset": 19, "nodeName": "self", "type": "SMC"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 687, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 688, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 688, "col_offset": 37, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 689, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 690, "col_offset": 16, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 691, "col_offset": 16, "nodeName": "_init_new_round", "type": "Callable[[], Any]"}, {"lineNumber": 710, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 715, "col_offset": 37, "nodeName": "self", "type": "SMC"}, {"lineNumber": 715, "col_offset": 59, "nodeName": "self", "type": "SMC"}, {"lineNumber": 716, "col_offset": 49, "nodeName": "_prior", "type": "elfi.methods.utils.ModelPrior"}, {"lineNumber": 717, "col_offset": 49, "nodeName": "self", "type": "SMC"}, {"lineNumber": 725, "col_offset": 65, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 726, "col_offset": 54, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 729, "col_offset": 49, "nodeName": "dashes", "type": "str"}, {"lineNumber": 729, "col_offset": 57, "nodeName": "round", "type": "Any"}, {"lineNumber": 729, "col_offset": 64, "nodeName": "dashes", "type": "str"}, {"lineNumber": 732, "col_offset": 57, "nodeName": "self", "type": "SMC"}, {"lineNumber": 733, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 737, "col_offset": 29, "nodeName": "self", "type": "SMC"}, {"lineNumber": 738, "col_offset": 25, "nodeName": "self", "type": "SMC"}, {"lineNumber": 739, "col_offset": 23, "nodeName": "self", "type": "SMC"}, {"lineNumber": 741, "col_offset": 33, "nodeName": "self", "type": "SMC"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "self", "type": "SMC"}, {"lineNumber": 744, "col_offset": 51, "nodeName": "self", "type": "SMC"}, {"lineNumber": 747, "col_offset": 17, "nodeName": "self", "type": "SMC"}, {"lineNumber": 763, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 763, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 765, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 771, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 771, "col_offset": 26, "nodeName": "weighted_var", "type": "Callable[..., Any]"}, {"lineNumber": 771, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 771, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 773, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 773, "col_offset": 22, "nodeName": "isfinite", "type": "Any"}, {"lineNumber": 773, "col_offset": 34, "nodeName": "cov", "type": "Any"}, {"lineNumber": 774, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 777, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 777, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 783, "col_offset": 25, "nodeName": "pop", "type": "nothing"}, {"lineNumber": 783, "col_offset": 43, "nodeName": "pop", "type": "nothing"}, {"lineNumber": 783, "col_offset": 50, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 784, "col_offset": 50, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 795, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 795, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 855, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 855, "col_offset": 14, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 855, "col_offset": 36, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 858, "col_offset": 53, "nodeName": "model", "type": "Any"}, {"lineNumber": 858, "col_offset": 88, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 866, "col_offset": 49, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 868, "col_offset": 12, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 868, "col_offset": 45, "nodeName": "precomputed", "type": "Optional[Any]"}, {"lineNumber": 871, "col_offset": 62, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 873, "col_offset": 72, "nodeName": "acq_noise_var", "type": "Any"}, {"lineNumber": 874, "col_offset": 79, "nodeName": "exploration_rate", "type": "Any"}, {"lineNumber": 875, "col_offset": 67, "nodeName": "seed", "type": "Any"}, {"lineNumber": 889, "col_offset": 32, "nodeName": "input_dim", "type": "Union[int, Any]"}, {"lineNumber": 894, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 894, "col_offset": 48, "nodeName": "int", "type": "Any"}, {"lineNumber": 894, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 895, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 895, "col_offset": 37, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 898, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 901, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 902, "col_offset": 47, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 904, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 907, "col_offset": 36, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 907, "col_offset": 57, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 908, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 911, "col_offset": 72, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 918, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 938, "col_offset": 25, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 938, "col_offset": 58, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 941, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 955, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 955, "col_offset": 44, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 955, "col_offset": 75, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 958, "col_offset": 33, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 959, "col_offset": 16, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 962, "col_offset": 48, "nodeName": "_extract_result_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 975, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 975, "col_offset": 14, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 975, "col_offset": 36, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 979, "col_offset": 54, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 982, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 982, "col_offset": 47, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 984, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 984, "col_offset": 43, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1010, "col_offset": 26, "nodeName": "acquisition_method", "type": "Union[Any, elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 1010, "col_offset": 58, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1010, "col_offset": 81, "nodeName": "t", "type": "Any"}, {"lineNumber": 1012, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1013, "col_offset": 48, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1028, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1044, "col_offset": 32, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1045, "col_offset": 38, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1051, "col_offset": 18, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1052, "col_offset": 22, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1053, "col_offset": 26, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1059, "col_offset": 47, "nodeName": "item", "type": "Any"}, {"lineNumber": 1059, "col_offset": 68, "nodeName": "params", "type": "Any"}, {"lineNumber": 1068, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 1069, "col_offset": 19, "nodeName": "plt", "type": "Any"}, {"lineNumber": 1079, "col_offset": 19, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1080, "col_offset": 17, "nodeName": "axes", "type": "Any"}, {"lineNumber": 1085, "col_offset": 20, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1086, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1086, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 1087, "col_offset": 16, "nodeName": "scatter", "type": "Any"}, {"lineNumber": 1093, "col_offset": 12, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 1095, "col_offset": 16, "nodeName": "HTML", "type": "Any"}, {"lineNumber": 1102, "col_offset": 19, "nodeName": "acquisition_method", "type": "Union[Any, elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 1102, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1102, "col_offset": 59, "nodeName": "X", "type": "Any"}, {"lineNumber": 1111, "col_offset": 17, "nodeName": "axes", "type": "Any"}, {"lineNumber": 1115, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 1213, "col_offset": 11, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1216, "col_offset": 76, "nodeName": "ModelPrior", "type": "Type[elfi.methods.utils.ModelPrior]"}, {"lineNumber": 1216, "col_offset": 87, "nodeName": "model", "type": "Any"}, {"lineNumber": 1267, "col_offset": 11, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1268, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1279, "col_offset": 46, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 1279, "col_offset": 56, "nodeName": "input_dim", "type": "Union[int, Any]"}, {"lineNumber": 1280, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1282, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1282, "col_offset": 30, "nodeName": "Y", "type": "Any"}, {"lineNumber": 1283, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 1283, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 1291, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1293, "col_offset": 45, "nodeName": "input_dim", "type": "Union[int, Any]"}, {"lineNumber": 1299, "col_offset": 32, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1301, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1301, "col_offset": 27, "nodeName": "logpdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 1303, "col_offset": 19, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1308, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1319, "col_offset": 17, "nodeName": "algorithm", "type": "Any"}, {"lineNumber": 1336, "col_offset": 12, "nodeName": "chains", "type": "List[Any]"}, {"lineNumber": 1336, "col_offset": 26, "nodeName": "get_result", "type": "Any"}, {"lineNumber": 1336, "col_offset": 49, "nodeName": "id", "type": "Any"}, {"lineNumber": 1343, "col_offset": 24, "nodeName": "eff_sample_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 1344, "col_offset": 18, "nodeName": "gelman_rubin", "type": "Callable[[Any], Any]"}, {"lineNumber": 1350, "col_offset": 28, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1352, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1352, "col_offset": 28, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1353, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 1354, "col_offset": 17, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "progress_bar", "type": "elfi.visualization.visualization.ProgressBar"}, {"lineNumber": 267, "col_offset": 53, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 268, "col_offset": 53, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 300, "col_offset": 49, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 313, "col_offset": 44, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 314, "col_offset": 57, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 318, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 69, "nodeName": "self", "type": "Any"}, {"lineNumber": 326, "col_offset": 55, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 372, "col_offset": 21, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 372, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 372, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 373, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 410, "col_offset": 23, "nodeName": "state_key", "type": "str"}, {"lineNumber": 410, "col_offset": 36, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 410, "col_offset": 47, "nodeName": "state_key", "type": "str"}, {"lineNumber": 477, "col_offset": 37, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 518, "col_offset": 20, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 519, "col_offset": 28, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 521, "col_offset": 41, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 532, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 532, "col_offset": 76, "nodeName": "node", "type": "Any"}, {"lineNumber": 536, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 536, "col_offset": 48, "nodeName": "node", "type": "Any"}, {"lineNumber": 536, "col_offset": 54, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 537, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 537, "col_offset": 21, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 537, "col_offset": 32, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 538, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 541, "col_offset": 51, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 541, "col_offset": 72, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 546, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 546, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 546, "col_offset": 40, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 546, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 548, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 548, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 548, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 557, "col_offset": 14, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 560, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 560, "col_offset": 31, "nodeName": "samples", "type": "Any"}, {"lineNumber": 573, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 577, "col_offset": 24, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 584, "col_offset": 24, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 589, "col_offset": 26, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 589, "col_offset": 48, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 589, "col_offset": 63, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 590, "col_offset": 25, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 590, "col_offset": 37, "nodeName": "accept_rate_t", "type": "Any"}, {"lineNumber": 594, "col_offset": 58, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 605, "col_offset": 16, "nodeName": "display", "type": "Any"}, {"lineNumber": 605, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 610, "col_offset": 14, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 650, "col_offset": 26, "nodeName": "self", "type": "SMC"}, {"lineNumber": 667, "col_offset": 24, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 667, "col_offset": 52, "nodeName": "pop", "type": "Any"}, {"lineNumber": 670, "col_offset": 14, "nodeName": "self", "type": "SMC"}, {"lineNumber": 687, "col_offset": 12, "nodeName": "self", "type": "SMC"}, {"lineNumber": 688, "col_offset": 15, "nodeName": "self", "type": "SMC"}, {"lineNumber": 688, "col_offset": 37, "nodeName": "self", "type": "SMC"}, {"lineNumber": 689, "col_offset": 16, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 689, "col_offset": 41, "nodeName": "_extract_population", "type": "Callable[[], Any]"}, {"lineNumber": 690, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 691, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 716, "col_offset": 49, "nodeName": "self", "type": "SMC"}, {"lineNumber": 725, "col_offset": 65, "nodeName": "self", "type": "SMC"}, {"lineNumber": 726, "col_offset": 54, "nodeName": "self", "type": "SMC"}, {"lineNumber": 756, "col_offset": 40, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 756, "col_offset": 59, "nodeName": "p", "type": "Any"}, {"lineNumber": 756, "col_offset": 64, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 773, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 777, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 777, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 783, "col_offset": 50, "nodeName": "self", "type": "SMC"}, {"lineNumber": 784, "col_offset": 50, "nodeName": "self", "type": "SMC"}, {"lineNumber": 795, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 858, "col_offset": 53, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 868, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 868, "col_offset": 57, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 872, "col_offset": 68, "nodeName": "ModelPrior", "type": "Type[elfi.methods.utils.ModelPrior]"}, {"lineNumber": 872, "col_offset": 79, "nodeName": "model", "type": "Any"}, {"lineNumber": 875, "col_offset": 67, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 889, "col_offset": 32, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 894, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 898, "col_offset": 37, "nodeName": "precomputed", "type": "Any"}, {"lineNumber": 904, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 904, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 905, "col_offset": 64, "nodeName": "n_required", "type": "int"}, {"lineNumber": 905, "col_offset": 76, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 907, "col_offset": 57, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 909, "col_offset": 65, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 910, "col_offset": 65, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 938, "col_offset": 25, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 962, "col_offset": 48, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 979, "col_offset": 54, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 982, "col_offset": 47, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1010, "col_offset": 26, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1012, "col_offset": 44, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1031, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1031, "col_offset": 21, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 1031, "col_offset": 43, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1059, "col_offset": 75, "nodeName": "i", "type": "int"}, {"lineNumber": 1080, "col_offset": 17, "nodeName": "f", "type": "Any"}, {"lineNumber": 1086, "col_offset": 19, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1087, "col_offset": 35, "nodeName": "point", "type": "Any"}, {"lineNumber": 1095, "col_offset": 16, "nodeName": "display", "type": "Any"}, {"lineNumber": 1095, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1096, "col_offset": 44, "nodeName": "point", "type": "Any"}, {"lineNumber": 1102, "col_offset": 19, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1102, "col_offset": 59, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1111, "col_offset": 17, "nodeName": "f", "type": "Any"}, {"lineNumber": 1216, "col_offset": 87, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1279, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1279, "col_offset": 26, "nodeName": "initials", "type": "Any"}, {"lineNumber": 1279, "col_offset": 56, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1282, "col_offset": 30, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1283, "col_offset": 34, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1283, "col_offset": 54, "nodeName": "inds", "type": "Any"}, {"lineNumber": 1293, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1293, "col_offset": 45, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1294, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1301, "col_offset": 27, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1301, "col_offset": 44, "nodeName": "initials", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 1303, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1303, "col_offset": 37, "nodeName": "inds", "type": "Any"}, {"lineNumber": 1304, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1308, "col_offset": 16, "nodeName": "tasks_ids", "type": "List[Any]"}, {"lineNumber": 1309, "col_offset": 20, "nodeName": "apply", "type": "Any"}, {"lineNumber": 1310, "col_offset": 24, "nodeName": "nuts", "type": "Callable[..., Any]"}, {"lineNumber": 1311, "col_offset": 24, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 1313, "col_offset": 24, "nodeName": "logpdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 1314, "col_offset": 24, "nodeName": "gradient_logpdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 1320, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1336, "col_offset": 26, "nodeName": "client", "type": "Any"}, {"lineNumber": 1343, "col_offset": 24, "nodeName": "mcmc", "type": "module"}, {"lineNumber": 1343, "col_offset": 45, "nodeName": "chains", "type": "numpy.ndarray"}, {"lineNumber": 1344, "col_offset": 18, "nodeName": "mcmc", "type": "module"}, {"lineNumber": 1344, "col_offset": 36, "nodeName": "chains", "type": "numpy.ndarray"}, {"lineNumber": 1352, "col_offset": 28, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1353, "col_offset": 18, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 267, "col_offset": 53, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 300, "col_offset": 49, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 314, "col_offset": 57, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 326, "col_offset": 29, "nodeName": "objective", "type": "Any"}, {"lineNumber": 326, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 374, "col_offset": 83, "nodeName": "name", "type": "Any"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "has_node", "type": "Any"}, {"lineNumber": 375, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 376, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 519, "col_offset": 28, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 536, "col_offset": 33, "nodeName": "e_noarr", "type": "str"}, {"lineNumber": 536, "col_offset": 54, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 538, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 538, "col_offset": 46, "nodeName": "node", "type": "Any"}, {"lineNumber": 538, "col_offset": 65, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 541, "col_offset": 21, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 541, "col_offset": 51, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 546, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 546, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 557, "col_offset": 14, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 560, "col_offset": 39, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 568, "col_offset": 25, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 568, "col_offset": 38, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 580, "col_offset": 30, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 580, "col_offset": 43, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 605, "col_offset": 65, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 651, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 651, "col_offset": 26, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 667, "col_offset": 24, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 689, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 689, "col_offset": 41, "nodeName": "self", "type": "SMC"}, {"lineNumber": 756, "col_offset": 40, "nodeName": "pop", "type": "Any"}, {"lineNumber": 756, "col_offset": 52, "nodeName": "p", "type": "Any"}, {"lineNumber": 756, "col_offset": 64, "nodeName": "self", "type": "SMC"}, {"lineNumber": 777, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 872, "col_offset": 79, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 889, "col_offset": 32, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 898, "col_offset": 49, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 910, "col_offset": 65, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1059, "col_offset": 47, "nodeName": "distances", "type": "Any"}, {"lineNumber": 1087, "col_offset": 16, "nodeName": "axes", "type": "Any"}, {"lineNumber": 1096, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1096, "col_offset": 24, "nodeName": "Y", "type": "Any"}, {"lineNumber": 1279, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1279, "col_offset": 56, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1282, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1283, "col_offset": 34, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1293, "col_offset": 17, "nodeName": "sigma_proposals", "type": "Any"}, {"lineNumber": 1293, "col_offset": 45, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1301, "col_offset": 53, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1309, "col_offset": 20, "nodeName": "client", "type": "Any"}, {"lineNumber": 1310, "col_offset": 24, "nodeName": "mcmc", "type": "module"}, {"lineNumber": 1312, "col_offset": 24, "nodeName": "initials", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 1313, "col_offset": 24, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1314, "col_offset": 24, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1315, "col_offset": 32, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1316, "col_offset": 29, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1317, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1320, "col_offset": 16, "nodeName": "tasks_ids", "type": "List[Any]"}, {"lineNumber": 1321, "col_offset": 20, "nodeName": "apply", "type": "Any"}, {"lineNumber": 1322, "col_offset": 24, "nodeName": "metropolis", "type": "Callable[..., Any]"}, {"lineNumber": 1323, "col_offset": 24, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 1325, "col_offset": 24, "nodeName": "logpdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 1326, "col_offset": 24, "nodeName": "sigma_proposals", "type": "Any"}, {"lineNumber": 1327, "col_offset": 24, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1336, "col_offset": 26, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 326, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 538, "col_offset": 33, "nodeName": "e_len", "type": "str"}, {"lineNumber": 538, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 538, "col_offset": 56, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 538, "col_offset": 65, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 541, "col_offset": 21, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 560, "col_offset": 39, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 568, "col_offset": 38, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 568, "col_offset": 61, "nodeName": "o", "type": "Dict[str, Any]"}, {"lineNumber": 580, "col_offset": 43, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 605, "col_offset": 65, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 667, "col_offset": 24, "nodeName": "self", "type": "SMC"}, {"lineNumber": 898, "col_offset": 49, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1059, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 1087, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 1096, "col_offset": 24, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1096, "col_offset": 31, "nodeName": "Y", "type": "Any"}, {"lineNumber": 1309, "col_offset": 20, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1312, "col_offset": 33, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1321, "col_offset": 20, "nodeName": "client", "type": "Any"}, {"lineNumber": 1322, "col_offset": 24, "nodeName": "mcmc", "type": "module"}, {"lineNumber": 1324, "col_offset": 24, "nodeName": "initials", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 1325, "col_offset": 24, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1328, "col_offset": 29, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1329, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1343, "col_offset": 58, "nodeName": "ii", "type": "int"}, {"lineNumber": 1344, "col_offset": 49, "nodeName": "ii", "type": "int"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1096, "col_offset": 31, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1321, "col_offset": 20, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1324, "col_offset": 33, "nodeName": "ii_initial", "type": "int"}]