[{"lineNumber": 19, "col_offset": 0, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "test_rejection_with_quantile", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "test_rejection_with_threshold", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "test_smc", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "test_adaptive_distance_smc", "type": "Callable[[], Any]"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "test_romc1", "type": "Callable[[], Any]"}, {"lineNumber": 274, "col_offset": 0, "nodeName": "test_romc2", "type": "Callable[[], Any]"}, {"lineNumber": 356, "col_offset": 0, "nodeName": "test_romc3", "type": "Callable[[], Any]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "likelihood_sample", "type": "Callable[..., Any]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "likelihood_sample", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "n_obs", "type": "int"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "t1", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "t2", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "quantile", "type": "float"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "rej", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "t", "type": "float"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "rej", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "thresholds", "type": "List[float]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "smc", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "rounds", "type": "int"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "ad_smc", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "ad_res", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "log_d", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "acq_x", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "post", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "post_map", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "vals_ml", "type": "Dict[Any, Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "vals_map", "type": "Dict[Any, Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "n_chains", "type": "int"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "res_sampling", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "is_sampling", "type": "bool"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "true_logpdf_prior", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "true_logpdf_prior", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "rvs", "type": "Callable[..., Any]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "pdf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "logpdf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "dim", "type": "int"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "elfi_prior", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "elfi_simulator", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "dist", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "bounds", "type": "List[Tuple[float, float]]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "romc", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "n1", "type": "int"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "optimizer_args", "type": "Dict[nothing, nothing]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "use_bo", "type": "bool"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "eps_filter", "type": "float"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "fit_models", "type": "bool"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "fit_models_args", "type": "Dict[str, int]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "n2", "type": "int"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "rvs", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "pdf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "logpdf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "dim", "type": "int"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "elfi_prior", "type": "Any"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "elfi_simulator", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "dist", "type": "Any"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "bounds", "type": "List[Tuple[float, float]]"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "romc", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "n1", "type": "int"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "optimizer_args", "type": "Dict[nothing, nothing]"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "use_bo", "type": "bool"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "eps_filter", "type": "float"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "fit_models", "type": "bool"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "fit_models_args", "type": "Dict[str, int]"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "n2", "type": "int"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "bounds", "type": "List[Tuple[int, int]]"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "romc", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "n1", "type": "int"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "eps_filter", "type": "float"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "n2", "type": "int"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "romc_mean", "type": "Any"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "sample_means_array", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "romc_cov", "type": "Any"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "rej", "type": "Any"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "rejection_mean", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "sample_means_array", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "rejection_cov", "type": "Any"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "get_model", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "m", "type": "Any"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "N", "type": "Any"}, {"lineNumber": 37, "col_offset": 53, "nodeName": "error_bound", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 38, "col_offset": 74, "nodeName": "error_bound", "type": "Any"}, {"lineNumber": 39, "col_offset": 53, "nodeName": "error_bound", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 40, "col_offset": 74, "nodeName": "error_bound", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 45, "col_offset": 7, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "Rejection", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "sample", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "N", "type": "int"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "samples", "type": "Any"}, {"lineNumber": 53, "col_offset": 55, "nodeName": "N", "type": "int"}, {"lineNumber": 53, "col_offset": 58, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 56, "col_offset": 48, "nodeName": "N", "type": "int"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "accept_rate", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "quantile", "type": "float"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 64, "col_offset": 7, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "Rejection", "type": "Any"}, {"lineNumber": 69, "col_offset": 10, "nodeName": "sample", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "N", "type": "int"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "samples", "type": "Any"}, {"lineNumber": 71, "col_offset": 55, "nodeName": "N", "type": "int"}, {"lineNumber": 71, "col_offset": 58, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "t", "type": "float"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "N", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 10, "nodeName": "SMC", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "sample", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "N", "type": "int"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "samples", "type": "Any"}, {"lineNumber": 87, "col_offset": 55, "nodeName": "N", "type": "int"}, {"lineNumber": 87, "col_offset": 58, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 95, "col_offset": 7, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "become", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "AdaptiveDistanceSMC", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "N", "type": "int"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "rounds", "type": "int"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "samples", "type": "Any"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "N", "type": "int"}, {"lineNumber": 105, "col_offset": 61, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "rounds", "type": "int"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 116, "col_offset": 7, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "NodeReference", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "BOLFI", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "log_d", "type": "Any"}, {"lineNumber": 130, "col_offset": 10, "nodeName": "infer", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 139, "col_offset": 10, "nodeName": "infer", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 141, "col_offset": 59, "nodeName": "acq_x", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "extract_posterior", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "vals_ml", "type": "Dict[Any, Any]"}, {"lineNumber": 159, "col_offset": 54, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "vals_map", "type": "Dict[Any, Any]"}, {"lineNumber": 161, "col_offset": 55, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 167, "col_offset": 57, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "pred_mu", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "pred_var", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "predict", "type": "Any"}, {"lineNumber": 173, "col_offset": 55, "nodeName": "x", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "pred_cached_mu", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "pred_cached_var", "type": "Any"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "predict", "type": "Any"}, {"lineNumber": 174, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "pred_mu", "type": "Any"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "pred_cached_mu", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "pred_var", "type": "Any"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "pred_cached_var", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "grad_mu", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "grad_var", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "predictive_gradients", "type": "Any"}, {"lineNumber": 178, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "grad_cached_mu", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "grad_cached_var", "type": "Any"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "predictive_gradients", "type": "Any"}, {"lineNumber": 179, "col_offset": 78, "nodeName": "x", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 180, "col_offset": 42, "nodeName": "grad_cached_mu", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "grad_var", "type": "Any"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "grad_cached_var", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "true_logpdf_prior", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "theta", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "c", "type": "float"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "tmp_theta", "type": "Any"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "inf", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "tmp_theta", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "inf", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "tmp_theta", "type": "Any"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "inf", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "samples", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "theta", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 240, "col_offset": 10, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "new_model", "type": "Any"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "Prior", "type": "Any"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "Simulator", "type": "Any"}, {"lineNumber": 245, "col_offset": 36, "nodeName": "simulator", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 47, "nodeName": "elfi_prior", "type": "Any"}, {"lineNumber": 245, "col_offset": 59, "nodeName": "dim", "type": "int"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "Distance", "type": "Any"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "elfi_simulator", "type": "Any"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "ROMC", "type": "Any"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "dist", "type": "Any"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "bounds", "type": "List[Tuple[float, float]]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "solve_problems", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "estimate_regions", "type": "Any"}, {"lineNumber": 267, "col_offset": 10, "nodeName": "sample", "type": "Any"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "theta", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "c", "type": "float"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "tmp_theta", "type": "Any"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "inf", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "tmp_theta", "type": "Any"}, {"lineNumber": 309, "col_offset": 30, "nodeName": "inf", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "tmp_theta", "type": "Any"}, {"lineNumber": 313, "col_offset": 32, "nodeName": "inf", "type": "Any"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "samples", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "theta", "type": "Any"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 324, "col_offset": 10, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "new_model", "type": "Any"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "Prior", "type": "Any"}, {"lineNumber": 329, "col_offset": 21, "nodeName": "Simulator", "type": "Any"}, {"lineNumber": 329, "col_offset": 36, "nodeName": "simulator", "type": "Callable[..., Any]"}, {"lineNumber": 329, "col_offset": 47, "nodeName": "elfi_prior", "type": "Any"}, {"lineNumber": 329, "col_offset": 59, "nodeName": "dim", "type": "int"}, {"lineNumber": 330, "col_offset": 11, "nodeName": "Distance", "type": "Any"}, {"lineNumber": 330, "col_offset": 38, "nodeName": "elfi_simulator", "type": "Any"}, {"lineNumber": 334, "col_offset": 11, "nodeName": "ROMC", "type": "Any"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "dist", "type": "Any"}, {"lineNumber": 334, "col_offset": 27, "nodeName": "bounds", "type": "List[Tuple[float, float]]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "solve_problems", "type": "Any"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "estimate_regions", "type": "Any"}, {"lineNumber": 349, "col_offset": 10, "nodeName": "sample", "type": "Any"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 362, "col_offset": 19, "nodeName": "seed", "type": "int"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "get_model", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 11, "nodeName": "ROMC", "type": "Any"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "solve_problems", "type": "Any"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "estimate_regions", "type": "Any"}, {"lineNumber": 380, "col_offset": 10, "nodeName": "sample", "type": "Any"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "samples_cov", "type": "Any"}, {"lineNumber": 387, "col_offset": 10, "nodeName": "Rejection", "type": "Any"}, {"lineNumber": 387, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "sample", "type": "Any"}, {"lineNumber": 388, "col_offset": 24, "nodeName": "N", "type": "int"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "result", "type": "Any"}, {"lineNumber": 391, "col_offset": 20, "nodeName": "cov", "type": "Any"}, {"lineNumber": 391, "col_offset": 27, "nodeName": "T", "type": "Any"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 394, "col_offset": 23, "nodeName": "romc_mean", "type": "Any"}, {"lineNumber": 394, "col_offset": 34, "nodeName": "rejection_mean", "type": "Any"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 395, "col_offset": 23, "nodeName": "romc_cov", "type": "Any"}, {"lineNumber": 395, "col_offset": 33, "nodeName": "rejection_cov", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "ma2", "type": "module"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "n_obs", "type": "int"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "N", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "mean", "type": "Any"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "t1", "type": "Any"}, {"lineNumber": 38, "col_offset": 55, "nodeName": "true_params", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "mean", "type": "Any"}, {"lineNumber": 40, "col_offset": 50, "nodeName": "t2", "type": "Any"}, {"lineNumber": 40, "col_offset": 55, "nodeName": "true_params", "type": "Any"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "elfi", "type": "module"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "rej", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "quantile", "type": "float"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "res", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "elfi", "type": "module"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 69, "col_offset": 10, "nodeName": "rej", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "t", "type": "float"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "res", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 84, "col_offset": 10, "nodeName": "elfi", "type": "module"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "m", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "smc", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "thresholds", "type": "List[float]"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "res", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "AdaptiveDistance", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "elfi", "type": "module"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "m", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "ad_smc", "type": "Any"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "ad_res", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "populations", "type": "Any"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "m", "type": "Any"}, {"lineNumber": 119, "col_offset": 71, "nodeName": "m", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "elfi", "type": "module"}, {"lineNumber": 130, "col_offset": 10, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 139, "col_offset": 10, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "n", "type": "int"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "n", "type": "int"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "_neg_unnormalized_loglikelihood", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "stochastic_optimization", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "_neg_unnormalized_logposterior", "type": "Any"}, {"lineNumber": 157, "col_offset": 76, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 165, "col_offset": 52, "nodeName": "n_chains", "type": "int"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "res_sampling", "type": "Any"}, {"lineNumber": 167, "col_offset": 47, "nodeName": "n_chains", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "grad_mu", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "CustomPrior1", "type": "Type[elfi.examples.ma2.CustomPrior1]"}, {"lineNumber": 184, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "CustomPrior2", "type": "Type[elfi.examples.ma2.CustomPrior2]"}, {"lineNumber": 185, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 185, "col_offset": 58, "nodeName": "x", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "theta", "type": "Any"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "float", "type": "Any"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 215, "col_offset": 32, "nodeName": "theta", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "theta", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "theta", "type": "Any"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "theta", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "theta", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "theta", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 228, "col_offset": 34, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "theta", "type": "Any"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "theta", "type": "Any"}, {"lineNumber": 231, "col_offset": 34, "nodeName": "inf", "type": "Any"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "theta", "type": "Any"}, {"lineNumber": 236, "col_offset": 33, "nodeName": "dim", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "likelihood_sample", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 33, "nodeName": "theta", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 10, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "elfi", "type": "module"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "Prior", "type": "Type[Any]"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "elfi", "type": "module"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "elfi", "type": "module"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "elfi", "type": "module"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "romc", "type": "Any"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "n1", "type": "int"}, {"lineNumber": 257, "col_offset": 36, "nodeName": "seed", "type": "int"}, {"lineNumber": 257, "col_offset": 49, "nodeName": "use_bo", "type": "bool"}, {"lineNumber": 257, "col_offset": 72, "nodeName": "optimizer_args", "type": "Dict[nothing, nothing]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "romc", "type": "Any"}, {"lineNumber": 263, "col_offset": 37, "nodeName": "eps_filter", "type": "float"}, {"lineNumber": 263, "col_offset": 60, "nodeName": "fit_models", "type": "bool"}, {"lineNumber": 263, "col_offset": 88, "nodeName": "fit_models_args", "type": "Dict[str, int]"}, {"lineNumber": 267, "col_offset": 10, "nodeName": "romc", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "n2", "type": "int"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "compute_expectation", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "compute_expectation", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 297, "col_offset": 26, "nodeName": "theta", "type": "Any"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "float", "type": "Any"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 299, "col_offset": 32, "nodeName": "theta", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "theta", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "theta", "type": "Any"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "theta", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 308, "col_offset": 32, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "theta", "type": "Any"}, {"lineNumber": 309, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 311, "col_offset": 20, "nodeName": "theta", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 312, "col_offset": 34, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "theta", "type": "Any"}, {"lineNumber": 313, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 315, "col_offset": 27, "nodeName": "theta", "type": "Any"}, {"lineNumber": 315, "col_offset": 34, "nodeName": "inf", "type": "Any"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 320, "col_offset": 26, "nodeName": "theta", "type": "Any"}, {"lineNumber": 320, "col_offset": 33, "nodeName": "dim", "type": "Any"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "likelihood_sample", "type": "Callable[..., Any]"}, {"lineNumber": 321, "col_offset": 33, "nodeName": "theta", "type": "Any"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 324, "col_offset": 10, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "elfi", "type": "module"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "Prior", "type": "Type[Any]"}, {"lineNumber": 329, "col_offset": 21, "nodeName": "elfi", "type": "module"}, {"lineNumber": 330, "col_offset": 11, "nodeName": "elfi", "type": "module"}, {"lineNumber": 334, "col_offset": 11, "nodeName": "elfi", "type": "module"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "romc", "type": "Any"}, {"lineNumber": 341, "col_offset": 27, "nodeName": "n1", "type": "int"}, {"lineNumber": 341, "col_offset": 36, "nodeName": "seed", "type": "int"}, {"lineNumber": 341, "col_offset": 49, "nodeName": "use_bo", "type": "bool"}, {"lineNumber": 341, "col_offset": 72, "nodeName": "optimizer_args", "type": "Dict[nothing, nothing]"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "romc", "type": "Any"}, {"lineNumber": 346, "col_offset": 37, "nodeName": "eps_filter", "type": "float"}, {"lineNumber": 346, "col_offset": 60, "nodeName": "fit_models", "type": "bool"}, {"lineNumber": 346, "col_offset": 88, "nodeName": "fit_models_args", "type": "Dict[str, int]"}, {"lineNumber": 349, "col_offset": 10, "nodeName": "romc", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "n2", "type": "int"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 23, "nodeName": "compute_expectation", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 353, "col_offset": 23, "nodeName": "compute_expectation", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "ma2", "type": "module"}, {"lineNumber": 363, "col_offset": 35, "nodeName": "seed", "type": "int"}, {"lineNumber": 367, "col_offset": 11, "nodeName": "elfi", "type": "module"}, {"lineNumber": 367, "col_offset": 35, "nodeName": "bounds", "type": "List[Tuple[int, int]]"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "romc", "type": "Any"}, {"lineNumber": 372, "col_offset": 27, "nodeName": "n1", "type": "int"}, {"lineNumber": 372, "col_offset": 36, "nodeName": "seed", "type": "int"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "romc", "type": "Any"}, {"lineNumber": 376, "col_offset": 37, "nodeName": "eps_filter", "type": "float"}, {"lineNumber": 380, "col_offset": 10, "nodeName": "romc", "type": "Any"}, {"lineNumber": 380, "col_offset": 25, "nodeName": "n2", "type": "int"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "romc", "type": "Any"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 387, "col_offset": 10, "nodeName": "elfi", "type": "module"}, {"lineNumber": 387, "col_offset": 77, "nodeName": "seed", "type": "int"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "rej", "type": "Any"}, {"lineNumber": 391, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 391, "col_offset": 27, "nodeName": "samples_array", "type": "Any"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "values", "type": "Callable"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "t1", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "unique", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "discrepancies", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "N", "type": "int"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "quantile", "type": "float"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "unique", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "discrepancies", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "populations", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "elfi", "type": "module"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "m", "type": "Any"}, {"lineNumber": 98, "col_offset": 49, "nodeName": "m", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "ad_res", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "populations", "type": "Any"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "post", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "_gradient_neg_unnormalized_loglikelihood", "type": "Any"}, {"lineNumber": 150, "col_offset": 14, "nodeName": "prior", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "n_inits", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "max_opt_iters", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "post", "type": "Any"}, {"lineNumber": 157, "col_offset": 76, "nodeName": "model", "type": "Any"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 49, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 51, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "ma2", "type": "module"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "ma2", "type": "module"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "prior", "type": "Any"}, {"lineNumber": 187, "col_offset": 59, "nodeName": "x", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "size", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "pdf", "type": "Any"}, {"lineNumber": 204, "col_offset": 53, "nodeName": "theta", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 207, "col_offset": 56, "nodeName": "theta", "type": "Any"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "theta", "type": "Any"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 87, "nodeName": "seed", "type": "Any"}, {"lineNumber": 224, "col_offset": 86, "nodeName": "seed", "type": "Any"}, {"lineNumber": 228, "col_offset": 87, "nodeName": "seed", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 45, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 245, "col_offset": 73, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 245, "col_offset": 88, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "romc", "type": "Any"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "romc", "type": "Any"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "size", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "pdf", "type": "Any"}, {"lineNumber": 288, "col_offset": 53, "nodeName": "theta", "type": "Any"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 291, "col_offset": 56, "nodeName": "theta", "type": "Any"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "theta", "type": "Any"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 87, "nodeName": "seed", "type": "Any"}, {"lineNumber": 308, "col_offset": 86, "nodeName": "seed", "type": "Any"}, {"lineNumber": 312, "col_offset": 87, "nodeName": "seed", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 321, "col_offset": 45, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 329, "col_offset": 73, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 329, "col_offset": 88, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 352, "col_offset": 23, "nodeName": "romc", "type": "Any"}, {"lineNumber": 353, "col_offset": 23, "nodeName": "romc", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "romc", "type": "Any"}, {"lineNumber": 391, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "t1", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "true_params", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "t2", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "true_params", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "ad_res", "type": "Any"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "log", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 135, "col_offset": 36, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 136, "col_offset": 36, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 141, "col_offset": 52, "nodeName": "n", "type": "int"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "post", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "post", "type": "Any"}, {"lineNumber": 150, "col_offset": 14, "nodeName": "post", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "post", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "post", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "post", "type": "Any"}, {"lineNumber": 157, "col_offset": 76, "nodeName": "post", "type": "Any"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "post", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 201, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 201, "col_offset": 77, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "theta", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "theta", "type": "Any"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "norm", "type": "Any"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "theta", "type": "Any"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "theta", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "theta", "type": "Any"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "norm", "type": "Any"}, {"lineNumber": 225, "col_offset": 14, "nodeName": "theta", "type": "Any"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "theta", "type": "Any"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "inf", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "theta", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "inf", "type": "Any"}, {"lineNumber": 228, "col_offset": 34, "nodeName": "norm", "type": "Any"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "theta", "type": "Any"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "inf", "type": "Any"}, {"lineNumber": 245, "col_offset": 73, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 285, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 285, "col_offset": 77, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 303, "col_offset": 26, "nodeName": "theta", "type": "Any"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "theta", "type": "Any"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "norm", "type": "Any"}, {"lineNumber": 305, "col_offset": 14, "nodeName": "theta", "type": "Any"}, {"lineNumber": 307, "col_offset": 26, "nodeName": "theta", "type": "Any"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "theta", "type": "Any"}, {"lineNumber": 308, "col_offset": 32, "nodeName": "norm", "type": "Any"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "theta", "type": "Any"}, {"lineNumber": 311, "col_offset": 26, "nodeName": "theta", "type": "Any"}, {"lineNumber": 311, "col_offset": 34, "nodeName": "inf", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "theta", "type": "Any"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "inf", "type": "Any"}, {"lineNumber": 312, "col_offset": 34, "nodeName": "norm", "type": "Any"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "theta", "type": "Any"}, {"lineNumber": 313, "col_offset": 22, "nodeName": "inf", "type": "Any"}, {"lineNumber": 329, "col_offset": 73, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "res", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "res", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "post_ml", "type": "Any"}, {"lineNumber": 158, "col_offset": 59, "nodeName": "post_ml", "type": "Any"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "post_map", "type": "Any"}, {"lineNumber": 160, "col_offset": 61, "nodeName": "post_map", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "size", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "ss", "type": "Any"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "ss", "type": "Any"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 34, "nodeName": "ss", "type": "Any"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 60, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 270, "col_offset": 71, "nodeName": "x", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 39, "nodeName": "size", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "ss", "type": "Any"}, {"lineNumber": 308, "col_offset": 32, "nodeName": "ss", "type": "Any"}, {"lineNumber": 311, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 312, "col_offset": 34, "nodeName": "ss", "type": "Any"}, {"lineNumber": 313, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 60, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 352, "col_offset": 71, "nodeName": "x", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "ss", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "ss", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "ss", "type": "Any"}, {"lineNumber": 220, "col_offset": 58, "nodeName": "c", "type": "float"}, {"lineNumber": 224, "col_offset": 44, "nodeName": "tmp_theta", "type": "Any"}, {"lineNumber": 228, "col_offset": 46, "nodeName": "tmp_theta", "type": "Any"}, {"lineNumber": 228, "col_offset": 58, "nodeName": "c", "type": "float"}, {"lineNumber": 270, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 60, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 271, "col_offset": 71, "nodeName": "x", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "ss", "type": "Any"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "ss", "type": "Any"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "ss", "type": "Any"}, {"lineNumber": 304, "col_offset": 58, "nodeName": "c", "type": "float"}, {"lineNumber": 308, "col_offset": 44, "nodeName": "tmp_theta", "type": "Any"}, {"lineNumber": 312, "col_offset": 46, "nodeName": "tmp_theta", "type": "Any"}, {"lineNumber": 312, "col_offset": 58, "nodeName": "c", "type": "float"}, {"lineNumber": 352, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 353, "col_offset": 60, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 353, "col_offset": 71, "nodeName": "x", "type": "Any"}, {"lineNumber": 220, "col_offset": 46, "nodeName": "tmp_theta", "type": "Any"}, {"lineNumber": 271, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 46, "nodeName": "tmp_theta", "type": "Any"}, {"lineNumber": 353, "col_offset": 60, "nodeName": "np", "type": "module"}]