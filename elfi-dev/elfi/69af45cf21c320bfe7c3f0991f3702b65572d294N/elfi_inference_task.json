[{"lineNumber": 4, "col_offset": 20, "nodeName": "Graph", "type": "Type[elfi.graph.Graph]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "default_task_index", "type": "int"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "parameters", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "name", "type": "None"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "seed", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "sub_stream_index", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "sub_stream_index", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "sub_stream_index", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "sub_stream_index", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "ds", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "nodes", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "nodes", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "name", "type": "Union[str, Any]"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "name", "type": "Union[str, Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "InferenceTask"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "InferenceTask"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "_set_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "InferenceTask"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "InferenceTask"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "InferenceTask"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "self", "type": "InferenceTask"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "_find_by_class", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "Discrepancy", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "ds", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "values", "type": "Callable"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "default_task_index", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "InferenceTask"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "InferenceTask"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "elfi", "type": "module"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "ds", "type": "Any"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "nodes", "type": "Dict[Any, Any]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "node_class", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "InferenceTask", "type": "Type[InferenceTask]"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "self", "type": "InferenceTask"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "ds", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "self", "type": "InferenceTask"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "n", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "default_task_index", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "InferenceTask"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "nodes", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "self", "type": "InferenceTask"}]