[{"lineNumber": 11, "col_offset": 0, "nodeName": "test_npy_persisted_array", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "test_array_pool", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "original", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "arr", "type": "elfi.store.NpyPersistedArray"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "read", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "arr", "type": "elfi.store.NpyPersistedArray"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "append", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "append2", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "read", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "arr", "type": "elfi.store.NpyPersistedArray"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "pool", "type": "elfi.store.ArrayPool"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "p", "type": "float"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "rej", "type": "Any"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 16, "col_offset": 10, "nodeName": "NpyPersistedArray", "type": "Type[elfi.store.NpyPersistedArray]"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "filename", "type": "str"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "append", "type": "Callable[[Any], None]"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "original", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "arr", "type": "elfi.store.NpyPersistedArray"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "original", "type": "Any"}, {"lineNumber": 19, "col_offset": 36, "nodeName": "read", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "load", "type": "Any"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "filename", "type": "str"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "original", "type": "Any"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 25, "col_offset": 10, "nodeName": "NpyPersistedArray", "type": "Type[elfi.store.NpyPersistedArray]"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "filename", "type": "str"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "append", "type": "Callable[[Any], None]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "append", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "load", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "filename", "type": "str"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 30, "col_offset": 51, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "append", "type": "Callable[[Any], None]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "append2", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "arr", "type": "elfi.store.NpyPersistedArray"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 35, "col_offset": 60, "nodeName": "read", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "load", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "filename", "type": "str"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 38, "col_offset": 60, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 41, "col_offset": 10, "nodeName": "NpyPersistedArray", "type": "Type[elfi.store.NpyPersistedArray]"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "filename", "type": "str"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "append", "type": "Callable[[Any], None]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "append", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "load", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "filename", "type": "str"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "append", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "filename", "type": "str"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "ArrayPool", "type": "Type[elfi.store.ArrayPool]"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "Rejection", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "sample", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "destroy", "type": "Callable[[], None]"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "arr", "type": "elfi.store.NpyPersistedArray"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "arr", "type": "elfi.store.NpyPersistedArray"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "arr", "type": "elfi.store.NpyPersistedArray"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "arr", "type": "elfi.store.NpyPersistedArray"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "r_", "type": "Any"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "arr", "type": "elfi.store.NpyPersistedArray"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "r_", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "arr", "type": "elfi.store.NpyPersistedArray"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "r_", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "arr", "type": "elfi.store.NpyPersistedArray"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "arr", "type": "elfi.store.NpyPersistedArray"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "elfi", "type": "module"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "ma2", "type": "Any"}, {"lineNumber": 54, "col_offset": 56, "nodeName": "pool", "type": "elfi.store.ArrayPool"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "rej", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "p", "type": "float"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "N", "type": "int"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "p", "type": "float"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "N", "type": "int"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "p", "type": "float"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "pool", "type": "elfi.store.ArrayPool"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "pool", "type": "elfi.store.ArrayPool"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "path", "type": "str"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "pool", "type": "elfi.store.ArrayPool"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "pool", "type": "elfi.store.ArrayPool"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "pool", "type": "elfi.store.ArrayPool"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "original", "type": "Any"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "append", "type": "Any"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "original", "type": "Any"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "append", "type": "Any"}, {"lineNumber": 35, "col_offset": 50, "nodeName": "append2", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "original", "type": "Any"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "append", "type": "Any"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "append2", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "os", "type": "module"}]