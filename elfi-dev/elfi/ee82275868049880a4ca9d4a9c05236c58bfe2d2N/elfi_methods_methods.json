[{"lineNumber": 15, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "pool", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "init_inference", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "update", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "prepare_new_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "extract_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "estimated_total_batches", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "iterate", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "finished", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "allow_submit", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "has_batches_to_submit", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "InferenceMethod", "type": "Type[InferenceMethod]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "sample", "type": "Callable[..., Any]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "init_inference", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "update", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "extract_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "estimated_total_batches", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "_init_outputs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "_merge_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 285, "col_offset": 27, "nodeName": "InferenceMethod", "type": "Type[InferenceMethod]"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "init_inference", "type": "Callable[..., Any]"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "update", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "prepare_new_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "extract_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "estimated_total_batches", "type": "Callable[[Any], Any]"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "get_posterior", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "InferenceMethod", "type": "Type[InferenceMethod]"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "get_posterior", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "context", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "pool", "type": "Union[Any, elfi.store.OutputPool]"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "pool", "type": "Union[Any, elfi.store.OutputPool]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "context", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "client", "type": "module"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "state", "type": "None"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "objective", "type": "None"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "pool", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "allow_submit", "type": "Any"}, {"lineNumber": 141, "col_offset": 62, "nodeName": "NodeReference", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "accept_rate", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "ks", "type": "List[str]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "total", "type": "int"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 267, "col_offset": 32, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "sort_mask", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "pool", "type": "Union[Any, elfi.store.OutputPool]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 325, "col_offset": 21, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "acquisition_method", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 343, "col_offset": 28, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 344, "col_offset": 34, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 346, "col_offset": 31, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "current", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "next_update", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "pending_batches", "type": "Dict[Any, Union[Any, Dict[Any, Any]]]"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 376, "col_offset": 27, "nodeName": "pending", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "pending_params", "type": "List[List[Any]]"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "output", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "pending_params", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 53, "col_offset": 69, "nodeName": "model", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "copy", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "seed", "type": "None"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "seed", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "context", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "context", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "get", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "BatchHandler", "type": "Type[elfi.client.BatchHandler]"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "max_parallel_batches", "type": "None"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "init_inference", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "finished", "type": "bool"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "extract_result", "type": "Callable[[], Any]"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "next_index", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "has_batches_to_submit", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "estimated_total_batches", "type": "Any"}, {"lineNumber": 138, "col_offset": 46, "nodeName": "total", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "NodeReference", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 184, "col_offset": 61, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 187, "col_offset": 47, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "p", "type": "float"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "_merge_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "state", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "num_ready", "type": "Any"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "objective", "type": "Any"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 243, "col_offset": 14, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "total", "type": "Any"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 273, "col_offset": 18, "nodeName": "state", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 49, "nodeName": "model", "type": "Any"}, {"lineNumber": 314, "col_offset": 56, "nodeName": "target", "type": "Any"}, {"lineNumber": 315, "col_offset": 18, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "pool", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 320, "col_offset": 51, "nodeName": "model", "type": "Any"}, {"lineNumber": 325, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 336, "col_offset": 11, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "init_acquisition", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "init_acquisition", "type": "None"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 341, "col_offset": 34, "nodeName": "acquisition_method", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 349, "col_offset": 21, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 349, "col_offset": 30, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 350, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 357, "col_offset": 18, "nodeName": "n_observations", "type": "Any"}, {"lineNumber": 357, "col_offset": 53, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 358, "col_offset": 50, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "optimize", "type": "bool"}, {"lineNumber": 362, "col_offset": 40, "nodeName": "current", "type": "Any"}, {"lineNumber": 363, "col_offset": 14, "nodeName": "optimize", "type": "bool"}, {"lineNumber": 365, "col_offset": 17, "nodeName": "atleast_2d", "type": "Any"}, {"lineNumber": 366, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 366, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "update", "type": "Union[Callable[..., None], Any]"}, {"lineNumber": 372, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 372, "col_offset": 61, "nodeName": "optimize", "type": "bool"}, {"lineNumber": 376, "col_offset": 27, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 382, "col_offset": 22, "nodeName": "values", "type": "Callable"}, {"lineNumber": 384, "col_offset": 54, "nodeName": "pending_params", "type": "List[List[Any]]"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "total", "type": "Any"}, {"lineNumber": 386, "col_offset": 33, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 387, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "new_param", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "new_param", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "add_batch", "type": "Union[Any, Callable[[Any, Any], None]]"}, {"lineNumber": 393, "col_offset": 28, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 396, "col_offset": 27, "nodeName": "stochastic_optimization", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 396, "col_offset": 51, "nodeName": "predict_mean", "type": "Union[Callable[[Sized], Any], Any]"}, {"lineNumber": 397, "col_offset": 51, "nodeName": "bounds", "type": "Union[Sized, List[Tuple[int, int]], Any]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 399, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 407, "col_offset": 28, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 421, "col_offset": 15, "nodeName": "BolfiPosterior", "type": "Type[elfi.methods.posteriors.BolfiPosterior]"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 421, "col_offset": 49, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 476, "col_offset": 15, "nodeName": "BolfiPosterior", "type": "Type[elfi.methods.posteriors.BolfiPosterior]"}, {"lineNumber": 476, "col_offset": 30, "nodeName": "discrepancy_model", "type": "Any"}, {"lineNumber": 476, "col_offset": 54, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "NodeReference", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "context", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "client", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "client", "type": "module"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 72, "col_offset": 68, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 84, "nodeName": "client", "type": "Any"}, {"lineNumber": 74, "col_offset": 60, "nodeName": "num_cores", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "iterate", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "prepare_new_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "submit", "type": "Callable[[], None]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "wait_next", "type": "Callable[[], Tuple[Any, int]]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "batch", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "has_ready", "type": "bool"}, {"lineNumber": 128, "col_offset": 54, "nodeName": "has_batches_to_submit", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "has_ready", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 46, "nodeName": "batches", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "ElfiModel", "type": "Any"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "target", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "target", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "default_reference_class", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 187, "col_offset": 58, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 209, "col_offset": 40, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 209, "col_offset": 53, "nodeName": "p", "type": "Union[Any, float]"}, {"lineNumber": 209, "col_offset": 66, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "state", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "_init_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "state", "type": "Any"}, {"lineNumber": 221, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "accept_rate", "type": "Any"}, {"lineNumber": 236, "col_offset": 32, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 243, "col_offset": 53, "nodeName": "k", "type": "str"}, {"lineNumber": 243, "col_offset": 60, "nodeName": "k", "type": "str"}, {"lineNumber": 243, "col_offset": 65, "nodeName": "ks", "type": "List[str]"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "total", "type": "Any"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "total", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 266, "col_offset": 47, "nodeName": "inf", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 273, "col_offset": 18, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 277, "col_offset": 46, "nodeName": "batch", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 315, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 315, "col_offset": 38, "nodeName": "target", "type": "Any"}, {"lineNumber": 318, "col_offset": 23, "nodeName": "OutputPool", "type": "Type[elfi.store.OutputPool]"}, {"lineNumber": 320, "col_offset": 66, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 321, "col_offset": 62, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 321, "col_offset": 79, "nodeName": "pool", "type": "Union[elfi.store.OutputPool, Any]"}, {"lineNumber": 322, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 325, "col_offset": 21, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "param", "type": "Any"}, {"lineNumber": 326, "col_offset": 28, "nodeName": "pool", "type": "Union[Any, elfi.store.OutputPool]"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "GPyRegression", "type": "Type[elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 332, "col_offset": 26, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 332, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 334, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 337, "col_offset": 36, "nodeName": "UniformAcquisition", "type": "Any"}, {"lineNumber": 337, "col_offset": 55, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 341, "col_offset": 56, "nodeName": "LCBSC", "type": "Any"}, {"lineNumber": 341, "col_offset": 62, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 349, "col_offset": 30, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 357, "col_offset": 18, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 357, "col_offset": 53, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "state", "type": "Any"}, {"lineNumber": 358, "col_offset": 50, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "current", "type": "Any"}, {"lineNumber": 360, "col_offset": 22, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 360, "col_offset": 50, "nodeName": "current", "type": "Any"}, {"lineNumber": 360, "col_offset": 61, "nodeName": "next_update", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 365, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 366, "col_offset": 23, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 372, "col_offset": 41, "nodeName": "batch", "type": "Any"}, {"lineNumber": 376, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 377, "col_offset": 43, "nodeName": "get_batch", "type": "Union[Any, Callable[..., Dict[Any, Any]]]"}, {"lineNumber": 378, "col_offset": 63, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 382, "col_offset": 22, "nodeName": "pending_batches", "type": "Dict[Any, Union[Any, Dict[Any, Any]]]"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 384, "col_offset": 35, "nodeName": "pending_params", "type": "List[List[Any]]"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 386, "col_offset": 33, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 388, "col_offset": 24, "nodeName": "acquire", "type": "Any"}, {"lineNumber": 388, "col_offset": 59, "nodeName": "pending_params", "type": "Any"}, {"lineNumber": 388, "col_offset": 75, "nodeName": "t", "type": "Any"}, {"lineNumber": 390, "col_offset": 24, "nodeName": "acquire", "type": "Any"}, {"lineNumber": 390, "col_offset": 57, "nodeName": "pending_params", "type": "Any"}, {"lineNumber": 390, "col_offset": 73, "nodeName": "t", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "pool", "type": "Union[Any, elfi.store.OutputPool]"}, {"lineNumber": 393, "col_offset": 41, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 396, "col_offset": 51, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 397, "col_offset": 51, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 401, "col_offset": 24, "nodeName": "atleast_1d", "type": "Any"}, {"lineNumber": 403, "col_offset": 28, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 407, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 476, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 56, "col_offset": 69, "nodeName": "model", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "elfi", "type": "module"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "elfi", "type": "module"}, {"lineNumber": 72, "col_offset": 84, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 74, "col_offset": 60, "nodeName": "client", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "pending", "type": "Any"}, {"lineNumber": 128, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 47, "nodeName": "pending", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "batches", "type": "Any"}, {"lineNumber": 138, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "target", "type": "Any"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "Rejection", "type": "Type[Rejection]"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 231, "col_offset": 28, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "objective", "type": "Any"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 247, "col_offset": 33, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 249, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "n_current", "type": "int"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "total", "type": "int"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 266, "col_offset": 30, "nodeName": "ones", "type": "Any"}, {"lineNumber": 266, "col_offset": 38, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 266, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 52, "nodeName": "k", "type": "Any"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "sort_mask", "type": "Any"}, {"lineNumber": 315, "col_offset": 38, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 320, "col_offset": 14, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 320, "col_offset": 36, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 326, "col_offset": 28, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "add_store", "type": "Union[Any, Callable[..., None]]"}, {"lineNumber": 327, "col_offset": 36, "nodeName": "param", "type": "Any"}, {"lineNumber": 330, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 330, "col_offset": 46, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 330, "col_offset": 77, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 357, "col_offset": 18, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 360, "col_offset": 22, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 365, "col_offset": 32, "nodeName": "batch", "type": "Any"}, {"lineNumber": 365, "col_offset": 49, "nodeName": "param", "type": "Any"}, {"lineNumber": 365, "col_offset": 58, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 367, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 367, "col_offset": 62, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 372, "col_offset": 47, "nodeName": "target", "type": "Any"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 377, "col_offset": 43, "nodeName": "pool", "type": "Union[Any, elfi.store.OutputPool]"}, {"lineNumber": 378, "col_offset": 63, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "pending_params", "type": "List[List[Any]]"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 388, "col_offset": 24, "nodeName": "acquisition_method", "type": "Any"}, {"lineNumber": 390, "col_offset": 24, "nodeName": "init_acquisition", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 393, "col_offset": 46, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 393, "col_offset": 50, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 396, "col_offset": 51, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 397, "col_offset": 51, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 401, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 401, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 60, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "batches", "type": "Any"}, {"lineNumber": 132, "col_offset": 47, "nodeName": "batches", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "n_current", "type": "Any"}, {"lineNumber": 264, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 266, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 14, "nodeName": "objective", "type": "Any"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "pool", "type": "Union[Any, elfi.store.OutputPool]"}, {"lineNumber": 330, "col_offset": 46, "nodeName": "model", "type": "Any"}, {"lineNumber": 365, "col_offset": 38, "nodeName": "param", "type": "Any"}, {"lineNumber": 365, "col_offset": 58, "nodeName": "model", "type": "Any"}, {"lineNumber": 369, "col_offset": 62, "nodeName": "params", "type": "Any"}, {"lineNumber": 372, "col_offset": 47, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 377, "col_offset": 43, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 383, "col_offset": 35, "nodeName": "output", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 383, "col_offset": 53, "nodeName": "param", "type": "Any"}, {"lineNumber": 383, "col_offset": 62, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 388, "col_offset": 24, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 390, "col_offset": 24, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 393, "col_offset": 50, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 393, "col_offset": 67, "nodeName": "new_param", "type": "Any"}, {"lineNumber": 401, "col_offset": 39, "nodeName": "param", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 256, "col_offset": 31, "nodeName": "n_current", "type": "Any"}, {"lineNumber": 256, "col_offset": 43, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "objective", "type": "Any"}, {"lineNumber": 264, "col_offset": 51, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "batch", "type": "Any"}, {"lineNumber": 277, "col_offset": 14, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 330, "col_offset": 46, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 365, "col_offset": 58, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 369, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 383, "col_offset": 42, "nodeName": "param", "type": "Any"}, {"lineNumber": 383, "col_offset": 62, "nodeName": "model", "type": "Any"}, {"lineNumber": 401, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 78, "nodeName": "t", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 265, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 368, "col_offset": 62, "nodeName": "batch", "type": "Any"}, {"lineNumber": 368, "col_offset": 81, "nodeName": "i", "type": "int"}, {"lineNumber": 383, "col_offset": 62, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 368, "col_offset": 68, "nodeName": "target", "type": "Any"}, {"lineNumber": 254, "col_offset": 35, "nodeName": "state", "type": "Any"}, {"lineNumber": 254, "col_offset": 57, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 368, "col_offset": 68, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 254, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 57, "nodeName": "self", "type": "Any"}]