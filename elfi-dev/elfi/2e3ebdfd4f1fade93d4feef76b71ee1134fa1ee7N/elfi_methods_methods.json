[{"lineNumber": 22, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 397, "col_offset": 14, "nodeName": "InferenceMethod", "type": "Type[InferenceMethod]"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 593, "col_offset": 10, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 728, "col_offset": 27, "nodeName": "InferenceMethod", "type": "Type[InferenceMethod]"}, {"lineNumber": 939, "col_offset": 12, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "computation_context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "client", "type": "module"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "pool", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "seed", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 230, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "vis_opt", "type": "Dict[nothing, nothing]"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "vis", "type": "None"}, {"lineNumber": 317, "col_offset": 14, "nodeName": "_allow_submit", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "batch_", "type": "Any"}, {"lineNumber": 364, "col_offset": 22, "nodeName": "batches", "type": "Union[List[Any], Any]"}, {"lineNumber": 370, "col_offset": 62, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 391, "col_offset": 19, "nodeName": "required_outputs", "type": "Any"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 467, "col_offset": 11, "nodeName": "quantile", "type": "Union[float, Any]"}, {"lineNumber": 470, "col_offset": 11, "nodeName": "n_sim", "type": "Union[int, Any]"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 514, "col_offset": 15, "nodeName": "result", "type": "elfi.results.result.Result"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 519, "col_offset": 20, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 536, "col_offset": 32, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "sort_mask", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 559, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "accept_rate_t", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "margin", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "_rejection", "type": "None"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 625, "col_offset": 15, "nodeName": "result", "type": "elfi.results.result.ResultSMC"}, {"lineNumber": 630, "col_offset": 11, "nodeName": "finished", "type": "Any"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 649, "col_offset": 15, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "dashes", "type": "str"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "method_name", "type": "str"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 669, "col_offset": 22, "nodeName": "w", "type": "Any"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "cov", "type": "Any"}, {"lineNumber": 670, "col_offset": 18, "nodeName": "cov", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 672, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 675, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 678, "col_offset": 11, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "cov", "type": "Any"}, {"lineNumber": 691, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 691, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 693, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "n_batches", "type": "nothing"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "pdfs", "type": "List[elfi.model.elfi_model.Operation]"}, {"lineNumber": 708, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 708, "col_offset": 17, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "params_", "type": "Any"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "n_initial_required", "type": "Any"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "_n_precomputed", "type": "int"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "acquisition_method", "type": "elfi.bo.acquisition.LCBSC"}, {"lineNumber": 787, "col_offset": 8, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 787, "col_offset": 26, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "target_model", "type": "elfi.bo.gpy_regression.GPyRegression"}, {"lineNumber": 788, "col_offset": 28, "nodeName": "target_model", "type": "elfi.bo.gpy_regression.GPyRegression"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 789, "col_offset": 34, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "update_interval", "type": "int"}, {"lineNumber": 790, "col_offset": 31, "nodeName": "update_interval", "type": "int"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 807, "col_offset": 8, "nodeName": "param_hat", "type": "Dict[Any, Any]"}, {"lineNumber": 819, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 825, "col_offset": 11, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 829, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 838, "col_offset": 8, "nodeName": "new_param", "type": "Any"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 842, "col_offset": 45, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 844, "col_offset": 15, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 860, "col_offset": 8, "nodeName": "current", "type": "Any"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "next_update", "type": "Any"}, {"lineNumber": 865, "col_offset": 8, "nodeName": "str", "type": "str"}, {"lineNumber": 866, "col_offset": 8, "nodeName": "fill", "type": "str"}, {"lineNumber": 867, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 875, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 879, "col_offset": 8, "nodeName": "gp", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 879, "col_offset": 13, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 890, "col_offset": 8, "nodeName": "point", "type": "Any"}, {"lineNumber": 894, "col_offset": 8, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 905, "col_offset": 8, "nodeName": "acq", "type": "Callable[[Any], Any]"}, {"lineNumber": 922, "col_offset": 8, "nodeName": "n_plots", "type": "Any"}, {"lineNumber": 922, "col_offset": 18, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 923, "col_offset": 8, "nodeName": "ncols", "type": "Union[Any, int]"}, {"lineNumber": 924, "col_offset": 8, "nodeName": "nrows", "type": "Union[Any, int]"}, {"lineNumber": 926, "col_offset": 8, "nodeName": "shape", "type": "Tuple[Any, Any]"}, {"lineNumber": 928, "col_offset": 8, "nodeName": "axes", "type": "Any"}, {"lineNumber": 930, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 936, "col_offset": 15, "nodeName": "axes", "type": "Any"}, {"lineNumber": 988, "col_offset": 8, "nodeName": "acquisition_method", "type": "Union[Any, elfi.bo.acquisition.LCBSC]"}, {"lineNumber": 1053, "col_offset": 8, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1054, "col_offset": 8, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1065, "col_offset": 8, "nodeName": "is_sampling", "type": "bool"}, {"lineNumber": 1067, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 1068, "col_offset": 8, "nodeName": "tasks_ids", "type": "List[Any]"}, {"lineNumber": 1071, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 1078, "col_offset": 8, "nodeName": "chains", "type": "List[Any]"}, {"lineNumber": 1079, "col_offset": 12, "nodeName": "id", "type": "Any"}, {"lineNumber": 1079, "col_offset": 18, "nodeName": "tasks_ids", "type": "List[Any]"}, {"lineNumber": 1082, "col_offset": 8, "nodeName": "chains", "type": "Any"}, {"lineNumber": 1089, "col_offset": 8, "nodeName": "is_sampling", "type": "bool"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 145, "col_offset": 69, "nodeName": "model", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "copy", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "ComputationContext", "type": "Type[elfi.model.elfi_model.ComputationContext]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "get_client", "type": "Callable[[], Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "BatchHandler", "type": "Type[elfi.client.BatchHandler]"}, {"lineNumber": 162, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "max_parallel_batches", "type": "None"}, {"lineNumber": 163, "col_offset": 60, "nodeName": "num_cores", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 283, "col_offset": 18, "nodeName": "vis", "type": "None"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "init_inference", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "finished", "type": "Any"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "vis", "type": "None"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "cancel_pending", "type": "Callable[[], None]"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "extract_result", "type": "Callable[[], Any]"}, {"lineNumber": 317, "col_offset": 14, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "next_index", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "wait_next", "type": "Callable[[], Tuple[Any, int]]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 324, "col_offset": 27, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "_has_batches_to_submit", "type": "Any"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "batches", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 361, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 361, "col_offset": 29, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 367, "col_offset": 25, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 376, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 376, "col_offset": 29, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 377, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 380, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 380, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 386, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 390, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 438, "col_offset": 15, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 438, "col_offset": 34, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 438, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 438, "col_offset": 61, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 439, "col_offset": 18, "nodeName": "_ensure_outputs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 439, "col_offset": 39, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 440, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 440, "col_offset": 47, "nodeName": "outputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 463, "col_offset": 12, "nodeName": "quantile", "type": "float"}, {"lineNumber": 464, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 467, "col_offset": 21, "nodeName": "n_sim", "type": "int"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "n_batches", "type": "int"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 473, "col_offset": 24, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 475, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "_merge_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 485, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "_update_state_meta", "type": "Callable[[], Any]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "_update_objective", "type": "Callable[[], Any]"}, {"lineNumber": 500, "col_offset": 20, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 501, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 502, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 502, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 505, "col_offset": 17, "nodeName": "Result", "type": "Type[elfi.results.result.Result]"}, {"lineNumber": 519, "col_offset": 20, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 542, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 545, "col_offset": 18, "nodeName": "v", "type": "Any"}, {"lineNumber": 545, "col_offset": 23, "nodeName": "items", "type": "Any"}, {"lineNumber": 549, "col_offset": 20, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 550, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 550, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 559, "col_offset": 22, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 560, "col_offset": 25, "nodeName": "item", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 561, "col_offset": 27, "nodeName": "min", "type": "Callable"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 568, "col_offset": 11, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 572, "col_offset": 11, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 574, "col_offset": 24, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 577, "col_offset": 59, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 579, "col_offset": 38, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 579, "col_offset": 43, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 584, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "plot_sample", "type": "Callable[..., None]"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 595, "col_offset": 15, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 595, "col_offset": 34, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 595, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 595, "col_offset": 61, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 596, "col_offset": 18, "nodeName": "_ensure_outputs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 596, "col_offset": 39, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 597, "col_offset": 15, "nodeName": "added_nodes", "type": "List[str]"}, {"lineNumber": 597, "col_offset": 29, "nodeName": "_augment_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 597, "col_offset": 49, "nodeName": "model", "type": "Any"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 599, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "_new_round", "type": "Callable[[], Any]"}, {"lineNumber": 613, "col_offset": 14, "nodeName": "_extract_population", "type": "Callable[[], Any]"}, {"lineNumber": 615, "col_offset": 17, "nodeName": "ResultSMC", "type": "Type[elfi.results.result.ResultSMC]"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 628, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 628, "col_offset": 38, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 630, "col_offset": 11, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "_update_state", "type": "Callable[[], Any]"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "_update_objective", "type": "Callable[[], Any]"}, {"lineNumber": 646, "col_offset": 17, "nodeName": "rvs", "type": "Callable[..., Any]"}, {"lineNumber": 648, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 655, "col_offset": 26, "nodeName": "Rejection", "type": "Type[Rejection]"}, {"lineNumber": 655, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "init_inference", "type": "Callable[..., Any]"}, {"lineNumber": 666, "col_offset": 14, "nodeName": "extract_result", "type": "Any"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 668, "col_offset": 11, "nodeName": "cov", "type": "Any"}, {"lineNumber": 668, "col_offset": 17, "nodeName": "_compute_weights_and_cov", "type": "Callable[[Any], Any]"}, {"lineNumber": 668, "col_offset": 47, "nodeName": "pop", "type": "Any"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 671, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 675, "col_offset": 18, "nodeName": "pop", "type": "Any"}, {"lineNumber": 676, "col_offset": 17, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 678, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 682, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "w", "type": "Any"}, {"lineNumber": 686, "col_offset": 18, "nodeName": "cov", "type": "Any"}, {"lineNumber": 691, "col_offset": 12, "nodeName": "self", "type": "SMC"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 693, "col_offset": 22, "nodeName": "self", "type": "SMC"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 696, "col_offset": 27, "nodeName": "state", "type": "Any"}, {"lineNumber": 700, "col_offset": 20, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "objective", "type": "Any"}, {"lineNumber": 701, "col_offset": 38, "nodeName": "n_batches", "type": "nothing"}, {"lineNumber": 706, "col_offset": 16, "nodeName": "copy", "type": "Any"}, {"lineNumber": 708, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 709, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "Operation", "type": "Type[elfi.model.elfi_model.Operation]"}, {"lineNumber": 715, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 719, "col_offset": 15, "nodeName": "_populations", "type": "Any"}, {"lineNumber": 720, "col_offset": 18, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 721, "col_offset": 15, "nodeName": "params_", "type": "Any"}, {"lineNumber": 721, "col_offset": 24, "nodeName": "cov", "type": "Any"}, {"lineNumber": 721, "col_offset": 34, "nodeName": "weights", "type": "Any"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 756, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 756, "col_offset": 29, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 756, "col_offset": 49, "nodeName": "model", "type": "Any"}, {"lineNumber": 756, "col_offset": 56, "nodeName": "target", "type": "None"}, {"lineNumber": 757, "col_offset": 18, "nodeName": "_ensure_outputs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 757, "col_offset": 39, "nodeName": "outputs", "type": "None"}, {"lineNumber": 758, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 759, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "target_model", "type": "None"}, {"lineNumber": 765, "col_offset": 29, "nodeName": "max", "type": "Callable"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 768, "col_offset": 11, "nodeName": "initial_evidence", "type": "None"}, {"lineNumber": 769, "col_offset": 12, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 769, "col_offset": 31, "nodeName": "n_initial_required", "type": "Any"}, {"lineNumber": 777, "col_offset": 11, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 777, "col_offset": 30, "nodeName": "n_initial_required", "type": "Any"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 784, "col_offset": 34, "nodeName": "acquisition_method", "type": "None"}, {"lineNumber": 787, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 794, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 795, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 795, "col_offset": 69, "nodeName": "_n_precomputed", "type": "int"}, {"lineNumber": 797, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 800, "col_offset": 26, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 800, "col_offset": 40, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 801, "col_offset": 38, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 804, "col_offset": 27, "nodeName": "stochastic_optimization", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 804, "col_offset": 51, "nodeName": "predict_mean", "type": "Callable[[Any], Any]"}, {"lineNumber": 805, "col_offset": 51, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 808, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 808, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 808, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 808, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 812, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 817, "col_offset": 34, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 819, "col_offset": 17, "nodeName": "_to_array", "type": "Callable[..., Any]"}, {"lineNumber": 819, "col_offset": 32, "nodeName": "batch", "type": "Any"}, {"lineNumber": 819, "col_offset": 39, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "_report_batch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 820, "col_offset": 27, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 820, "col_offset": 40, "nodeName": "params", "type": "Any"}, {"lineNumber": 822, "col_offset": 19, "nodeName": "_should_optimize", "type": "Callable[[], Any]"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "update", "type": "Union[Any, Callable[..., None]]"}, {"lineNumber": 823, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 823, "col_offset": 61, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 826, "col_offset": 40, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 829, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 829, "col_offset": 31, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 832, "col_offset": 11, "nodeName": "_n_submitted_evidence", "type": "Any"}, {"lineNumber": 835, "col_offset": 25, "nodeName": "_to_array", "type": "Callable[..., Any]"}, {"lineNumber": 836, "col_offset": 40, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 837, "col_offset": 12, "nodeName": "total", "type": "Any"}, {"lineNumber": 838, "col_offset": 20, "nodeName": "acquire", "type": "Union[Any, Callable[..., Any]]"}, {"lineNumber": 838, "col_offset": 52, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 838, "col_offset": 69, "nodeName": "pending_params", "type": "Any"}, {"lineNumber": 838, "col_offset": 85, "nodeName": "t", "type": "Any"}, {"lineNumber": 841, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 849, "col_offset": 15, "nodeName": "total", "type": "Any"}, {"lineNumber": 849, "col_offset": 34, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 855, "col_offset": 18, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 855, "col_offset": 49, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 857, "col_offset": 31, "nodeName": "_allow_submit", "type": "Union[Any, bool]"}, {"lineNumber": 860, "col_offset": 18, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 860, "col_offset": 49, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 861, "col_offset": 50, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 865, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 865, "col_offset": 44, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 867, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 867, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 868, "col_offset": 12, "nodeName": "str", "type": "str"}, {"lineNumber": 869, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 869, "col_offset": 21, "nodeName": "str", "type": "str"}, {"lineNumber": 875, "col_offset": 12, "nodeName": "gcf", "type": "Any"}, {"lineNumber": 879, "col_offset": 13, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "draw_contour", "type": "Callable[..., None]"}, {"lineNumber": 882, "col_offset": 27, "nodeName": "predict_mean", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 883, "col_offset": 27, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 884, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 890, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 894, "col_offset": 20, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 896, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 903, "col_offset": 8, "nodeName": "_update_interactive", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 903, "col_offset": 34, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 903, "col_offset": 44, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 907, "col_offset": 8, "nodeName": "draw_contour", "type": "Callable[..., None]"}, {"lineNumber": 907, "col_offset": 27, "nodeName": "acq", "type": "Callable[[Any], Any]"}, {"lineNumber": 908, "col_offset": 27, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 909, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 914, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 922, "col_offset": 18, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 923, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 924, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 925, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 925, "col_offset": 27, "nodeName": "get", "type": "Callable"}, {"lineNumber": 927, "col_offset": 8, "nodeName": "axes", "type": "Any"}, {"lineNumber": 927, "col_offset": 14, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 927, "col_offset": 23, "nodeName": "_create_axes", "type": "Any"}, {"lineNumber": 927, "col_offset": 40, "nodeName": "axes", "type": "Any"}, {"lineNumber": 927, "col_offset": 46, "nodeName": "shape", "type": "Tuple[Any, Any]"}, {"lineNumber": 928, "col_offset": 15, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 930, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 930, "col_offset": 24, "nodeName": "n_plots", "type": "Any"}, {"lineNumber": 934, "col_offset": 8, "nodeName": "set_ylabel", "type": "Any"}, {"lineNumber": 982, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 988, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 988, "col_offset": 34, "nodeName": "acquisition_method", "type": "Any"}, {"lineNumber": 997, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 998, "col_offset": 8, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 1016, "col_offset": 15, "nodeName": "BolfiPosterior", "type": "Type[elfi.methods.posteriors.BolfiPosterior]"}, {"lineNumber": 1016, "col_offset": 30, "nodeName": "target_model", "type": "elfi.bo.gpy_regression.GPyRegression"}, {"lineNumber": 1016, "col_offset": 49, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1053, "col_offset": 20, "nodeName": "infer_posterior", "type": "Callable[..., Any]"}, {"lineNumber": 1053, "col_offset": 41, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1054, "col_offset": 17, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1057, "col_offset": 11, "nodeName": "initials", "type": "Any"}, {"lineNumber": 1062, "col_offset": 12, "nodeName": "inds", "type": "Any"}, {"lineNumber": 1063, "col_offset": 12, "nodeName": "initials", "type": "Any"}, {"lineNumber": 1065, "col_offset": 8, "nodeName": "target_model", "type": "elfi.bo.gpy_regression.GPyRegression"}, {"lineNumber": 1067, "col_offset": 23, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1067, "col_offset": 45, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1071, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1071, "col_offset": 24, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 1072, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1082, "col_offset": 17, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 1082, "col_offset": 28, "nodeName": "chains", "type": "List[Any]"}, {"lineNumber": 1084, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 1086, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 1086, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 1086, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1086, "col_offset": 34, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 1089, "col_offset": 8, "nodeName": "target_model", "type": "elfi.bo.gpy_regression.GPyRegression"}, {"lineNumber": 1091, "col_offset": 15, "nodeName": "ResultBOLFI", "type": "Type[elfi.results.result.ResultBOLFI]"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 145, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "seed", "type": "None"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "observed", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "pool", "type": "None"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "client", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "client", "type": "module"}, {"lineNumber": 162, "col_offset": 48, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 162, "col_offset": 68, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 162, "col_offset": 84, "nodeName": "client", "type": "Any"}, {"lineNumber": 163, "col_offset": 60, "nodeName": "client", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "num_cores", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "msg", "type": "str"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "msg", "type": "str"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 283, "col_offset": 36, "nodeName": "vis", "type": "None"}, {"lineNumber": 283, "col_offset": 41, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 285, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "iterate", "type": "Callable[[], Any]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 319, "col_offset": 20, "nodeName": "prepare_new_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 43, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "submit", "type": "Callable[..., None]"}, {"lineNumber": 320, "col_offset": 32, "nodeName": "batch", "type": "Any"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 328, "col_offset": 15, "nodeName": "objective", "type": "Any"}, {"lineNumber": 328, "col_offset": 46, "nodeName": "state", "type": "Any"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 332, "col_offset": 43, "nodeName": "num_pending", "type": "Any"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "has_ready", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "objective", "type": "Any"}, {"lineNumber": 338, "col_offset": 71, "nodeName": "num_pending", "type": "Any"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 359, "col_offset": 26, "nodeName": "batches", "type": "Any"}, {"lineNumber": 359, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 360, "col_offset": 23, "nodeName": "batches", "type": "Any"}, {"lineNumber": 361, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 373, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 373, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "ElfiModel", "type": "Type[elfi.model.elfi_model.ElfiModel]"}, {"lineNumber": 373, "col_offset": 44, "nodeName": "target", "type": "None"}, {"lineNumber": 374, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "target", "type": "Any"}, {"lineNumber": 381, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 383, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 383, "col_offset": 34, "nodeName": "default_reference_class", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 384, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 386, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 392, "col_offset": 26, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 410, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 410, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 438, "col_offset": 15, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 438, "col_offset": 34, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 439, "col_offset": 18, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 439, "col_offset": 48, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 440, "col_offset": 58, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 462, "col_offset": 11, "nodeName": "quantile", "type": "Any"}, {"lineNumber": 462, "col_offset": 32, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 462, "col_offset": 54, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 464, "col_offset": 50, "nodeName": "Inf", "type": "Any"}, {"lineNumber": 467, "col_offset": 29, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 473, "col_offset": 24, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 475, "col_offset": 40, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 475, "col_offset": 61, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 476, "col_offset": 40, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 482, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 484, "col_offset": 12, "nodeName": "_init_samples_lazy", "type": "Callable[[Any], Any]"}, {"lineNumber": 484, "col_offset": 36, "nodeName": "batch", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 497, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 500, "col_offset": 20, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 503, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 505, "col_offset": 36, "nodeName": "__name__", "type": "str"}, {"lineNumber": 506, "col_offset": 32, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 507, "col_offset": 40, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 508, "col_offset": 41, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 527, "col_offset": 19, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 530, "col_offset": 19, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 535, "col_offset": 45, "nodeName": "inf", "type": "Any"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 542, "col_offset": 18, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 545, "col_offset": 23, "nodeName": "samples", "type": "Any"}, {"lineNumber": 546, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 546, "col_offset": 46, "nodeName": "batch", "type": "Any"}, {"lineNumber": 550, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 551, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 551, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 568, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 568, "col_offset": 43, "nodeName": "k", "type": "str"}, {"lineNumber": 568, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 571, "col_offset": 70, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 571, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 574, "col_offset": 39, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 576, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 576, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 577, "col_offset": 49, "nodeName": "margin", "type": "Any"}, {"lineNumber": 577, "col_offset": 59, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 584, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 589, "col_offset": 26, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 589, "col_offset": 55, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 590, "col_offset": 60, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 590, "col_offset": 72, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 595, "col_offset": 15, "nodeName": "self", "type": "SMC"}, {"lineNumber": 595, "col_offset": 34, "nodeName": "self", "type": "SMC"}, {"lineNumber": 596, "col_offset": 18, "nodeName": "self", "type": "SMC"}, {"lineNumber": 596, "col_offset": 48, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 597, "col_offset": 29, "nodeName": "self", "type": "SMC"}, {"lineNumber": 599, "col_offset": 41, "nodeName": "outputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 599, "col_offset": 51, "nodeName": "added_nodes", "type": "List[str]"}, {"lineNumber": 599, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 606, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 613, "col_offset": 14, "nodeName": "self", "type": "SMC"}, {"lineNumber": 616, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 617, "col_offset": 43, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 618, "col_offset": 44, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 630, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 631, "col_offset": 12, "nodeName": "cancel_pending", "type": "Callable[[], None]"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 642, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 646, "col_offset": 17, "nodeName": "GMDistribution", "type": "Type[elfi.methods.utils.GMDistribution]"}, {"lineNumber": 646, "col_offset": 37, "nodeName": "_gm_params", "type": "Tuple[Any, nothing, nothing]"}, {"lineNumber": 646, "col_offset": 59, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 648, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 655, "col_offset": 36, "nodeName": "self", "type": "SMC"}, {"lineNumber": 656, "col_offset": 48, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 657, "col_offset": 44, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 658, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 659, "col_offset": 41, "nodeName": "seed", "type": "Any"}, {"lineNumber": 660, "col_offset": 57, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "_rejection", "type": "Rejection"}, {"lineNumber": 662, "col_offset": 39, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 663, "col_offset": 49, "nodeName": "current_population_threshold", "type": "Any"}, {"lineNumber": 666, "col_offset": 14, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 668, "col_offset": 17, "nodeName": "self", "type": "SMC"}, {"lineNumber": 671, "col_offset": 24, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 676, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 676, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 682, "col_offset": 24, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 685, "col_offset": 18, "nodeName": "diag", "type": "Any"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 696, "col_offset": 27, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 700, "col_offset": 25, "nodeName": "n_batches", "type": "nothing"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 701, "col_offset": 50, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 706, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 709, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 713, "col_offset": 18, "nodeName": "compose", "type": "Any"}, {"lineNumber": 713, "col_offset": 48, "nodeName": "args_to_tuple", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 713, "col_offset": 65, "nodeName": "pdfs", "type": "List[elfi.model.elfi_model.Operation]"}, {"lineNumber": 713, "col_offset": 77, "nodeName": "model", "type": "Any"}, {"lineNumber": 719, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 720, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 720, "col_offset": 34, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 721, "col_offset": 24, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 721, "col_offset": 34, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 725, "col_offset": 15, "nodeName": "objective", "type": "Any"}, {"lineNumber": 756, "col_offset": 15, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 756, "col_offset": 29, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 757, "col_offset": 18, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 757, "col_offset": 48, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 759, "col_offset": 36, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 759, "col_offset": 56, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 759, "col_offset": 70, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 762, "col_offset": 28, "nodeName": "GPyRegression", "type": "Type[elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 772, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 774, "col_offset": 12, "nodeName": "initial_evidence", "type": "int"}, {"lineNumber": 775, "col_offset": 12, "nodeName": "_n_precomputed", "type": "int"}, {"lineNumber": 775, "col_offset": 34, "nodeName": "initial_evidence", "type": "int"}, {"lineNumber": 778, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 781, "col_offset": 11, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 781, "col_offset": 30, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 782, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 784, "col_offset": 56, "nodeName": "LCBSC", "type": "Type[elfi.bo.acquisition.LCBSC]"}, {"lineNumber": 784, "col_offset": 62, "nodeName": "target_model", "type": "elfi.bo.gpy_regression.GPyRegression"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 795, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 795, "col_offset": 36, "nodeName": "get", "type": "Callable"}, {"lineNumber": 795, "col_offset": 69, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 797, "col_offset": 26, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 797, "col_offset": 44, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 798, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 800, "col_offset": 40, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 801, "col_offset": 85, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 804, "col_offset": 51, "nodeName": "target_model", "type": "elfi.bo.gpy_regression.GPyRegression"}, {"lineNumber": 805, "col_offset": 51, "nodeName": "target_model", "type": "elfi.bo.gpy_regression.GPyRegression"}, {"lineNumber": 808, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 810, "col_offset": 12, "nodeName": "param_hat", "type": "Dict[Any, Any]"}, {"lineNumber": 810, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 812, "col_offset": 28, "nodeName": "param_hat", "type": "Dict[Any, Any]"}, {"lineNumber": 819, "col_offset": 17, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 819, "col_offset": 39, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 820, "col_offset": 48, "nodeName": "batch", "type": "Any"}, {"lineNumber": 822, "col_offset": 19, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 823, "col_offset": 41, "nodeName": "batch", "type": "Any"}, {"lineNumber": 826, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 826, "col_offset": 40, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 829, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 832, "col_offset": 11, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 832, "col_offset": 40, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 832, "col_offset": 66, "nodeName": "_n_precomputed", "type": "int"}, {"lineNumber": 835, "col_offset": 25, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 835, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 836, "col_offset": 40, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 837, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 837, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 838, "col_offset": 20, "nodeName": "acquisition_method", "type": "Union[Any, elfi.bo.acquisition.LCBSC]"}, {"lineNumber": 838, "col_offset": 52, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 841, "col_offset": 20, "nodeName": "new_param", "type": "Any"}, {"lineNumber": 842, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 842, "col_offset": 30, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 849, "col_offset": 15, "nodeName": "batches", "type": "Any"}, {"lineNumber": 849, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 855, "col_offset": 18, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 855, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 856, "col_offset": 12, "nodeName": "_n_submitted_evidence", "type": "Any"}, {"lineNumber": 856, "col_offset": 41, "nodeName": "_n_precomputed", "type": "Any"}, {"lineNumber": 857, "col_offset": 19, "nodeName": "prevent", "type": "Any"}, {"lineNumber": 860, "col_offset": 18, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 860, "col_offset": 49, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 861, "col_offset": 22, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 861, "col_offset": 50, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 862, "col_offset": 15, "nodeName": "current", "type": "Any"}, {"lineNumber": 862, "col_offset": 26, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 862, "col_offset": 54, "nodeName": "current", "type": "Any"}, {"lineNumber": 862, "col_offset": 65, "nodeName": "next_update", "type": "Any"}, {"lineNumber": 867, "col_offset": 23, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 868, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 868, "col_offset": 41, "nodeName": "fill", "type": "str"}, {"lineNumber": 869, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 875, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 876, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 876, "col_offset": 15, "nodeName": "axes", "type": "Any"}, {"lineNumber": 877, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 877, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 877, "col_offset": 19, "nodeName": "subplots", "type": "Any"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 882, "col_offset": 27, "nodeName": "gp", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 883, "col_offset": 27, "nodeName": "gp", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 884, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 886, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 887, "col_offset": 45, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 890, "col_offset": 16, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 891, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 891, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "scatter", "type": "Any"}, {"lineNumber": 894, "col_offset": 20, "nodeName": "gp", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 896, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 898, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 903, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 905, "col_offset": 25, "nodeName": "evaluate", "type": "Union[Any, Callable[..., Any]]"}, {"lineNumber": 905, "col_offset": 58, "nodeName": "x", "type": "Any"}, {"lineNumber": 907, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 908, "col_offset": 27, "nodeName": "gp", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 909, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 912, "col_offset": 45, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 914, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 915, "col_offset": 12, "nodeName": "close", "type": "Any"}, {"lineNumber": 922, "col_offset": 18, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 923, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 924, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 925, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 926, "col_offset": 17, "nodeName": "max", "type": "Callable"}, {"lineNumber": 926, "col_offset": 43, "nodeName": "min", "type": "Callable"}, {"lineNumber": 926, "col_offset": 47, "nodeName": "n_plots", "type": "Any"}, {"lineNumber": 926, "col_offset": 56, "nodeName": "ncols", "type": "Union[int, Any]"}, {"lineNumber": 927, "col_offset": 23, "nodeName": "vis", "type": "module"}, {"lineNumber": 927, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 928, "col_offset": 15, "nodeName": "axes", "type": "Any"}, {"lineNumber": 931, "col_offset": 12, "nodeName": "scatter", "type": "Any"}, {"lineNumber": 932, "col_offset": 12, "nodeName": "set_xlabel", "type": "Any"}, {"lineNumber": 982, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 982, "col_offset": 56, "nodeName": "target", "type": "Any"}, {"lineNumber": 982, "col_offset": 72, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 983, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 984, "col_offset": 53, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 985, "col_offset": 52, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 985, "col_offset": 76, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 986, "col_offset": 49, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 987, "col_offset": 55, "nodeName": "acquisition_method", "type": "Any"}, {"lineNumber": 987, "col_offset": 77, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 988, "col_offset": 56, "nodeName": "LCBSC", "type": "Type[elfi.bo.acquisition.LCBSC]"}, {"lineNumber": 988, "col_offset": 62, "nodeName": "target_model", "type": "elfi.bo.gpy_regression.GPyRegression"}, {"lineNumber": 997, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 998, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 998, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 998, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1013, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 1014, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 1016, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1053, "col_offset": 20, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1054, "col_offset": 27, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 1058, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1063, "col_offset": 23, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 1065, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1067, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 1067, "col_offset": 45, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1072, "col_offset": 19, "nodeName": "get_sub_seed", "type": "Callable[..., Any]"}, {"lineNumber": 1072, "col_offset": 44, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 1072, "col_offset": 58, "nodeName": "ii", "type": "int"}, {"lineNumber": 1073, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1080, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1082, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 1084, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1085, "col_offset": 22, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 1085, "col_offset": 32, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 1086, "col_offset": 34, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1087, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 1087, "col_offset": 18, "nodeName": "node", "type": "Any"}, {"lineNumber": 1089, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1092, "col_offset": 34, "nodeName": "chains", "type": "Any"}, {"lineNumber": 1093, "col_offset": 43, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 1094, "col_offset": 34, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 148, "col_offset": 69, "nodeName": "model", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "elfi", "type": "module"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "elfi", "type": "module"}, {"lineNumber": 162, "col_offset": 84, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 163, "col_offset": 60, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "client", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 319, "col_offset": 20, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 328, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 328, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 332, "col_offset": 43, "nodeName": "batches", "type": "Any"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "batches", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 338, "col_offset": 45, "nodeName": "state", "type": "Any"}, {"lineNumber": 338, "col_offset": 71, "nodeName": "batches", "type": "Any"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 365, "col_offset": 24, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 381, "col_offset": 27, "nodeName": "target", "type": "Any"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 393, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 439, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 439, "col_offset": 68, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 440, "col_offset": 14, "nodeName": "Rejection", "type": "Type[Rejection]"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 464, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 467, "col_offset": 34, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 467, "col_offset": 44, "nodeName": "quantile", "type": "Union[float, Any]"}, {"lineNumber": 471, "col_offset": 29, "nodeName": "n_sim", "type": "Union[int, Any]"}, {"lineNumber": 471, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 482, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 484, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 502, "col_offset": 20, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 503, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 503, "col_offset": 28, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 505, "col_offset": 36, "nodeName": "__class__", "type": "Type[Rejection]"}, {"lineNumber": 507, "col_offset": 40, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 508, "col_offset": 41, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 509, "col_offset": 34, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 510, "col_offset": 30, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 511, "col_offset": 36, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 522, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 534, "col_offset": 71, "nodeName": "shape", "type": "Any"}, {"lineNumber": 535, "col_offset": 20, "nodeName": "node", "type": "Any"}, {"lineNumber": 535, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 535, "col_offset": 36, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 535, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 546, "col_offset": 52, "nodeName": "node", "type": "Any"}, {"lineNumber": 549, "col_offset": 20, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 551, "col_offset": 21, "nodeName": "sort_mask", "type": "Any"}, {"lineNumber": 561, "col_offset": 34, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 561, "col_offset": 49, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 568, "col_offset": 24, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 571, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 571, "col_offset": 64, "nodeName": "t", "type": "Any"}, {"lineNumber": 576, "col_offset": 22, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 576, "col_offset": 44, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 576, "col_offset": 59, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 577, "col_offset": 21, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 577, "col_offset": 33, "nodeName": "accept_rate_t", "type": "Any"}, {"lineNumber": 580, "col_offset": 58, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 586, "col_offset": 28, "nodeName": "HTML", "type": "Any"}, {"lineNumber": 589, "col_offset": 26, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 589, "col_offset": 55, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 590, "col_offset": 22, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 596, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 596, "col_offset": 68, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 599, "col_offset": 14, "nodeName": "SMC", "type": "Type[SMC]"}, {"lineNumber": 599, "col_offset": 19, "nodeName": "self", "type": "SMC"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 606, "col_offset": 45, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 607, "col_offset": 45, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 609, "col_offset": 46, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 616, "col_offset": 35, "nodeName": "pop", "type": "Any"}, {"lineNumber": 617, "col_offset": 43, "nodeName": "self", "type": "SMC"}, {"lineNumber": 618, "col_offset": 44, "nodeName": "self", "type": "SMC"}, {"lineNumber": 619, "col_offset": 37, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 620, "col_offset": 33, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 621, "col_offset": 39, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 631, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 632, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 632, "col_offset": 37, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 633, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 634, "col_offset": 16, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 635, "col_offset": 16, "nodeName": "_new_round", "type": "Callable[[], Any]"}, {"lineNumber": 642, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 646, "col_offset": 37, "nodeName": "self", "type": "SMC"}, {"lineNumber": 646, "col_offset": 59, "nodeName": "self", "type": "SMC"}, {"lineNumber": 648, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 648, "col_offset": 38, "nodeName": "p", "type": "Any"}, {"lineNumber": 648, "col_offset": 43, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 648, "col_offset": 53, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 653, "col_offset": 49, "nodeName": "dashes", "type": "str"}, {"lineNumber": 653, "col_offset": 78, "nodeName": "dashes", "type": "str"}, {"lineNumber": 656, "col_offset": 48, "nodeName": "self", "type": "SMC"}, {"lineNumber": 657, "col_offset": 44, "nodeName": "self", "type": "SMC"}, {"lineNumber": 658, "col_offset": 47, "nodeName": "self", "type": "SMC"}, {"lineNumber": 659, "col_offset": 41, "nodeName": "self", "type": "SMC"}, {"lineNumber": 660, "col_offset": 57, "nodeName": "self", "type": "SMC"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 662, "col_offset": 39, "nodeName": "self", "type": "SMC"}, {"lineNumber": 663, "col_offset": 49, "nodeName": "self", "type": "SMC"}, {"lineNumber": 666, "col_offset": 14, "nodeName": "self", "type": "SMC"}, {"lineNumber": 671, "col_offset": 24, "nodeName": "self", "type": "SMC"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 682, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 685, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 685, "col_offset": 26, "nodeName": "weighted_var", "type": "Callable[..., Any]"}, {"lineNumber": 685, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 685, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "self", "type": "SMC"}, {"lineNumber": 696, "col_offset": 27, "nodeName": "self", "type": "SMC"}, {"lineNumber": 700, "col_offset": 25, "nodeName": "pop", "type": "nothing"}, {"lineNumber": 700, "col_offset": 43, "nodeName": "pop", "type": "nothing"}, {"lineNumber": 700, "col_offset": 50, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 701, "col_offset": 50, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 709, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "pdfs", "type": "List[elfi.model.elfi_model.Operation]"}, {"lineNumber": 710, "col_offset": 24, "nodeName": "Operation", "type": "Type[elfi.model.elfi_model.Operation]"}, {"lineNumber": 710, "col_offset": 34, "nodeName": "pdf", "type": "Any"}, {"lineNumber": 713, "col_offset": 26, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 713, "col_offset": 34, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 713, "col_offset": 42, "nodeName": "mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 725, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 725, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 757, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 757, "col_offset": 68, "nodeName": "target", "type": "Any"}, {"lineNumber": 758, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 758, "col_offset": 14, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 758, "col_offset": 36, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 762, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 762, "col_offset": 46, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 762, "col_offset": 77, "nodeName": "bounds", "type": "None"}, {"lineNumber": 765, "col_offset": 40, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 770, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 770, "col_offset": 28, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 770, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 772, "col_offset": 21, "nodeName": "_to_array", "type": "Callable[..., Any]"}, {"lineNumber": 772, "col_offset": 36, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 772, "col_offset": 54, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 773, "col_offset": 12, "nodeName": "update", "type": "Union[Any, Callable[..., None]]"}, {"lineNumber": 773, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 774, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 774, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 775, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 778, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 778, "col_offset": 77, "nodeName": "n_initial_required", "type": "Any"}, {"lineNumber": 781, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 795, "col_offset": 36, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 797, "col_offset": 26, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 801, "col_offset": 44, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 801, "col_offset": 62, "nodeName": "_n_precomputed", "type": "int"}, {"lineNumber": 801, "col_offset": 85, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 804, "col_offset": 51, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 805, "col_offset": 51, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 808, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 810, "col_offset": 22, "nodeName": "p", "type": "Any"}, {"lineNumber": 810, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 820, "col_offset": 54, "nodeName": "target", "type": "Any"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 823, "col_offset": 47, "nodeName": "target", "type": "Any"}, {"lineNumber": 826, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 826, "col_offset": 40, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 832, "col_offset": 40, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 832, "col_offset": 66, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 835, "col_offset": 45, "nodeName": "values", "type": "Any"}, {"lineNumber": 837, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 837, "col_offset": 37, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 837, "col_offset": 63, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 838, "col_offset": 20, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 841, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 841, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 841, "col_offset": 47, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 841, "col_offset": 57, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 842, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 849, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 855, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 856, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 856, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 857, "col_offset": 31, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 857, "col_offset": 37, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 857, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 860, "col_offset": 18, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 861, "col_offset": 22, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 862, "col_offset": 26, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 868, "col_offset": 47, "nodeName": "item", "type": "Any"}, {"lineNumber": 868, "col_offset": 68, "nodeName": "params", "type": "Any"}, {"lineNumber": 876, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 877, "col_offset": 19, "nodeName": "plt", "type": "Any"}, {"lineNumber": 886, "col_offset": 36, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 887, "col_offset": 32, "nodeName": "axes", "type": "Any"}, {"lineNumber": 890, "col_offset": 16, "nodeName": "gp", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 891, "col_offset": 15, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 892, "col_offset": 31, "nodeName": "point", "type": "Any"}, {"lineNumber": 898, "col_offset": 12, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 898, "col_offset": 31, "nodeName": "HTML", "type": "Any"}, {"lineNumber": 905, "col_offset": 25, "nodeName": "acquisition_method", "type": "Union[Any, elfi.bo.acquisition.LCBSC]"}, {"lineNumber": 905, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 905, "col_offset": 65, "nodeName": "X", "type": "Any"}, {"lineNumber": 912, "col_offset": 32, "nodeName": "axes", "type": "Any"}, {"lineNumber": 915, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 926, "col_offset": 24, "nodeName": "n_plots", "type": "Any"}, {"lineNumber": 926, "col_offset": 35, "nodeName": "ncols", "type": "Union[int, Any]"}, {"lineNumber": 931, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 931, "col_offset": 61, "nodeName": "Y", "type": "Any"}, {"lineNumber": 932, "col_offset": 32, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 934, "col_offset": 8, "nodeName": "axes", "type": "Any"}, {"lineNumber": 982, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 982, "col_offset": 14, "nodeName": "BOLFI", "type": "Type[BOLFI]"}, {"lineNumber": 982, "col_offset": 21, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 988, "col_offset": 62, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 988, "col_offset": 91, "nodeName": "acq_noise_cov", "type": "Any"}, {"lineNumber": 1013, "col_offset": 11, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1014, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1058, "col_offset": 46, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 1058, "col_offset": 56, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 1059, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1062, "col_offset": 19, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 1062, "col_offset": 61, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 1063, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 1063, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 1067, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 1072, "col_offset": 19, "nodeName": "loader", "type": "module"}, {"lineNumber": 1073, "col_offset": 12, "nodeName": "tasks_ids", "type": "List[Any]"}, {"lineNumber": 1073, "col_offset": 29, "nodeName": "apply", "type": "Any"}, {"lineNumber": 1073, "col_offset": 47, "nodeName": "nuts", "type": "Any"}, {"lineNumber": 1073, "col_offset": 63, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 1073, "col_offset": 88, "nodeName": "logpdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 1074, "col_offset": 47, "nodeName": "grad_logpdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 1080, "col_offset": 12, "nodeName": "chains", "type": "List[Any]"}, {"lineNumber": 1080, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 1080, "col_offset": 42, "nodeName": "id", "type": "Any"}, {"lineNumber": 1087, "col_offset": 24, "nodeName": "eff_sample_size", "type": "Any"}, {"lineNumber": 1087, "col_offset": 69, "nodeName": "gelman_rubin", "type": "Any"}, {"lineNumber": 1093, "col_offset": 43, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1095, "col_offset": 37, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1095, "col_offset": 43, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1096, "col_offset": 33, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 332, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 338, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 338, "col_offset": 71, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 439, "col_offset": 68, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 471, "col_offset": 35, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 502, "col_offset": 20, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 505, "col_offset": 36, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 509, "col_offset": 34, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 510, "col_offset": 30, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 511, "col_offset": 36, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 522, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 522, "col_offset": 39, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 523, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 528, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 531, "col_offset": 22, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 534, "col_offset": 51, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 535, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 546, "col_offset": 14, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 549, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 549, "col_offset": 31, "nodeName": "samples", "type": "Any"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 568, "col_offset": 24, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 580, "col_offset": 58, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 586, "col_offset": 28, "nodeName": "display", "type": "Any"}, {"lineNumber": 587, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 590, "col_offset": 22, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 596, "col_offset": 68, "nodeName": "self", "type": "SMC"}, {"lineNumber": 607, "col_offset": 45, "nodeName": "self", "type": "SMC"}, {"lineNumber": 619, "col_offset": 37, "nodeName": "self", "type": "SMC"}, {"lineNumber": 620, "col_offset": 33, "nodeName": "self", "type": "SMC"}, {"lineNumber": 621, "col_offset": 39, "nodeName": "self", "type": "SMC"}, {"lineNumber": 622, "col_offset": 39, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 622, "col_offset": 67, "nodeName": "pop", "type": "Any"}, {"lineNumber": 631, "col_offset": 12, "nodeName": "self", "type": "SMC"}, {"lineNumber": 632, "col_offset": 15, "nodeName": "self", "type": "SMC"}, {"lineNumber": 632, "col_offset": 37, "nodeName": "self", "type": "SMC"}, {"lineNumber": 633, "col_offset": 16, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 633, "col_offset": 41, "nodeName": "_extract_population", "type": "Callable[[], Any]"}, {"lineNumber": 634, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 635, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 648, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 648, "col_offset": 53, "nodeName": "self", "type": "SMC"}, {"lineNumber": 653, "col_offset": 57, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 676, "col_offset": 40, "nodeName": "samples", "type": "Any"}, {"lineNumber": 676, "col_offset": 55, "nodeName": "p", "type": "Any"}, {"lineNumber": 676, "col_offset": 60, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 700, "col_offset": 50, "nodeName": "self", "type": "SMC"}, {"lineNumber": 701, "col_offset": 50, "nodeName": "self", "type": "SMC"}, {"lineNumber": 710, "col_offset": 34, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 711, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 720, "col_offset": 41, "nodeName": "samples", "type": "Any"}, {"lineNumber": 720, "col_offset": 61, "nodeName": "p", "type": "Any"}, {"lineNumber": 720, "col_offset": 66, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 725, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 757, "col_offset": 68, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 762, "col_offset": 46, "nodeName": "model", "type": "Any"}, {"lineNumber": 765, "col_offset": 40, "nodeName": "target_model", "type": "elfi.bo.gpy_regression.GPyRegression"}, {"lineNumber": 772, "col_offset": 21, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 772, "col_offset": 54, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 773, "col_offset": 12, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 773, "col_offset": 40, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 795, "col_offset": 36, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 801, "col_offset": 44, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 801, "col_offset": 62, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 820, "col_offset": 54, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 823, "col_offset": 47, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 837, "col_offset": 37, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 837, "col_offset": 63, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 841, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 841, "col_offset": 57, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 868, "col_offset": 75, "nodeName": "i", "type": "int"}, {"lineNumber": 886, "col_offset": 36, "nodeName": "gp", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 887, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 891, "col_offset": 15, "nodeName": "gp", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "axes", "type": "Any"}, {"lineNumber": 898, "col_offset": 31, "nodeName": "display", "type": "Any"}, {"lineNumber": 899, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 900, "col_offset": 56, "nodeName": "point", "type": "Any"}, {"lineNumber": 905, "col_offset": 25, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 905, "col_offset": 65, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 912, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 931, "col_offset": 12, "nodeName": "axes", "type": "Any"}, {"lineNumber": 931, "col_offset": 29, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 931, "col_offset": 61, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 932, "col_offset": 12, "nodeName": "axes", "type": "Any"}, {"lineNumber": 932, "col_offset": 32, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 932, "col_offset": 48, "nodeName": "ii", "type": "int"}, {"lineNumber": 1058, "col_offset": 15, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 1058, "col_offset": 26, "nodeName": "initials", "type": "Any"}, {"lineNumber": 1058, "col_offset": 56, "nodeName": "target_model", "type": "elfi.bo.gpy_regression.GPyRegression"}, {"lineNumber": 1062, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1062, "col_offset": 30, "nodeName": "Y", "type": "Any"}, {"lineNumber": 1063, "col_offset": 34, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 1063, "col_offset": 58, "nodeName": "inds", "type": "Any"}, {"lineNumber": 1072, "col_offset": 19, "nodeName": "elfi", "type": "module"}, {"lineNumber": 1073, "col_offset": 29, "nodeName": "client", "type": "Any"}, {"lineNumber": 1073, "col_offset": 47, "nodeName": "mcmc", "type": "Any"}, {"lineNumber": 1073, "col_offset": 74, "nodeName": "initials", "type": "Any"}, {"lineNumber": 1073, "col_offset": 88, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1074, "col_offset": 47, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1074, "col_offset": 78, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1074, "col_offset": 91, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1074, "col_offset": 99, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1080, "col_offset": 26, "nodeName": "client", "type": "Any"}, {"lineNumber": 1087, "col_offset": 24, "nodeName": "mcmc", "type": "Any"}, {"lineNumber": 1087, "col_offset": 50, "nodeName": "chains", "type": "Any"}, {"lineNumber": 1087, "col_offset": 69, "nodeName": "mcmc", "type": "Any"}, {"lineNumber": 1087, "col_offset": 92, "nodeName": "chains", "type": "Any"}, {"lineNumber": 1095, "col_offset": 43, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1096, "col_offset": 33, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 365, "col_offset": 41, "nodeName": "batch_", "type": "Any"}, {"lineNumber": 365, "col_offset": 60, "nodeName": "output", "type": "Any"}, {"lineNumber": 365, "col_offset": 70, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 522, "col_offset": 23, "nodeName": "batch", "type": "Any"}, {"lineNumber": 523, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 524, "col_offset": 68, "nodeName": "node", "type": "Any"}, {"lineNumber": 526, "col_offset": 68, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 528, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 529, "col_offset": 61, "nodeName": "node", "type": "Any"}, {"lineNumber": 529, "col_offset": 67, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 531, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 531, "col_offset": 76, "nodeName": "node", "type": "Any"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 534, "col_offset": 51, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 534, "col_offset": 71, "nodeName": "batch", "type": "Any"}, {"lineNumber": 546, "col_offset": 14, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 549, "col_offset": 39, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 560, "col_offset": 25, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 560, "col_offset": 38, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 571, "col_offset": 30, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 571, "col_offset": 43, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 587, "col_offset": 56, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 608, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 608, "col_offset": 45, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 622, "col_offset": 39, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 633, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 633, "col_offset": 41, "nodeName": "self", "type": "SMC"}, {"lineNumber": 653, "col_offset": 57, "nodeName": "self", "type": "SMC"}, {"lineNumber": 676, "col_offset": 48, "nodeName": "p", "type": "Any"}, {"lineNumber": 676, "col_offset": 60, "nodeName": "self", "type": "SMC"}, {"lineNumber": 710, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 710, "col_offset": 70, "nodeName": "parents", "type": "Any"}, {"lineNumber": 711, "col_offset": 52, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 711, "col_offset": 70, "nodeName": "p", "type": "Any"}, {"lineNumber": 720, "col_offset": 41, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 720, "col_offset": 54, "nodeName": "p", "type": "Any"}, {"lineNumber": 720, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 762, "col_offset": 46, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 773, "col_offset": 57, "nodeName": "target", "type": "Any"}, {"lineNumber": 835, "col_offset": 45, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 868, "col_offset": 47, "nodeName": "distances", "type": "Any"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 900, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 900, "col_offset": 28, "nodeName": "Y", "type": "Any"}, {"lineNumber": 905, "col_offset": 65, "nodeName": "gp", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 931, "col_offset": 17, "nodeName": "ii", "type": "int"}, {"lineNumber": 931, "col_offset": 29, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 931, "col_offset": 56, "nodeName": "ii", "type": "int"}, {"lineNumber": 931, "col_offset": 61, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 932, "col_offset": 17, "nodeName": "ii", "type": "int"}, {"lineNumber": 1058, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1058, "col_offset": 56, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1062, "col_offset": 30, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 1063, "col_offset": 34, "nodeName": "target_model", "type": "elfi.bo.gpy_regression.GPyRegression"}, {"lineNumber": 1073, "col_offset": 29, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1073, "col_offset": 47, "nodeName": "elfi", "type": "module"}, {"lineNumber": 1073, "col_offset": 83, "nodeName": "ii", "type": "int"}, {"lineNumber": 1080, "col_offset": 26, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1087, "col_offset": 24, "nodeName": "elfi", "type": "module"}, {"lineNumber": 1087, "col_offset": 69, "nodeName": "elfi", "type": "module"}, {"lineNumber": 365, "col_offset": 48, "nodeName": "output", "type": "Any"}, {"lineNumber": 522, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 525, "col_offset": 68, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 526, "col_offset": 68, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 529, "col_offset": 67, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 534, "col_offset": 77, "nodeName": "node", "type": "Any"}, {"lineNumber": 549, "col_offset": 39, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 560, "col_offset": 38, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 560, "col_offset": 56, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 571, "col_offset": 43, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 587, "col_offset": 56, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 622, "col_offset": 39, "nodeName": "self", "type": "SMC"}, {"lineNumber": 710, "col_offset": 61, "nodeName": "param", "type": "Any"}, {"lineNumber": 710, "col_offset": 70, "nodeName": "param", "type": "Any"}, {"lineNumber": 773, "col_offset": 57, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 835, "col_offset": 45, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 868, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 900, "col_offset": 28, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 900, "col_offset": 39, "nodeName": "Y", "type": "Any"}, {"lineNumber": 931, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 931, "col_offset": 61, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1062, "col_offset": 30, "nodeName": "target_model", "type": "elfi.bo.gpy_regression.GPyRegression"}, {"lineNumber": 1063, "col_offset": 34, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1087, "col_offset": 63, "nodeName": "ii", "type": "int"}, {"lineNumber": 1087, "col_offset": 105, "nodeName": "ii", "type": "int"}, {"lineNumber": 525, "col_offset": 72, "nodeName": "batch", "type": "Any"}, {"lineNumber": 900, "col_offset": 28, "nodeName": "gp", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 900, "col_offset": 39, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 1062, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 525, "col_offset": 78, "nodeName": "node", "type": "Any"}, {"lineNumber": 900, "col_offset": 39, "nodeName": "gp", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}]