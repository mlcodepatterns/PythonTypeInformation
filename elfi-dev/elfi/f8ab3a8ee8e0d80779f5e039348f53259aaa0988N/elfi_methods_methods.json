[{"lineNumber": 13, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "pool", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "init_inference", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "extract_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "_update", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "_get_batches_total", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "_prepare_new_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "iterate", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "finished", "type": "Callable[[Any], Any]"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "_allow_submit", "type": "Callable[[Any], Any]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "_has_batches_to_submit", "type": "Callable[[Any], Any]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "_to_array", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "InferenceMethod", "type": "Type[InferenceMethod]"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "sample", "type": "Callable[..., Any]"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "init_inference", "type": "Callable[..., Any]"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "_update", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "extract_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "_get_batches_total", "type": "Callable[[Any], Any]"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "_init_state_samples", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "_merge_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 477, "col_offset": 27, "nodeName": "InferenceMethod", "type": "Type[InferenceMethod]"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "init_inference", "type": "Callable[..., Any]"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "extract_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "_update", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "_get_batches_total", "type": "Callable[[Any], Any]"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "_prepare_new_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "_n_submitted_evidence", "type": "Callable[[Any], Any]"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "_allow_submit", "type": "Callable[[Any], Any]"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "_should_optimize", "type": "Callable[[Any], Any]"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "_get_pending_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "_report_batch", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "InferenceMethod", "type": "Type[InferenceMethod]"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "get_posterior", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 13, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "context", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "pool", "type": "Union[Any, elfi.store.OutputPool]"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "pool", "type": "Union[Any, elfi.store.OutputPool]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 150, "col_offset": 41, "nodeName": "context", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "client", "type": "module"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "objective", "type": "Dict[nothing, nothing]"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "pool", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 188, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 279, "col_offset": 14, "nodeName": "_allow_submit", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "batch_", "type": "Any"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "batch", "type": "Union[Any, List[Any]]"}, {"lineNumber": 332, "col_offset": 62, "nodeName": "NodeReference", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "n_samples", "type": "nothing"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "accept_rate", "type": "Any"}, {"lineNumber": 431, "col_offset": 15, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "ks", "type": "List[str]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "total", "type": "int"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "p", "type": "None"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 459, "col_offset": 32, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "sort_mask", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "pool", "type": "Union[Any, elfi.store.OutputPool]"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 517, "col_offset": 21, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "acquisition_method", "type": "Any"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 536, "col_offset": 28, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "n_initial_evidence", "type": "Union[Any, int]"}, {"lineNumber": 537, "col_offset": 34, "nodeName": "initial_evidence", "type": "Union[Any, int]"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 538, "col_offset": 21, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 539, "col_offset": 31, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "param_hat", "type": "Dict[Any, Any]"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 572, "col_offset": 11, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "pending_params", "type": "Any"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "new_param", "type": "Any"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "current", "type": "Any"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "next_update", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "str", "type": "str"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "fill", "type": "str"}, {"lineNumber": 616, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 134, "col_offset": 69, "nodeName": "model", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "copy", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "seed", "type": "None"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "seed", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "context", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "context", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "get", "type": "Callable[[], Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "BatchHandler", "type": "Type[elfi.client.BatchHandler]"}, {"lineNumber": 153, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "max_parallel_batches", "type": "None"}, {"lineNumber": 155, "col_offset": 60, "nodeName": "num_cores", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "init_inference", "type": "Callable[..., Any]"}, {"lineNumber": 254, "col_offset": 18, "nodeName": "finished", "type": "bool"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "extract_result", "type": "Callable[[], Any]"}, {"lineNumber": 279, "col_offset": 14, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "next_index", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "wait_next", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "_update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "batch", "type": "Any"}, {"lineNumber": 286, "col_offset": 28, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "_has_batches_to_submit", "type": "Any"}, {"lineNumber": 300, "col_offset": 43, "nodeName": "total", "type": "Any"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "batch", "type": "List[Any]"}, {"lineNumber": 323, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 329, "col_offset": 25, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 338, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 338, "col_offset": 29, "nodeName": "NodeReference", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 339, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 342, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 342, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 348, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 348, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 376, "col_offset": 34, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 376, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 376, "col_offset": 61, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 377, "col_offset": 18, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 379, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 379, "col_offset": 47, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "p", "type": "float"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 401, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "_merge_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 409, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 416, "col_offset": 18, "nodeName": "state", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "num_ready", "type": "Any"}, {"lineNumber": 417, "col_offset": 41, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 418, "col_offset": 20, "nodeName": "objective", "type": "Dict[nothing, nothing]"}, {"lineNumber": 420, "col_offset": 22, "nodeName": "n_samples", "type": "nothing"}, {"lineNumber": 420, "col_offset": 34, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 423, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 426, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "p", "type": "None"}, {"lineNumber": 435, "col_offset": 11, "nodeName": "t", "type": "None"}, {"lineNumber": 435, "col_offset": 14, "nodeName": "n_sim", "type": "None"}, {"lineNumber": 435, "col_offset": 21, "nodeName": "n_samples", "type": "None"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "n_sim", "type": "None"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "state", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 468, "col_offset": 18, "nodeName": "v", "type": "Any"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "items", "type": "Callable"}, {"lineNumber": 472, "col_offset": 20, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 473, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 473, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 506, "col_offset": 29, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 506, "col_offset": 49, "nodeName": "model", "type": "Any"}, {"lineNumber": 506, "col_offset": 56, "nodeName": "target", "type": "Any"}, {"lineNumber": 507, "col_offset": 18, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 510, "col_offset": 15, "nodeName": "pool", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 512, "col_offset": 51, "nodeName": "model", "type": "Any"}, {"lineNumber": 517, "col_offset": 21, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "initial_evidence", "type": "int"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 534, "col_offset": 34, "nodeName": "acquisition_method", "type": "Any"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 543, "col_offset": 21, "nodeName": "state", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 545, "col_offset": 11, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 548, "col_offset": 21, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 548, "col_offset": 30, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 551, "col_offset": 27, "nodeName": "stochastic_optimization", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 551, "col_offset": 51, "nodeName": "predict_mean", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 552, "col_offset": 51, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 557, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 557, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 557, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 561, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 566, "col_offset": 17, "nodeName": "_to_array", "type": "Callable[..., Any]"}, {"lineNumber": 566, "col_offset": 32, "nodeName": "batch", "type": "Any"}, {"lineNumber": 566, "col_offset": 39, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "_report_batch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 567, "col_offset": 27, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 567, "col_offset": 40, "nodeName": "params", "type": "Any"}, {"lineNumber": 569, "col_offset": 19, "nodeName": "_should_optimize", "type": "Callable[[], Any]"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "update", "type": "Union[Any, Callable[..., None]]"}, {"lineNumber": 570, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 570, "col_offset": 61, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 573, "col_offset": 40, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "_n_submitted_evidence", "type": "Any"}, {"lineNumber": 579, "col_offset": 40, "nodeName": "n_initial_evidence", "type": "Union[Any, int]"}, {"lineNumber": 582, "col_offset": 25, "nodeName": "_get_pending_params", "type": "Callable[[], Any]"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "total", "type": "Any"}, {"lineNumber": 584, "col_offset": 20, "nodeName": "acquire", "type": "Any"}, {"lineNumber": 584, "col_offset": 52, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 584, "col_offset": 69, "nodeName": "pending_params", "type": "Any"}, {"lineNumber": 584, "col_offset": 85, "nodeName": "t", "type": "Any"}, {"lineNumber": 588, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "add_batch", "type": "Union[Any, Callable[[Any, Any], None]]"}, {"lineNumber": 589, "col_offset": 28, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 589, "col_offset": 41, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 593, "col_offset": 15, "nodeName": "total", "type": "Any"}, {"lineNumber": 593, "col_offset": 34, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 600, "col_offset": 15, "nodeName": "_allow_submit", "type": "Union[Any, bool]"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 603, "col_offset": 49, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 604, "col_offset": 50, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "_to_array", "type": "Callable[..., Any]"}, {"lineNumber": 611, "col_offset": 30, "nodeName": "pending_batches", "type": "List[Union[Dict[Any, Any], Any]]"}, {"lineNumber": 611, "col_offset": 47, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 614, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 614, "col_offset": 44, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 616, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 616, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 617, "col_offset": 12, "nodeName": "str", "type": "str"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 618, "col_offset": 21, "nodeName": "str", "type": "str"}, {"lineNumber": 673, "col_offset": 15, "nodeName": "BolfiPosterior", "type": "Type[elfi.methods.posteriors.BolfiPosterior]"}, {"lineNumber": 673, "col_offset": 30, "nodeName": "discrepancy_model", "type": "Any"}, {"lineNumber": 673, "col_offset": 54, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 134, "col_offset": 49, "nodeName": "NodeReference", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "context", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "client", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "client", "type": "module"}, {"lineNumber": 153, "col_offset": 48, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 153, "col_offset": 68, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 153, "col_offset": 84, "nodeName": "client", "type": "Any"}, {"lineNumber": 155, "col_offset": 60, "nodeName": "client", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 252, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 254, "col_offset": 18, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "iterate", "type": "Callable[[], Any]"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "_prepare_new_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 281, "col_offset": 36, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "submit", "type": "Callable[[], None]"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 290, "col_offset": 62, "nodeName": "_has_batches_to_submit", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "has_ready", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "_get_batches_total", "type": "Any"}, {"lineNumber": 300, "col_offset": 43, "nodeName": "batches", "type": "Any"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 321, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 321, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 322, "col_offset": 21, "nodeName": "batch", "type": "Any"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 335, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 335, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 335, "col_offset": 29, "nodeName": "ElfiModel", "type": "Any"}, {"lineNumber": 335, "col_offset": 44, "nodeName": "target", "type": "Any"}, {"lineNumber": 336, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "target", "type": "Any"}, {"lineNumber": 343, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 345, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 345, "col_offset": 34, "nodeName": "default_reference_class", "type": "Any"}, {"lineNumber": 346, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 348, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 376, "col_offset": 34, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 377, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 377, "col_offset": 38, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 379, "col_offset": 58, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 395, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 395, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 398, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 398, "col_offset": 25, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 401, "col_offset": 40, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 401, "col_offset": 53, "nodeName": "p", "type": "Union[float, Any]"}, {"lineNumber": 401, "col_offset": 66, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 406, "col_offset": 11, "nodeName": "state", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "state", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 414, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 416, "col_offset": 18, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 417, "col_offset": 41, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 418, "col_offset": 20, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 419, "col_offset": 20, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 424, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 426, "col_offset": 30, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 427, "col_offset": 28, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 428, "col_offset": 34, "nodeName": "accept_rate", "type": "Any"}, {"lineNumber": 429, "col_offset": 32, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 435, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 435, "col_offset": 53, "nodeName": "k", "type": "str"}, {"lineNumber": 435, "col_offset": 60, "nodeName": "k", "type": "str"}, {"lineNumber": 435, "col_offset": 65, "nodeName": "ks", "type": "List[str]"}, {"lineNumber": 442, "col_offset": 13, "nodeName": "t", "type": "None"}, {"lineNumber": 450, "col_offset": 19, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 450, "col_offset": 27, "nodeName": "total", "type": "int"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 458, "col_offset": 45, "nodeName": "inf", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 469, "col_offset": 46, "nodeName": "batch", "type": "Any"}, {"lineNumber": 473, "col_offset": 20, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 474, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 506, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 507, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 507, "col_offset": 38, "nodeName": "target", "type": "Any"}, {"lineNumber": 510, "col_offset": 23, "nodeName": "OutputPool", "type": "Type[elfi.store.OutputPool]"}, {"lineNumber": 512, "col_offset": 66, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 513, "col_offset": 62, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 513, "col_offset": 79, "nodeName": "pool", "type": "Union[Any, elfi.store.OutputPool]"}, {"lineNumber": 514, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 518, "col_offset": 15, "nodeName": "param", "type": "Any"}, {"lineNumber": 518, "col_offset": 28, "nodeName": "pool", "type": "Union[Any, elfi.store.OutputPool]"}, {"lineNumber": 522, "col_offset": 28, "nodeName": "GPyRegression", "type": "Type[elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 524, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 524, "col_offset": 26, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 524, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 526, "col_offset": 21, "nodeName": "_to_array", "type": "Callable[..., Any]"}, {"lineNumber": 526, "col_offset": 36, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 526, "col_offset": 54, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "update", "type": "Union[Any, Callable[..., None]]"}, {"lineNumber": 527, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 528, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 528, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 531, "col_offset": 11, "nodeName": "initial_evidence", "type": "Union[Any, int]"}, {"lineNumber": 531, "col_offset": 30, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 532, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 534, "col_offset": 56, "nodeName": "LCBSC", "type": "Any"}, {"lineNumber": 534, "col_offset": 62, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 543, "col_offset": 21, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 543, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 545, "col_offset": 21, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 545, "col_offset": 34, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 546, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 548, "col_offset": 30, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 551, "col_offset": 51, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 552, "col_offset": 51, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 557, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 559, "col_offset": 12, "nodeName": "param_hat", "type": "Dict[Any, Any]"}, {"lineNumber": 559, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 561, "col_offset": 28, "nodeName": "param_hat", "type": "Dict[Any, Any]"}, {"lineNumber": 566, "col_offset": 17, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 566, "col_offset": 39, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 567, "col_offset": 48, "nodeName": "batch", "type": "Any"}, {"lineNumber": 569, "col_offset": 19, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 570, "col_offset": 41, "nodeName": "batch", "type": "Any"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 573, "col_offset": 40, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 576, "col_offset": 19, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 579, "col_offset": 40, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 582, "col_offset": 25, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 583, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 584, "col_offset": 20, "nodeName": "acquisition_method", "type": "Any"}, {"lineNumber": 584, "col_offset": 52, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 588, "col_offset": 20, "nodeName": "new_param", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "pool", "type": "Union[Any, elfi.store.OutputPool]"}, {"lineNumber": 593, "col_offset": 15, "nodeName": "batches", "type": "Any"}, {"lineNumber": 593, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 598, "col_offset": 18, "nodeName": "_n_submitted_evidence", "type": "Any"}, {"lineNumber": 598, "col_offset": 48, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 599, "col_offset": 18, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 599, "col_offset": 49, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 600, "col_offset": 71, "nodeName": "prevent", "type": "Any"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 603, "col_offset": 49, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 604, "col_offset": 22, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 604, "col_offset": 50, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 605, "col_offset": 15, "nodeName": "current", "type": "Any"}, {"lineNumber": 605, "col_offset": 26, "nodeName": "n_initial_evidence", "type": "Union[Any, int]"}, {"lineNumber": 605, "col_offset": 54, "nodeName": "current", "type": "Any"}, {"lineNumber": 605, "col_offset": 65, "nodeName": "next_update", "type": "Any"}, {"lineNumber": 610, "col_offset": 27, "nodeName": "pending_indices", "type": "Any"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 611, "col_offset": 47, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 616, "col_offset": 23, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 617, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 617, "col_offset": 41, "nodeName": "fill", "type": "str"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 673, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 137, "col_offset": 69, "nodeName": "model", "type": "Any"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "elfi", "type": "module"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "elfi", "type": "module"}, {"lineNumber": 153, "col_offset": 84, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 155, "col_offset": 60, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "pending_indices", "type": "Any"}, {"lineNumber": 290, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 294, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 294, "col_offset": 47, "nodeName": "pending_indices", "type": "Any"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "batches", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 300, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 343, "col_offset": 27, "nodeName": "target", "type": "Any"}, {"lineNumber": 377, "col_offset": 38, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 379, "col_offset": 14, "nodeName": "Rejection", "type": "Type[Rejection]"}, {"lineNumber": 379, "col_offset": 25, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 406, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 419, "col_offset": 28, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 419, "col_offset": 46, "nodeName": "n_samples", "type": "nothing"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 424, "col_offset": 28, "nodeName": "n_samples", "type": "nothing"}, {"lineNumber": 435, "col_offset": 34, "nodeName": "objective", "type": "Dict[nothing, nothing]"}, {"lineNumber": 450, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 457, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 458, "col_offset": 20, "nodeName": "node", "type": "Any"}, {"lineNumber": 458, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 458, "col_offset": 36, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 458, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 469, "col_offset": 52, "nodeName": "node", "type": "Any"}, {"lineNumber": 472, "col_offset": 20, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 474, "col_offset": 21, "nodeName": "sort_mask", "type": "Any"}, {"lineNumber": 507, "col_offset": 38, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 512, "col_offset": 14, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 512, "col_offset": 36, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 518, "col_offset": 28, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "add_store", "type": "Union[Any, Callable[..., None]]"}, {"lineNumber": 519, "col_offset": 36, "nodeName": "param", "type": "Any"}, {"lineNumber": 522, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 522, "col_offset": 46, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 522, "col_offset": 77, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 526, "col_offset": 21, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 526, "col_offset": 54, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "target_model", "type": "Union[Any, elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 527, "col_offset": 40, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 531, "col_offset": 30, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 545, "col_offset": 21, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 551, "col_offset": 51, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 552, "col_offset": 51, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 557, "col_offset": 30, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 559, "col_offset": 22, "nodeName": "p", "type": "Any"}, {"lineNumber": 559, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 567, "col_offset": 54, "nodeName": "target", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 570, "col_offset": 47, "nodeName": "target", "type": "Any"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 573, "col_offset": 40, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 576, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 576, "col_offset": 68, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 583, "col_offset": 37, "nodeName": "n_initial_evidence", "type": "Union[Any, int]"}, {"lineNumber": 583, "col_offset": 61, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 584, "col_offset": 20, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 588, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 588, "col_offset": 46, "nodeName": "p", "type": "Any"}, {"lineNumber": 588, "col_offset": 51, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 588, "col_offset": 61, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 593, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 598, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 598, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 599, "col_offset": 18, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 599, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 600, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 600, "col_offset": 21, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 600, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 604, "col_offset": 22, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 605, "col_offset": 26, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 610, "col_offset": 27, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 617, "col_offset": 47, "nodeName": "item", "type": "Any"}, {"lineNumber": 617, "col_offset": 68, "nodeName": "params", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "batches", "type": "Any"}, {"lineNumber": 294, "col_offset": 47, "nodeName": "batches", "type": "Any"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 419, "col_offset": 28, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 435, "col_offset": 34, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 456, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 458, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 469, "col_offset": 14, "nodeName": "objective", "type": "Dict[nothing, nothing]"}, {"lineNumber": 472, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 472, "col_offset": 31, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "pool", "type": "Union[Any, elfi.store.OutputPool]"}, {"lineNumber": 522, "col_offset": 46, "nodeName": "model", "type": "Any"}, {"lineNumber": 527, "col_offset": 57, "nodeName": "target", "type": "Any"}, {"lineNumber": 559, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 567, "col_offset": 54, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 570, "col_offset": 47, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 576, "col_offset": 28, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 576, "col_offset": 41, "nodeName": "n_initial_evidence", "type": "Union[Any, int]"}, {"lineNumber": 576, "col_offset": 68, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 583, "col_offset": 37, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 583, "col_offset": 61, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 588, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 588, "col_offset": 61, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 599, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 610, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 617, "col_offset": 75, "nodeName": "i", "type": "int"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 294, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 41, "nodeName": "batch_", "type": "Any"}, {"lineNumber": 327, "col_offset": 60, "nodeName": "output", "type": "Any"}, {"lineNumber": 327, "col_offset": 70, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 456, "col_offset": 21, "nodeName": "objective", "type": "Dict[nothing, nothing]"}, {"lineNumber": 456, "col_offset": 51, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 457, "col_offset": 22, "nodeName": "batch", "type": "Any"}, {"lineNumber": 469, "col_offset": 14, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 472, "col_offset": 39, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 522, "col_offset": 46, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 527, "col_offset": 57, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 576, "col_offset": 28, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 576, "col_offset": 41, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 588, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 617, "col_offset": 47, "nodeName": "distances", "type": "Any"}, {"lineNumber": 327, "col_offset": 48, "nodeName": "output", "type": "Any"}, {"lineNumber": 456, "col_offset": 21, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 457, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 472, "col_offset": 39, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 617, "col_offset": 57, "nodeName": "i", "type": "int"}]