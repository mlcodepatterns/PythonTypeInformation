[{"lineNumber": 19, "col_offset": 0, "nodeName": "get_current_model", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "reset_current_model", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "_current_model", "type": "None"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "Network", "type": "Type[elfi.network.Network]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "ScipyLikeRV", "type": "Type[ScipyLikeRV]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "ObservableMixin", "type": "Type[ObservableMixin]"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 224, "col_offset": 14, "nodeName": "ObservableMixin", "type": "Type[ObservableMixin]"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "_current_model", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "_current_model", "type": "Union[ElfiModel, Any]"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "model", "type": "Union[ElfiModel, Any]"}, {"lineNumber": 21, "col_offset": 7, "nodeName": "_current_model", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "_current_model", "type": "ElfiModel"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "model", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "model", "type": "ElfiModel"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "observed", "type": "Dict[Any, Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "parameter_names", "type": "List[nothing]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "cls", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "parent", "type": "nothing"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "parents", "type": "Tuple[()]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "instance", "type": "NodeReference"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "instance", "type": "NodeReference"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "obs_name", "type": "str"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "output", "type": "functools.partial[nothing]"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "output", "type": "functools.partial[nothing]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "fn", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "output_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "output_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "ElfiModel", "type": "Type[ElfiModel]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "ElfiModel", "type": "Type[ElfiModel]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "model", "type": "Union[ElfiModel, Any]"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "ElfiModel", "type": "Type[ElfiModel]"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "reference", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "state", "type": "None"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "self", "type": "Constant"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "model", "type": "None"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_init_reference", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_add_parents", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "parents", "type": "Tuple[()]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "__new__", "type": "Callable"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "cls", "type": "Type[NodeReference]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_init_reference", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Constant"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Constant"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "n", "type": "Any"}, {"lineNumber": 105, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 105, "col_offset": 59, "nodeName": "with_values", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "__name__", "type": "str"}, {"lineNumber": 122, "col_offset": 58, "nodeName": "name", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "__str__", "type": "Callable[[], Any]"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "observed", "type": "Any"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "observed", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "obs_name", "type": "str"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "state", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "size", "type": "Tuple[Any]"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "rvs_wrapper", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "self", "type": "ScipyLikeRV"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "d", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "state", "type": "Any"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 238, "col_offset": 28, "nodeName": "discrepancy_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 31, "col_offset": 69, "nodeName": "ElfiModel", "type": "Type[ElfiModel]"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "get_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "get_current_model", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Constant"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Constant"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "parent_name", "type": "str"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "parent", "type": "Constant"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "add_edge", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "cls", "type": "Type[NodeReference]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "instance", "type": "NodeReference"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "Client", "type": "Type[elfi.native_client.Client]"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 105, "col_offset": 48, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "get_node", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "item", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "__class__", "type": "Type[NodeReference]"}, {"lineNumber": 122, "col_offset": 58, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 131, "col_offset": 51, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 60, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 47, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 142, "col_offset": 59, "nodeName": "state", "type": "Any"}, {"lineNumber": 142, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 47, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 152, "col_offset": 59, "nodeName": "state", "type": "Any"}, {"lineNumber": 152, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "observed", "type": "Any"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "Client", "type": "Type[elfi.native_client.Client]"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 179, "col_offset": 53, "nodeName": "size", "type": "Any"}, {"lineNumber": 180, "col_offset": 49, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 180, "col_offset": 63, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 180, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "scipy_from_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 196, "col_offset": 51, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 196, "col_offset": 70, "nodeName": "size", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "d", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 211, "col_offset": 58, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 211, "col_offset": 73, "nodeName": "name", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "fn", "type": "Any"}, {"lineNumber": 221, "col_offset": 47, "nodeName": "dependencies", "type": "Tuple[Any, ...]"}, {"lineNumber": 221, "col_offset": 67, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 221, "col_offset": 76, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "fn", "type": "Any"}, {"lineNumber": 227, "col_offset": 45, "nodeName": "dependencies", "type": "Tuple[Any, ...]"}, {"lineNumber": 227, "col_offset": 65, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 227, "col_offset": 74, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "fn", "type": "Any"}, {"lineNumber": 233, "col_offset": 49, "nodeName": "dependencies", "type": "Tuple[Any, ...]"}, {"lineNumber": 233, "col_offset": 69, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 233, "col_offset": 78, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 238, "col_offset": 52, "nodeName": "fn", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "ElfiModel", "type": "Type[ElfiModel]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "parent", "type": "nothing"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "Constant", "type": "Type[Constant]"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "parent_name", "type": "str"}, {"lineNumber": 71, "col_offset": 47, "nodeName": "parent", "type": "nothing"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "parent", "type": "Constant"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "self", "type": "Constant"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "Constant", "type": "Type[Constant]"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "self", "type": "Constant"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "StochasticMixin", "type": "Type[StochasticMixin]"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "self", "type": "StochasticMixin"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "ObservableMixin", "type": "Type[ObservableMixin]"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "self", "type": "ObservableMixin"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "obs_name", "type": "str"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "ScipyLikeRV", "type": "Type[ScipyLikeRV]"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "self", "type": "Prior"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "size", "type": "Any"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "size", "type": "Any"}, {"lineNumber": 186, "col_offset": 49, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 194, "col_offset": 66, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 206, "col_offset": 27, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "__str__", "type": "Callable[[], Any]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "Simulator", "type": "Type[Simulator]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "self", "type": "Simulator"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "Summary", "type": "Type[Summary]"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "self", "type": "Summary"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 233, "col_offset": 14, "nodeName": "Discrepancy", "type": "Type[Discrepancy]"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "self", "type": "Discrepancy"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "self", "type": "Constant"}, {"lineNumber": 70, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 71, "col_offset": 61, "nodeName": "model", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "Constant"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "self", "type": "ObservableMixin"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "self", "type": "ObservableMixin"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "d", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 70, "col_offset": 61, "nodeName": "hex", "type": "str"}, {"lineNumber": 71, "col_offset": 61, "nodeName": "self", "type": "Constant"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "ScipyLikeRV", "type": "Type[ScipyLikeRV]"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "self", "type": "ScipyLikeRV"}, {"lineNumber": 70, "col_offset": 61, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 70, "col_offset": 61, "nodeName": "uuid", "type": "module"}]