[{"lineNumber": 24, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 361, "col_offset": 14, "nodeName": "ParameterInference", "type": "Type[ParameterInference]"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 575, "col_offset": 10, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 714, "col_offset": 27, "nodeName": "ParameterInference", "type": "Type[ParameterInference]"}, {"lineNumber": 998, "col_offset": 12, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "computation_context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "client", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "pool", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "seed", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 228, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "vis_opt", "type": "Dict[nothing, nothing]"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "vis", "type": "None"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "n_batches", "type": "Union[Any, int]"}, {"lineNumber": 322, "col_offset": 62, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "output_names", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "checked_names", "type": "List[Any]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 344, "col_offset": 20, "nodeName": "output_names", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "checked_names", "type": "List[Any]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "state_key", "type": "str"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 423, "col_offset": 32, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 450, "col_offset": 11, "nodeName": "quantile", "type": "Union[Any, float]"}, {"lineNumber": 453, "col_offset": 11, "nodeName": "n_sim", "type": "Union[int, Any]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "e_noarr", "type": "str"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "e_len", "type": "str"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 495, "col_offset": 20, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 516, "col_offset": 32, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "sort_mask", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "o", "type": "Dict[str, Any]"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 536, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 561, "col_offset": 38, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "logpdf_name", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 589, "col_offset": 32, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "prior_logpdf", "type": "Any"}, {"lineNumber": 590, "col_offset": 28, "nodeName": "logpdf_name", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "_rejection", "type": "None"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "_round_random_state", "type": "None"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 612, "col_offset": 11, "nodeName": "finished", "type": "Any"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 632, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "round", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "dashes", "type": "str"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "_round_random_state", "type": "Any"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "method_name", "type": "str"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 658, "col_offset": 22, "nodeName": "w", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "cov", "type": "Any"}, {"lineNumber": 659, "col_offset": 18, "nodeName": "cov", "type": "Any"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 661, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 666, "col_offset": 11, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "cov", "type": "Any"}, {"lineNumber": 691, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 691, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 693, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "n_batches", "type": "nothing"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "params_", "type": "Any"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 760, "col_offset": 27, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 761, "col_offset": 28, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "n_precomputed", "type": "int"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "batches_per_acquisition", "type": "Any"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 778, "col_offset": 34, "nodeName": "n_initial", "type": "int"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "n_precomputed_evidence", "type": "int"}, {"lineNumber": 779, "col_offset": 38, "nodeName": "n_precomputed", "type": "int"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 780, "col_offset": 31, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 782, "col_offset": 35, "nodeName": "n_precomputed_evidence", "type": "int"}, {"lineNumber": 783, "col_offset": 39, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "precomputed", "type": "None"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "n_required", "type": "Any"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "n_required", "type": "int"}, {"lineNumber": 840, "col_offset": 39, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "batch_min", "type": "Any"}, {"lineNumber": 849, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 850, "col_offset": 36, "nodeName": "Y", "type": "Any"}, {"lineNumber": 860, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 862, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 865, "col_offset": 8, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 867, "col_offset": 11, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 871, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "acquisition", "type": "Any"}, {"lineNumber": 881, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 884, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 887, "col_offset": 8, "nodeName": "acq_batch_size", "type": "Any"}, {"lineNumber": 888, "col_offset": 8, "nodeName": "initial_offset", "type": "int"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "starting_sim_index", "type": "Any"}, {"lineNumber": 891, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 892, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 903, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 909, "col_offset": 8, "nodeName": "acquisitions_left", "type": "int"}, {"lineNumber": 916, "col_offset": 8, "nodeName": "current", "type": "Any"}, {"lineNumber": 917, "col_offset": 8, "nodeName": "next_update", "type": "Any"}, {"lineNumber": 921, "col_offset": 8, "nodeName": "str", "type": "str"}, {"lineNumber": 922, "col_offset": 8, "nodeName": "fill", "type": "str"}, {"lineNumber": 923, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 933, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 937, "col_offset": 8, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 937, "col_offset": 13, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 953, "col_offset": 8, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 964, "col_offset": 8, "nodeName": "acq", "type": "Callable[[Any], Any]"}, {"lineNumber": 981, "col_offset": 8, "nodeName": "n_plots", "type": "Union[int, Any]"}, {"lineNumber": 981, "col_offset": 18, "nodeName": "input_dim", "type": "Union[int, Any]"}, {"lineNumber": 982, "col_offset": 8, "nodeName": "ncols", "type": "Union[Any, int]"}, {"lineNumber": 983, "col_offset": 8, "nodeName": "nrows", "type": "Union[Any, int]"}, {"lineNumber": 985, "col_offset": 8, "nodeName": "shape", "type": "Tuple[Any, Union[Any, int]]"}, {"lineNumber": 987, "col_offset": 8, "nodeName": "axes", "type": "Any"}, {"lineNumber": 989, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 995, "col_offset": 15, "nodeName": "axes", "type": "Any"}, {"lineNumber": 1085, "col_offset": 8, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1086, "col_offset": 8, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1096, "col_offset": 8, "nodeName": "is_sampling", "type": "bool"}, {"lineNumber": 1098, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 1099, "col_offset": 8, "nodeName": "tasks_ids", "type": "List[Any]"}, {"lineNumber": 1100, "col_offset": 8, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1103, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 1115, "col_offset": 8, "nodeName": "chains", "type": "List[Any]"}, {"lineNumber": 1116, "col_offset": 12, "nodeName": "id", "type": "Any"}, {"lineNumber": 1116, "col_offset": 18, "nodeName": "tasks_ids", "type": "List[Any]"}, {"lineNumber": 1119, "col_offset": 8, "nodeName": "chains", "type": "numpy.ndarray"}, {"lineNumber": 1126, "col_offset": 8, "nodeName": "is_sampling", "type": "bool"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 69, "nodeName": "model", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "copy", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "_check_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 48, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "ComputationContext", "type": "Type[elfi.model.elfi_model.ComputationContext]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "get_client", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "BatchHandler", "type": "Type[elfi.client.BatchHandler]"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "max_parallel_batches", "type": "None"}, {"lineNumber": 101, "col_offset": 60, "nodeName": "num_cores", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "vis", "type": "None"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "set_objective", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "finished", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "vis", "type": "None"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "cancel_pending", "type": "Callable[[], None]"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "extract_result", "type": "Callable[[], Any]"}, {"lineNumber": 277, "col_offset": 14, "nodeName": "_allow_submit", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "next_index", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "next_batch", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "wait_next", "type": "Callable[[], Tuple[Any, int]]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "_objective_n_batches", "type": "Any"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "_has_batches_to_submit", "type": "Any"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "_objective_n_batches", "type": "Any"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "objective", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 315, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 316, "col_offset": 31, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 317, "col_offset": 20, "nodeName": "seed", "type": "Any"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 326, "col_offset": 29, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 327, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 328, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 330, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 330, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 341, "col_offset": 23, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 379, "col_offset": 26, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 382, "col_offset": 17, "nodeName": "_extract_result_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 386, "col_offset": 19, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 387, "col_offset": 41, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 419, "col_offset": 34, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 419, "col_offset": 61, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 421, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 421, "col_offset": 47, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "quantile", "type": "float"}, {"lineNumber": 447, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 450, "col_offset": 21, "nodeName": "n_sim", "type": "int"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "n_batches", "type": "int"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 456, "col_offset": 24, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 458, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "_merge_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 468, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "_update_state_meta", "type": "Callable[[], Any]"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "_update_objective_n_batches", "type": "Callable[[], Any]"}, {"lineNumber": 483, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 484, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 484, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 487, "col_offset": 15, "nodeName": "Sample", "type": "Type[elfi.methods.results.Sample]"}, {"lineNumber": 495, "col_offset": 20, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 508, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 520, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 522, "col_offset": 18, "nodeName": "v", "type": "Any"}, {"lineNumber": 522, "col_offset": 23, "nodeName": "items", "type": "Any"}, {"lineNumber": 526, "col_offset": 20, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 527, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 527, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 536, "col_offset": 22, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 537, "col_offset": 25, "nodeName": "item", "type": "Any"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 538, "col_offset": 27, "nodeName": "min", "type": "Callable"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 545, "col_offset": 11, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 552, "col_offset": 12, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "accept_rate_t", "type": "Any"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "margin", "type": "Any"}, {"lineNumber": 558, "col_offset": 12, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 559, "col_offset": 12, "nodeName": "n_batches", "type": "int"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "objective", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 566, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "plot_sample", "type": "Callable[..., None]"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 578, "col_offset": 15, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 578, "col_offset": 34, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 578, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 578, "col_offset": 61, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 581, "col_offset": 16, "nodeName": "copy", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 587, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 587, "col_offset": 41, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "_init_new_round", "type": "Callable[[], Any]"}, {"lineNumber": 604, "col_offset": 14, "nodeName": "_extract_population", "type": "Callable[[], Any]"}, {"lineNumber": 605, "col_offset": 15, "nodeName": "SmcSample", "type": "Type[elfi.methods.results.SmcSample]"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 610, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 610, "col_offset": 38, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 612, "col_offset": 11, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "_update_state", "type": "Callable[[], Any]"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "_update_objective", "type": "Callable[[], Any]"}, {"lineNumber": 628, "col_offset": 17, "nodeName": "rvs", "type": "Callable[..., Any]"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "arr2d_to_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 631, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 631, "col_offset": 39, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 635, "col_offset": 16, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 641, "col_offset": 15, "nodeName": "seed", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 642, "col_offset": 35, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 642, "col_offset": 57, "nodeName": "seed", "type": "Any"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 644, "col_offset": 26, "nodeName": "Rejection", "type": "Type[Rejection]"}, {"lineNumber": 644, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "set_objective", "type": "Callable[..., Any]"}, {"lineNumber": 655, "col_offset": 14, "nodeName": "extract_result", "type": "Any"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 657, "col_offset": 11, "nodeName": "cov", "type": "Any"}, {"lineNumber": 657, "col_offset": 17, "nodeName": "_compute_weights_and_cov", "type": "Callable[[Any], Any]"}, {"lineNumber": 657, "col_offset": 47, "nodeName": "pop", "type": "Any"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 660, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 664, "col_offset": 17, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 666, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 670, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 684, "col_offset": 12, "nodeName": "cov", "type": "Any"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "w", "type": "Any"}, {"lineNumber": 686, "col_offset": 18, "nodeName": "cov", "type": "Any"}, {"lineNumber": 691, "col_offset": 12, "nodeName": "self", "type": "SMC"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 693, "col_offset": 22, "nodeName": "self", "type": "SMC"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 696, "col_offset": 27, "nodeName": "state", "type": "Any"}, {"lineNumber": 700, "col_offset": 20, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "objective", "type": "Any"}, {"lineNumber": 701, "col_offset": 38, "nodeName": "n_batches", "type": "nothing"}, {"lineNumber": 705, "col_offset": 15, "nodeName": "_populations", "type": "Any"}, {"lineNumber": 706, "col_offset": 18, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 707, "col_offset": 15, "nodeName": "params_", "type": "Any"}, {"lineNumber": 707, "col_offset": 24, "nodeName": "cov", "type": "Any"}, {"lineNumber": 707, "col_offset": 34, "nodeName": "weights", "type": "Any"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 752, "col_offset": 15, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 752, "col_offset": 29, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 752, "col_offset": 49, "nodeName": "model", "type": "Any"}, {"lineNumber": 752, "col_offset": 56, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 753, "col_offset": 39, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 754, "col_offset": 51, "nodeName": "model", "type": "Any"}, {"lineNumber": 754, "col_offset": 58, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 757, "col_offset": 23, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "n_initial", "type": "int"}, {"lineNumber": 764, "col_offset": 19, "nodeName": "precomputed", "type": "Optional[Any]"}, {"lineNumber": 764, "col_offset": 33, "nodeName": "_resolve_initial_evidence", "type": "Callable[[Any], Any]"}, {"lineNumber": 764, "col_offset": 64, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 765, "col_offset": 11, "nodeName": "precomputed", "type": "Optional[Any]"}, {"lineNumber": 766, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 767, "col_offset": 12, "nodeName": "n_precomputed", "type": "int"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 770, "col_offset": 39, "nodeName": "batches_per_acquisition", "type": "Any"}, {"lineNumber": 770, "col_offset": 66, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 771, "col_offset": 34, "nodeName": "acquisition_method", "type": "Any"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 782, "col_offset": 35, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 783, "col_offset": 39, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "max", "type": "Callable"}, {"lineNumber": 790, "col_offset": 21, "nodeName": "ceil_to_batch_size", "type": "Callable[[Any, Any], int]"}, {"lineNumber": 790, "col_offset": 40, "nodeName": "n_required", "type": "Any"}, {"lineNumber": 790, "col_offset": 52, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 792, "col_offset": 11, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 793, "col_offset": 12, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 793, "col_offset": 33, "nodeName": "n_required", "type": "int"}, {"lineNumber": 800, "col_offset": 11, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 814, "col_offset": 15, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 814, "col_offset": 35, "nodeName": "precomputed", "type": "Optional[Any]"}, {"lineNumber": 818, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 822, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 822, "col_offset": 31, "nodeName": "batches_per_acquisition", "type": "Any"}, {"lineNumber": 834, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 835, "col_offset": 12, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 837, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 837, "col_offset": 24, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 841, "col_offset": 34, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 841, "col_offset": 47, "nodeName": "n_precomputed_evidence", "type": "int"}, {"lineNumber": 844, "col_offset": 19, "nodeName": "stochastic_optimization", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 844, "col_offset": 43, "nodeName": "predict_mean", "type": "Union[Callable[[Any], Any], Any]"}, {"lineNumber": 845, "col_offset": 43, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 848, "col_offset": 20, "nodeName": "arr2d_to_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 848, "col_offset": 35, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 848, "col_offset": 42, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 849, "col_offset": 18, "nodeName": "arr2d_to_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 849, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 849, "col_offset": 54, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 850, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 850, "col_offset": 36, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 852, "col_offset": 15, "nodeName": "OptimizationResult", "type": "Type[elfi.methods.results.OptimizationResult]"}, {"lineNumber": 859, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 859, "col_offset": 49, "nodeName": "batch", "type": "Any"}, {"lineNumber": 859, "col_offset": 56, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 860, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 860, "col_offset": 36, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 862, "col_offset": 17, "nodeName": "batch_to_arr2d", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 862, "col_offset": 32, "nodeName": "batch", "type": "Any"}, {"lineNumber": 862, "col_offset": 39, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 863, "col_offset": 8, "nodeName": "_report_batch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 863, "col_offset": 27, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 863, "col_offset": 40, "nodeName": "params", "type": "Any"}, {"lineNumber": 865, "col_offset": 19, "nodeName": "_should_optimize", "type": "Callable[[], Any]"}, {"lineNumber": 866, "col_offset": 8, "nodeName": "update", "type": "Union[Callable[..., None], Any]"}, {"lineNumber": 866, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 866, "col_offset": 66, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 868, "col_offset": 43, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 871, "col_offset": 12, "nodeName": "_get_acquisition_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 871, "col_offset": 40, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 874, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 877, "col_offset": 22, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 879, "col_offset": 12, "nodeName": "acquisition", "type": "Any"}, {"lineNumber": 881, "col_offset": 16, "nodeName": "arr2d_to_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 881, "col_offset": 62, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 882, "col_offset": 36, "nodeName": "acquisition", "type": "Any"}, {"lineNumber": 887, "col_offset": 25, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 887, "col_offset": 43, "nodeName": "batches_per_acquisition", "type": "Any"}, {"lineNumber": 888, "col_offset": 25, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 888, "col_offset": 51, "nodeName": "n_precomputed_evidence", "type": "int"}, {"lineNumber": 889, "col_offset": 29, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 889, "col_offset": 47, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 891, "col_offset": 53, "nodeName": "acq_batch_size", "type": "Any"}, {"lineNumber": 897, "col_offset": 15, "nodeName": "total", "type": "Any"}, {"lineNumber": 897, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 903, "col_offset": 12, "nodeName": "_get_acquisition_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 903, "col_offset": 40, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 904, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 909, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 910, "col_offset": 38, "nodeName": "has_pending", "type": "Any"}, {"lineNumber": 916, "col_offset": 18, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 916, "col_offset": 49, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 917, "col_offset": 53, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 921, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 921, "col_offset": 44, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 923, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 923, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 924, "col_offset": 12, "nodeName": "str", "type": "str"}, {"lineNumber": 925, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 925, "col_offset": 21, "nodeName": "str", "type": "str"}, {"lineNumber": 933, "col_offset": 12, "nodeName": "gcf", "type": "Any"}, {"lineNumber": 937, "col_offset": 13, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "draw_contour", "type": "Callable[..., None]"}, {"lineNumber": 940, "col_offset": 27, "nodeName": "predict_mean", "type": "Union[Callable[[Any], Any], Any]"}, {"lineNumber": 941, "col_offset": 27, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 942, "col_offset": 27, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 948, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 949, "col_offset": 12, "nodeName": "point", "type": "Any"}, {"lineNumber": 953, "col_offset": 20, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 955, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 962, "col_offset": 8, "nodeName": "_update_interactive", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 962, "col_offset": 34, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 962, "col_offset": 44, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 966, "col_offset": 8, "nodeName": "draw_contour", "type": "Callable[..., None]"}, {"lineNumber": 966, "col_offset": 27, "nodeName": "acq", "type": "Callable[[Any], Any]"}, {"lineNumber": 967, "col_offset": 27, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 968, "col_offset": 27, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 973, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 981, "col_offset": 18, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 982, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 983, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 984, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 984, "col_offset": 27, "nodeName": "get", "type": "Callable"}, {"lineNumber": 986, "col_offset": 8, "nodeName": "axes", "type": "Any"}, {"lineNumber": 986, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 986, "col_offset": 23, "nodeName": "_create_axes", "type": "Callable[..., Tuple[Any, Dict[str, Any]]]"}, {"lineNumber": 986, "col_offset": 40, "nodeName": "axes", "type": "Any"}, {"lineNumber": 986, "col_offset": 46, "nodeName": "shape", "type": "Tuple[Any, Union[Any, int]]"}, {"lineNumber": 987, "col_offset": 15, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 989, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 989, "col_offset": 24, "nodeName": "n_plots", "type": "Union[Any, int]"}, {"lineNumber": 993, "col_offset": 8, "nodeName": "set_ylabel", "type": "Any"}, {"lineNumber": 1019, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 1021, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 1024, "col_offset": 19, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 1025, "col_offset": 15, "nodeName": "extract_posterior", "type": "Callable[..., Any]"}, {"lineNumber": 1025, "col_offset": 38, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1043, "col_offset": 15, "nodeName": "BolfiPosterior", "type": "Type[elfi.methods.posteriors.BolfiPosterior]"}, {"lineNumber": 1043, "col_offset": 30, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1085, "col_offset": 20, "nodeName": "extract_posterior", "type": "Callable[..., Any]"}, {"lineNumber": 1085, "col_offset": 43, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1086, "col_offset": 17, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1089, "col_offset": 11, "nodeName": "initials", "type": "Any"}, {"lineNumber": 1093, "col_offset": 12, "nodeName": "inds", "type": "Any"}, {"lineNumber": 1094, "col_offset": 12, "nodeName": "initials", "type": "numpy.ndarray"}, {"lineNumber": 1096, "col_offset": 8, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1098, "col_offset": 23, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1098, "col_offset": 45, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1103, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1103, "col_offset": 24, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 1104, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1112, "col_offset": 12, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1119, "col_offset": 17, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1119, "col_offset": 28, "nodeName": "chains", "type": "List[Any]"}, {"lineNumber": 1121, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 1123, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 1123, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 1123, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1123, "col_offset": 34, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 1126, "col_offset": 8, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1128, "col_offset": 15, "nodeName": "BolfiSample", "type": "Type[elfi.methods.results.BolfiSample]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 49, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "seed", "type": "None"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "observed", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "pool", "type": "None"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "client", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "client", "type": "module"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 100, "col_offset": 73, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 94, "nodeName": "client", "type": "Any"}, {"lineNumber": 101, "col_offset": 60, "nodeName": "client", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "num_cores", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "msg", "type": "str"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "msg", "type": "str"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 239, "col_offset": 36, "nodeName": "vis", "type": "None"}, {"lineNumber": 239, "col_offset": 41, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 241, "col_offset": 28, "nodeName": "args", "type": "Tuple[Any]"}, {"lineNumber": 241, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "iterate", "type": "Callable[[], Any]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 277, "col_offset": 14, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "prepare_new_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 48, "nodeName": "next_index", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "submit", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 32, "nodeName": "next_batch", "type": "Any"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 287, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 290, "col_offset": 43, "nodeName": "num_pending", "type": "int"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "has_ready", "type": "bool"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 297, "col_offset": 41, "nodeName": "num_pending", "type": "Any"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 24, "nodeName": "objective", "type": "Any"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "objective", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "n_batches", "type": "int"}, {"lineNumber": 315, "col_offset": 27, "nodeName": "__class__", "type": "Type[BayesianOptimization]"}, {"lineNumber": 316, "col_offset": 31, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 317, "col_offset": 20, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 323, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "ElfiModel", "type": "Type[elfi.model.elfi_model.ElfiModel]"}, {"lineNumber": 323, "col_offset": 44, "nodeName": "target", "type": "Any"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 328, "col_offset": 20, "nodeName": "target", "type": "Any"}, {"lineNumber": 331, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 333, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 333, "col_offset": 34, "nodeName": "default_reference_class", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 334, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 345, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 345, "col_offset": 32, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 346, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 348, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 348, "col_offset": 23, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 355, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 356, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 379, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 379, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "state_key", "type": "str"}, {"lineNumber": 384, "col_offset": 28, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 387, "col_offset": 41, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 419, "col_offset": 34, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 420, "col_offset": 44, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 420, "col_offset": 69, "nodeName": "output_names", "type": "Any"}, {"lineNumber": 421, "col_offset": 63, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 445, "col_offset": 11, "nodeName": "quantile", "type": "Any"}, {"lineNumber": 445, "col_offset": 32, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 445, "col_offset": 54, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 447, "col_offset": 50, "nodeName": "Inf", "type": "Any"}, {"lineNumber": 450, "col_offset": 29, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 454, "col_offset": 24, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 456, "col_offset": 24, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 458, "col_offset": 40, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 458, "col_offset": 61, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 459, "col_offset": 40, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 465, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "_init_samples_lazy", "type": "Callable[[Any], Any]"}, {"lineNumber": 467, "col_offset": 36, "nodeName": "batch", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 480, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 485, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 487, "col_offset": 30, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 497, "col_offset": 27, "nodeName": "batch", "type": "Any"}, {"lineNumber": 500, "col_offset": 21, "nodeName": "batch", "type": "Any"}, {"lineNumber": 508, "col_offset": 20, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 510, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 510, "col_offset": 23, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 520, "col_offset": 18, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 522, "col_offset": 23, "nodeName": "samples", "type": "Any"}, {"lineNumber": 523, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 523, "col_offset": 46, "nodeName": "batch", "type": "Any"}, {"lineNumber": 527, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 542, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 545, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 545, "col_offset": 43, "nodeName": "k", "type": "str"}, {"lineNumber": 545, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 548, "col_offset": 75, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 548, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 554, "col_offset": 28, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 558, "col_offset": 63, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 559, "col_offset": 24, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 559, "col_offset": 29, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 566, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 568, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 571, "col_offset": 26, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 571, "col_offset": 55, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 572, "col_offset": 66, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 572, "col_offset": 78, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 578, "col_offset": 34, "nodeName": "self", "type": "SMC"}, {"lineNumber": 581, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 582, "col_offset": 22, "nodeName": "add_pdf_nodes", "type": "Callable[..., Any]"}, {"lineNumber": 582, "col_offset": 46, "nodeName": "model", "type": "Any"}, {"lineNumber": 585, "col_offset": 24, "nodeName": "output_names", "type": "Any"}, {"lineNumber": 587, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 597, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 604, "col_offset": 14, "nodeName": "self", "type": "SMC"}, {"lineNumber": 605, "col_offset": 33, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 612, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "cancel_pending", "type": "Callable[[], None]"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 623, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 628, "col_offset": 17, "nodeName": "GMDistribution", "type": "Type[elfi.methods.utils.GMDistribution]"}, {"lineNumber": 628, "col_offset": 37, "nodeName": "_gm_params", "type": "Tuple[Any, nothing, nothing]"}, {"lineNumber": 628, "col_offset": 59, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 629, "col_offset": 49, "nodeName": "_round_random_state", "type": "Any"}, {"lineNumber": 631, "col_offset": 39, "nodeName": "self", "type": "SMC"}, {"lineNumber": 635, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 641, "col_offset": 28, "nodeName": "round", "type": "Any"}, {"lineNumber": 641, "col_offset": 15, "nodeName": "self", "type": "SMC"}, {"lineNumber": 641, "col_offset": 44, "nodeName": "get_sub_seed", "type": "Callable[..., Any]"}, {"lineNumber": 641, "col_offset": 57, "nodeName": "seed", "type": "Any"}, {"lineNumber": 641, "col_offset": 68, "nodeName": "round", "type": "Any"}, {"lineNumber": 642, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 644, "col_offset": 36, "nodeName": "self", "type": "SMC"}, {"lineNumber": 645, "col_offset": 53, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 646, "col_offset": 49, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 647, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 648, "col_offset": 41, "nodeName": "seed", "type": "Any"}, {"lineNumber": 649, "col_offset": 57, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "_rejection", "type": "Rejection"}, {"lineNumber": 651, "col_offset": 38, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 652, "col_offset": 48, "nodeName": "current_population_threshold", "type": "nothing"}, {"lineNumber": 655, "col_offset": 14, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 657, "col_offset": 17, "nodeName": "self", "type": "SMC"}, {"lineNumber": 660, "col_offset": 24, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 664, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 664, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 670, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 670, "col_offset": 24, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 672, "col_offset": 11, "nodeName": "count_nonzero", "type": "Any"}, {"lineNumber": 672, "col_offset": 28, "nodeName": "w", "type": "Any"}, {"lineNumber": 673, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 678, "col_offset": 18, "nodeName": "diag", "type": "Any"}, {"lineNumber": 680, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 681, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 684, "col_offset": 18, "nodeName": "diag", "type": "Any"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 696, "col_offset": 27, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 700, "col_offset": 25, "nodeName": "n_batches", "type": "nothing"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 701, "col_offset": 50, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 705, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 706, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 706, "col_offset": 34, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 707, "col_offset": 24, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 707, "col_offset": 34, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 711, "col_offset": 15, "nodeName": "objective", "type": "Any"}, {"lineNumber": 752, "col_offset": 29, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 753, "col_offset": 24, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 753, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 755, "col_offset": 62, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 755, "col_offset": 76, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 758, "col_offset": 23, "nodeName": "GPyRegression", "type": "Type[elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 758, "col_offset": 37, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 764, "col_offset": 33, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 766, "col_offset": 21, "nodeName": "batch_to_arr2d", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 766, "col_offset": 36, "nodeName": "precomputed", "type": "Optional[Any]"}, {"lineNumber": 766, "col_offset": 49, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 767, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 767, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 768, "col_offset": 12, "nodeName": "update", "type": "Union[Callable[..., None], Any]"}, {"lineNumber": 768, "col_offset": 37, "nodeName": "params", "type": "Any"}, {"lineNumber": 770, "col_offset": 66, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 772, "col_offset": 34, "nodeName": "LCBSC", "type": "Type[elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 772, "col_offset": 40, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 790, "col_offset": 52, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 794, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 794, "col_offset": 24, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 795, "col_offset": 12, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 797, "col_offset": 12, "nodeName": "precomputed", "type": "Any"}, {"lineNumber": 797, "col_offset": 26, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 798, "col_offset": 12, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 801, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 803, "col_offset": 13, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 803, "col_offset": 34, "nodeName": "n_required", "type": "int"}, {"lineNumber": 808, "col_offset": 11, "nodeName": "precomputed", "type": "Optional[Any]"}, {"lineNumber": 809, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 812, "col_offset": 33, "nodeName": "ceil_to_batch_size", "type": "Callable[[Any, Any], int]"}, {"lineNumber": 812, "col_offset": 52, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 812, "col_offset": 72, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 818, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 822, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 822, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 835, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 835, "col_offset": 58, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 837, "col_offset": 24, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 838, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 841, "col_offset": 47, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 844, "col_offset": 43, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 845, "col_offset": 43, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 846, "col_offset": 48, "nodeName": "seed", "type": "Any"}, {"lineNumber": 848, "col_offset": 42, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 849, "col_offset": 33, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 849, "col_offset": 54, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 850, "col_offset": 16, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 850, "col_offset": 36, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 852, "col_offset": 40, "nodeName": "batch_min", "type": "Any"}, {"lineNumber": 853, "col_offset": 42, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 860, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 862, "col_offset": 39, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 863, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 863, "col_offset": 48, "nodeName": "batch", "type": "Any"}, {"lineNumber": 865, "col_offset": 19, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 866, "col_offset": 8, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 866, "col_offset": 41, "nodeName": "batch", "type": "Any"}, {"lineNumber": 868, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 868, "col_offset": 43, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 871, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 877, "col_offset": 22, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 878, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 878, "col_offset": 15, "nodeName": "acquisition", "type": "Any"}, {"lineNumber": 879, "col_offset": 26, "nodeName": "acquire", "type": "Union[Any, Callable[..., Any]]"}, {"lineNumber": 879, "col_offset": 58, "nodeName": "acq_batch_size", "type": "Any"}, {"lineNumber": 881, "col_offset": 31, "nodeName": "acquisition", "type": "Any"}, {"lineNumber": 881, "col_offset": 62, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 882, "col_offset": 48, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 887, "col_offset": 25, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 887, "col_offset": 43, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 888, "col_offset": 25, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 888, "col_offset": 51, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 889, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 891, "col_offset": 13, "nodeName": "starting_sim_index", "type": "Any"}, {"lineNumber": 891, "col_offset": 34, "nodeName": "initial_offset", "type": "int"}, {"lineNumber": 897, "col_offset": 15, "nodeName": "batches", "type": "Any"}, {"lineNumber": 897, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 900, "col_offset": 15, "nodeName": "_allow_submit", "type": "Callable[[Any], Any]"}, {"lineNumber": 900, "col_offset": 63, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 903, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 909, "col_offset": 32, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 910, "col_offset": 11, "nodeName": "acquisitions_left", "type": "int"}, {"lineNumber": 910, "col_offset": 38, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 916, "col_offset": 18, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 916, "col_offset": 49, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 917, "col_offset": 22, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 917, "col_offset": 53, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 918, "col_offset": 15, "nodeName": "current", "type": "Any"}, {"lineNumber": 918, "col_offset": 26, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 918, "col_offset": 54, "nodeName": "current", "type": "Any"}, {"lineNumber": 918, "col_offset": 65, "nodeName": "next_update", "type": "Any"}, {"lineNumber": 923, "col_offset": 23, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 924, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 924, "col_offset": 41, "nodeName": "fill", "type": "str"}, {"lineNumber": 925, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 933, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 934, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 934, "col_offset": 15, "nodeName": "axes", "type": "Any"}, {"lineNumber": 935, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 935, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 935, "col_offset": 19, "nodeName": "subplots", "type": "Any"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 940, "col_offset": 27, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 941, "col_offset": 27, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 942, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 944, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 945, "col_offset": 45, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 948, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 949, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 953, "col_offset": 20, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 955, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 957, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 962, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 964, "col_offset": 25, "nodeName": "evaluate", "type": "Union[Any, Callable[..., Any]]"}, {"lineNumber": 964, "col_offset": 58, "nodeName": "x", "type": "Any"}, {"lineNumber": 966, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 967, "col_offset": 27, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 968, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 971, "col_offset": 45, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 973, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 974, "col_offset": 12, "nodeName": "close", "type": "Any"}, {"lineNumber": 981, "col_offset": 18, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 982, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 983, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 984, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 985, "col_offset": 17, "nodeName": "max", "type": "Callable"}, {"lineNumber": 985, "col_offset": 43, "nodeName": "min", "type": "Callable"}, {"lineNumber": 985, "col_offset": 47, "nodeName": "n_plots", "type": "Union[Any, int]"}, {"lineNumber": 985, "col_offset": 56, "nodeName": "ncols", "type": "Union[int, Any]"}, {"lineNumber": 986, "col_offset": 23, "nodeName": "vis", "type": "module"}, {"lineNumber": 986, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 987, "col_offset": 15, "nodeName": "axes", "type": "Any"}, {"lineNumber": 990, "col_offset": 12, "nodeName": "scatter", "type": "Any"}, {"lineNumber": 991, "col_offset": 12, "nodeName": "set_xlabel", "type": "Any"}, {"lineNumber": 1019, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 1022, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1025, "col_offset": 15, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1040, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 1041, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1043, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1043, "col_offset": 59, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1080, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 1081, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 1081, "col_offset": 21, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 1085, "col_offset": 20, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1086, "col_offset": 27, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 1090, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1093, "col_offset": 19, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 1094, "col_offset": 23, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1096, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1098, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 1098, "col_offset": 45, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1104, "col_offset": 19, "nodeName": "get_sub_seed", "type": "Callable[..., Any]"}, {"lineNumber": 1104, "col_offset": 32, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 1104, "col_offset": 46, "nodeName": "ii", "type": "int"}, {"lineNumber": 1105, "col_offset": 18, "nodeName": "isinf", "type": "Any"}, {"lineNumber": 1106, "col_offset": 16, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1110, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1117, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1119, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 1121, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1122, "col_offset": 22, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 1122, "col_offset": 32, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 1123, "col_offset": 34, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1124, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 1124, "col_offset": 18, "nodeName": "node", "type": "Any"}, {"lineNumber": 1126, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1129, "col_offset": 34, "nodeName": "chains", "type": "numpy.ndarray"}, {"lineNumber": 1130, "col_offset": 43, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 1131, "col_offset": 34, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1134, "col_offset": 32, "nodeName": "seed", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 86, "col_offset": 69, "nodeName": "model", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "elfi", "type": "module"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "elfi", "type": "module"}, {"lineNumber": 100, "col_offset": 94, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 101, "col_offset": 60, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "client", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 278, "col_offset": 48, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 287, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 290, "col_offset": 43, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 297, "col_offset": 41, "nodeName": "batches", "type": "Any"}, {"lineNumber": 303, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 307, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 315, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 331, "col_offset": 27, "nodeName": "target", "type": "Any"}, {"lineNumber": 346, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "checked_names", "type": "List[Any]"}, {"lineNumber": 382, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 382, "col_offset": 23, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 382, "col_offset": 32, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 384, "col_offset": 28, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 385, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 385, "col_offset": 36, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 420, "col_offset": 24, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 420, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 421, "col_offset": 14, "nodeName": "Rejection", "type": "Type[Rejection]"}, {"lineNumber": 421, "col_offset": 25, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 447, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 450, "col_offset": 34, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 450, "col_offset": 44, "nodeName": "quantile", "type": "Union[Any, float]"}, {"lineNumber": 454, "col_offset": 29, "nodeName": "n_sim", "type": "Union[int, Any]"}, {"lineNumber": 454, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 465, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 484, "col_offset": 20, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 485, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 487, "col_offset": 41, "nodeName": "_extract_result_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 498, "col_offset": 22, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 500, "col_offset": 27, "nodeName": "node", "type": "Any"}, {"lineNumber": 501, "col_offset": 19, "nodeName": "is_array", "type": "Callable[[Any], bool]"}, {"lineNumber": 501, "col_offset": 28, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 502, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 503, "col_offset": 32, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 507, "col_offset": 71, "nodeName": "shape", "type": "Any"}, {"lineNumber": 510, "col_offset": 23, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 512, "col_offset": 16, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 512, "col_offset": 62, "nodeName": "inf", "type": "Any"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 514, "col_offset": 32, "nodeName": "empty", "type": "Any"}, {"lineNumber": 514, "col_offset": 41, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 523, "col_offset": 52, "nodeName": "node", "type": "Any"}, {"lineNumber": 526, "col_offset": 20, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 528, "col_offset": 21, "nodeName": "sort_mask", "type": "Any"}, {"lineNumber": 538, "col_offset": 34, "nodeName": "o", "type": "Dict[str, Any]"}, {"lineNumber": 538, "col_offset": 49, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 542, "col_offset": 15, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 545, "col_offset": 24, "nodeName": "objective", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 548, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 548, "col_offset": 69, "nodeName": "t", "type": "Any"}, {"lineNumber": 552, "col_offset": 24, "nodeName": "objective", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 554, "col_offset": 43, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 557, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 557, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 558, "col_offset": 53, "nodeName": "margin", "type": "Any"}, {"lineNumber": 558, "col_offset": 63, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 562, "col_offset": 58, "nodeName": "objective", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 568, "col_offset": 12, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 568, "col_offset": 28, "nodeName": "HTML", "type": "Any"}, {"lineNumber": 571, "col_offset": 26, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 571, "col_offset": 55, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 572, "col_offset": 28, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 582, "col_offset": 22, "nodeName": "augmenter", "type": "module"}, {"lineNumber": 584, "col_offset": 44, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 584, "col_offset": 69, "nodeName": "logpdf_name", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 587, "col_offset": 14, "nodeName": "SMC", "type": "Type[SMC]"}, {"lineNumber": 587, "col_offset": 19, "nodeName": "self", "type": "SMC"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 597, "col_offset": 45, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 598, "col_offset": 45, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 600, "col_offset": 46, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 605, "col_offset": 33, "nodeName": "pop", "type": "Any"}, {"lineNumber": 607, "col_offset": 27, "nodeName": "_extract_result_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 614, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 614, "col_offset": 37, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 615, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 616, "col_offset": 16, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 617, "col_offset": 16, "nodeName": "_init_new_round", "type": "Callable[[], Any]"}, {"lineNumber": 623, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 628, "col_offset": 37, "nodeName": "self", "type": "SMC"}, {"lineNumber": 628, "col_offset": 59, "nodeName": "self", "type": "SMC"}, {"lineNumber": 629, "col_offset": 49, "nodeName": "self", "type": "SMC"}, {"lineNumber": 638, "col_offset": 49, "nodeName": "dashes", "type": "str"}, {"lineNumber": 638, "col_offset": 57, "nodeName": "round", "type": "Any"}, {"lineNumber": 638, "col_offset": 64, "nodeName": "dashes", "type": "str"}, {"lineNumber": 641, "col_offset": 57, "nodeName": "self", "type": "SMC"}, {"lineNumber": 642, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 645, "col_offset": 53, "nodeName": "self", "type": "SMC"}, {"lineNumber": 646, "col_offset": 49, "nodeName": "self", "type": "SMC"}, {"lineNumber": 647, "col_offset": 47, "nodeName": "self", "type": "SMC"}, {"lineNumber": 649, "col_offset": 57, "nodeName": "self", "type": "SMC"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 651, "col_offset": 38, "nodeName": "self", "type": "SMC"}, {"lineNumber": 652, "col_offset": 48, "nodeName": "self", "type": "SMC"}, {"lineNumber": 655, "col_offset": 14, "nodeName": "self", "type": "SMC"}, {"lineNumber": 660, "col_offset": 24, "nodeName": "self", "type": "SMC"}, {"lineNumber": 670, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 670, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 672, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 678, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 678, "col_offset": 26, "nodeName": "weighted_var", "type": "Callable[..., Any]"}, {"lineNumber": 678, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 678, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 680, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 680, "col_offset": 22, "nodeName": "isfinite", "type": "Any"}, {"lineNumber": 680, "col_offset": 34, "nodeName": "cov", "type": "Any"}, {"lineNumber": 681, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 684, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 684, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "self", "type": "SMC"}, {"lineNumber": 696, "col_offset": 27, "nodeName": "self", "type": "SMC"}, {"lineNumber": 700, "col_offset": 25, "nodeName": "pop", "type": "nothing"}, {"lineNumber": 700, "col_offset": 43, "nodeName": "pop", "type": "nothing"}, {"lineNumber": 700, "col_offset": 50, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 701, "col_offset": 50, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 711, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 711, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 754, "col_offset": 14, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 754, "col_offset": 36, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 758, "col_offset": 37, "nodeName": "model", "type": "Any"}, {"lineNumber": 758, "col_offset": 72, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 766, "col_offset": 49, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 768, "col_offset": 12, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 768, "col_offset": 45, "nodeName": "precomputed", "type": "Optional[Any]"}, {"lineNumber": 772, "col_offset": 40, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 774, "col_offset": 50, "nodeName": "acq_noise_var", "type": "Any"}, {"lineNumber": 775, "col_offset": 57, "nodeName": "exploration_rate", "type": "Any"}, {"lineNumber": 776, "col_offset": 45, "nodeName": "seed", "type": "Any"}, {"lineNumber": 789, "col_offset": 32, "nodeName": "input_dim", "type": "Union[int, Any]"}, {"lineNumber": 794, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 794, "col_offset": 48, "nodeName": "int", "type": "Any"}, {"lineNumber": 794, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 795, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 795, "col_offset": 37, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 798, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 801, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 802, "col_offset": 47, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 804, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 808, "col_offset": 36, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 808, "col_offset": 57, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 809, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 812, "col_offset": 72, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 818, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 835, "col_offset": 25, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 835, "col_offset": 58, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 838, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 844, "col_offset": 43, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 845, "col_offset": 43, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 846, "col_offset": 48, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 849, "col_offset": 33, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 850, "col_offset": 16, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 854, "col_offset": 36, "nodeName": "_extract_result_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 859, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 859, "col_offset": 14, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 859, "col_offset": 36, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 863, "col_offset": 54, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 866, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 866, "col_offset": 47, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 868, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 868, "col_offset": 43, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 879, "col_offset": 26, "nodeName": "acquisition_method", "type": "Union[Any, elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 879, "col_offset": 58, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 879, "col_offset": 81, "nodeName": "t", "type": "Any"}, {"lineNumber": 881, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 882, "col_offset": 48, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 897, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 909, "col_offset": 32, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 910, "col_offset": 38, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 916, "col_offset": 18, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 917, "col_offset": 22, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 918, "col_offset": 26, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 924, "col_offset": 47, "nodeName": "item", "type": "Any"}, {"lineNumber": 924, "col_offset": 68, "nodeName": "params", "type": "Any"}, {"lineNumber": 934, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 935, "col_offset": 19, "nodeName": "plt", "type": "Any"}, {"lineNumber": 944, "col_offset": 36, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 945, "col_offset": 32, "nodeName": "axes", "type": "Any"}, {"lineNumber": 949, "col_offset": 20, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 950, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 950, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 951, "col_offset": 16, "nodeName": "scatter", "type": "Any"}, {"lineNumber": 957, "col_offset": 12, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 957, "col_offset": 31, "nodeName": "HTML", "type": "Any"}, {"lineNumber": 964, "col_offset": 25, "nodeName": "acquisition_method", "type": "Union[Any, elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 964, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 964, "col_offset": 65, "nodeName": "X", "type": "Any"}, {"lineNumber": 971, "col_offset": 32, "nodeName": "axes", "type": "Any"}, {"lineNumber": 974, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 985, "col_offset": 24, "nodeName": "n_plots", "type": "Union[Any, int]"}, {"lineNumber": 985, "col_offset": 35, "nodeName": "ncols", "type": "Union[int, Any]"}, {"lineNumber": 990, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 990, "col_offset": 61, "nodeName": "Y", "type": "Any"}, {"lineNumber": 991, "col_offset": 32, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 993, "col_offset": 8, "nodeName": "axes", "type": "Any"}, {"lineNumber": 1040, "col_offset": 11, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1043, "col_offset": 76, "nodeName": "ModelPrior", "type": "Type[elfi.methods.utils.ModelPrior]"}, {"lineNumber": 1043, "col_offset": 87, "nodeName": "model", "type": "Any"}, {"lineNumber": 1080, "col_offset": 11, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1081, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1090, "col_offset": 46, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 1090, "col_offset": 56, "nodeName": "input_dim", "type": "Union[int, Any]"}, {"lineNumber": 1091, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1093, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1093, "col_offset": 30, "nodeName": "Y", "type": "Any"}, {"lineNumber": 1094, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 1094, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 1098, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 1105, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1105, "col_offset": 27, "nodeName": "logpdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 1107, "col_offset": 19, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1110, "col_offset": 12, "nodeName": "tasks_ids", "type": "List[Any]"}, {"lineNumber": 1110, "col_offset": 29, "nodeName": "apply", "type": "Any"}, {"lineNumber": 1110, "col_offset": 47, "nodeName": "nuts", "type": "Callable[..., Any]"}, {"lineNumber": 1110, "col_offset": 58, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 1110, "col_offset": 91, "nodeName": "logpdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 1111, "col_offset": 47, "nodeName": "gradient_logpdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 1117, "col_offset": 12, "nodeName": "chains", "type": "List[Any]"}, {"lineNumber": 1117, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 1117, "col_offset": 42, "nodeName": "id", "type": "Any"}, {"lineNumber": 1124, "col_offset": 24, "nodeName": "eff_sample_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 1124, "col_offset": 64, "nodeName": "gelman_rubin", "type": "Callable[[Any], Any]"}, {"lineNumber": 1130, "col_offset": 43, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1132, "col_offset": 37, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1132, "col_offset": 43, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1133, "col_offset": 33, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 1134, "col_offset": 32, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 278, "col_offset": 48, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 290, "col_offset": 43, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 297, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 53, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 350, "col_offset": 21, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 350, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 350, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 351, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 385, "col_offset": 23, "nodeName": "state_key", "type": "str"}, {"lineNumber": 385, "col_offset": 36, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 385, "col_offset": 47, "nodeName": "state_key", "type": "str"}, {"lineNumber": 454, "col_offset": 35, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 484, "col_offset": 20, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 485, "col_offset": 28, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 487, "col_offset": 41, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 498, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 498, "col_offset": 76, "nodeName": "node", "type": "Any"}, {"lineNumber": 502, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 502, "col_offset": 48, "nodeName": "node", "type": "Any"}, {"lineNumber": 502, "col_offset": 54, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 503, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 503, "col_offset": 21, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 503, "col_offset": 32, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 504, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 507, "col_offset": 51, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 507, "col_offset": 71, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 512, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 512, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 512, "col_offset": 40, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 512, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 514, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 514, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 514, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 523, "col_offset": 14, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 526, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 526, "col_offset": 31, "nodeName": "samples", "type": "Any"}, {"lineNumber": 542, "col_offset": 15, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 545, "col_offset": 24, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 552, "col_offset": 24, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 557, "col_offset": 26, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 557, "col_offset": 48, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 557, "col_offset": 63, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 558, "col_offset": 25, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 558, "col_offset": 37, "nodeName": "accept_rate_t", "type": "Any"}, {"lineNumber": 562, "col_offset": 58, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 568, "col_offset": 28, "nodeName": "display", "type": "Any"}, {"lineNumber": 569, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 572, "col_offset": 28, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 584, "col_offset": 24, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 584, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 598, "col_offset": 45, "nodeName": "self", "type": "SMC"}, {"lineNumber": 606, "col_offset": 37, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 606, "col_offset": 65, "nodeName": "pop", "type": "Any"}, {"lineNumber": 607, "col_offset": 27, "nodeName": "self", "type": "SMC"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "self", "type": "SMC"}, {"lineNumber": 614, "col_offset": 15, "nodeName": "self", "type": "SMC"}, {"lineNumber": 614, "col_offset": 37, "nodeName": "self", "type": "SMC"}, {"lineNumber": 615, "col_offset": 16, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 615, "col_offset": 41, "nodeName": "_extract_population", "type": "Callable[[], Any]"}, {"lineNumber": 616, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 617, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 664, "col_offset": 40, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 664, "col_offset": 59, "nodeName": "p", "type": "Any"}, {"lineNumber": 664, "col_offset": 64, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 680, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 684, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 684, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 700, "col_offset": 50, "nodeName": "self", "type": "SMC"}, {"lineNumber": 701, "col_offset": 50, "nodeName": "self", "type": "SMC"}, {"lineNumber": 706, "col_offset": 41, "nodeName": "samples", "type": "Any"}, {"lineNumber": 706, "col_offset": 61, "nodeName": "p", "type": "Any"}, {"lineNumber": 706, "col_offset": 66, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 711, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 758, "col_offset": 37, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 768, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 768, "col_offset": 57, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 773, "col_offset": 46, "nodeName": "ModelPrior", "type": "Type[elfi.methods.utils.ModelPrior]"}, {"lineNumber": 773, "col_offset": 57, "nodeName": "model", "type": "Any"}, {"lineNumber": 776, "col_offset": 45, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 789, "col_offset": 32, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 794, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 798, "col_offset": 37, "nodeName": "precomputed", "type": "Any"}, {"lineNumber": 804, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 804, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 806, "col_offset": 35, "nodeName": "n_required", "type": "int"}, {"lineNumber": 806, "col_offset": 47, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 808, "col_offset": 57, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 811, "col_offset": 28, "nodeName": "n_initial_evidence", "type": "int"}, {"lineNumber": 811, "col_offset": 48, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 835, "col_offset": 25, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 854, "col_offset": 36, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 863, "col_offset": 54, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 866, "col_offset": 47, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 879, "col_offset": 26, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 881, "col_offset": 44, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 900, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 900, "col_offset": 21, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 900, "col_offset": 43, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 924, "col_offset": 75, "nodeName": "i", "type": "int"}, {"lineNumber": 945, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 950, "col_offset": 19, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 951, "col_offset": 35, "nodeName": "point", "type": "Any"}, {"lineNumber": 957, "col_offset": 31, "nodeName": "display", "type": "Any"}, {"lineNumber": 958, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 959, "col_offset": 48, "nodeName": "point", "type": "Any"}, {"lineNumber": 964, "col_offset": 25, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 964, "col_offset": 65, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 971, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 990, "col_offset": 12, "nodeName": "axes", "type": "Any"}, {"lineNumber": 990, "col_offset": 29, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 990, "col_offset": 61, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 991, "col_offset": 12, "nodeName": "axes", "type": "Any"}, {"lineNumber": 991, "col_offset": 32, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 991, "col_offset": 53, "nodeName": "ii", "type": "int"}, {"lineNumber": 1043, "col_offset": 87, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1090, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1090, "col_offset": 26, "nodeName": "initials", "type": "Any"}, {"lineNumber": 1090, "col_offset": 56, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1093, "col_offset": 30, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1094, "col_offset": 34, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 1094, "col_offset": 54, "nodeName": "inds", "type": "Any"}, {"lineNumber": 1105, "col_offset": 27, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1105, "col_offset": 44, "nodeName": "initials", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 1107, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1107, "col_offset": 37, "nodeName": "inds", "type": "Any"}, {"lineNumber": 1108, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1110, "col_offset": 29, "nodeName": "client", "type": "Any"}, {"lineNumber": 1110, "col_offset": 47, "nodeName": "mcmc", "type": "module"}, {"lineNumber": 1110, "col_offset": 69, "nodeName": "initials", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 1110, "col_offset": 91, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1111, "col_offset": 47, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1111, "col_offset": 82, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1111, "col_offset": 95, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1111, "col_offset": 103, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1117, "col_offset": 26, "nodeName": "client", "type": "Any"}, {"lineNumber": 1124, "col_offset": 24, "nodeName": "mcmc", "type": "module"}, {"lineNumber": 1124, "col_offset": 45, "nodeName": "chains", "type": "numpy.ndarray"}, {"lineNumber": 1124, "col_offset": 64, "nodeName": "mcmc", "type": "module"}, {"lineNumber": 1124, "col_offset": 82, "nodeName": "chains", "type": "numpy.ndarray"}, {"lineNumber": 1132, "col_offset": 43, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1133, "col_offset": 33, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "objective", "type": "Any"}, {"lineNumber": 305, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 351, "col_offset": 96, "nodeName": "name", "type": "Any"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "has_node", "type": "Any"}, {"lineNumber": 352, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 353, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 485, "col_offset": 28, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 502, "col_offset": 33, "nodeName": "e_noarr", "type": "str"}, {"lineNumber": 502, "col_offset": 54, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 504, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 504, "col_offset": 46, "nodeName": "node", "type": "Any"}, {"lineNumber": 504, "col_offset": 65, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 507, "col_offset": 21, "nodeName": "objective", "type": "Dict[str, Any]"}, {"lineNumber": 507, "col_offset": 51, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 512, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 512, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 523, "col_offset": 14, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 526, "col_offset": 39, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 537, "col_offset": 25, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 537, "col_offset": 38, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 548, "col_offset": 30, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 548, "col_offset": 43, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 569, "col_offset": 56, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 599, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 599, "col_offset": 45, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 606, "col_offset": 37, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 615, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 615, "col_offset": 41, "nodeName": "self", "type": "SMC"}, {"lineNumber": 664, "col_offset": 40, "nodeName": "pop", "type": "Any"}, {"lineNumber": 664, "col_offset": 52, "nodeName": "p", "type": "Any"}, {"lineNumber": 664, "col_offset": 64, "nodeName": "self", "type": "SMC"}, {"lineNumber": 684, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 706, "col_offset": 41, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 706, "col_offset": 54, "nodeName": "p", "type": "Any"}, {"lineNumber": 706, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 773, "col_offset": 57, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 789, "col_offset": 32, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 798, "col_offset": 49, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 811, "col_offset": 48, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 924, "col_offset": 47, "nodeName": "distances", "type": "Any"}, {"lineNumber": 951, "col_offset": 16, "nodeName": "axes", "type": "Any"}, {"lineNumber": 959, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 959, "col_offset": 28, "nodeName": "Y", "type": "Any"}, {"lineNumber": 990, "col_offset": 17, "nodeName": "ii", "type": "int"}, {"lineNumber": 990, "col_offset": 29, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 990, "col_offset": 56, "nodeName": "ii", "type": "int"}, {"lineNumber": 990, "col_offset": 61, "nodeName": "target_model", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 991, "col_offset": 17, "nodeName": "ii", "type": "int"}, {"lineNumber": 1090, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1090, "col_offset": 56, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1093, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1094, "col_offset": 34, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1105, "col_offset": 53, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1110, "col_offset": 29, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1110, "col_offset": 78, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1117, "col_offset": 26, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 504, "col_offset": 33, "nodeName": "e_len", "type": "str"}, {"lineNumber": 504, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 504, "col_offset": 56, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 504, "col_offset": 65, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 507, "col_offset": 21, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 526, "col_offset": 39, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 537, "col_offset": 38, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 537, "col_offset": 61, "nodeName": "o", "type": "Dict[str, Any]"}, {"lineNumber": 548, "col_offset": 43, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 569, "col_offset": 56, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 606, "col_offset": 37, "nodeName": "self", "type": "SMC"}, {"lineNumber": 798, "col_offset": 49, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 924, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 951, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 959, "col_offset": 28, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 959, "col_offset": 35, "nodeName": "Y", "type": "Any"}, {"lineNumber": 990, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 990, "col_offset": 61, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1124, "col_offset": 58, "nodeName": "ii", "type": "int"}, {"lineNumber": 1124, "col_offset": 95, "nodeName": "ii", "type": "int"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 959, "col_offset": 35, "nodeName": "gp", "type": "Union[elfi.methods.bo.gpy_regression.GPyRegression, Any]"}]