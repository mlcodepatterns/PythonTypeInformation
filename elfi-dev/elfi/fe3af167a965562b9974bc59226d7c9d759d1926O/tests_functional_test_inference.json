[{"lineNumber": 19, "col_offset": 0, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "test_rejection_with_quantile", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "test_rejection_with_threshold", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "test_smc", "type": "Callable[[], Any]"}, {"lineNumber": 11, "col_offset": 7, "nodeName": "skipif", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "n_obs", "type": "int"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "t1", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "t2", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "quantile", "type": "float"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "rej", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "t", "type": "float"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "rej", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "thresholds", "type": "List[float]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "smc", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "log_d", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "acq_x", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "post", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "post_map", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "vals_ml", "type": "Dict[Any, Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "vals_map", "type": "Dict[Any, Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "n_chains", "type": "int"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "res_sampling", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "is_sampling", "type": "bool"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "true_logpdf_prior", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "true_logpdf_prior", "type": "Any"}, {"lineNumber": 11, "col_offset": 7, "nodeName": "mark", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "getoption", "type": "Any"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "get_model", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "m", "type": "Any"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "N", "type": "Any"}, {"lineNumber": 37, "col_offset": 53, "nodeName": "error_bound", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 38, "col_offset": 74, "nodeName": "error_bound", "type": "Any"}, {"lineNumber": 39, "col_offset": 53, "nodeName": "error_bound", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 40, "col_offset": 74, "nodeName": "error_bound", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 45, "col_offset": 7, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "Rejection", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "sample", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "N", "type": "int"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "samples", "type": "Any"}, {"lineNumber": 53, "col_offset": 55, "nodeName": "N", "type": "int"}, {"lineNumber": 53, "col_offset": 58, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 56, "col_offset": 48, "nodeName": "N", "type": "int"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "accept_rate", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "quantile", "type": "float"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 64, "col_offset": 7, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "Rejection", "type": "Any"}, {"lineNumber": 69, "col_offset": 10, "nodeName": "sample", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "N", "type": "int"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "samples", "type": "Any"}, {"lineNumber": 71, "col_offset": 55, "nodeName": "N", "type": "int"}, {"lineNumber": 71, "col_offset": 58, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "t", "type": "float"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "N", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 10, "nodeName": "SMC", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "sample", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "N", "type": "int"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "samples", "type": "Any"}, {"lineNumber": 87, "col_offset": 55, "nodeName": "N", "type": "int"}, {"lineNumber": 87, "col_offset": 58, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 96, "col_offset": 7, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "NodeReference", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "BOLFI", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "log_d", "type": "Any"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "infer", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 119, "col_offset": 10, "nodeName": "infer", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 121, "col_offset": 59, "nodeName": "acq_x", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "extract_posterior", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "vals_ml", "type": "Dict[Any, Any]"}, {"lineNumber": 139, "col_offset": 54, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "vals_map", "type": "Dict[Any, Any]"}, {"lineNumber": 141, "col_offset": 55, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 147, "col_offset": 57, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "pred_mu", "type": "Any"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "pred_var", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "predict", "type": "Any"}, {"lineNumber": 153, "col_offset": 55, "nodeName": "x", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "pred_cached_mu", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "pred_cached_var", "type": "Any"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "predict", "type": "Any"}, {"lineNumber": 154, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "pred_mu", "type": "Any"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "pred_cached_mu", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "pred_var", "type": "Any"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "pred_cached_var", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "grad_mu", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "grad_var", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "predictive_gradients", "type": "Any"}, {"lineNumber": 158, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "grad_cached_mu", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "grad_cached_var", "type": "Any"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "predictive_gradients", "type": "Any"}, {"lineNumber": 159, "col_offset": 78, "nodeName": "x", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 160, "col_offset": 42, "nodeName": "grad_cached_mu", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "grad_var", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "grad_cached_var", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "true_logpdf_prior", "type": "Any"}, {"lineNumber": 11, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "ma2", "type": "module"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "n_obs", "type": "int"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "N", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "mean", "type": "Any"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "t1", "type": "Any"}, {"lineNumber": 38, "col_offset": 55, "nodeName": "true_params", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "mean", "type": "Any"}, {"lineNumber": 40, "col_offset": 50, "nodeName": "t2", "type": "Any"}, {"lineNumber": 40, "col_offset": 55, "nodeName": "true_params", "type": "Any"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "elfi", "type": "module"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "rej", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "quantile", "type": "float"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "res", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "elfi", "type": "module"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 69, "col_offset": 10, "nodeName": "rej", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "t", "type": "float"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "res", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 84, "col_offset": 10, "nodeName": "elfi", "type": "module"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "m", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "smc", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "thresholds", "type": "List[float]"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "res", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "m", "type": "Any"}, {"lineNumber": 99, "col_offset": 71, "nodeName": "m", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "elfi", "type": "module"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 119, "col_offset": 10, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "n", "type": "int"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "n", "type": "int"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "_neg_unnormalized_loglikelihood", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "_gradient_neg_unnormalized_loglikelihood", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "prior", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "n_inits", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "max_opt_iters", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "stochastic_optimization", "type": "Any"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "_neg_unnormalized_logposterior", "type": "Any"}, {"lineNumber": 137, "col_offset": 76, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 145, "col_offset": 52, "nodeName": "n_chains", "type": "int"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "res_sampling", "type": "Any"}, {"lineNumber": 147, "col_offset": 47, "nodeName": "n_chains", "type": "int"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "grad_mu", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "CustomPrior1", "type": "Type[elfi.examples.ma2.CustomPrior1]"}, {"lineNumber": 164, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "CustomPrior2", "type": "Type[elfi.examples.ma2.CustomPrior2]"}, {"lineNumber": 165, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 165, "col_offset": 58, "nodeName": "x", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "logpdf", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "values", "type": "Callable"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "t1", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "unique", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "discrepancies", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "N", "type": "int"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "quantile", "type": "float"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "unique", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "discrepancies", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "populations", "type": "Any"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "post", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "post", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "post", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "post", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "post", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "post", "type": "Any"}, {"lineNumber": 137, "col_offset": 76, "nodeName": "model", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 138, "col_offset": 49, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 140, "col_offset": 51, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "ma2", "type": "module"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "ma2", "type": "module"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "prior", "type": "Any"}, {"lineNumber": 167, "col_offset": 59, "nodeName": "x", "type": "Any"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "t1", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "true_params", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "t2", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "true_params", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "log", "type": "Any"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 121, "col_offset": 52, "nodeName": "n", "type": "int"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "post", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "post", "type": "Any"}, {"lineNumber": 137, "col_offset": 76, "nodeName": "post", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "post", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "res", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "res", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "bolfi", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "post_ml", "type": "Any"}, {"lineNumber": 138, "col_offset": 59, "nodeName": "post_ml", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "post_map", "type": "Any"}, {"lineNumber": 140, "col_offset": 61, "nodeName": "post_map", "type": "Any"}]