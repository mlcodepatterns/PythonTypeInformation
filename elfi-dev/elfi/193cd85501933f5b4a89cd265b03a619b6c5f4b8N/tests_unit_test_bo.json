[{"lineNumber": 8, "col_offset": 0, "nodeName": "test_BO", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "test_acquisition", "type": "Callable[[], Any]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "log_d", "type": "elfi.model.elfi_model.Operation"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "n_init", "type": "int"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "res_init", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "n1", "type": "int"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "n2", "type": "int"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "n_params", "type": "int"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "n2", "type": "int"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "target_model", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "acq_noise_cov", "type": "int"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "t", "type": "int"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.LCBSC"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "new", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "acq_noise_cov", "type": "int"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "t", "type": "int"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.LCBSC"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "new", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "acq_noise_cov", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "t", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.LCBSC"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "new", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "acq_noise_cov", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "acq_noise_cov", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "T", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "acq_noise_cov", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "t", "type": "int"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.LCBSC"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "new", "type": "Any"}, {"lineNumber": 11, "col_offset": 12, "nodeName": "Operation", "type": "Type[elfi.model.elfi_model.Operation]"}, {"lineNumber": 11, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "sample", "type": "Callable[..., Any]"}, {"lineNumber": 14, "col_offset": 58, "nodeName": "n_init", "type": "int"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "BayesianOptimization", "type": "Type[elfi.methods.parameter_inference.BayesianOptimization]"}, {"lineNumber": 16, "col_offset": 35, "nodeName": "log_d", "type": "elfi.model.elfi_model.Operation"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "n_init", "type": "int"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "n_init", "type": "int"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "_n_precomputed", "type": "int"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "n_init", "type": "int"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "n_init", "type": "int"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "_n_precomputed", "type": "int"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "n_init", "type": "int"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "n_init", "type": "int"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "_n_precomputed", "type": "int"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "n_init", "type": "int"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "n_init", "type": "int"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "GPyRegression", "type": "Type[elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 48, "col_offset": 64, "nodeName": "n_params", "type": "int"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "n", "type": "int"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "n", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "n", "type": "int"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "LCBSC", "type": "Type[elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 58, "col_offset": 59, "nodeName": "target_model", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "acquire", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "n2", "type": "int"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "LCBSC", "type": "Type[elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 66, "col_offset": 59, "nodeName": "target_model", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 67, "col_offset": 10, "nodeName": "acquire", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "n2", "type": "int"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "LCBSC", "type": "Type[elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 75, "col_offset": 59, "nodeName": "target_model", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "acquire", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "n2", "type": "int"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "acq_noise_cov", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "n_params", "type": "int"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "LCBSC", "type": "Type[elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 86, "col_offset": 59, "nodeName": "target_model", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "acquire", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "n2", "type": "int"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 11, "col_offset": 12, "nodeName": "elfi", "type": "module"}, {"lineNumber": 11, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 11, "col_offset": 35, "nodeName": "ma2", "type": "Any"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "elfi", "type": "module"}, {"lineNumber": 16, "col_offset": 59, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "n_init", "type": "int"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "n1", "type": "int"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "n_init", "type": "int"}, {"lineNumber": 27, "col_offset": 50, "nodeName": "n1", "type": "int"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "n_init", "type": "int"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "n1", "type": "int"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "n2", "type": "int"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 35, "col_offset": 55, "nodeName": "n2", "type": "int"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "n2", "type": "int"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 40, "col_offset": 61, "nodeName": "samples_list", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "gpy_regression", "type": "module"}, {"lineNumber": 48, "col_offset": 81, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "x1", "type": "Any"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "x2", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "target_model", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "acquisition", "type": "module"}, {"lineNumber": 58, "col_offset": 83, "nodeName": "acq_noise_cov", "type": "int"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.LCBSC"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "t", "type": "int"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "new", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "new", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "new", "type": "Any"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "new", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "acquisition", "type": "module"}, {"lineNumber": 66, "col_offset": 83, "nodeName": "acq_noise_cov", "type": "int"}, {"lineNumber": 67, "col_offset": 10, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.LCBSC"}, {"lineNumber": 67, "col_offset": 43, "nodeName": "t", "type": "int"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "new", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "n2", "type": "int"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "n_params", "type": "int"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "acquisition", "type": "module"}, {"lineNumber": 75, "col_offset": 83, "nodeName": "acq_noise_cov", "type": "Any"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.LCBSC"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "t", "type": "int"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "new", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "n2", "type": "int"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "n_params", "type": "int"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "n_params", "type": "int"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "n_params", "type": "int"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "eye", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "n_params", "type": "int"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "acquisition", "type": "module"}, {"lineNumber": 86, "col_offset": 83, "nodeName": "acq_noise_cov", "type": "Any"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.LCBSC"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "t", "type": "int"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "new", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "n2", "type": "int"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "n_params", "type": "int"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "Rejection", "type": "Type[elfi.methods.parameter_inference.Rejection]"}, {"lineNumber": 14, "col_offset": 30, "nodeName": "log_d", "type": "elfi.model.elfi_model.Operation"}, {"lineNumber": 16, "col_offset": 59, "nodeName": "res_init", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "n_init", "type": "int"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "n1", "type": "int"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "n_init", "type": "int"}, {"lineNumber": 35, "col_offset": 50, "nodeName": "n1", "type": "int"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "n_init", "type": "int"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "n1", "type": "int"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 40, "col_offset": 61, "nodeName": "res_init", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "bo", "type": "module"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "bo", "type": "module"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "bo", "type": "module"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "bo", "type": "module"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "bo", "type": "module"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "elfi", "type": "module"}, {"lineNumber": 18, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 18, "col_offset": 55, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 40, "col_offset": 49, "nodeName": "n_init", "type": "int"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "methods", "type": "module"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "methods", "type": "module"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "methods", "type": "module"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "new", "type": "Any"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "new", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "new", "type": "Any"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "new", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "methods", "type": "module"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "new", "type": "Any"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "new", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "new", "type": "Any"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "new", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "methods", "type": "module"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "new", "type": "Any"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "new", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "new", "type": "Any"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "new", "type": "Any"}, {"lineNumber": 18, "col_offset": 55, "nodeName": "ma2", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "elfi", "type": "module"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "elfi", "type": "module"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "elfi", "type": "module"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 70, "col_offset": 62, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "elfi", "type": "module"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 78, "col_offset": 62, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 79, "col_offset": 62, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "elfi", "type": "module"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 89, "col_offset": 62, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "bounds", "type": "List[List[int]]"}, {"lineNumber": 90, "col_offset": 62, "nodeName": "bounds", "type": "List[List[int]]"}]