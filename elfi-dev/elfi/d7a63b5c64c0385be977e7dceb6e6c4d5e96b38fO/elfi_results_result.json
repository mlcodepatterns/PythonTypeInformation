[{"lineNumber": 16, "col_offset": 13, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "Result", "type": "Type[Result]"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "Result", "type": "Type[Result]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "samples", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "n_params", "type": "int"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "stack10", "type": "types.FrameType"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "method", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "stdout0", "type": "TextIO"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "buffer", "type": "io.StringIO"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "stdout", "type": "io.StringIO"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "buffer", "type": "io.StringIO"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "stdout0", "type": "TextIO"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "n_populations", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "n", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "names_list", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "fontsize", "type": "Union[Any, int]"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "fontsize", "type": "Union[Any, int]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Result"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "names", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "distance", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "distance", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "distance", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Result"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Result"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "samples_list", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Result"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Result"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "item", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "item", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "sys", "type": "module"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "summary", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "__str__", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "method", "type": "Any"}, {"lineNumber": 104, "col_offset": 36, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "self", "type": "Result"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "self", "type": "Result"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "desc", "type": "str"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "posterior_means", "type": "Callable[[], Any]"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "s", "type": "str"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "plot_marginals", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "samples", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 134, "col_offset": 48, "nodeName": "selector", "type": "Any"}, {"lineNumber": 134, "col_offset": 58, "nodeName": "bins", "type": "Any"}, {"lineNumber": 134, "col_offset": 64, "nodeName": "axes", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "plot_pairs", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "samples", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "selector", "type": "Any"}, {"lineNumber": 153, "col_offset": 54, "nodeName": "bins", "type": "Any"}, {"lineNumber": 153, "col_offset": 60, "nodeName": "axes", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "Result_SMC"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "populations", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "samples_list", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "weights", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "self", "type": "Result_SMC"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "n_populations", "type": "int"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "out", "type": "str"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "out", "type": "str"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "out", "type": "str"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "samples_list", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "n_populations", "type": "int"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "s", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "ax", "type": "Any"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "samples_history", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 218, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "n_populations", "type": "int"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "s", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "ax", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "n", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "name_distance", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "distance", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "Result"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "samples_list", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "self", "type": "Result"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "self", "type": "Result"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "item", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "dir", "type": "Callable[..., List[str]]"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "values", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "keys", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Result"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "buffer", "type": "io.StringIO"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "self", "type": "Result"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "self", "type": "Result"}, {"lineNumber": 104, "col_offset": 36, "nodeName": "self", "type": "Result"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Result"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "vis", "type": "module"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "self", "type": "Result"}, {"lineNumber": 134, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "vis", "type": "module"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "self", "type": "Result"}, {"lineNumber": 153, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 160, "col_offset": 42, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 160, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "self", "type": "Result_SMC"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "pop", "type": "Any"}, {"lineNumber": 170, "col_offset": 40, "nodeName": "pop", "type": "Any"}, {"lineNumber": 170, "col_offset": 47, "nodeName": "populations", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "pop", "type": "Any"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "pop", "type": "Any"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "populations", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "self", "type": "Result_SMC"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 177, "col_offset": 64, "nodeName": "ii", "type": "int"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "pop", "type": "Any"}, {"lineNumber": 194, "col_offset": 40, "nodeName": "pop", "type": "Any"}, {"lineNumber": 194, "col_offset": 47, "nodeName": "populations", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "self", "type": "Result_SMC"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "jj", "type": "int"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "n", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "names_list", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "plot_marginals", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "s", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "selector", "type": "Any"}, {"lineNumber": 200, "col_offset": 49, "nodeName": "bins", "type": "Any"}, {"lineNumber": 200, "col_offset": 55, "nodeName": "axes", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "suptitle", "type": "Any"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "self", "type": "Result_SMC"}, {"lineNumber": 216, "col_offset": 42, "nodeName": "samples_list", "type": "List[Any]"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "self", "type": "Result_SMC"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "jj", "type": "int"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "n", "type": "Any"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "names_list", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "plot_pairs", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "s", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "selector", "type": "Any"}, {"lineNumber": 222, "col_offset": 45, "nodeName": "bins", "type": "Any"}, {"lineNumber": 222, "col_offset": 51, "nodeName": "axes", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "suptitle", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "self", "type": "Result"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "samples_list", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "samples", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "samples_list", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "stack", "type": "Callable[..., List[inspect.FrameInfo]]"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "f_locals", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "self", "type": "Result"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "Result_SMC", "type": "Type[Result_SMC]"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "self", "type": "Result_SMC"}, {"lineNumber": 170, "col_offset": 47, "nodeName": "self", "type": "Result_SMC"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "self", "type": "Result_SMC"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "ii", "type": "int"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "ii", "type": "int"}, {"lineNumber": 194, "col_offset": 47, "nodeName": "self", "type": "Result_SMC"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "self", "type": "Result_SMC"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "s", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "vis", "type": "module"}, {"lineNumber": 200, "col_offset": 63, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 201, "col_offset": 48, "nodeName": "ii", "type": "int"}, {"lineNumber": 201, "col_offset": 62, "nodeName": "fontsize", "type": "Union[Any, int]"}, {"lineNumber": 216, "col_offset": 42, "nodeName": "self", "type": "Result_SMC"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "self", "type": "Result_SMC"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "s", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "vis", "type": "module"}, {"lineNumber": 222, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 223, "col_offset": 48, "nodeName": "ii", "type": "int"}, {"lineNumber": 223, "col_offset": 62, "nodeName": "fontsize", "type": "Union[int, Any]"}, {"lineNumber": 33, "col_offset": 45, "nodeName": "ii", "type": "int"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "self", "type": "Result"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "n", "type": "Any"}, {"lineNumber": 35, "col_offset": 47, "nodeName": "ii", "type": "int"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "inspect", "type": "module"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "stack10", "type": "types.FrameType"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "self", "type": "Result"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "self", "type": "Result"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 47, "nodeName": "mean", "type": "Any"}, {"lineNumber": 116, "col_offset": 55, "nodeName": "v", "type": "Any"}, {"lineNumber": 116, "col_offset": 63, "nodeName": "k", "type": "Any"}, {"lineNumber": 116, "col_offset": 65, "nodeName": "v", "type": "Any"}, {"lineNumber": 116, "col_offset": 70, "nodeName": "items", "type": "Callable"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "jj", "type": "int"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 199, "col_offset": 35, "nodeName": "jj", "type": "int"}, {"lineNumber": 221, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "samples", "type": "Any"}, {"lineNumber": 221, "col_offset": 35, "nodeName": "jj", "type": "int"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "self", "type": "Result"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "self", "type": "Result"}, {"lineNumber": 116, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 70, "nodeName": "samples", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 179, "col_offset": 40, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 179, "col_offset": 46, "nodeName": "n_params", "type": "int"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "ii", "type": "int"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "ii", "type": "int"}, {"lineNumber": 116, "col_offset": 70, "nodeName": "self", "type": "Result"}, {"lineNumber": 179, "col_offset": 46, "nodeName": "self", "type": "Result_SMC"}]