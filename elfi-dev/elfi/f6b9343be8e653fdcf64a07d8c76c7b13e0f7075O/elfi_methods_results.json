[{"lineNumber": 13, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "ParameterInferenceResult", "type": "Type[ParameterInferenceResult]"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "ParameterInferenceResult", "type": "Type[ParameterInferenceResult]"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "Sample", "type": "Type[Sample]"}, {"lineNumber": 354, "col_offset": 18, "nodeName": "Sample", "type": "Type[Sample]"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 13, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "samples", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "discrepancy_name", "type": "None"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "discrepancy_name", "type": "None"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "weights", "type": "None"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "weights", "type": "None"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "stdout0", "type": "TextIO"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "buffer", "type": "io.StringIO"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "stdout", "type": "io.StringIO"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "buffer", "type": "io.StringIO"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "stdout0", "type": "TextIO"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "populations", "type": "Any"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "populations", "type": "Any"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "fontsize", "type": "Union[Any, int]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "fontsize", "type": "Union[Any, int]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "chains", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "warmed_up", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "concatenated", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "copy", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "OptimizationResult"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "item", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "sys", "type": "module"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "summary", "type": "Callable[[], Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "__str__", "type": "Callable[[], Any]"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "self", "type": "Sample"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "self", "type": "Sample"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "desc", "type": "str"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "sample_means_summary", "type": "Callable[[], Any]"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "s", "type": "str"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "plot_marginals", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "samples", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 211, "col_offset": 48, "nodeName": "selector", "type": "Any"}, {"lineNumber": 211, "col_offset": 58, "nodeName": "bins", "type": "Any"}, {"lineNumber": 211, "col_offset": 64, "nodeName": "axes", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "plot_pairs", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "samples", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 231, "col_offset": 44, "nodeName": "selector", "type": "Any"}, {"lineNumber": 231, "col_offset": 54, "nodeName": "bins", "type": "Any"}, {"lineNumber": 231, "col_offset": 60, "nodeName": "axes", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "weights", "type": "None"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "populations", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "summary", "type": "Callable[[], Any]"}, {"lineNumber": 294, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 299, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 299, "col_offset": 32, "nodeName": "populations", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "out", "type": "str"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "out", "type": "str"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "out", "type": "str"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 303, "col_offset": 14, "nodeName": "out", "type": "str"}, {"lineNumber": 319, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 324, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 324, "col_offset": 32, "nodeName": "populations", "type": "Any"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 349, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 349, "col_offset": 32, "nodeName": "populations", "type": "Any"}, {"lineNumber": 372, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "chains", "type": "Any"}, {"lineNumber": 374, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "chains", "type": "Any"}, {"lineNumber": 376, "col_offset": 23, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 377, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "plot_traces", "type": "Callable[..., Any]"}, {"lineNumber": 390, "col_offset": 31, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 390, "col_offset": 37, "nodeName": "selector", "type": "Any"}, {"lineNumber": 390, "col_offset": 47, "nodeName": "axes", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 54, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 86, "col_offset": 45, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 86, "col_offset": 70, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 86, "col_offset": 89, "nodeName": "kwargs", "type": "Dict[str, Union[Any, Dict[Any, Any]]]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "samples", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "dir", "type": "Callable[..., List[str]]"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "Sample"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "buffer", "type": "io.StringIO"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "self", "type": "Sample"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "self", "type": "Sample"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "self", "type": "Sample"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "Sample"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "vis", "type": "module"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "self", "type": "Sample"}, {"lineNumber": 211, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "vis", "type": "module"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "self", "type": "Sample"}, {"lineNumber": 231, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 256, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 280, "col_offset": 19, "nodeName": "pop", "type": "Any"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 280, "col_offset": 36, "nodeName": "populations", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "sample_means_summary", "type": "Callable[[], Any]"}, {"lineNumber": 299, "col_offset": 32, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 300, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "plot_marginals", "type": "Callable[..., Any]"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 324, "col_offset": 32, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "plot_marginals", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "suptitle", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "plot_marginals", "type": "Callable[..., Any]"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 349, "col_offset": 32, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "plot_pairs", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "suptitle", "type": "Any"}, {"lineNumber": 372, "col_offset": 17, "nodeName": "chains", "type": "Any"}, {"lineNumber": 376, "col_offset": 23, "nodeName": "warmed_up", "type": "Any"}, {"lineNumber": 377, "col_offset": 23, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 377, "col_offset": 27, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 377, "col_offset": 44, "nodeName": "T", "type": "Any"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 381, "col_offset": 20, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 382, "col_offset": 28, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 383, "col_offset": 19, "nodeName": "chains", "type": "Any"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 385, "col_offset": 19, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 386, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "vis", "type": "module"}, {"lineNumber": 390, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "OptimizationResult", "type": "Type[OptimizationResult]"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "self", "type": "OptimizationResult"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "Sample", "type": "Type[Sample]"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "n", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "self", "type": "Sample"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 100, "col_offset": 75, "nodeName": "item", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "self", "type": "Sample"}, {"lineNumber": 107, "col_offset": 39, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "values", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 169, "col_offset": 47, "nodeName": "v", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "SmcSample", "type": "Type[SmcSample]"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 277, "col_offset": 14, "nodeName": "SmcSample", "type": "Type[SmcSample]"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 280, "col_offset": 36, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "summary", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 325, "col_offset": 40, "nodeName": "selector", "type": "Any"}, {"lineNumber": 325, "col_offset": 55, "nodeName": "bins", "type": "Any"}, {"lineNumber": 325, "col_offset": 66, "nodeName": "axes", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 326, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 326, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 326, "col_offset": 61, "nodeName": "fontsize", "type": "Union[int, Any]"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 350, "col_offset": 36, "nodeName": "selector", "type": "Any"}, {"lineNumber": 350, "col_offset": 51, "nodeName": "bins", "type": "Any"}, {"lineNumber": 350, "col_offset": 62, "nodeName": "axes", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 351, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 351, "col_offset": 61, "nodeName": "fontsize", "type": "Union[Any, int]"}, {"lineNumber": 375, "col_offset": 30, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 376, "col_offset": 50, "nodeName": "shape", "type": "Any"}, {"lineNumber": 377, "col_offset": 44, "nodeName": "concatenated", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 379, "col_offset": 14, "nodeName": "BolfiSample", "type": "Type[BolfiSample]"}, {"lineNumber": 379, "col_offset": 27, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "self", "type": "Sample"}, {"lineNumber": 107, "col_offset": 39, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "self", "type": "Sample"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "samples", "type": "Any"}, {"lineNumber": 169, "col_offset": 54, "nodeName": "k", "type": "Any"}, {"lineNumber": 169, "col_offset": 57, "nodeName": "v", "type": "Any"}, {"lineNumber": 169, "col_offset": 62, "nodeName": "items", "type": "Any"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "k", "type": "Any"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "v", "type": "Any"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "items", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "sample_means", "type": "Any"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 281, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "pop", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "SmcSample", "type": "Type[SmcSample]"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 301, "col_offset": 50, "nodeName": "k", "type": "Any"}, {"lineNumber": 301, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 320, "col_offset": 18, "nodeName": "SmcSample", "type": "Type[SmcSample]"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 345, "col_offset": 18, "nodeName": "SmcSample", "type": "Type[SmcSample]"}, {"lineNumber": 345, "col_offset": 29, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 107, "col_offset": 39, "nodeName": "self", "type": "Sample"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 62, "nodeName": "sample_means", "type": "Any"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "samples", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 301, "col_offset": 60, "nodeName": "k", "type": "Any"}, {"lineNumber": 301, "col_offset": 63, "nodeName": "v", "type": "Any"}, {"lineNumber": 301, "col_offset": 68, "nodeName": "items", "type": "Any"}, {"lineNumber": 169, "col_offset": 62, "nodeName": "self", "type": "Sample"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 301, "col_offset": 68, "nodeName": "sample_means", "type": "Any"}, {"lineNumber": 301, "col_offset": 68, "nodeName": "pop", "type": "Any"}]