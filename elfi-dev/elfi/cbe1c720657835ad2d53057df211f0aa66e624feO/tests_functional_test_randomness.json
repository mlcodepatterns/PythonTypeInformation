[{"lineNumber": 10, "col_offset": 0, "nodeName": "test_randomness", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "test_global_random_state_usage", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "test_consistency_with_a_seed", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "test_different_states_for_different_batches", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "test_get_sub_seed", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "random_state_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "k1", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "n_gen", "type": "int"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "k2", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "st1", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "mu", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "st2", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "simple_model", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "computation_context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "simple_model", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "computation_context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "rs", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "sub_seeds", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "simple_model", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "generate", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "generate", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "simple_model", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "generate", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "n_gen", "type": "int"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "mu", "type": "Any"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "random_state_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "st1", "type": "Any"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "st2", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "ComputationContext", "type": "Type[elfi.model.elfi_model.ComputationContext]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "ComputationContext", "type": "Type[elfi.model.elfi_model.ComputationContext]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "n", "type": "int"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 80, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "k1", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "k1", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 17, "col_offset": 36, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "k2", "type": "Any"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "norm", "type": "Any"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "elfi", "type": "module"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "compute_batch", "type": "Any"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "m", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "compute_batch", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "m", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "elfi", "type": "module"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "compute_batch", "type": "Any"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "m", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "compute_batch", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "m", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "gen1", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "gen2", "type": "Any"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "rs", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "set_state", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "st1", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "st2", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "ss", "type": "Any"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "n_gen", "type": "int"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "ss", "type": "Any"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "n_gen", "type": "int"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "rs", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "sub_seeds", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "get_sub_seed", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "rs", "type": "Any"}, {"lineNumber": 66, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "n", "type": "int"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "unique", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "sub_seeds", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "st1", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "st2", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "st1", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "st2", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "np", "type": "module"}]