[{"lineNumber": 9, "col_offset": 0, "nodeName": "test_BO", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "test_async", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "test_BO_works_with_zero_init_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_acquisition", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "log_d", "type": "elfi.model.elfi_model.Operation"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "n_init", "type": "int"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "res_init", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "bounds", "type": "Dict[Any, Tuple[int, int]]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "n1", "type": "int"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "n2", "type": "int"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "bounds", "type": "Dict[Any, Tuple[int, int]]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "log_d", "type": "elfi.model.elfi_model.Operation"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "bounds", "type": "Dict[Any, Tuple[int, int]]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "n_params", "type": "int"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "n2", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "parameter_names", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "target_model", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "acq_noise_var", "type": "int"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "t", "type": "int"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.LCBSC"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "new", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "acq_noise_var", "type": "int"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "t", "type": "int"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.LCBSC"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "new", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "acq_noise_var", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "t", "type": "int"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.LCBSC"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "new", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "acq_noise_cov", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "acq_noise_cov", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "T", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "acq_noise_cov", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "t", "type": "int"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "t", "type": "int"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.UniformAcquisition"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "new", "type": "Any"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "Operation", "type": "Type[elfi.model.elfi_model.Operation]"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "sample", "type": "Callable[..., Any]"}, {"lineNumber": 15, "col_offset": 58, "nodeName": "n_init", "type": "int"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "n", "type": "Any"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "BayesianOptimization", "type": "Type[elfi.methods.parameter_inference.BayesianOptimization]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "log_d", "type": "elfi.model.elfi_model.Operation"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "n_init", "type": "int"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "n_init", "type": "int"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "n_precomputed_evidence", "type": "int"}, {"lineNumber": 22, "col_offset": 40, "nodeName": "n_init", "type": "int"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 23, "col_offset": 36, "nodeName": "n_init", "type": "int"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "n_precomputed_evidence", "type": "int"}, {"lineNumber": 30, "col_offset": 40, "nodeName": "n_init", "type": "int"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "n_init", "type": "int"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "n_precomputed_evidence", "type": "int"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "n_init", "type": "int"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "n_init", "type": "int"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "n", "type": "Any"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "BayesianOptimization", "type": "Type[elfi.methods.parameter_inference.BayesianOptimization]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "ma2", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "Operation", "type": "Type[elfi.model.elfi_model.Operation]"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "n", "type": "Any"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "BayesianOptimization", "type": "Type[elfi.methods.parameter_inference.BayesianOptimization]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "log_d", "type": "elfi.model.elfi_model.Operation"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "n_precomputed_evidence", "type": "int"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "n_precomputed_evidence", "type": "int"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "GPyRegression", "type": "Type[elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "parameter_names", "type": "List[str]"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "n", "type": "int"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "n", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "n", "type": "int"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "LCBSC", "type": "Type[elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "target_model", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "acquire", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "n2", "type": "int"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "LCBSC", "type": "Type[elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "target_model", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "acquire", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "n2", "type": "int"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "LCBSC", "type": "Type[elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "target_model", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "acquire", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "n2", "type": "int"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "acq_noise_cov", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "n_params", "type": "int"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "UniformAcquisition", "type": "Type[elfi.methods.bo.acquisition.UniformAcquisition]"}, {"lineNumber": 120, "col_offset": 56, "nodeName": "target_model", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "acquire", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "n2", "type": "int"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "n_dim_fixture", "type": "int"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "n_it", "type": "int"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "it", "type": "int"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "dim", "type": "int"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "n_pts_test", "type": "int"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "n_dim_fixture", "type": "int"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "n_dim_fixture", "type": "int"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "n_it", "type": "int"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "it", "type": "int"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "dim", "type": "int"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "n_dim_fixture", "type": "int"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "n_it", "type": "int"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "it", "type": "int"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "dim", "type": "int"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "elfi", "type": "module"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 12, "col_offset": 35, "nodeName": "ma2", "type": "Any"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "n", "type": "Any"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "elfi", "type": "module"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 19, "col_offset": 91, "nodeName": "bounds", "type": "Dict[Any, Tuple[int, int]]"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "n_init", "type": "int"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "n1", "type": "int"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "n_init", "type": "int"}, {"lineNumber": 28, "col_offset": 50, "nodeName": "n1", "type": "int"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "n_init", "type": "int"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "n1", "type": "int"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "n2", "type": "int"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "n2", "type": "int"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "n2", "type": "int"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 41, "col_offset": 61, "nodeName": "samples_array", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "n", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "elfi", "type": "module"}, {"lineNumber": 48, "col_offset": 78, "nodeName": "bounds", "type": "Dict[Any, Tuple[int, int]]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "elfi", "type": "module"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "ma2", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "n", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "elfi", "type": "module"}, {"lineNumber": 58, "col_offset": 75, "nodeName": "bounds", "type": "Dict[Any, Tuple[int, int]]"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 77, "col_offset": 57, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "x1", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "x2", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "target_model", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "acquisition", "type": "module"}, {"lineNumber": 87, "col_offset": 67, "nodeName": "acq_noise_var", "type": "int"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.LCBSC"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "t", "type": "int"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "new", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "new", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "new", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "new", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "acquisition", "type": "module"}, {"lineNumber": 95, "col_offset": 67, "nodeName": "acq_noise_var", "type": "int"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.LCBSC"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "t", "type": "int"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "new", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "n2", "type": "int"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "n_params", "type": "int"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "acquisition", "type": "module"}, {"lineNumber": 104, "col_offset": 67, "nodeName": "acq_noise_var", "type": "Any"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.LCBSC"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "t", "type": "int"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "new", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "n2", "type": "int"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "n_params", "type": "int"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "n_params", "type": "int"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "n_params", "type": "int"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "eye", "type": "Any"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "n_params", "type": "int"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "LCBSC", "type": "Type[elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "target_model", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "acquisition", "type": "module"}, {"lineNumber": 120, "col_offset": 80, "nodeName": "acq_noise_var", "type": "Any"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "acquisition_method", "type": "elfi.methods.bo.acquisition.UniformAcquisition"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "t", "type": "int"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "new", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "n2", "type": "int"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "n_params", "type": "int"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "n_it", "type": "int"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "batch_theta", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "n_dim_fixture", "type": "int"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "GradientChecker", "type": "Any"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "evaluate_gradient", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "checkgrad", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "n_it", "type": "int"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "batch_theta", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "n_dim_fixture", "type": "int"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 222, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "n_it", "type": "int"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "batch_theta", "type": "Any"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "n_dim_fixture", "type": "int"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "Rejection", "type": "Type[elfi.methods.parameter_inference.Rejection]"}, {"lineNumber": 15, "col_offset": 30, "nodeName": "log_d", "type": "elfi.model.elfi_model.Operation"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "ma2", "type": "Any"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "res_init", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "n_init", "type": "int"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "n1", "type": "int"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "n_init", "type": "int"}, {"lineNumber": 36, "col_offset": 50, "nodeName": "n1", "type": "int"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "n_init", "type": "int"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "n1", "type": "int"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 41, "col_offset": 61, "nodeName": "res_init", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "ma2", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "ma2", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "acquisition", "type": "module"}, {"lineNumber": 116, "col_offset": 50, "nodeName": "acq_noise_cov", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "acq_maxvar", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "acquire", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "all", "type": "Any"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "acq_maxvar", "type": "Any"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "acq_maxvar", "type": "Any"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "randn", "type": "Any"}, {"lineNumber": 168, "col_offset": 55, "nodeName": "n_pts_test", "type": "int"}, {"lineNumber": 168, "col_offset": 67, "nodeName": "n_dim_fixture", "type": "int"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "checker_grad", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "acq_randmaxvar", "type": "Any"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 195, "col_offset": 26, "nodeName": "acquire", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "all", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "acq_expintvar", "type": "Any"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "acquire", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "all", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "elfi", "type": "module"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "n_init", "type": "int"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "new", "type": "Any"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "new", "type": "Any"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "new", "type": "Any"}, {"lineNumber": 99, "col_offset": 51, "nodeName": "new", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "new", "type": "Any"}, {"lineNumber": 107, "col_offset": 51, "nodeName": "new", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "new", "type": "Any"}, {"lineNumber": 108, "col_offset": 51, "nodeName": "new", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "new", "type": "Any"}, {"lineNumber": 123, "col_offset": 51, "nodeName": "new", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "new", "type": "Any"}, {"lineNumber": 124, "col_offset": 51, "nodeName": "new", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "acq_maxvar", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "acq_maxvar", "type": "Any"}, {"lineNumber": 146, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 146, "col_offset": 61, "nodeName": "it", "type": "int"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "acq_maxvar", "type": "Any"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "acq_randmaxvar", "type": "Any"}, {"lineNumber": 195, "col_offset": 26, "nodeName": "acq_randmaxvar", "type": "Any"}, {"lineNumber": 195, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 195, "col_offset": 65, "nodeName": "it", "type": "int"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "acq_expintvar", "type": "Any"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "acq_expintvar", "type": "Any"}, {"lineNumber": 223, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 223, "col_offset": 64, "nodeName": "it", "type": "int"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "bo", "type": "elfi.methods.parameter_inference.BayesianOptimization"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 98, "col_offset": 64, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 99, "col_offset": 64, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 107, "col_offset": 64, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 108, "col_offset": 64, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 123, "col_offset": 64, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 124, "col_offset": 64, "nodeName": "bounds", "type": "Dict[str, List[int]]"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "batch_theta", "type": "Any"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "batch_theta", "type": "Any"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "batch_theta", "type": "Any"}, {"lineNumber": 200, "col_offset": 27, "nodeName": "batch_theta", "type": "Any"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "batch_theta", "type": "Any"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "batch_theta", "type": "Any"}, {"lineNumber": 150, "col_offset": 50, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 151, "col_offset": 50, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 199, "col_offset": 50, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 200, "col_offset": 50, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 227, "col_offset": 50, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 228, "col_offset": 50, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 150, "col_offset": 42, "nodeName": "dim", "type": "int"}, {"lineNumber": 150, "col_offset": 57, "nodeName": "dim", "type": "int"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "dim", "type": "int"}, {"lineNumber": 151, "col_offset": 57, "nodeName": "dim", "type": "int"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "dim", "type": "int"}, {"lineNumber": 199, "col_offset": 57, "nodeName": "dim", "type": "int"}, {"lineNumber": 200, "col_offset": 42, "nodeName": "dim", "type": "int"}, {"lineNumber": 200, "col_offset": 57, "nodeName": "dim", "type": "int"}, {"lineNumber": 227, "col_offset": 42, "nodeName": "dim", "type": "int"}, {"lineNumber": 227, "col_offset": 57, "nodeName": "dim", "type": "int"}, {"lineNumber": 228, "col_offset": 42, "nodeName": "dim", "type": "int"}, {"lineNumber": 228, "col_offset": 57, "nodeName": "dim", "type": "int"}]