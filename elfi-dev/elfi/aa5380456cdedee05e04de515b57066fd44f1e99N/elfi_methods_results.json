[{"lineNumber": 12, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "ParameterInferenceResult", "type": "Type[ParameterInferenceResult]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "ParameterInferenceResult", "type": "Type[ParameterInferenceResult]"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "Sample", "type": "Type[Sample]"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "Sample", "type": "Type[Sample]"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "samples", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "n_params", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "stdout0", "type": "TextIO"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "buffer", "type": "io.StringIO"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "stdout", "type": "io.StringIO"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "buffer", "type": "io.StringIO"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "summary", "type": "None"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "stdout0", "type": "TextIO"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "posterior_means", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "n_populations", "type": "int"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "samples_list", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "weights", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "names_list", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "names_list", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "fontsize", "type": "Union[Any, int]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "fontsize", "type": "Union[Any, int]"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "chains", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "warmed_up", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "concatenated", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "copy", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "OptimizationResult"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "discrepancy_name", "type": "None"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "item", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "item", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "sys", "type": "module"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "Sample"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "__str__", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "desc", "type": "str"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "desc", "type": "str"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "desc", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "s", "type": "str"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "plot_marginals", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "samples", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 170, "col_offset": 48, "nodeName": "selector", "type": "Any"}, {"lineNumber": 170, "col_offset": 58, "nodeName": "bins", "type": "Any"}, {"lineNumber": 170, "col_offset": 64, "nodeName": "axes", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "plot_pairs", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "samples", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 189, "col_offset": 44, "nodeName": "selector", "type": "Any"}, {"lineNumber": 189, "col_offset": 54, "nodeName": "bins", "type": "Any"}, {"lineNumber": 189, "col_offset": 60, "nodeName": "axes", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "populations", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 14, "nodeName": "out", "type": "str"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "samples_list", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "weights", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "n_populations", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "out", "type": "str"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "out", "type": "str"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "out", "type": "str"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "samples_list", "type": "Any"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "n_populations", "type": "int"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "s", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "ax", "type": "Any"}, {"lineNumber": 266, "col_offset": 18, "nodeName": "samples_history", "type": "Any"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "n_populations", "type": "int"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "s", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "ax", "type": "Any"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "chains", "type": "Any"}, {"lineNumber": 293, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 294, "col_offset": 20, "nodeName": "chains", "type": "Any"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "plot_traces", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 304, "col_offset": 37, "nodeName": "selector", "type": "Any"}, {"lineNumber": 304, "col_offset": 47, "nodeName": "axes", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 69, "col_offset": 70, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 70, "col_offset": 53, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 70, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[str, Union[Any, Dict[Any, Any]]]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "samples", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "Sample"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "self", "type": "Sample"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "self", "type": "Sample"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "item", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "dir", "type": "Callable[..., List[str]]"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "values", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "keys", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "buffer", "type": "io.StringIO"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "self", "type": "Sample"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 141, "col_offset": 57, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 143, "col_offset": 49, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "vis", "type": "module"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "self", "type": "Sample"}, {"lineNumber": 170, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "vis", "type": "module"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "self", "type": "Sample"}, {"lineNumber": 189, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "populations", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "populations", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "pop", "type": "Any"}, {"lineNumber": 220, "col_offset": 40, "nodeName": "pop", "type": "Any"}, {"lineNumber": 220, "col_offset": 47, "nodeName": "populations", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "pop", "type": "Any"}, {"lineNumber": 221, "col_offset": 35, "nodeName": "pop", "type": "Any"}, {"lineNumber": 221, "col_offset": 42, "nodeName": "populations", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 227, "col_offset": 64, "nodeName": "ii", "type": "int"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "pop", "type": "Any"}, {"lineNumber": 244, "col_offset": 40, "nodeName": "pop", "type": "Any"}, {"lineNumber": 244, "col_offset": 47, "nodeName": "populations", "type": "Any"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "jj", "type": "int"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "n", "type": "Any"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 248, "col_offset": 35, "nodeName": "names_list", "type": "List[Any]"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "plot_marginals", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 36, "nodeName": "s", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "selector", "type": "Any"}, {"lineNumber": 250, "col_offset": 49, "nodeName": "bins", "type": "Any"}, {"lineNumber": 250, "col_offset": 55, "nodeName": "axes", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "suptitle", "type": "Any"}, {"lineNumber": 266, "col_offset": 18, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 266, "col_offset": 42, "nodeName": "samples_list", "type": "List[Any]"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "jj", "type": "int"}, {"lineNumber": 270, "col_offset": 20, "nodeName": "n", "type": "Any"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 270, "col_offset": 35, "nodeName": "names_list", "type": "List[Any]"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "plot_pairs", "type": "Callable[..., Any]"}, {"lineNumber": 272, "col_offset": 32, "nodeName": "s", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 272, "col_offset": 35, "nodeName": "selector", "type": "Any"}, {"lineNumber": 272, "col_offset": 45, "nodeName": "bins", "type": "Any"}, {"lineNumber": 272, "col_offset": 51, "nodeName": "axes", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "suptitle", "type": "Any"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "chains", "type": "Any"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "warmed_up", "type": "Any"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 296, "col_offset": 27, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 296, "col_offset": 44, "nodeName": "T", "type": "Any"}, {"lineNumber": 298, "col_offset": 54, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 298, "col_offset": 75, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 299, "col_offset": 58, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 300, "col_offset": 49, "nodeName": "chains", "type": "Any"}, {"lineNumber": 300, "col_offset": 66, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 300, "col_offset": 83, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 301, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "vis", "type": "module"}, {"lineNumber": 304, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "OptimizationResult", "type": "Type[OptimizationResult]"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "self", "type": "OptimizationResult"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "Sample", "type": "Type[Sample]"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "n", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "self", "type": "Sample"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "self", "type": "Sample"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 141, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "SmcSample", "type": "Type[SmcSample]"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "jj", "type": "int"}, {"lineNumber": 220, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "ii", "type": "int"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "ii", "type": "int"}, {"lineNumber": 244, "col_offset": 47, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 248, "col_offset": 35, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "s", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "vis", "type": "module"}, {"lineNumber": 250, "col_offset": 63, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 251, "col_offset": 48, "nodeName": "ii", "type": "int"}, {"lineNumber": 251, "col_offset": 62, "nodeName": "fontsize", "type": "Union[int, Any]"}, {"lineNumber": 266, "col_offset": 42, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 270, "col_offset": 35, "nodeName": "self", "type": "SmcSample"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "s", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "vis", "type": "module"}, {"lineNumber": 272, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 273, "col_offset": 48, "nodeName": "ii", "type": "int"}, {"lineNumber": 273, "col_offset": 62, "nodeName": "fontsize", "type": "Union[int, Any]"}, {"lineNumber": 294, "col_offset": 30, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 295, "col_offset": 49, "nodeName": "shape", "type": "Any"}, {"lineNumber": 296, "col_offset": 44, "nodeName": "concatenated", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 298, "col_offset": 14, "nodeName": "BolfiSample", "type": "Type[BolfiSample]"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "self", "type": "Sample"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 89, "col_offset": 75, "nodeName": "item", "type": "Any"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "self", "type": "Sample"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 47, "nodeName": "mean", "type": "Any"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "v", "type": "Any"}, {"lineNumber": 152, "col_offset": 63, "nodeName": "k", "type": "Any"}, {"lineNumber": 152, "col_offset": 65, "nodeName": "v", "type": "Any"}, {"lineNumber": 152, "col_offset": 70, "nodeName": "items", "type": "Any"}, {"lineNumber": 209, "col_offset": 36, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "n_params", "type": "Any"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "jj", "type": "int"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "jj", "type": "int"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "samples", "type": "Any"}, {"lineNumber": 271, "col_offset": 35, "nodeName": "jj", "type": "int"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "self", "type": "BolfiSample"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "self", "type": "Sample"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "self", "type": "Sample"}, {"lineNumber": 152, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 70, "nodeName": "samples", "type": "Any"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 40, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 229, "col_offset": 46, "nodeName": "n_params", "type": "Any"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "ii", "type": "int"}, {"lineNumber": 271, "col_offset": 31, "nodeName": "ii", "type": "int"}, {"lineNumber": 152, "col_offset": 70, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 46, "nodeName": "self", "type": "Any"}]