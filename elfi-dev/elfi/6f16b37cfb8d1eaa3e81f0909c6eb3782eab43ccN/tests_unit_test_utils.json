[{"lineNumber": 8, "col_offset": 8, "nodeName": "fun", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Tuple[int, int]]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "its", "type": "int"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "polish", "type": "bool"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "wvar", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "wvar", "type": "Any"}, {"lineNumber": 10, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "val", "type": "Any"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "stochastic_optimization", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 12, "col_offset": 43, "nodeName": "fun", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 48, "nodeName": "bounds", "type": "Tuple[Tuple[int, int]]"}, {"lineNumber": 12, "col_offset": 56, "nodeName": "its", "type": "int"}, {"lineNumber": 12, "col_offset": 61, "nodeName": "polish", "type": "bool"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "weighted_var", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "weights", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "wvar", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "weighted_var", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "weights", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "wvar", "type": "Any"}, {"lineNumber": 8, "col_offset": 25, "nodeName": "dot", "type": "Any"}, {"lineNumber": 8, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 13, "col_offset": 15, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "wvar", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "weights", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 26, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 8, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 13, "col_offset": 19, "nodeName": "loc", "type": "Any"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "data", "type": "Any"}]