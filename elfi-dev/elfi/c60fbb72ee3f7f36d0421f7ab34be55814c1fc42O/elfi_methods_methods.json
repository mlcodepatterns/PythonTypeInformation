[{"lineNumber": 19, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "pool", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "seed", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "init_inference", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "extract_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "update", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "prepare_new_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "iterate", "type": "Callable[[Any], Any]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "finished", "type": "Callable[[Any], Any]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "_allow_submit", "type": "Callable[[Any], Any]"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "_has_batches_to_submit", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "_to_array", "type": "Callable[..., Any]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "_ensure_outputs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 356, "col_offset": 14, "nodeName": "InferenceMethod", "type": "Type[InferenceMethod]"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "sample", "type": "Callable[..., Any]"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "init_inference", "type": "Callable[..., Any]"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "update", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "extract_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "_init_samples_lazy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "_merge_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "_update_state_meta", "type": "Callable[[Any], Any]"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "_update_objective", "type": "Callable[[Any], Any]"}, {"lineNumber": 519, "col_offset": 10, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "init_inference", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "extract_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "update", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "prepare_new_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "_new_round", "type": "Callable[[Any], Any]"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "_extract_population", "type": "Callable[[Any], Any]"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "_compute_weights_and_cov", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "_update_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "_update_objective", "type": "Callable[[Any], Any]"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "_augment_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "_gm_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "current_population_threshold", "type": "Callable[[Any], Any]"}, {"lineNumber": 646, "col_offset": 27, "nodeName": "InferenceMethod", "type": "Type[InferenceMethod]"}, {"lineNumber": 701, "col_offset": 4, "nodeName": "init_inference", "type": "Callable[..., Any]"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "extract_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 723, "col_offset": 4, "nodeName": "update", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 737, "col_offset": 4, "nodeName": "prepare_new_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 751, "col_offset": 4, "nodeName": "_n_submitted_evidence", "type": "Callable[[Any], Any]"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "_allow_submit", "type": "Callable[[Any], Any]"}, {"lineNumber": 762, "col_offset": 4, "nodeName": "_should_optimize", "type": "Callable[[Any], Any]"}, {"lineNumber": 767, "col_offset": 4, "nodeName": "_get_pending_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "_report_batch", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 781, "col_offset": 12, "nodeName": "InferenceMethod", "type": "Type[InferenceMethod]"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 821, "col_offset": 4, "nodeName": "get_posterior", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "outputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "outputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "context", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "pool", "type": "None"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "pool", "type": "None"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "context", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "client", "type": "module"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "pool", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "seed", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 217, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "_allow_submit", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "batch_", "type": "Any"}, {"lineNumber": 323, "col_offset": 22, "nodeName": "batch", "type": "Union[Any, List[Any]]"}, {"lineNumber": 329, "col_offset": 62, "nodeName": "NodeReference", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "required_outputs", "type": "Any"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 429, "col_offset": 11, "nodeName": "quantile", "type": "Union[Any, float]"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "n_sim", "type": "Union[Any, float]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "result", "type": "Union[Dict[Any, Any], Dict[str, Any]]"}, {"lineNumber": 462, "col_offset": 28, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 464, "col_offset": 15, "nodeName": "result", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "outputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 472, "col_offset": 32, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "sort_mask", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 495, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "accept_rate_t", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "margin", "type": "float"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "_rejection", "type": "None"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "result", "type": "Union[Dict[Any, Any], Dict[str, Any]]"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "result", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 550, "col_offset": 11, "nodeName": "finished", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 569, "col_offset": 15, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "dashes", "type": "str"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 588, "col_offset": 36, "nodeName": "w", "type": "Any"}, {"lineNumber": 589, "col_offset": 21, "nodeName": "cov", "type": "Any"}, {"lineNumber": 590, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 596, "col_offset": 11, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "cov", "type": "Any"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 611, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "n_batches", "type": "nothing"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "pdfs", "type": "List[Any]"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 626, "col_offset": 17, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "params_", "type": "Any"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "acquisition_method", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 696, "col_offset": 28, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "n_initial_evidence", "type": "Union[int, Any]"}, {"lineNumber": 697, "col_offset": 34, "nodeName": "initial_evidence", "type": "Union[int, Any]"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 698, "col_offset": 21, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 699, "col_offset": 31, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "param_hat", "type": "Dict[Any, Any]"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 732, "col_offset": 11, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "pending_params", "type": "Any"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "new_param", "type": "Any"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 748, "col_offset": 15, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "current", "type": "Any"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "next_update", "type": "Any"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "str", "type": "str"}, {"lineNumber": 775, "col_offset": 8, "nodeName": "fill", "type": "str"}, {"lineNumber": 776, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 142, "col_offset": 69, "nodeName": "model", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "copy", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "seed", "type": "None"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "seed", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "context", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "context", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "get", "type": "Callable[[], Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "BatchHandler", "type": "Type[elfi.client.BatchHandler]"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "max_parallel_batches", "type": "None"}, {"lineNumber": 163, "col_offset": 60, "nodeName": "num_cores", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "init_inference", "type": "Callable[..., Any]"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "next_index", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "batch", "type": "None"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "wait_next", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "_has_batches_to_submit", "type": "Any"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "batch", "type": "List[Any]"}, {"lineNumber": 320, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "outputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 326, "col_offset": 25, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 335, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 335, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 335, "col_offset": 29, "nodeName": "NodeReference", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 336, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 339, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 345, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 349, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 372, "col_offset": 26, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 400, "col_offset": 34, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 400, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 400, "col_offset": 61, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 401, "col_offset": 18, "nodeName": "_ensure_outputs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 401, "col_offset": 39, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 402, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 402, "col_offset": 47, "nodeName": "outputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "quantile", "type": "float"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 429, "col_offset": 21, "nodeName": "n_sim", "type": "float"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "n_batches", "type": "float"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 435, "col_offset": 24, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "reset", "type": "Callable[..., None]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "_merge_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 447, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "_update_state_meta", "type": "Callable[[], Any]"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "_update_objective", "type": "Callable[[], Any]"}, {"lineNumber": 457, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 458, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "result", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "result", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 463, "col_offset": 30, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 481, "col_offset": 18, "nodeName": "v", "type": "Any"}, {"lineNumber": 481, "col_offset": 23, "nodeName": "items", "type": "Any"}, {"lineNumber": 485, "col_offset": 20, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 486, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 486, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 495, "col_offset": 22, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 497, "col_offset": 27, "nodeName": "min", "type": "Callable"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 504, "col_offset": 11, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 508, "col_offset": 11, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 510, "col_offset": 24, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 513, "col_offset": 59, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 515, "col_offset": 38, "nodeName": "ceil", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 515, "col_offset": 43, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 521, "col_offset": 15, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 521, "col_offset": 34, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 521, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 521, "col_offset": 61, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 522, "col_offset": 18, "nodeName": "_ensure_outputs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 522, "col_offset": 39, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 523, "col_offset": 15, "nodeName": "added_nodes", "type": "List[str]"}, {"lineNumber": 523, "col_offset": 29, "nodeName": "_augment_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 523, "col_offset": 49, "nodeName": "model", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 525, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "_new_round", "type": "Callable[[], Any]"}, {"lineNumber": 540, "col_offset": 14, "nodeName": "_extract_population", "type": "Callable[[], Any]"}, {"lineNumber": 541, "col_offset": 17, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "result", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 542, "col_offset": 32, "nodeName": "copy", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 543, "col_offset": 37, "nodeName": "pop", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "result", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 544, "col_offset": 28, "nodeName": "pop", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 548, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 548, "col_offset": 38, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 550, "col_offset": 11, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "_update_state", "type": "Callable[[], Any]"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "_update_objective", "type": "Callable[[], Any]"}, {"lineNumber": 566, "col_offset": 17, "nodeName": "rvs", "type": "Callable[..., Any]"}, {"lineNumber": 568, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 575, "col_offset": 26, "nodeName": "Rejection", "type": "Type[Rejection]"}, {"lineNumber": 575, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "init_inference", "type": "Callable[..., Any]"}, {"lineNumber": 586, "col_offset": 14, "nodeName": "extract_result", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 587, "col_offset": 11, "nodeName": "cov", "type": "Any"}, {"lineNumber": 587, "col_offset": 17, "nodeName": "_compute_weights_and_cov", "type": "Callable[[Any], Any]"}, {"lineNumber": 587, "col_offset": 47, "nodeName": "pop", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 593, "col_offset": 18, "nodeName": "pop", "type": "Any"}, {"lineNumber": 594, "col_offset": 17, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 596, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 600, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "w", "type": "Any"}, {"lineNumber": 604, "col_offset": 18, "nodeName": "cov", "type": "Any"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "self", "type": "SMC"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 611, "col_offset": 22, "nodeName": "self", "type": "SMC"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 613, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 614, "col_offset": 27, "nodeName": "state", "type": "Any"}, {"lineNumber": 618, "col_offset": 20, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "objective", "type": "Any"}, {"lineNumber": 619, "col_offset": 38, "nodeName": "n_batches", "type": "nothing"}, {"lineNumber": 624, "col_offset": 16, "nodeName": "copy", "type": "Any"}, {"lineNumber": 626, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 627, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "Operation", "type": "Any"}, {"lineNumber": 633, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 637, "col_offset": 15, "nodeName": "_populations", "type": "Any"}, {"lineNumber": 638, "col_offset": 18, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 639, "col_offset": 15, "nodeName": "params_", "type": "Any"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 675, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 675, "col_offset": 29, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 675, "col_offset": 49, "nodeName": "model", "type": "Any"}, {"lineNumber": 675, "col_offset": 56, "nodeName": "target", "type": "Any"}, {"lineNumber": 676, "col_offset": 18, "nodeName": "_ensure_outputs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 676, "col_offset": 39, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 678, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 681, "col_offset": 12, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 685, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 687, "col_offset": 12, "nodeName": "initial_evidence", "type": "int"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 693, "col_offset": 34, "nodeName": "acquisition_method", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 705, "col_offset": 11, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 708, "col_offset": 21, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 708, "col_offset": 30, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "ceil", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 713, "col_offset": 27, "nodeName": "stochastic_optimization", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 713, "col_offset": 51, "nodeName": "predict_mean", "type": "Union[Callable[[Any], Any], Any]"}, {"lineNumber": 714, "col_offset": 51, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 717, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 717, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 717, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 717, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 721, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 726, "col_offset": 17, "nodeName": "_to_array", "type": "Callable[..., Any]"}, {"lineNumber": 726, "col_offset": 32, "nodeName": "batch", "type": "Any"}, {"lineNumber": 726, "col_offset": 39, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 727, "col_offset": 8, "nodeName": "_report_batch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 727, "col_offset": 27, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 727, "col_offset": 40, "nodeName": "params", "type": "Any"}, {"lineNumber": 729, "col_offset": 19, "nodeName": "_should_optimize", "type": "Callable[[], Any]"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "update", "type": "Union[Callable[..., None], Any]"}, {"lineNumber": 730, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 730, "col_offset": 61, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 733, "col_offset": 40, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 735, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 738, "col_offset": 11, "nodeName": "_n_submitted_evidence", "type": "Any"}, {"lineNumber": 738, "col_offset": 40, "nodeName": "n_initial_evidence", "type": "Union[int, Any]"}, {"lineNumber": 741, "col_offset": 25, "nodeName": "_get_pending_params", "type": "Callable[[], Any]"}, {"lineNumber": 742, "col_offset": 12, "nodeName": "total", "type": "Any"}, {"lineNumber": 743, "col_offset": 20, "nodeName": "acquire", "type": "Any"}, {"lineNumber": 743, "col_offset": 52, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 743, "col_offset": 69, "nodeName": "pending_params", "type": "Any"}, {"lineNumber": 743, "col_offset": 85, "nodeName": "t", "type": "Any"}, {"lineNumber": 747, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 753, "col_offset": 15, "nodeName": "total", "type": "Any"}, {"lineNumber": 753, "col_offset": 34, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 760, "col_offset": 15, "nodeName": "_allow_submit", "type": "Union[Any, bool]"}, {"lineNumber": 763, "col_offset": 18, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 763, "col_offset": 49, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 764, "col_offset": 50, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 771, "col_offset": 15, "nodeName": "_to_array", "type": "Callable[..., Any]"}, {"lineNumber": 771, "col_offset": 30, "nodeName": "pending_batches", "type": "List[Any]"}, {"lineNumber": 771, "col_offset": 47, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 774, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 774, "col_offset": 44, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 776, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 776, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 777, "col_offset": 12, "nodeName": "str", "type": "str"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 778, "col_offset": 21, "nodeName": "str", "type": "str"}, {"lineNumber": 833, "col_offset": 15, "nodeName": "BolfiPosterior", "type": "Type[elfi.methods.posteriors.BolfiPosterior]"}, {"lineNumber": 833, "col_offset": 30, "nodeName": "discrepancy_model", "type": "Any"}, {"lineNumber": 833, "col_offset": 54, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 142, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 142, "col_offset": 49, "nodeName": "NodeReference", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "context", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "client", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "client", "type": "module"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 161, "col_offset": 68, "nodeName": "outputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 161, "col_offset": 84, "nodeName": "client", "type": "Any"}, {"lineNumber": 163, "col_offset": 60, "nodeName": "client", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 248, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "prepare_new_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 43, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "submit", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 32, "nodeName": "batch", "type": "None"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "objective", "type": "Any"}, {"lineNumber": 287, "col_offset": 46, "nodeName": "state", "type": "Any"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 291, "col_offset": 43, "nodeName": "num_pending", "type": "Any"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "has_ready", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "objective", "type": "Any"}, {"lineNumber": 297, "col_offset": 71, "nodeName": "num_pending", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 318, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 319, "col_offset": 21, "nodeName": "batch", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 332, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 332, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 332, "col_offset": 29, "nodeName": "ElfiModel", "type": "Any"}, {"lineNumber": 332, "col_offset": 44, "nodeName": "target", "type": "Any"}, {"lineNumber": 333, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "target", "type": "Any"}, {"lineNumber": 340, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 342, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 342, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 342, "col_offset": 34, "nodeName": "default_reference_class", "type": "Any"}, {"lineNumber": 343, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 345, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 351, "col_offset": 26, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 372, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 372, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 400, "col_offset": 34, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 401, "col_offset": 18, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 401, "col_offset": 48, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 402, "col_offset": 58, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "quantile", "type": "Any"}, {"lineNumber": 424, "col_offset": 32, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 424, "col_offset": 54, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 426, "col_offset": 50, "nodeName": "Inf", "type": "Any"}, {"lineNumber": 429, "col_offset": 29, "nodeName": "ceil", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 433, "col_offset": 24, "nodeName": "ceil", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 435, "col_offset": 24, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 437, "col_offset": 40, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 437, "col_offset": 61, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 438, "col_offset": 40, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 444, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "_init_samples_lazy", "type": "Callable[[Any], Any]"}, {"lineNumber": 446, "col_offset": 36, "nodeName": "batch", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 453, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 454, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 459, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 463, "col_offset": 30, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 471, "col_offset": 45, "nodeName": "inf", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 481, "col_offset": 23, "nodeName": "samples", "type": "Any"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 482, "col_offset": 46, "nodeName": "batch", "type": "Any"}, {"lineNumber": 486, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 487, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 504, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 504, "col_offset": 43, "nodeName": "k", "type": "str"}, {"lineNumber": 504, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 507, "col_offset": 70, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 507, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 510, "col_offset": 39, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 512, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 512, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 513, "col_offset": 49, "nodeName": "margin", "type": "float"}, {"lineNumber": 513, "col_offset": 59, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 521, "col_offset": 15, "nodeName": "self", "type": "SMC"}, {"lineNumber": 521, "col_offset": 34, "nodeName": "self", "type": "SMC"}, {"lineNumber": 522, "col_offset": 18, "nodeName": "self", "type": "SMC"}, {"lineNumber": 522, "col_offset": 48, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 523, "col_offset": 29, "nodeName": "self", "type": "SMC"}, {"lineNumber": 525, "col_offset": 41, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 525, "col_offset": 51, "nodeName": "added_nodes", "type": "List[str]"}, {"lineNumber": 525, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 532, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 540, "col_offset": 14, "nodeName": "self", "type": "SMC"}, {"lineNumber": 541, "col_offset": 17, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 542, "col_offset": 32, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 550, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 551, "col_offset": 12, "nodeName": "reset", "type": "Callable[..., None]"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 562, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 566, "col_offset": 17, "nodeName": "GMDistribution", "type": "Type[elfi.methods.utils.GMDistribution]"}, {"lineNumber": 566, "col_offset": 37, "nodeName": "_gm_params", "type": "Tuple[Any, nothing, nothing]"}, {"lineNumber": 566, "col_offset": 59, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 568, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 575, "col_offset": 36, "nodeName": "self", "type": "SMC"}, {"lineNumber": 576, "col_offset": 48, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 577, "col_offset": 44, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 578, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 579, "col_offset": 41, "nodeName": "seed", "type": "Any"}, {"lineNumber": 580, "col_offset": 57, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "_rejection", "type": "Rejection"}, {"lineNumber": 582, "col_offset": 39, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 583, "col_offset": 49, "nodeName": "current_population_threshold", "type": "Any"}, {"lineNumber": 586, "col_offset": 14, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 587, "col_offset": 17, "nodeName": "self", "type": "SMC"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 594, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 594, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 600, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "diag", "type": "Any"}, {"lineNumber": 613, "col_offset": 25, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 614, "col_offset": 27, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 619, "col_offset": 50, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 624, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 627, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 628, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 631, "col_offset": 18, "nodeName": "compose", "type": "Any"}, {"lineNumber": 631, "col_offset": 48, "nodeName": "args_to_tuple", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 631, "col_offset": 77, "nodeName": "model", "type": "Any"}, {"lineNumber": 637, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 638, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 638, "col_offset": 34, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 639, "col_offset": 24, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 643, "col_offset": 15, "nodeName": "objective", "type": "Any"}, {"lineNumber": 675, "col_offset": 15, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 675, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 676, "col_offset": 18, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 676, "col_offset": 48, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 678, "col_offset": 36, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 678, "col_offset": 56, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 678, "col_offset": 70, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 681, "col_offset": 28, "nodeName": "GPyRegression", "type": "Type[elfi.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 683, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 683, "col_offset": 26, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 683, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 685, "col_offset": 21, "nodeName": "_to_array", "type": "Callable[..., Any]"}, {"lineNumber": 685, "col_offset": 36, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 685, "col_offset": 54, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 686, "col_offset": 12, "nodeName": "update", "type": "Union[Callable[..., None], Any]"}, {"lineNumber": 686, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 687, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 687, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 690, "col_offset": 11, "nodeName": "initial_evidence", "type": "Union[int, Any]"}, {"lineNumber": 690, "col_offset": 30, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 691, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 693, "col_offset": 56, "nodeName": "LCBSC", "type": "Any"}, {"lineNumber": 693, "col_offset": 62, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 703, "col_offset": 36, "nodeName": "get", "type": "Callable"}, {"lineNumber": 705, "col_offset": 21, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 705, "col_offset": 34, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 706, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 708, "col_offset": 30, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 710, "col_offset": 58, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 713, "col_offset": 51, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 714, "col_offset": 51, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 717, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 719, "col_offset": 12, "nodeName": "param_hat", "type": "Dict[Any, Any]"}, {"lineNumber": 719, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 721, "col_offset": 28, "nodeName": "param_hat", "type": "Dict[Any, Any]"}, {"lineNumber": 726, "col_offset": 17, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 726, "col_offset": 39, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 727, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 727, "col_offset": 48, "nodeName": "batch", "type": "Any"}, {"lineNumber": 729, "col_offset": 19, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 730, "col_offset": 41, "nodeName": "batch", "type": "Any"}, {"lineNumber": 733, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 733, "col_offset": 40, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 735, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 738, "col_offset": 11, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 738, "col_offset": 40, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 741, "col_offset": 25, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 742, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 742, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 743, "col_offset": 20, "nodeName": "acquisition_method", "type": "Any"}, {"lineNumber": 743, "col_offset": 52, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 747, "col_offset": 20, "nodeName": "new_param", "type": "Any"}, {"lineNumber": 753, "col_offset": 15, "nodeName": "batches", "type": "Any"}, {"lineNumber": 753, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 758, "col_offset": 18, "nodeName": "_n_submitted_evidence", "type": "Any"}, {"lineNumber": 758, "col_offset": 48, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 759, "col_offset": 18, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 759, "col_offset": 49, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 760, "col_offset": 71, "nodeName": "prevent", "type": "Any"}, {"lineNumber": 763, "col_offset": 18, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 763, "col_offset": 49, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 764, "col_offset": 22, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 764, "col_offset": 50, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 765, "col_offset": 15, "nodeName": "current", "type": "Any"}, {"lineNumber": 765, "col_offset": 26, "nodeName": "n_initial_evidence", "type": "Union[int, Any]"}, {"lineNumber": 765, "col_offset": 54, "nodeName": "current", "type": "Any"}, {"lineNumber": 765, "col_offset": 65, "nodeName": "next_update", "type": "Any"}, {"lineNumber": 770, "col_offset": 27, "nodeName": "pending_indices", "type": "Any"}, {"lineNumber": 771, "col_offset": 15, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 771, "col_offset": 47, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 776, "col_offset": 23, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 777, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 777, "col_offset": 41, "nodeName": "fill", "type": "str"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 833, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 145, "col_offset": 69, "nodeName": "model", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "elfi", "type": "module"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "elfi", "type": "module"}, {"lineNumber": 161, "col_offset": 84, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 163, "col_offset": 60, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 287, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 291, "col_offset": 43, "nodeName": "batches", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "batches", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 297, "col_offset": 45, "nodeName": "state", "type": "Any"}, {"lineNumber": 297, "col_offset": 71, "nodeName": "batches", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 340, "col_offset": 27, "nodeName": "target", "type": "Any"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "append", "type": "Union[Any, Callable]"}, {"lineNumber": 352, "col_offset": 31, "nodeName": "out", "type": "Any"}, {"lineNumber": 401, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 401, "col_offset": 68, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 402, "col_offset": 14, "nodeName": "Rejection", "type": "Type[Rejection]"}, {"lineNumber": 402, "col_offset": 25, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 426, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 429, "col_offset": 34, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 429, "col_offset": 44, "nodeName": "quantile", "type": "Union[Any, float]"}, {"lineNumber": 433, "col_offset": 29, "nodeName": "n_sim", "type": "Union[Any, float]"}, {"lineNumber": 433, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 444, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 453, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 458, "col_offset": 20, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 459, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 470, "col_offset": 71, "nodeName": "shape", "type": "Any"}, {"lineNumber": 471, "col_offset": 20, "nodeName": "node", "type": "Any"}, {"lineNumber": 471, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 471, "col_offset": 36, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 471, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 52, "nodeName": "node", "type": "Any"}, {"lineNumber": 485, "col_offset": 20, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 487, "col_offset": 21, "nodeName": "sort_mask", "type": "Any"}, {"lineNumber": 496, "col_offset": 25, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 496, "col_offset": 38, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 497, "col_offset": 34, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 497, "col_offset": 49, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 504, "col_offset": 24, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 507, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 507, "col_offset": 64, "nodeName": "t", "type": "Any"}, {"lineNumber": 512, "col_offset": 22, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 512, "col_offset": 44, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 512, "col_offset": 59, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 513, "col_offset": 21, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 513, "col_offset": 33, "nodeName": "accept_rate_t", "type": "Any"}, {"lineNumber": 516, "col_offset": 58, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 522, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 522, "col_offset": 68, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 525, "col_offset": 14, "nodeName": "SMC", "type": "Type[SMC]"}, {"lineNumber": 525, "col_offset": 19, "nodeName": "self", "type": "SMC"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 532, "col_offset": 45, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 533, "col_offset": 45, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 535, "col_offset": 46, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 541, "col_offset": 17, "nodeName": "self", "type": "SMC"}, {"lineNumber": 542, "col_offset": 32, "nodeName": "self", "type": "SMC"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "result", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 551, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 552, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 552, "col_offset": 37, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 554, "col_offset": 16, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 555, "col_offset": 16, "nodeName": "_new_round", "type": "Callable[[], Any]"}, {"lineNumber": 562, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 566, "col_offset": 37, "nodeName": "self", "type": "SMC"}, {"lineNumber": 566, "col_offset": 59, "nodeName": "self", "type": "SMC"}, {"lineNumber": 568, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 568, "col_offset": 38, "nodeName": "p", "type": "Any"}, {"lineNumber": 568, "col_offset": 43, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 568, "col_offset": 53, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 573, "col_offset": 49, "nodeName": "dashes", "type": "str"}, {"lineNumber": 573, "col_offset": 78, "nodeName": "dashes", "type": "str"}, {"lineNumber": 576, "col_offset": 48, "nodeName": "self", "type": "SMC"}, {"lineNumber": 577, "col_offset": 44, "nodeName": "self", "type": "SMC"}, {"lineNumber": 578, "col_offset": 47, "nodeName": "self", "type": "SMC"}, {"lineNumber": 579, "col_offset": 41, "nodeName": "self", "type": "SMC"}, {"lineNumber": 580, "col_offset": 57, "nodeName": "self", "type": "SMC"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 582, "col_offset": 39, "nodeName": "self", "type": "SMC"}, {"lineNumber": 583, "col_offset": 49, "nodeName": "self", "type": "SMC"}, {"lineNumber": 586, "col_offset": 14, "nodeName": "self", "type": "SMC"}, {"lineNumber": 600, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 600, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 603, "col_offset": 26, "nodeName": "weighted_var", "type": "Callable[..., Any]"}, {"lineNumber": 603, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 603, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 613, "col_offset": 25, "nodeName": "self", "type": "SMC"}, {"lineNumber": 614, "col_offset": 27, "nodeName": "self", "type": "SMC"}, {"lineNumber": 618, "col_offset": 25, "nodeName": "pop", "type": "nothing"}, {"lineNumber": 618, "col_offset": 46, "nodeName": "pop", "type": "nothing"}, {"lineNumber": 618, "col_offset": 53, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 619, "col_offset": 50, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 627, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 628, "col_offset": 12, "nodeName": "pdfs", "type": "List[Any]"}, {"lineNumber": 628, "col_offset": 24, "nodeName": "Operation", "type": "Any"}, {"lineNumber": 628, "col_offset": 34, "nodeName": "pdf", "type": "Any"}, {"lineNumber": 631, "col_offset": 26, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 631, "col_offset": 34, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 631, "col_offset": 42, "nodeName": "mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 639, "col_offset": 37, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 643, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 643, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 676, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 676, "col_offset": 68, "nodeName": "target", "type": "Any"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 677, "col_offset": 14, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 677, "col_offset": 36, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 681, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 681, "col_offset": 46, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 681, "col_offset": 77, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 685, "col_offset": 21, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 685, "col_offset": 54, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 686, "col_offset": 12, "nodeName": "target_model", "type": "Union[elfi.bo.gpy_regression.GPyRegression, Any]"}, {"lineNumber": 686, "col_offset": 40, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 690, "col_offset": 30, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 703, "col_offset": 36, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 705, "col_offset": 21, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 710, "col_offset": 18, "nodeName": "n_acq", "type": "Any"}, {"lineNumber": 710, "col_offset": 31, "nodeName": "n_initial_evidence", "type": "Union[int, Any]"}, {"lineNumber": 710, "col_offset": 58, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 713, "col_offset": 51, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 714, "col_offset": 51, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 717, "col_offset": 30, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 719, "col_offset": 22, "nodeName": "p", "type": "Any"}, {"lineNumber": 719, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 727, "col_offset": 54, "nodeName": "target", "type": "Any"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 730, "col_offset": 47, "nodeName": "target", "type": "Any"}, {"lineNumber": 733, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 733, "col_offset": 40, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 742, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 742, "col_offset": 37, "nodeName": "n_initial_evidence", "type": "Union[int, Any]"}, {"lineNumber": 742, "col_offset": 61, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 743, "col_offset": 20, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 747, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 747, "col_offset": 46, "nodeName": "p", "type": "Any"}, {"lineNumber": 747, "col_offset": 51, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 747, "col_offset": 61, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 753, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 758, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 758, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 759, "col_offset": 18, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 759, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 760, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 760, "col_offset": 21, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 760, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 763, "col_offset": 18, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 764, "col_offset": 22, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 765, "col_offset": 26, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 770, "col_offset": 27, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 777, "col_offset": 47, "nodeName": "item", "type": "Any"}, {"lineNumber": 777, "col_offset": 68, "nodeName": "params", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "self", "type": "InferenceMethod"}, {"lineNumber": 291, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 297, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 297, "col_offset": 71, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 401, "col_offset": 68, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 433, "col_offset": 35, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 458, "col_offset": 20, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 459, "col_offset": 28, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 470, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 471, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 14, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 485, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 485, "col_offset": 31, "nodeName": "samples", "type": "Any"}, {"lineNumber": 496, "col_offset": 38, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 496, "col_offset": 56, "nodeName": "o", "type": "Dict[Any, Any]"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 504, "col_offset": 24, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 516, "col_offset": 58, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 522, "col_offset": 68, "nodeName": "self", "type": "SMC"}, {"lineNumber": 533, "col_offset": 45, "nodeName": "self", "type": "SMC"}, {"lineNumber": 551, "col_offset": 12, "nodeName": "self", "type": "SMC"}, {"lineNumber": 551, "col_offset": 31, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 552, "col_offset": 15, "nodeName": "self", "type": "SMC"}, {"lineNumber": 552, "col_offset": 37, "nodeName": "self", "type": "SMC"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 553, "col_offset": 41, "nodeName": "_extract_population", "type": "Callable[[], Any]"}, {"lineNumber": 554, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 555, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 568, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 568, "col_offset": 53, "nodeName": "self", "type": "SMC"}, {"lineNumber": 573, "col_offset": 57, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 594, "col_offset": 40, "nodeName": "samples", "type": "Any"}, {"lineNumber": 594, "col_offset": 55, "nodeName": "p", "type": "Any"}, {"lineNumber": 594, "col_offset": 60, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 618, "col_offset": 53, "nodeName": "self", "type": "SMC"}, {"lineNumber": 619, "col_offset": 50, "nodeName": "self", "type": "SMC"}, {"lineNumber": 628, "col_offset": 34, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 629, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 638, "col_offset": 64, "nodeName": "p", "type": "Any"}, {"lineNumber": 638, "col_offset": 69, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 643, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 676, "col_offset": 68, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 681, "col_offset": 46, "nodeName": "model", "type": "Any"}, {"lineNumber": 686, "col_offset": 57, "nodeName": "target", "type": "Any"}, {"lineNumber": 703, "col_offset": 36, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 710, "col_offset": 18, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 710, "col_offset": 31, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 727, "col_offset": 54, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 730, "col_offset": 47, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 742, "col_offset": 37, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 742, "col_offset": 61, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 747, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 747, "col_offset": 61, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 759, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 770, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 777, "col_offset": 75, "nodeName": "i", "type": "int"}, {"lineNumber": 324, "col_offset": 41, "nodeName": "batch_", "type": "Any"}, {"lineNumber": 324, "col_offset": 60, "nodeName": "output", "type": "Any"}, {"lineNumber": 324, "col_offset": 70, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 459, "col_offset": 28, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 470, "col_offset": 21, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 470, "col_offset": 51, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 470, "col_offset": 71, "nodeName": "batch", "type": "Any"}, {"lineNumber": 482, "col_offset": 14, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 485, "col_offset": 39, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 507, "col_offset": 30, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 507, "col_offset": 43, "nodeName": "discrepancy", "type": "Any"}, {"lineNumber": 534, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 534, "col_offset": 45, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 551, "col_offset": 31, "nodeName": "self", "type": "SMC"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 553, "col_offset": 41, "nodeName": "self", "type": "SMC"}, {"lineNumber": 573, "col_offset": 57, "nodeName": "self", "type": "SMC"}, {"lineNumber": 594, "col_offset": 48, "nodeName": "p", "type": "Any"}, {"lineNumber": 594, "col_offset": 60, "nodeName": "self", "type": "SMC"}, {"lineNumber": 628, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 638, "col_offset": 41, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 638, "col_offset": 57, "nodeName": "p", "type": "Any"}, {"lineNumber": 638, "col_offset": 69, "nodeName": "self", "type": "Any"}, {"lineNumber": 681, "col_offset": 46, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 686, "col_offset": 57, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 747, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 777, "col_offset": 47, "nodeName": "distances", "type": "Any"}, {"lineNumber": 324, "col_offset": 48, "nodeName": "output", "type": "Any"}, {"lineNumber": 470, "col_offset": 21, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 470, "col_offset": 77, "nodeName": "node", "type": "Any"}, {"lineNumber": 485, "col_offset": 39, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 507, "col_offset": 43, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 628, "col_offset": 61, "nodeName": "param", "type": "Any"}, {"lineNumber": 777, "col_offset": 57, "nodeName": "i", "type": "int"}]