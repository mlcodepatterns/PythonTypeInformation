[{"lineNumber": 24, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 406, "col_offset": 14, "nodeName": "ParameterInference", "type": "Type[ParameterInference]"}, {"lineNumber": 436, "col_offset": 16, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 615, "col_offset": 10, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 733, "col_offset": 27, "nodeName": "ParameterInference", "type": "Type[ParameterInference]"}, {"lineNumber": 959, "col_offset": 12, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "computation_context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "context", "type": "elfi.model.elfi_model.ComputationContext"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "client", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "objective", "type": "Dict[str, int]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "pool", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "seed", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "vis_opt", "type": "Dict[nothing, nothing]"}, {"lineNumber": 263, "col_offset": 11, "nodeName": "vis", "type": "None"}, {"lineNumber": 291, "col_offset": 14, "nodeName": "_allow_submit", "type": "Any"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "n_batches", "type": "Union[int, Any]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "batch_", "type": "Any"}, {"lineNumber": 350, "col_offset": 22, "nodeName": "batches", "type": "Union[List[Any], Any]"}, {"lineNumber": 367, "col_offset": 62, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "output_names", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "checked_names", "type": "List[Any]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "output_names", "type": "Union[List[nothing], List[Any]]"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "checked_names", "type": "List[Any]"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "state_key", "type": "str"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 468, "col_offset": 32, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 495, "col_offset": 11, "nodeName": "quantile", "type": "Union[float, Any]"}, {"lineNumber": 498, "col_offset": 11, "nodeName": "n_sim", "type": "Union[int, Any]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "e_noarr", "type": "str"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "e_len", "type": "str"}, {"lineNumber": 540, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 540, "col_offset": 20, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 561, "col_offset": 32, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "sort_mask", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "o", "type": "Dict[str, int]"}, {"lineNumber": 578, "col_offset": 12, "nodeName": "objective", "type": "Dict[str, int]"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 581, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 589, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "accept_rate_t", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "margin", "type": "Any"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "pdf_name", "type": "Any"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 629, "col_offset": 32, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "prior_pdf", "type": "Any"}, {"lineNumber": 630, "col_offset": 25, "nodeName": "pdf_name", "type": "Any"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "_rejection", "type": "None"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 650, "col_offset": 11, "nodeName": "finished", "type": "Any"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 669, "col_offset": 15, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "dashes", "type": "str"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "method_name", "type": "str"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 689, "col_offset": 22, "nodeName": "w", "type": "Any"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "cov", "type": "Any"}, {"lineNumber": 690, "col_offset": 18, "nodeName": "cov", "type": "Any"}, {"lineNumber": 691, "col_offset": 8, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 692, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 697, "col_offset": 11, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "cov", "type": "Any"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 712, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "n_batches", "type": "nothing"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "params_", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 769, "col_offset": 27, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "n_initial_required", "type": "Any"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "_n_precomputed", "type": "int"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 801, "col_offset": 26, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 802, "col_offset": 8, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 802, "col_offset": 28, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 803, "col_offset": 34, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 804, "col_offset": 8, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 804, "col_offset": 31, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "param_hat", "type": "Dict[Any, Any]"}, {"lineNumber": 836, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 842, "col_offset": 11, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 846, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 855, "col_offset": 8, "nodeName": "new_param", "type": "Any"}, {"lineNumber": 858, "col_offset": 8, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 859, "col_offset": 45, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 861, "col_offset": 15, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "current", "type": "Any"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "next_update", "type": "Any"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "str", "type": "str"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "fill", "type": "str"}, {"lineNumber": 884, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 894, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 898, "col_offset": 8, "nodeName": "gp", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 898, "col_offset": 13, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 925, "col_offset": 8, "nodeName": "acq", "type": "Callable[[Any], Any]"}, {"lineNumber": 942, "col_offset": 8, "nodeName": "n_plots", "type": "Union[Any, int]"}, {"lineNumber": 942, "col_offset": 18, "nodeName": "input_dim", "type": "Union[Any, int]"}, {"lineNumber": 943, "col_offset": 8, "nodeName": "ncols", "type": "Union[Any, int]"}, {"lineNumber": 944, "col_offset": 8, "nodeName": "nrows", "type": "Union[Any, int]"}, {"lineNumber": 946, "col_offset": 8, "nodeName": "shape", "type": "Tuple[Any, Union[int, Any]]"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "axes", "type": "Any"}, {"lineNumber": 950, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 956, "col_offset": 15, "nodeName": "axes", "type": "Any"}, {"lineNumber": 1046, "col_offset": 8, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1047, "col_offset": 8, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1058, "col_offset": 8, "nodeName": "is_sampling", "type": "bool"}, {"lineNumber": 1060, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 1061, "col_offset": 8, "nodeName": "tasks_ids", "type": "List[Any]"}, {"lineNumber": 1062, "col_offset": 8, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1065, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 1077, "col_offset": 8, "nodeName": "chains", "type": "List[Any]"}, {"lineNumber": 1078, "col_offset": 12, "nodeName": "id", "type": "Any"}, {"lineNumber": 1078, "col_offset": 18, "nodeName": "tasks_ids", "type": "List[Any]"}, {"lineNumber": 1081, "col_offset": 8, "nodeName": "chains", "type": "numpy.ndarray"}, {"lineNumber": 1088, "col_offset": 8, "nodeName": "is_sampling", "type": "bool"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 69, "nodeName": "model", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "copy", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "_check_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 48, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "ComputationContext", "type": "Type[elfi.model.elfi_model.ComputationContext]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "get_client", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "BatchHandler", "type": "Type[elfi.client.BatchHandler]"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "max_parallel_batches", "type": "None"}, {"lineNumber": 101, "col_offset": 60, "nodeName": "num_cores", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "self", "type": "ParameterInference"}, {"lineNumber": 253, "col_offset": 18, "nodeName": "vis", "type": "None"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "set_objective", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "finished", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "vis", "type": "None"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "cancel_pending", "type": "Callable[[], None]"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "extract_result", "type": "Callable[[], Any]"}, {"lineNumber": 291, "col_offset": 14, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "next_index", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "wait_next", "type": "Callable[[], Tuple[Any, int]]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "_objective_n_batches", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "_has_batches_to_submit", "type": "Any"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "_objective_n_batches", "type": "Any"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "objective", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "batches", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 347, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 347, "col_offset": 29, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 360, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 361, "col_offset": 31, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "seed", "type": "Any"}, {"lineNumber": 371, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 372, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 375, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 375, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 381, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 381, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 386, "col_offset": 23, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 424, "col_offset": 15, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 424, "col_offset": 26, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 427, "col_offset": 17, "nodeName": "_extract_result_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 431, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 431, "col_offset": 19, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 432, "col_offset": 41, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 464, "col_offset": 15, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 464, "col_offset": 34, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 464, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 464, "col_offset": 61, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 466, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 466, "col_offset": 47, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "quantile", "type": "float"}, {"lineNumber": 492, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 495, "col_offset": 21, "nodeName": "n_sim", "type": "int"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "n_batches", "type": "int"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 501, "col_offset": 24, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 503, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "_merge_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 513, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "_update_state_meta", "type": "Callable[[], Any]"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "_update_objective", "type": "Callable[[], Any]"}, {"lineNumber": 528, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 529, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 529, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 529, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 532, "col_offset": 15, "nodeName": "Sample", "type": "Type[elfi.methods.results.Sample]"}, {"lineNumber": 540, "col_offset": 20, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 552, "col_offset": 12, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 553, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 553, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 565, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 567, "col_offset": 18, "nodeName": "v", "type": "Any"}, {"lineNumber": 567, "col_offset": 23, "nodeName": "items", "type": "Any"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 572, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 572, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 578, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 581, "col_offset": 22, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 582, "col_offset": 25, "nodeName": "item", "type": "Any"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 583, "col_offset": 27, "nodeName": "min", "type": "Callable"}, {"lineNumber": 589, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 590, "col_offset": 11, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 594, "col_offset": 11, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 596, "col_offset": 24, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 599, "col_offset": 59, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "objective", "type": "Union[Dict[str, int], Dict[Any, Any]]"}, {"lineNumber": 601, "col_offset": 38, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 601, "col_offset": 43, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 606, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "plot_sample", "type": "Callable[..., None]"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 618, "col_offset": 15, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 618, "col_offset": 34, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 618, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 618, "col_offset": 61, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 621, "col_offset": 16, "nodeName": "copy", "type": "Any"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 627, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 627, "col_offset": 41, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "_new_round", "type": "Callable[[], Any]"}, {"lineNumber": 643, "col_offset": 14, "nodeName": "_extract_population", "type": "Callable[[], Any]"}, {"lineNumber": 644, "col_offset": 15, "nodeName": "SmcSample", "type": "Type[elfi.methods.results.SmcSample]"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 648, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 648, "col_offset": 38, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 650, "col_offset": 11, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "_update_state", "type": "Callable[[], Any]"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "_update_objective", "type": "Callable[[], Any]"}, {"lineNumber": 666, "col_offset": 17, "nodeName": "rvs", "type": "Callable[..., Any]"}, {"lineNumber": 668, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 675, "col_offset": 26, "nodeName": "Rejection", "type": "Type[Rejection]"}, {"lineNumber": 675, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "set_objective", "type": "Callable[..., Any]"}, {"lineNumber": 686, "col_offset": 14, "nodeName": "extract_result", "type": "Any"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 688, "col_offset": 11, "nodeName": "cov", "type": "Any"}, {"lineNumber": 688, "col_offset": 17, "nodeName": "_compute_weights_and_cov", "type": "Callable[[Any], Any]"}, {"lineNumber": 688, "col_offset": 47, "nodeName": "pop", "type": "Any"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 691, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 691, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 695, "col_offset": 17, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 697, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 701, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 705, "col_offset": 15, "nodeName": "w", "type": "Any"}, {"lineNumber": 705, "col_offset": 18, "nodeName": "cov", "type": "Any"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "self", "type": "SMC"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 712, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 712, "col_offset": 22, "nodeName": "self", "type": "SMC"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 714, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 715, "col_offset": 27, "nodeName": "state", "type": "Any"}, {"lineNumber": 719, "col_offset": 20, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "objective", "type": "Any"}, {"lineNumber": 720, "col_offset": 38, "nodeName": "n_batches", "type": "nothing"}, {"lineNumber": 724, "col_offset": 15, "nodeName": "_populations", "type": "Any"}, {"lineNumber": 725, "col_offset": 18, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 726, "col_offset": 15, "nodeName": "params_", "type": "Any"}, {"lineNumber": 726, "col_offset": 24, "nodeName": "cov", "type": "Any"}, {"lineNumber": 726, "col_offset": 34, "nodeName": "weights", "type": "Any"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 764, "col_offset": 15, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 764, "col_offset": 29, "nodeName": "_resolve_model", "type": "Callable[..., Any]"}, {"lineNumber": 764, "col_offset": 49, "nodeName": "model", "type": "Any"}, {"lineNumber": 764, "col_offset": 56, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 765, "col_offset": 39, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 766, "col_offset": 51, "nodeName": "model", "type": "Any"}, {"lineNumber": 766, "col_offset": 58, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 774, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 775, "col_offset": 12, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 778, "col_offset": 29, "nodeName": "max", "type": "Callable"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 781, "col_offset": 11, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 782, "col_offset": 12, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 782, "col_offset": 31, "nodeName": "n_initial_required", "type": "Any"}, {"lineNumber": 790, "col_offset": 11, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 790, "col_offset": 30, "nodeName": "n_initial_required", "type": "Any"}, {"lineNumber": 797, "col_offset": 34, "nodeName": "acquisition_method", "type": "Any"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 802, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 804, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 808, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 808, "col_offset": 32, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 809, "col_offset": 69, "nodeName": "_n_precomputed", "type": "int"}, {"lineNumber": 811, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 814, "col_offset": 26, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 814, "col_offset": 40, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "objective", "type": "Dict[str, int]"}, {"lineNumber": 815, "col_offset": 38, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 818, "col_offset": 27, "nodeName": "stochastic_optimization", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 818, "col_offset": 51, "nodeName": "predict_mean", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 819, "col_offset": 51, "nodeName": "bounds", "type": "Union[Any, List[Any]]"}, {"lineNumber": 822, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 822, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 822, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 822, "col_offset": 30, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 827, "col_offset": 15, "nodeName": "OptimizationResult", "type": "Type[elfi.methods.results.OptimizationResult]"}, {"lineNumber": 834, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 834, "col_offset": 34, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 836, "col_offset": 17, "nodeName": "_to_array", "type": "Callable[..., Any]"}, {"lineNumber": 836, "col_offset": 32, "nodeName": "batch", "type": "Any"}, {"lineNumber": 836, "col_offset": 39, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "_report_batch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 837, "col_offset": 27, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 837, "col_offset": 40, "nodeName": "params", "type": "Any"}, {"lineNumber": 839, "col_offset": 19, "nodeName": "_should_optimize", "type": "Callable[[], Any]"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "update", "type": "Union[Any, Callable[..., None]]"}, {"lineNumber": 840, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 840, "col_offset": 66, "nodeName": "optimize", "type": "Any"}, {"lineNumber": 843, "col_offset": 40, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 846, "col_offset": 31, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 849, "col_offset": 11, "nodeName": "_n_submitted_evidence", "type": "Any"}, {"lineNumber": 852, "col_offset": 25, "nodeName": "_to_array", "type": "Callable[..., Any]"}, {"lineNumber": 853, "col_offset": 40, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 854, "col_offset": 12, "nodeName": "total", "type": "Any"}, {"lineNumber": 855, "col_offset": 20, "nodeName": "acquire", "type": "Union[Any, Callable[..., Any]]"}, {"lineNumber": 855, "col_offset": 52, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 855, "col_offset": 69, "nodeName": "pending_params", "type": "Any"}, {"lineNumber": 855, "col_offset": 85, "nodeName": "t", "type": "Any"}, {"lineNumber": 858, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 866, "col_offset": 15, "nodeName": "total", "type": "Any"}, {"lineNumber": 866, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 872, "col_offset": 18, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 872, "col_offset": 49, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 874, "col_offset": 31, "nodeName": "_allow_submit", "type": "Union[Any, bool]"}, {"lineNumber": 877, "col_offset": 18, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 877, "col_offset": 49, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 878, "col_offset": 50, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 882, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 882, "col_offset": 44, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 884, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 884, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 885, "col_offset": 12, "nodeName": "str", "type": "str"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 886, "col_offset": 21, "nodeName": "str", "type": "str"}, {"lineNumber": 894, "col_offset": 12, "nodeName": "gcf", "type": "Any"}, {"lineNumber": 898, "col_offset": 13, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "draw_contour", "type": "Callable[..., None]"}, {"lineNumber": 901, "col_offset": 27, "nodeName": "predict_mean", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 902, "col_offset": 27, "nodeName": "bounds", "type": "Union[Any, List[Any]]"}, {"lineNumber": 903, "col_offset": 27, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 909, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 910, "col_offset": 12, "nodeName": "point", "type": "Any"}, {"lineNumber": 914, "col_offset": 20, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 916, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 923, "col_offset": 8, "nodeName": "_update_interactive", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 923, "col_offset": 34, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 923, "col_offset": 44, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 927, "col_offset": 8, "nodeName": "draw_contour", "type": "Callable[..., None]"}, {"lineNumber": 927, "col_offset": 27, "nodeName": "acq", "type": "Callable[[Any], Any]"}, {"lineNumber": 928, "col_offset": 27, "nodeName": "bounds", "type": "Union[Any, List[Any]]"}, {"lineNumber": 929, "col_offset": 27, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 934, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 942, "col_offset": 18, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 943, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 944, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 945, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 945, "col_offset": 27, "nodeName": "get", "type": "Callable"}, {"lineNumber": 947, "col_offset": 8, "nodeName": "axes", "type": "Any"}, {"lineNumber": 947, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 947, "col_offset": 23, "nodeName": "_create_axes", "type": "Callable[..., Tuple[Any, Dict[str, Any]]]"}, {"lineNumber": 947, "col_offset": 40, "nodeName": "axes", "type": "Any"}, {"lineNumber": 947, "col_offset": 46, "nodeName": "shape", "type": "Tuple[Any, Union[int, Any]]"}, {"lineNumber": 948, "col_offset": 15, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 950, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 950, "col_offset": 24, "nodeName": "n_plots", "type": "Union[int, Any]"}, {"lineNumber": 954, "col_offset": 8, "nodeName": "set_ylabel", "type": "Any"}, {"lineNumber": 980, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 982, "col_offset": 11, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 985, "col_offset": 8, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 985, "col_offset": 19, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 986, "col_offset": 15, "nodeName": "extract_posterior", "type": "Callable[..., Any]"}, {"lineNumber": 986, "col_offset": 38, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1004, "col_offset": 15, "nodeName": "BolfiPosterior", "type": "Type[elfi.methods.posteriors.BolfiPosterior]"}, {"lineNumber": 1004, "col_offset": 30, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 1046, "col_offset": 20, "nodeName": "extract_posterior", "type": "Callable[..., Any]"}, {"lineNumber": 1046, "col_offset": 43, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1047, "col_offset": 17, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1050, "col_offset": 11, "nodeName": "initials", "type": "Any"}, {"lineNumber": 1055, "col_offset": 12, "nodeName": "inds", "type": "Any"}, {"lineNumber": 1056, "col_offset": 12, "nodeName": "initials", "type": "numpy.ndarray"}, {"lineNumber": 1058, "col_offset": 8, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 1060, "col_offset": 23, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 1060, "col_offset": 45, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1065, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1065, "col_offset": 24, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 1066, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1074, "col_offset": 12, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1081, "col_offset": 17, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1081, "col_offset": 28, "nodeName": "chains", "type": "List[Any]"}, {"lineNumber": 1083, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 1085, "col_offset": 12, "nodeName": "ii", "type": "int"}, {"lineNumber": 1085, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 1085, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1085, "col_offset": 34, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 1088, "col_offset": 8, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 1090, "col_offset": 15, "nodeName": "BolfiSample", "type": "Type[elfi.methods.results.BolfiSample]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 49, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "seed", "type": "None"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "observed", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "pool", "type": "None"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "client", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "client", "type": "module"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 100, "col_offset": 73, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 94, "nodeName": "client", "type": "Any"}, {"lineNumber": 101, "col_offset": 60, "nodeName": "client", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "num_cores", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "msg", "type": "str"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "msg", "type": "str"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "ParameterInference"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "ParameterInference"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 253, "col_offset": 36, "nodeName": "vis", "type": "None"}, {"lineNumber": 253, "col_offset": 41, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "args", "type": "Tuple[Any]"}, {"lineNumber": 255, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "iterate", "type": "Callable[[], Any]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "prepare_new_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 43, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "submit", "type": "Callable[..., None]"}, {"lineNumber": 294, "col_offset": 32, "nodeName": "batch", "type": "Any"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 306, "col_offset": 43, "nodeName": "num_pending", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "has_ready", "type": "Any"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 41, "nodeName": "num_pending", "type": "Any"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 319, "col_offset": 24, "nodeName": "objective", "type": "Any"}, {"lineNumber": 320, "col_offset": 24, "nodeName": "objective", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "n_batches", "type": "int"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 345, "col_offset": 26, "nodeName": "batches", "type": "Any"}, {"lineNumber": 345, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 346, "col_offset": 23, "nodeName": "batches", "type": "Any"}, {"lineNumber": 347, "col_offset": 29, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 27, "nodeName": "__class__", "type": "Type[BayesianOptimization]"}, {"lineNumber": 361, "col_offset": 31, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 368, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 368, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "ElfiModel", "type": "Type[elfi.model.elfi_model.ElfiModel]"}, {"lineNumber": 368, "col_offset": 44, "nodeName": "target", "type": "Any"}, {"lineNumber": 369, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "target", "type": "Any"}, {"lineNumber": 376, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 378, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 378, "col_offset": 34, "nodeName": "default_reference_class", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 379, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 381, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 390, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 390, "col_offset": 32, "nodeName": "NodeReference", "type": "Type[elfi.model.elfi_model.NodeReference]"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 391, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 393, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 393, "col_offset": 23, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 401, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 424, "col_offset": 15, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 424, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 424, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 429, "col_offset": 15, "nodeName": "state_key", "type": "str"}, {"lineNumber": 429, "col_offset": 28, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 432, "col_offset": 41, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 464, "col_offset": 34, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 465, "col_offset": 44, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 465, "col_offset": 69, "nodeName": "output_names", "type": "Any"}, {"lineNumber": 466, "col_offset": 63, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 490, "col_offset": 11, "nodeName": "quantile", "type": "Any"}, {"lineNumber": 490, "col_offset": 32, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 490, "col_offset": 54, "nodeName": "n_sim", "type": "Any"}, {"lineNumber": 492, "col_offset": 50, "nodeName": "Inf", "type": "Any"}, {"lineNumber": 495, "col_offset": 29, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 499, "col_offset": 24, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 501, "col_offset": 24, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 503, "col_offset": 40, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 503, "col_offset": 61, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 504, "col_offset": 40, "nodeName": "n_batches", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 510, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "_init_samples_lazy", "type": "Callable[[Any], Any]"}, {"lineNumber": 512, "col_offset": 36, "nodeName": "batch", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 525, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 530, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 532, "col_offset": 30, "nodeName": "outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 542, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 542, "col_offset": 27, "nodeName": "batch", "type": "Any"}, {"lineNumber": 545, "col_offset": 21, "nodeName": "batch", "type": "Any"}, {"lineNumber": 553, "col_offset": 20, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 555, "col_offset": 23, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 565, "col_offset": 18, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 567, "col_offset": 23, "nodeName": "samples", "type": "Any"}, {"lineNumber": 568, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 568, "col_offset": 46, "nodeName": "batch", "type": "Any"}, {"lineNumber": 572, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 573, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 587, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 590, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 590, "col_offset": 43, "nodeName": "k", "type": "str"}, {"lineNumber": 590, "col_offset": 50, "nodeName": "k", "type": "str"}, {"lineNumber": 593, "col_offset": 75, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 593, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 596, "col_offset": 39, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 598, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 598, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 599, "col_offset": 49, "nodeName": "margin", "type": "Any"}, {"lineNumber": 599, "col_offset": 59, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 606, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 611, "col_offset": 26, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 611, "col_offset": 55, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 612, "col_offset": 66, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 612, "col_offset": 78, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 618, "col_offset": 34, "nodeName": "self", "type": "SMC"}, {"lineNumber": 621, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 622, "col_offset": 19, "nodeName": "add_pdf_nodes", "type": "Callable[..., Any]"}, {"lineNumber": 622, "col_offset": 43, "nodeName": "model", "type": "Any"}, {"lineNumber": 625, "col_offset": 24, "nodeName": "output_names", "type": "Any"}, {"lineNumber": 627, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 636, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 643, "col_offset": 14, "nodeName": "self", "type": "SMC"}, {"lineNumber": 644, "col_offset": 33, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 650, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "cancel_pending", "type": "Callable[[], None]"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 662, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 666, "col_offset": 17, "nodeName": "GMDistribution", "type": "Type[elfi.methods.utils.GMDistribution]"}, {"lineNumber": 666, "col_offset": 37, "nodeName": "_gm_params", "type": "Tuple[Any, nothing, nothing]"}, {"lineNumber": 666, "col_offset": 59, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 668, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 675, "col_offset": 36, "nodeName": "self", "type": "SMC"}, {"lineNumber": 676, "col_offset": 53, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 677, "col_offset": 49, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 678, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 679, "col_offset": 41, "nodeName": "seed", "type": "Any"}, {"lineNumber": 680, "col_offset": 57, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "_rejection", "type": "Rejection"}, {"lineNumber": 682, "col_offset": 38, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 683, "col_offset": 48, "nodeName": "current_population_threshold", "type": "nothing"}, {"lineNumber": 686, "col_offset": 14, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 688, "col_offset": 17, "nodeName": "self", "type": "SMC"}, {"lineNumber": 691, "col_offset": 24, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 695, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 695, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 701, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 701, "col_offset": 24, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 704, "col_offset": 18, "nodeName": "diag", "type": "Any"}, {"lineNumber": 714, "col_offset": 25, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 715, "col_offset": 27, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 719, "col_offset": 25, "nodeName": "n_batches", "type": "nothing"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 720, "col_offset": 50, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 724, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 725, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 725, "col_offset": 34, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 726, "col_offset": 24, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 726, "col_offset": 34, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 730, "col_offset": 15, "nodeName": "objective", "type": "Any"}, {"lineNumber": 764, "col_offset": 29, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 765, "col_offset": 24, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 765, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 767, "col_offset": 62, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 767, "col_offset": 76, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 771, "col_offset": 28, "nodeName": "GPyRegression", "type": "Type[elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 771, "col_offset": 42, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 774, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 774, "col_offset": 16, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 775, "col_offset": 12, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 785, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 787, "col_offset": 12, "nodeName": "initial_evidence", "type": "int"}, {"lineNumber": 788, "col_offset": 12, "nodeName": "_n_precomputed", "type": "int"}, {"lineNumber": 788, "col_offset": 34, "nodeName": "initial_evidence", "type": "int"}, {"lineNumber": 791, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 793, "col_offset": 11, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 793, "col_offset": 30, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 794, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 798, "col_offset": 34, "nodeName": "LCBSC", "type": "Type[elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 798, "col_offset": 40, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 808, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 809, "col_offset": 36, "nodeName": "get", "type": "Callable"}, {"lineNumber": 809, "col_offset": 69, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 811, "col_offset": 26, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 811, "col_offset": 44, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 812, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 814, "col_offset": 40, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 815, "col_offset": 85, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 818, "col_offset": 51, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 819, "col_offset": 51, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 822, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 824, "col_offset": 12, "nodeName": "param_hat", "type": "Dict[Any, Any]"}, {"lineNumber": 824, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 827, "col_offset": 36, "nodeName": "param_hat", "type": "Dict[Any, Any]"}, {"lineNumber": 836, "col_offset": 17, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 836, "col_offset": 39, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 837, "col_offset": 48, "nodeName": "batch", "type": "Any"}, {"lineNumber": 839, "col_offset": 19, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 840, "col_offset": 41, "nodeName": "batch", "type": "Any"}, {"lineNumber": 843, "col_offset": 12, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 843, "col_offset": 40, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 849, "col_offset": 11, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 849, "col_offset": 40, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 849, "col_offset": 66, "nodeName": "_n_precomputed", "type": "int"}, {"lineNumber": 852, "col_offset": 25, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 852, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 853, "col_offset": 40, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 854, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 854, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 855, "col_offset": 20, "nodeName": "acquisition_method", "type": "Union[Any, elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 855, "col_offset": 52, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 858, "col_offset": 20, "nodeName": "new_param", "type": "Any"}, {"lineNumber": 859, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 859, "col_offset": 30, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 866, "col_offset": 15, "nodeName": "batches", "type": "Any"}, {"lineNumber": 866, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 872, "col_offset": 18, "nodeName": "target_model", "type": "Any"}, {"lineNumber": 872, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 873, "col_offset": 12, "nodeName": "_n_submitted_evidence", "type": "Any"}, {"lineNumber": 873, "col_offset": 41, "nodeName": "_n_precomputed", "type": "Any"}, {"lineNumber": 874, "col_offset": 19, "nodeName": "prevent", "type": "Any"}, {"lineNumber": 877, "col_offset": 18, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 877, "col_offset": 49, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 878, "col_offset": 22, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 878, "col_offset": 50, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 879, "col_offset": 15, "nodeName": "current", "type": "Any"}, {"lineNumber": 879, "col_offset": 26, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 879, "col_offset": 54, "nodeName": "current", "type": "Any"}, {"lineNumber": 879, "col_offset": 65, "nodeName": "next_update", "type": "Any"}, {"lineNumber": 884, "col_offset": 23, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 885, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 885, "col_offset": 41, "nodeName": "fill", "type": "str"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 894, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 895, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 895, "col_offset": 15, "nodeName": "axes", "type": "Any"}, {"lineNumber": 896, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 896, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 896, "col_offset": 19, "nodeName": "subplots", "type": "Any"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 901, "col_offset": 27, "nodeName": "gp", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 902, "col_offset": 27, "nodeName": "gp", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 903, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 905, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 906, "col_offset": 45, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 909, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 910, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 914, "col_offset": 20, "nodeName": "gp", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 916, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 918, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 923, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 925, "col_offset": 25, "nodeName": "evaluate", "type": "Union[Any, Callable[[Any, Any], Any]]"}, {"lineNumber": 925, "col_offset": 58, "nodeName": "x", "type": "Any"}, {"lineNumber": 927, "col_offset": 8, "nodeName": "visin", "type": "module"}, {"lineNumber": 928, "col_offset": 27, "nodeName": "gp", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 929, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 932, "col_offset": 45, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 934, "col_offset": 11, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 935, "col_offset": 12, "nodeName": "close", "type": "Any"}, {"lineNumber": 942, "col_offset": 18, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 943, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 944, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 945, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 946, "col_offset": 17, "nodeName": "max", "type": "Callable"}, {"lineNumber": 946, "col_offset": 43, "nodeName": "min", "type": "Callable"}, {"lineNumber": 946, "col_offset": 47, "nodeName": "n_plots", "type": "Union[int, Any]"}, {"lineNumber": 946, "col_offset": 56, "nodeName": "ncols", "type": "Union[Any, int]"}, {"lineNumber": 947, "col_offset": 23, "nodeName": "vis", "type": "module"}, {"lineNumber": 947, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 948, "col_offset": 15, "nodeName": "axes", "type": "Any"}, {"lineNumber": 951, "col_offset": 12, "nodeName": "scatter", "type": "Any"}, {"lineNumber": 952, "col_offset": 12, "nodeName": "set_xlabel", "type": "Any"}, {"lineNumber": 980, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 983, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 985, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 986, "col_offset": 15, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1001, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 1002, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1004, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1004, "col_offset": 59, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1041, "col_offset": 11, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 1042, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 1042, "col_offset": 21, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 1046, "col_offset": 20, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1047, "col_offset": 27, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 1051, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1055, "col_offset": 19, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 1056, "col_offset": 23, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1058, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1060, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 1060, "col_offset": 45, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1066, "col_offset": 19, "nodeName": "get_sub_seed", "type": "Callable[..., Any]"}, {"lineNumber": 1066, "col_offset": 32, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 1066, "col_offset": 46, "nodeName": "ii", "type": "int"}, {"lineNumber": 1067, "col_offset": 18, "nodeName": "isinf", "type": "Any"}, {"lineNumber": 1068, "col_offset": 16, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1072, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1079, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1081, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 1083, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1084, "col_offset": 22, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 1084, "col_offset": 32, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 1085, "col_offset": 34, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1086, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 1086, "col_offset": 18, "nodeName": "node", "type": "Any"}, {"lineNumber": 1088, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1091, "col_offset": 34, "nodeName": "chains", "type": "numpy.ndarray"}, {"lineNumber": 1092, "col_offset": 43, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 1093, "col_offset": 34, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1096, "col_offset": 32, "nodeName": "seed", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 86, "col_offset": 69, "nodeName": "model", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "elfi", "type": "module"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "elfi", "type": "module"}, {"lineNumber": 100, "col_offset": 94, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 101, "col_offset": 60, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "client", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 302, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 306, "col_offset": 43, "nodeName": "batches", "type": "Any"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "batches", "type": "Any"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 313, "col_offset": 41, "nodeName": "batches", "type": "Any"}, {"lineNumber": 319, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 320, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 323, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 351, "col_offset": 24, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 360, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 376, "col_offset": 27, "nodeName": "target", "type": "Any"}, {"lineNumber": 391, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "checked_names", "type": "List[Any]"}, {"lineNumber": 427, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 427, "col_offset": 32, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 429, "col_offset": 28, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 465, "col_offset": 24, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 465, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 466, "col_offset": 14, "nodeName": "Rejection", "type": "Type[Rejection]"}, {"lineNumber": 466, "col_offset": 25, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 492, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 495, "col_offset": 34, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 495, "col_offset": 44, "nodeName": "quantile", "type": "Union[float, Any]"}, {"lineNumber": 499, "col_offset": 29, "nodeName": "n_sim", "type": "Union[int, Any]"}, {"lineNumber": 499, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 510, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 529, "col_offset": 20, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 530, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 532, "col_offset": 41, "nodeName": "_extract_result_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 543, "col_offset": 22, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 545, "col_offset": 27, "nodeName": "node", "type": "Any"}, {"lineNumber": 546, "col_offset": 19, "nodeName": "is_array", "type": "Callable[[Any], bool]"}, {"lineNumber": 546, "col_offset": 28, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 547, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 548, "col_offset": 32, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 552, "col_offset": 71, "nodeName": "shape", "type": "Any"}, {"lineNumber": 555, "col_offset": 23, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 557, "col_offset": 16, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 557, "col_offset": 62, "nodeName": "inf", "type": "Any"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "samples", "type": "Dict[Any, Any]"}, {"lineNumber": 559, "col_offset": 32, "nodeName": "empty", "type": "Any"}, {"lineNumber": 559, "col_offset": 41, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 568, "col_offset": 52, "nodeName": "node", "type": "Any"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 573, "col_offset": 21, "nodeName": "sort_mask", "type": "Any"}, {"lineNumber": 583, "col_offset": 34, "nodeName": "o", "type": "Dict[str, int]"}, {"lineNumber": 583, "col_offset": 49, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 587, "col_offset": 15, "nodeName": "objective", "type": "Dict[str, int]"}, {"lineNumber": 590, "col_offset": 24, "nodeName": "objective", "type": "Union[Dict[str, int], Dict[Any, Any]]"}, {"lineNumber": 593, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 593, "col_offset": 69, "nodeName": "t", "type": "Any"}, {"lineNumber": 598, "col_offset": 22, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 598, "col_offset": 44, "nodeName": "n_acceptable", "type": "Any"}, {"lineNumber": 598, "col_offset": 59, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 599, "col_offset": 21, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 599, "col_offset": 33, "nodeName": "accept_rate_t", "type": "Any"}, {"lineNumber": 602, "col_offset": 58, "nodeName": "objective", "type": "Union[Dict[str, int], Dict[Any, Any]]"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 608, "col_offset": 28, "nodeName": "HTML", "type": "Any"}, {"lineNumber": 611, "col_offset": 26, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 611, "col_offset": 55, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 612, "col_offset": 28, "nodeName": "objective", "type": "Dict[str, int]"}, {"lineNumber": 622, "col_offset": 19, "nodeName": "augmenter", "type": "module"}, {"lineNumber": 624, "col_offset": 44, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 624, "col_offset": 69, "nodeName": "pdf_name", "type": "Any"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 627, "col_offset": 14, "nodeName": "SMC", "type": "Type[SMC]"}, {"lineNumber": 627, "col_offset": 19, "nodeName": "self", "type": "SMC"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 636, "col_offset": 45, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 637, "col_offset": 45, "nodeName": "max_parallel_batches", "type": "Any"}, {"lineNumber": 639, "col_offset": 46, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 644, "col_offset": 33, "nodeName": "pop", "type": "Any"}, {"lineNumber": 645, "col_offset": 27, "nodeName": "_extract_result_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "batches", "type": "elfi.client.BatchHandler"}, {"lineNumber": 652, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 652, "col_offset": 37, "nodeName": "objective", "type": "Dict[Any, Any]"}, {"lineNumber": 653, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 654, "col_offset": 16, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 655, "col_offset": 16, "nodeName": "_new_round", "type": "Callable[[], Any]"}, {"lineNumber": 662, "col_offset": 11, "nodeName": "self", "type": "SMC"}, {"lineNumber": 666, "col_offset": 37, "nodeName": "self", "type": "SMC"}, {"lineNumber": 666, "col_offset": 59, "nodeName": "self", "type": "SMC"}, {"lineNumber": 668, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 668, "col_offset": 38, "nodeName": "p", "type": "Any"}, {"lineNumber": 668, "col_offset": 43, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 668, "col_offset": 53, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 673, "col_offset": 49, "nodeName": "dashes", "type": "str"}, {"lineNumber": 673, "col_offset": 78, "nodeName": "dashes", "type": "str"}, {"lineNumber": 676, "col_offset": 53, "nodeName": "self", "type": "SMC"}, {"lineNumber": 677, "col_offset": 49, "nodeName": "self", "type": "SMC"}, {"lineNumber": 678, "col_offset": 47, "nodeName": "self", "type": "SMC"}, {"lineNumber": 679, "col_offset": 41, "nodeName": "self", "type": "SMC"}, {"lineNumber": 680, "col_offset": 57, "nodeName": "self", "type": "SMC"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "self", "type": "SMC"}, {"lineNumber": 682, "col_offset": 38, "nodeName": "self", "type": "SMC"}, {"lineNumber": 683, "col_offset": 48, "nodeName": "self", "type": "SMC"}, {"lineNumber": 686, "col_offset": 14, "nodeName": "self", "type": "SMC"}, {"lineNumber": 691, "col_offset": 24, "nodeName": "self", "type": "SMC"}, {"lineNumber": 701, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 701, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 704, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 704, "col_offset": 26, "nodeName": "weighted_var", "type": "Callable[..., Any]"}, {"lineNumber": 704, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 704, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 714, "col_offset": 25, "nodeName": "self", "type": "SMC"}, {"lineNumber": 715, "col_offset": 27, "nodeName": "self", "type": "SMC"}, {"lineNumber": 719, "col_offset": 25, "nodeName": "pop", "type": "nothing"}, {"lineNumber": 719, "col_offset": 43, "nodeName": "pop", "type": "nothing"}, {"lineNumber": 719, "col_offset": 50, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 720, "col_offset": 50, "nodeName": "_rejection", "type": "Any"}, {"lineNumber": 730, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 730, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 766, "col_offset": 14, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 766, "col_offset": 36, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 771, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 771, "col_offset": 77, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 774, "col_offset": 16, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 775, "col_offset": 35, "nodeName": "bounds", "type": "List[Any]"}, {"lineNumber": 775, "col_offset": 62, "nodeName": "k", "type": "Any"}, {"lineNumber": 775, "col_offset": 67, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 778, "col_offset": 40, "nodeName": "input_dim", "type": "Union[Any, int]"}, {"lineNumber": 783, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 783, "col_offset": 28, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 783, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 785, "col_offset": 21, "nodeName": "_to_array", "type": "Callable[..., Any]"}, {"lineNumber": 785, "col_offset": 36, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 785, "col_offset": 54, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 786, "col_offset": 12, "nodeName": "update", "type": "Union[Any, Callable[..., None]]"}, {"lineNumber": 786, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 787, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 787, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 788, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 791, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 791, "col_offset": 77, "nodeName": "n_initial_required", "type": "Any"}, {"lineNumber": 793, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 799, "col_offset": 50, "nodeName": "acq_noise_cov", "type": "Any"}, {"lineNumber": 799, "col_offset": 70, "nodeName": "seed", "type": "Any"}, {"lineNumber": 809, "col_offset": 36, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 811, "col_offset": 26, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 815, "col_offset": 44, "nodeName": "n_evidence", "type": "Any"}, {"lineNumber": 815, "col_offset": 62, "nodeName": "_n_precomputed", "type": "int"}, {"lineNumber": 815, "col_offset": 85, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 818, "col_offset": 51, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 819, "col_offset": 51, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 822, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 824, "col_offset": 22, "nodeName": "p", "type": "Any"}, {"lineNumber": 824, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 829, "col_offset": 36, "nodeName": "_extract_result_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 834, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 837, "col_offset": 54, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 840, "col_offset": 47, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 843, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 843, "col_offset": 40, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 849, "col_offset": 40, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 849, "col_offset": 66, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 852, "col_offset": 45, "nodeName": "values", "type": "Any"}, {"lineNumber": 854, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 854, "col_offset": 37, "nodeName": "n_initial_evidence", "type": "Any"}, {"lineNumber": 854, "col_offset": 63, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 855, "col_offset": 20, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 858, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 858, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 858, "col_offset": 47, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 858, "col_offset": 57, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 859, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 866, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 872, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 873, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 873, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 874, "col_offset": 31, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 874, "col_offset": 37, "nodeName": "BayesianOptimization", "type": "Type[BayesianOptimization]"}, {"lineNumber": 874, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 877, "col_offset": 18, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 878, "col_offset": 22, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 879, "col_offset": 26, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 885, "col_offset": 47, "nodeName": "item", "type": "Any"}, {"lineNumber": 885, "col_offset": 68, "nodeName": "params", "type": "Any"}, {"lineNumber": 895, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 896, "col_offset": 19, "nodeName": "plt", "type": "Any"}, {"lineNumber": 905, "col_offset": 36, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 906, "col_offset": 32, "nodeName": "axes", "type": "Any"}, {"lineNumber": 910, "col_offset": 20, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 911, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 911, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 912, "col_offset": 16, "nodeName": "scatter", "type": "Any"}, {"lineNumber": 918, "col_offset": 12, "nodeName": "displays", "type": "List[Any]"}, {"lineNumber": 918, "col_offset": 31, "nodeName": "HTML", "type": "Any"}, {"lineNumber": 925, "col_offset": 25, "nodeName": "acquisition_method", "type": "Union[Any, elfi.methods.bo.acquisition.LCBSC]"}, {"lineNumber": 925, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 925, "col_offset": 65, "nodeName": "X", "type": "Any"}, {"lineNumber": 932, "col_offset": 32, "nodeName": "axes", "type": "Any"}, {"lineNumber": 935, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 946, "col_offset": 24, "nodeName": "n_plots", "type": "Union[int, Any]"}, {"lineNumber": 946, "col_offset": 35, "nodeName": "ncols", "type": "Union[Any, int]"}, {"lineNumber": 951, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 951, "col_offset": 61, "nodeName": "Y", "type": "Any"}, {"lineNumber": 952, "col_offset": 32, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 954, "col_offset": 8, "nodeName": "axes", "type": "Any"}, {"lineNumber": 1001, "col_offset": 11, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1004, "col_offset": 76, "nodeName": "ModelPrior", "type": "Type[elfi.methods.utils.ModelPrior]"}, {"lineNumber": 1004, "col_offset": 87, "nodeName": "model", "type": "Any"}, {"lineNumber": 1041, "col_offset": 11, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1042, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1051, "col_offset": 46, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 1051, "col_offset": 56, "nodeName": "input_dim", "type": "Union[Any, int]"}, {"lineNumber": 1052, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1055, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1055, "col_offset": 30, "nodeName": "Y", "type": "Any"}, {"lineNumber": 1056, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 1056, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 1060, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 1067, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1067, "col_offset": 27, "nodeName": "logpdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 1069, "col_offset": 19, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1072, "col_offset": 12, "nodeName": "tasks_ids", "type": "List[Any]"}, {"lineNumber": 1072, "col_offset": 29, "nodeName": "apply", "type": "Any"}, {"lineNumber": 1072, "col_offset": 47, "nodeName": "nuts", "type": "Callable[..., Any]"}, {"lineNumber": 1072, "col_offset": 58, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 1072, "col_offset": 91, "nodeName": "logpdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 1073, "col_offset": 47, "nodeName": "gradient_logpdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 1079, "col_offset": 12, "nodeName": "chains", "type": "List[Any]"}, {"lineNumber": 1079, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 1079, "col_offset": 42, "nodeName": "id", "type": "Any"}, {"lineNumber": 1086, "col_offset": 24, "nodeName": "eff_sample_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 1086, "col_offset": 64, "nodeName": "gelman_rubin", "type": "Callable[[Any], Any]"}, {"lineNumber": 1092, "col_offset": 43, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1094, "col_offset": 37, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1094, "col_offset": 43, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 1095, "col_offset": 33, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 1096, "col_offset": 32, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 306, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 321, "col_offset": 53, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 351, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 395, "col_offset": 21, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 395, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 395, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 396, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 430, "col_offset": 23, "nodeName": "state_key", "type": "str"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 430, "col_offset": 47, "nodeName": "state_key", "type": "str"}, {"lineNumber": 499, "col_offset": 35, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 529, "col_offset": 20, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 530, "col_offset": 28, "nodeName": "objective", "type": "Dict[str, int]"}, {"lineNumber": 532, "col_offset": 41, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 543, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 543, "col_offset": 76, "nodeName": "node", "type": "Any"}, {"lineNumber": 547, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 547, "col_offset": 48, "nodeName": "node", "type": "Any"}, {"lineNumber": 547, "col_offset": 54, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 548, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 548, "col_offset": 21, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 548, "col_offset": 32, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 549, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 552, "col_offset": 51, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 552, "col_offset": 71, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 557, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 557, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 557, "col_offset": 40, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 557, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 559, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 559, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 559, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 568, "col_offset": 14, "nodeName": "objective", "type": "Dict[str, int]"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 571, "col_offset": 31, "nodeName": "samples", "type": "Any"}, {"lineNumber": 587, "col_offset": 15, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 590, "col_offset": 24, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 602, "col_offset": 58, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 608, "col_offset": 28, "nodeName": "display", "type": "Any"}, {"lineNumber": 609, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 612, "col_offset": 28, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 624, "col_offset": 24, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 624, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 637, "col_offset": 45, "nodeName": "self", "type": "SMC"}, {"lineNumber": 644, "col_offset": 58, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 644, "col_offset": 86, "nodeName": "pop", "type": "Any"}, {"lineNumber": 645, "col_offset": 27, "nodeName": "self", "type": "SMC"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "self", "type": "SMC"}, {"lineNumber": 652, "col_offset": 15, "nodeName": "self", "type": "SMC"}, {"lineNumber": 652, "col_offset": 37, "nodeName": "self", "type": "SMC"}, {"lineNumber": 653, "col_offset": 16, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 653, "col_offset": 41, "nodeName": "_extract_population", "type": "Callable[[], Any]"}, {"lineNumber": 654, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 655, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 668, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 668, "col_offset": 53, "nodeName": "self", "type": "SMC"}, {"lineNumber": 673, "col_offset": 57, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 695, "col_offset": 40, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 695, "col_offset": 59, "nodeName": "p", "type": "Any"}, {"lineNumber": 695, "col_offset": 64, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 719, "col_offset": 50, "nodeName": "self", "type": "SMC"}, {"lineNumber": 720, "col_offset": 50, "nodeName": "self", "type": "SMC"}, {"lineNumber": 725, "col_offset": 41, "nodeName": "samples", "type": "Any"}, {"lineNumber": 725, "col_offset": 61, "nodeName": "p", "type": "Any"}, {"lineNumber": 725, "col_offset": 66, "nodeName": "parameter_names", "type": "Any"}, {"lineNumber": 730, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 771, "col_offset": 42, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 775, "col_offset": 35, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 775, "col_offset": 55, "nodeName": "k", "type": "Any"}, {"lineNumber": 775, "col_offset": 67, "nodeName": "model", "type": "Any"}, {"lineNumber": 778, "col_offset": 40, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 785, "col_offset": 21, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 785, "col_offset": 54, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 786, "col_offset": 12, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 786, "col_offset": 40, "nodeName": "initial_evidence", "type": "Any"}, {"lineNumber": 798, "col_offset": 60, "nodeName": "ModelPrior", "type": "Type[elfi.methods.utils.ModelPrior]"}, {"lineNumber": 798, "col_offset": 71, "nodeName": "model", "type": "Any"}, {"lineNumber": 799, "col_offset": 70, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 809, "col_offset": 36, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 815, "col_offset": 44, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 815, "col_offset": 62, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 829, "col_offset": 36, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 834, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 837, "col_offset": 54, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 840, "col_offset": 47, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 854, "col_offset": 37, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 854, "col_offset": 63, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 858, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 858, "col_offset": 57, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 885, "col_offset": 75, "nodeName": "i", "type": "int"}, {"lineNumber": 905, "col_offset": 36, "nodeName": "gp", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 906, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 910, "col_offset": 20, "nodeName": "gp", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 911, "col_offset": 19, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 912, "col_offset": 35, "nodeName": "point", "type": "Any"}, {"lineNumber": 918, "col_offset": 31, "nodeName": "display", "type": "Any"}, {"lineNumber": 919, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 920, "col_offset": 56, "nodeName": "point", "type": "Any"}, {"lineNumber": 925, "col_offset": 25, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 925, "col_offset": 65, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 932, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 951, "col_offset": 12, "nodeName": "axes", "type": "Any"}, {"lineNumber": 951, "col_offset": 29, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 951, "col_offset": 61, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 952, "col_offset": 12, "nodeName": "axes", "type": "Any"}, {"lineNumber": 952, "col_offset": 32, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 952, "col_offset": 53, "nodeName": "ii", "type": "int"}, {"lineNumber": 1004, "col_offset": 87, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1051, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1051, "col_offset": 26, "nodeName": "initials", "type": "Any"}, {"lineNumber": 1051, "col_offset": 56, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 1055, "col_offset": 30, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 1056, "col_offset": 34, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 1056, "col_offset": 58, "nodeName": "inds", "type": "Any"}, {"lineNumber": 1067, "col_offset": 27, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1067, "col_offset": 44, "nodeName": "initials", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 1069, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1069, "col_offset": 37, "nodeName": "inds", "type": "Any"}, {"lineNumber": 1070, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1072, "col_offset": 29, "nodeName": "client", "type": "Any"}, {"lineNumber": 1072, "col_offset": 47, "nodeName": "mcmc", "type": "module"}, {"lineNumber": 1072, "col_offset": 69, "nodeName": "initials", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 1072, "col_offset": 91, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1073, "col_offset": 47, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1073, "col_offset": 82, "nodeName": "warmup", "type": "Any"}, {"lineNumber": 1073, "col_offset": 95, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1073, "col_offset": 103, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1079, "col_offset": 26, "nodeName": "client", "type": "Any"}, {"lineNumber": 1086, "col_offset": 24, "nodeName": "mcmc", "type": "module"}, {"lineNumber": 1086, "col_offset": 45, "nodeName": "chains", "type": "numpy.ndarray"}, {"lineNumber": 1086, "col_offset": 64, "nodeName": "mcmc", "type": "module"}, {"lineNumber": 1086, "col_offset": 82, "nodeName": "chains", "type": "numpy.ndarray"}, {"lineNumber": 1094, "col_offset": 43, "nodeName": "posterior", "type": "elfi.methods.posteriors.BolfiPosterior"}, {"lineNumber": 1095, "col_offset": 33, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "objective", "type": "Any"}, {"lineNumber": 321, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 41, "nodeName": "batch_", "type": "Any"}, {"lineNumber": 351, "col_offset": 60, "nodeName": "output", "type": "Any"}, {"lineNumber": 351, "col_offset": 70, "nodeName": "outputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 396, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 396, "col_offset": 96, "nodeName": "name", "type": "Any"}, {"lineNumber": 397, "col_offset": 21, "nodeName": "has_node", "type": "Any"}, {"lineNumber": 397, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 398, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 530, "col_offset": 28, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 547, "col_offset": 33, "nodeName": "e_noarr", "type": "str"}, {"lineNumber": 547, "col_offset": 54, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 549, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 549, "col_offset": 46, "nodeName": "node", "type": "Any"}, {"lineNumber": 549, "col_offset": 65, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 552, "col_offset": 21, "nodeName": "objective", "type": "Dict[str, int]"}, {"lineNumber": 552, "col_offset": 51, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 557, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 557, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 568, "col_offset": 14, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 571, "col_offset": 39, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 582, "col_offset": 25, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 582, "col_offset": 38, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 593, "col_offset": 30, "nodeName": "s", "type": "Dict[Any, Any]"}, {"lineNumber": 593, "col_offset": 43, "nodeName": "discrepancy_name", "type": "Any"}, {"lineNumber": 609, "col_offset": 56, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 638, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 638, "col_offset": 45, "nodeName": "thresholds", "type": "Any"}, {"lineNumber": 644, "col_offset": 58, "nodeName": "_populations", "type": "List[Any]"}, {"lineNumber": 653, "col_offset": 16, "nodeName": "self", "type": "SMC"}, {"lineNumber": 653, "col_offset": 41, "nodeName": "self", "type": "SMC"}, {"lineNumber": 673, "col_offset": 57, "nodeName": "self", "type": "SMC"}, {"lineNumber": 695, "col_offset": 40, "nodeName": "pop", "type": "Any"}, {"lineNumber": 695, "col_offset": 52, "nodeName": "p", "type": "Any"}, {"lineNumber": 695, "col_offset": 64, "nodeName": "self", "type": "SMC"}, {"lineNumber": 725, "col_offset": 41, "nodeName": "pop_", "type": "Any"}, {"lineNumber": 725, "col_offset": 54, "nodeName": "p", "type": "Any"}, {"lineNumber": 725, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 786, "col_offset": 57, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 798, "col_offset": 71, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 852, "col_offset": 45, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 885, "col_offset": 47, "nodeName": "distances", "type": "Any"}, {"lineNumber": 911, "col_offset": 19, "nodeName": "gp", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 912, "col_offset": 16, "nodeName": "axes", "type": "Any"}, {"lineNumber": 920, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 920, "col_offset": 28, "nodeName": "Y", "type": "Any"}, {"lineNumber": 925, "col_offset": 65, "nodeName": "gp", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 951, "col_offset": 17, "nodeName": "ii", "type": "int"}, {"lineNumber": 951, "col_offset": 29, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 951, "col_offset": 56, "nodeName": "ii", "type": "int"}, {"lineNumber": 951, "col_offset": 61, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 952, "col_offset": 17, "nodeName": "ii", "type": "int"}, {"lineNumber": 1051, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1051, "col_offset": 56, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1055, "col_offset": 30, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 1056, "col_offset": 34, "nodeName": "target_model", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 1067, "col_offset": 53, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1072, "col_offset": 29, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1072, "col_offset": 78, "nodeName": "ii_initial", "type": "int"}, {"lineNumber": 1079, "col_offset": 26, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 48, "nodeName": "output", "type": "Any"}, {"lineNumber": 397, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 549, "col_offset": 33, "nodeName": "e_len", "type": "str"}, {"lineNumber": 549, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 549, "col_offset": 56, "nodeName": "nbatch", "type": "Any"}, {"lineNumber": 549, "col_offset": 65, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 552, "col_offset": 21, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 571, "col_offset": 39, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 582, "col_offset": 38, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 582, "col_offset": 61, "nodeName": "o", "type": "Dict[str, int]"}, {"lineNumber": 593, "col_offset": 43, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 609, "col_offset": 56, "nodeName": "self", "type": "Rejection"}, {"lineNumber": 644, "col_offset": 58, "nodeName": "self", "type": "SMC"}, {"lineNumber": 786, "col_offset": 57, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 852, "col_offset": 45, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 885, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 912, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 920, "col_offset": 28, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 920, "col_offset": 39, "nodeName": "Y", "type": "Any"}, {"lineNumber": 951, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 951, "col_offset": 61, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 1055, "col_offset": 30, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1056, "col_offset": 34, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 1086, "col_offset": 58, "nodeName": "ii", "type": "int"}, {"lineNumber": 1086, "col_offset": 95, "nodeName": "ii", "type": "int"}, {"lineNumber": 397, "col_offset": 21, "nodeName": "self", "type": "BOLFI"}, {"lineNumber": 920, "col_offset": 28, "nodeName": "gp", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 920, "col_offset": 39, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 920, "col_offset": 39, "nodeName": "gp", "type": "Union[Any, elfi.methods.bo.gpy_regression.GPyRegression]"}]