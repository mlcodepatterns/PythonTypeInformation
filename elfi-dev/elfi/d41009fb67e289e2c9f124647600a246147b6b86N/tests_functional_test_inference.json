[{"lineNumber": 20, "col_offset": 0, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "test_rejection_with_quantile", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "test_rejection_with_threshold", "type": "Callable[[], Any]"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "test_pool", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 7, "nodeName": "skipif", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "n_obs", "type": "int"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "t1", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "t2", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "p", "type": "float"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "rej", "type": "elfi.methods.methods.Rejection"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "t", "type": "float"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "rej", "type": "elfi.methods.methods.Rejection"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "log_d", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "bo", "type": "elfi.methods.methods.BayesianOptimization"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "post", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "res", "type": "Dict[Any, Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "pool", "type": "elfi.store.OutputPool"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "rej", "type": "elfi.methods.methods.Rejection"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "p", "type": "float"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "ts", "type": "float"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "td", "type": "float"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "ts", "type": "float"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "td", "type": "float"}, {"lineNumber": 14, "col_offset": 7, "nodeName": "mark", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "getoption", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "get_model", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "m", "type": "Any"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "res", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "N", "type": "Any"}, {"lineNumber": 38, "col_offset": 53, "nodeName": "error_bound", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 39, "col_offset": 74, "nodeName": "error_bound", "type": "Any"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "error_bound", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 41, "col_offset": 74, "nodeName": "error_bound", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 46, "col_offset": 7, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "Rejection", "type": "Type[elfi.methods.methods.Rejection]"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "sample", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "N", "type": "int"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "res", "type": "Any"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "N", "type": "int"}, {"lineNumber": 54, "col_offset": 50, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "N", "type": "int"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "p", "type": "float"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 65, "col_offset": 7, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 10, "nodeName": "Rejection", "type": "Type[elfi.methods.methods.Rejection]"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "sample", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "N", "type": "int"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "res", "type": "Any"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "N", "type": "int"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "t", "type": "float"}, {"lineNumber": 75, "col_offset": 50, "nodeName": "N", "type": "int"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "setLevel", "type": "Callable[[Union[int, str, unicode]], None]"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "WARNING", "type": "int"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "NodeReference", "type": "Any"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "BayesianOptimization", "type": "Type[elfi.methods.methods.BayesianOptimization]"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "log_d", "type": "Any"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "res", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "res", "type": "Any"}, {"lineNumber": 96, "col_offset": 50, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "basicConfig", "type": "Callable"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "setLevel", "type": "Callable[[Union[int, str, unicode]], None]"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "WARNING", "type": "int"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "setup_ma2_with_informative_data", "type": "Callable[[], Any]"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "BayesianOptimization", "type": "Type[elfi.methods.methods.BayesianOptimization]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "check_inference_with_informative_data", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 42, "nodeName": "res", "type": "Dict[Any, Any]"}, {"lineNumber": 112, "col_offset": 50, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "OutputPool", "type": "Type[elfi.store.OutputPool]"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "Rejection", "type": "Type[elfi.methods.methods.Rejection]"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "sample", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "ts", "type": "float"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "td", "type": "float"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 131, "col_offset": 10, "nodeName": "sample", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "ts", "type": "float"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "td", "type": "float"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "res", "type": "Any"}, {"lineNumber": 14, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "ma2", "type": "module"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "n_obs", "type": "int"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "t1", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "mean", "type": "Any"}, {"lineNumber": 39, "col_offset": 50, "nodeName": "t1", "type": "Any"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "true_params", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "mean", "type": "Any"}, {"lineNumber": 41, "col_offset": 50, "nodeName": "t2", "type": "Any"}, {"lineNumber": 41, "col_offset": 55, "nodeName": "true_params", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "elfi", "type": "module"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "rej", "type": "elfi.methods.methods.Rejection"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "p", "type": "float"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 69, "col_offset": 10, "nodeName": "elfi", "type": "module"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "rej", "type": "elfi.methods.methods.Rejection"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "t", "type": "float"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "logging", "type": "module"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "m", "type": "Any"}, {"lineNumber": 86, "col_offset": 63, "nodeName": "m", "type": "Any"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "elfi", "type": "module"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "bo", "type": "elfi.methods.methods.BayesianOptimization"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "DEBUG", "type": "int"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "logging", "type": "module"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "elfi", "type": "module"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "m", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "bo", "type": "elfi.methods.methods.BayesianOptimization"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "elfi", "type": "module"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "elfi", "type": "module"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "sleep_model", "type": "Any"}, {"lineNumber": 118, "col_offset": 62, "nodeName": "pool", "type": "elfi.store.OutputPool"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "time", "type": "module"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "rej", "type": "elfi.methods.methods.Rejection"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "p", "type": "float"}, {"lineNumber": 123, "col_offset": 9, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "time", "type": "module"}, {"lineNumber": 131, "col_offset": 10, "nodeName": "rej", "type": "elfi.methods.methods.Rejection"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "p", "type": "float"}, {"lineNumber": 132, "col_offset": 9, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 27, "col_offset": 47, "nodeName": "values", "type": "Callable"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "unique", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "N", "type": "int"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "p", "type": "float"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "unique", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "logging", "type": "module"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 123, "col_offset": 9, "nodeName": "time", "type": "module"}, {"lineNumber": 132, "col_offset": 9, "nodeName": "time", "type": "module"}, {"lineNumber": 27, "col_offset": 47, "nodeName": "true_params", "type": "collections.OrderedDict[str, float]"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "t1", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "true_params", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "t2", "type": "Any"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "true_params", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "log", "type": "Any"}, {"lineNumber": 93, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "sleep_model", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "m", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 58, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "ML", "type": "Any"}, {"lineNumber": 111, "col_offset": 68, "nodeName": "ML", "type": "Any"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "post", "type": "Any"}, {"lineNumber": 111, "col_offset": 68, "nodeName": "post", "type": "Any"}]