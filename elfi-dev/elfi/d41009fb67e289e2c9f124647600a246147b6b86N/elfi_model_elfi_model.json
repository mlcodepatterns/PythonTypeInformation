[{"lineNumber": 21, "col_offset": 0, "nodeName": "get_current_model", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "reset_current_model", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "random_name", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "_current_model", "type": "None"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "GraphicalModel", "type": "Type[elfi.graphical_model.GraphicalModel]"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 319, "col_offset": 22, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 345, "col_offset": 18, "nodeName": "StochasticMixin", "type": "Type[StochasticMixin]"}, {"lineNumber": 345, "col_offset": 35, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "ScipyLikeRV", "type": "Type[ScipyLikeRV]"}, {"lineNumber": 407, "col_offset": 16, "nodeName": "StochasticMixin", "type": "Type[StochasticMixin]"}, {"lineNumber": 407, "col_offset": 33, "nodeName": "ObservableMixin", "type": "Type[ObservableMixin]"}, {"lineNumber": 407, "col_offset": 50, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 413, "col_offset": 14, "nodeName": "ObservableMixin", "type": "Type[ObservableMixin]"}, {"lineNumber": 413, "col_offset": 31, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 421, "col_offset": 18, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "_current_model", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "_current_model", "type": "Union[ElfiModel, Any]"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "model", "type": "Union[ElfiModel, Any]"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "_current_model", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_current_model", "type": "ElfiModel"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "model", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "model", "type": "ElfiModel"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "batch_size", "type": "Union[Any, int]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "observed", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_pool", "type": "None"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "_pool", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "_pool", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "pool", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "pool", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "parameters", "type": "List[nothing]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "computation_context", "type": "ComputationContext"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "context", "type": "Union[Any, ComputationContext]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "seed", "type": "bool"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "client", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "compiled_net", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "loaded_net", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "cls", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "observed", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "model_copy", "type": "ElfiModel"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "computation_context", "type": "Union[Any, ComputationContext]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "parameters", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "model_copy", "type": "ElfiModel"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "name", "type": "Optional[str]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "parent", "type": "nothing"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "parents", "type": "Tuple[()]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "instance", "type": "NodeReference"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "instance", "type": "NodeReference"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 241, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "frame", "type": "Optional[types.FrameType]"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "frame", "type": "Optional[types.FrameType]"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "obs_name", "type": "str"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "output", "type": "functools.partial[nothing]"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "output", "type": "functools.partial[nothing]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "fn", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "output_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "output_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "ElfiModel", "type": "Type[ElfiModel]"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "ElfiModel", "type": "Type[ElfiModel]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "model", "type": "Union[ElfiModel, Any]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "ElfiModel", "type": "Type[ElfiModel]"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "hex", "type": "str"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "seed", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "ComputationContext"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "ComputationContext"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "observed", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "ComputationContext"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "pool", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "self", "type": "ComputationContext"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "self", "type": "ComputationContext"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "name", "type": "None"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "parameters", "type": "None"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "computation_context", "type": "None"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "source_net", "type": "None"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "copy", "type": "Union[Any, Callable[[], Any]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "context", "type": "Union[Any, ComputationContext]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "context", "type": "Union[Any, ComputationContext]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "with_values", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "pool", "type": "elfi.store.OutputPool"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "pool", "type": "elfi.store.OutputPool"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "pool", "type": "elfi.store.OutputPool"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "get", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "compile", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "source_net", "type": "Any"}, {"lineNumber": 119, "col_offset": 55, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "load_data", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "compiled_net", "type": "Any"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "context", "type": "Union[Any, ComputationContext]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "compute", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "loaded_net", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "reference", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "__copy__", "type": "Callable"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "model_copy", "type": "ElfiModel"}, {"lineNumber": 133, "col_offset": 41, "nodeName": "copy", "type": "Union[Any, Callable[[], Any]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "model_copy", "type": "ElfiModel"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "get_reference", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "node_name", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "state", "type": "None"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "self", "type": "Constant"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "model", "type": "None"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "name", "type": "None"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 201, "col_offset": 23, "nodeName": "name", "type": "Optional[str]"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "_init_reference", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "name", "type": "Optional[str]"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "_add_parents", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "parents", "type": "Tuple[()]"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "__new__", "type": "Callable"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "cls", "type": "Type[NodeReference]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "_init_reference", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 228, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "Constant"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "Constant"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "generate", "type": "Any"}, {"lineNumber": 252, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 252, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "currentframe", "type": "Callable[[], Optional[types.FrameType]]"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "frame", "type": "Any"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "f_back", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "info", "type": "inspect.Traceback"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "rex", "type": "str"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "match", "type": "Optional[Match[str]]"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "match", "type": "Optional[Match[str]]"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 303, "col_offset": 33, "nodeName": "__name__", "type": "str"}, {"lineNumber": 303, "col_offset": 58, "nodeName": "name", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 335, "col_offset": 11, "nodeName": "observed", "type": "Any"}, {"lineNumber": 336, "col_offset": 65, "nodeName": "observed", "type": "Any"}, {"lineNumber": 340, "col_offset": 19, "nodeName": "observed_name", "type": "Callable[[Any], str]"}, {"lineNumber": 340, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "generate", "type": "Any"}, {"lineNumber": 341, "col_offset": 40, "nodeName": "obs_name", "type": "str"}, {"lineNumber": 342, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 364, "col_offset": 23, "nodeName": "state", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "size", "type": "Tuple[Any]"}, {"lineNumber": 371, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 371, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "rvs_wrapper", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "self", "type": "ScipyLikeRV"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 388, "col_offset": 22, "nodeName": "d", "type": "Any"}, {"lineNumber": 388, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 403, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 403, "col_offset": 28, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 15, "nodeName": "dependencies", "type": "Tuple[Any, ...]"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 423, "col_offset": 15, "nodeName": "dependencies", "type": "Tuple[Any, ...]"}, {"lineNumber": 425, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 430, "col_offset": 13, "nodeName": "state", "type": "Any"}, {"lineNumber": 431, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 431, "col_offset": 28, "nodeName": "discrepancy_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 33, "col_offset": 69, "nodeName": "ElfiModel", "type": "Type[ElfiModel]"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "length", "type": "int"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "seed", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "init_context", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "add_batch", "type": "Any"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "batch_index", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "batch", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 88, "col_offset": 58, "nodeName": "ComputationContext", "type": "Type[ComputationContext]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "computation_context", "type": "Union[Any, ComputationContext]"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "OutputPool", "type": "Type[elfi.store.OutputPool]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "add_batch", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "with_values", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "context", "type": "Union[Any, ComputationContext]"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "client", "type": "module"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "client", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "client", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "client", "type": "Any"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "get_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 41, "nodeName": "computation_context", "type": "Union[Any, ComputationContext]"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "get_current_model", "type": "Callable[[], Any]"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "_give_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "Constant"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "Constant"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "parent_name", "type": "str"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "parent", "type": "Constant"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "add_edge", "type": "Any"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "cls", "type": "Type[NodeReference]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "instance", "type": "NodeReference"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 252, "col_offset": 49, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 252, "col_offset": 72, "nodeName": "with_values", "type": "Any"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "inspect", "type": "module"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "f_back", "type": "Any"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "getframeinfo", "type": "Callable[..., inspect.Traceback]"}, {"lineNumber": 268, "col_offset": 40, "nodeName": "frame", "type": "Any"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "match", "type": "Callable"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "frame", "type": "Any"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "f_back", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "info", "type": "inspect.Traceback"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 277, "col_offset": 65, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "match", "type": "Callable"}, {"lineNumber": 278, "col_offset": 29, "nodeName": "rex", "type": "str"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "name", "type": "Optional[str]"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "get_node", "type": "Any"}, {"lineNumber": 300, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 300, "col_offset": 46, "nodeName": "item", "type": "Any"}, {"lineNumber": 303, "col_offset": 33, "nodeName": "__class__", "type": "Type[NodeReference]"}, {"lineNumber": 303, "col_offset": 58, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 311, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 312, "col_offset": 45, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 312, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 323, "col_offset": 47, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 323, "col_offset": 59, "nodeName": "state", "type": "Any"}, {"lineNumber": 323, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Union[Dict[Any, Any], Any]]"}, {"lineNumber": 333, "col_offset": 47, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 333, "col_offset": 59, "nodeName": "state", "type": "Any"}, {"lineNumber": 333, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "observed", "type": "Any"}, {"lineNumber": 340, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 342, "col_offset": 22, "nodeName": "obs_name", "type": "str"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "distribution", "type": "str"}, {"lineNumber": 358, "col_offset": 53, "nodeName": "size", "type": "int"}, {"lineNumber": 359, "col_offset": 43, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 359, "col_offset": 57, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 359, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 372, "col_offset": 27, "nodeName": "scipy_from_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 42, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 374, "col_offset": 23, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 375, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 378, "col_offset": 51, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 378, "col_offset": 70, "nodeName": "size", "type": "Union[Tuple[Any], Any]"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 389, "col_offset": 33, "nodeName": "d", "type": "Any"}, {"lineNumber": 390, "col_offset": 13, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 397, "col_offset": 59, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 397, "col_offset": 74, "nodeName": "name", "type": "Any"}, {"lineNumber": 402, "col_offset": 37, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 402, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 403, "col_offset": 11, "nodeName": "self", "type": "Prior"}, {"lineNumber": 403, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 404, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 409, "col_offset": 24, "nodeName": "fn", "type": "Any"}, {"lineNumber": 410, "col_offset": 41, "nodeName": "dependencies", "type": "Tuple[Any, ...]"}, {"lineNumber": 410, "col_offset": 61, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 410, "col_offset": 70, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 416, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 417, "col_offset": 24, "nodeName": "fn", "type": "Any"}, {"lineNumber": 418, "col_offset": 39, "nodeName": "dependencies", "type": "Tuple[Any, ...]"}, {"lineNumber": 418, "col_offset": 59, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 418, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 425, "col_offset": 24, "nodeName": "fn", "type": "Any"}, {"lineNumber": 426, "col_offset": 43, "nodeName": "dependencies", "type": "Tuple[Any, ...]"}, {"lineNumber": 426, "col_offset": 63, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 426, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 431, "col_offset": 52, "nodeName": "fn", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "pool", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "pool", "type": "Any"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "random_name", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "ElfiModel", "type": "Type[ElfiModel]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "source_net", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "keys", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "pool", "type": "elfi.store.OutputPool"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "elfi", "type": "module"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "ElfiModel", "type": "Type[ElfiModel]"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 133, "col_offset": 41, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "self", "type": "Constant"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "parent", "type": "nothing"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "NodeReference", "type": "Type[NodeReference]"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 209, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "Constant", "type": "Type[Constant]"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "parent", "type": "nothing"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "parent", "type": "Constant"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "self", "type": "Constant"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "frame", "type": "Optional[types.FrameType]"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "inspect", "type": "module"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "re", "type": "module"}, {"lineNumber": 271, "col_offset": 41, "nodeName": "code_context", "type": "Any"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "frame", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "getframeinfo", "type": "Callable[..., inspect.Traceback]"}, {"lineNumber": 273, "col_offset": 44, "nodeName": "frame", "type": "Any"}, {"lineNumber": 277, "col_offset": 65, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "re", "type": "module"}, {"lineNumber": 278, "col_offset": 34, "nodeName": "code_context", "type": "Any"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "name", "type": "Optional[str]"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "lower", "type": "Any"}, {"lineNumber": 287, "col_offset": 67, "nodeName": "random_name", "type": "Callable[..., Any]"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "has_node", "type": "Any"}, {"lineNumber": 288, "col_offset": 34, "nodeName": "name", "type": "str"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 300, "col_offset": 35, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 303, "col_offset": 33, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 312, "col_offset": 14, "nodeName": "Constant", "type": "Type[Constant]"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "self", "type": "Constant"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 323, "col_offset": 14, "nodeName": "StochasticMixin", "type": "Type[StochasticMixin]"}, {"lineNumber": 323, "col_offset": 31, "nodeName": "self", "type": "Prior"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 333, "col_offset": 14, "nodeName": "ObservableMixin", "type": "Type[ObservableMixin]"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "self", "type": "ObservableMixin"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "computation_context", "type": "Any"}, {"lineNumber": 336, "col_offset": 52, "nodeName": "name", "type": "Any"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 359, "col_offset": 14, "nodeName": "ScipyLikeRV", "type": "Type[ScipyLikeRV]"}, {"lineNumber": 359, "col_offset": 27, "nodeName": "self", "type": "Prior"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "size", "type": "Any"}, {"lineNumber": 365, "col_offset": 32, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 365, "col_offset": 43, "nodeName": "size", "type": "Any"}, {"lineNumber": 365, "col_offset": 49, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 375, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 376, "col_offset": 66, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 391, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 391, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 392, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 392, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 392, "col_offset": 27, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "__repr__", "type": "Callable[[], Any]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 402, "col_offset": 14, "nodeName": "Prior", "type": "Type[Prior]"}, {"lineNumber": 402, "col_offset": 21, "nodeName": "self", "type": "Prior"}, {"lineNumber": 403, "col_offset": 28, "nodeName": "self", "type": "Prior"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 404, "col_offset": 41, "nodeName": "self", "type": "Prior"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 410, "col_offset": 14, "nodeName": "Simulator", "type": "Type[Simulator]"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "self", "type": "Simulator"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 418, "col_offset": 14, "nodeName": "Summary", "type": "Type[Summary]"}, {"lineNumber": 418, "col_offset": 23, "nodeName": "self", "type": "Summary"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 426, "col_offset": 14, "nodeName": "Discrepancy", "type": "Type[Discrepancy]"}, {"lineNumber": 426, "col_offset": 27, "nodeName": "self", "type": "Discrepancy"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "uuid", "type": "module"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "ComputationContext"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "self", "type": "ElfiModel"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "with_values", "type": "Any"}, {"lineNumber": 209, "col_offset": 46, "nodeName": "self", "type": "Constant"}, {"lineNumber": 209, "col_offset": 57, "nodeName": "random_name", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 47, "nodeName": "parent_name", "type": "str"}, {"lineNumber": 210, "col_offset": 66, "nodeName": "model", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "self", "type": "Constant"}, {"lineNumber": 271, "col_offset": 41, "nodeName": "info", "type": "inspect.Traceback"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "inspect", "type": "module"}, {"lineNumber": 277, "col_offset": 65, "nodeName": "self", "type": "Constant"}, {"lineNumber": 278, "col_offset": 34, "nodeName": "info", "type": "inspect.Traceback"}, {"lineNumber": 280, "col_offset": 23, "nodeName": "groups", "type": "Callable"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "has_node", "type": "Any"}, {"lineNumber": 282, "col_offset": 38, "nodeName": "name", "type": "Optional[str]"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "self", "type": "NodeReference"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 336, "col_offset": 52, "nodeName": "self", "type": "ObservableMixin"}, {"lineNumber": 391, "col_offset": 33, "nodeName": "d", "type": "Any"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 210, "col_offset": 66, "nodeName": "self", "type": "Constant"}, {"lineNumber": 280, "col_offset": 23, "nodeName": "match", "type": "Optional[Match[str]]"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "model", "type": "Any"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "self", "type": "ObservableMixin"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 397, "col_offset": 21, "nodeName": "ScipyLikeRV", "type": "Type[ScipyLikeRV]"}, {"lineNumber": 397, "col_offset": 34, "nodeName": "self", "type": "ScipyLikeRV"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "self", "type": "Prior"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "self", "type": "Constant"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "np", "type": "module"}]