[{"lineNumber": 22, "col_offset": 0, "nodeName": "pytest_addoption", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "client", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "with_all_clients", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "use_logging", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "skip_travis", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "simple_model", "type": "Callable[[], Any]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "ma2", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "acq_maxvar", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "acq_randmaxvar", "type": "Callable[[], Any]"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "acq_expintvar", "type": "Callable[[], Any]"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "_get_dependencies_acq_fn", "type": "Callable[[], Any]"}, {"lineNumber": 181, "col_offset": 0, "nodeName": "sleeper", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "no_op", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 0, "nodeName": "sleep_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "rowsummer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 213, "col_offset": 0, "nodeName": "multivariate_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 0, "nodeName": "distribution_test", "type": "Callable[[], Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "set_as_default", "type": "Callable[[], None]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "client_module", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "client_name", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "use_client", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "pre", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "method_acq", "type": "elfi.methods.bo.acquisition.MaxVar"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "method_acq", "type": "elfi.methods.bo.acquisition.MaxVar"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "method_acq", "type": "elfi.methods.bo.acquisition.RandMaxVar"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "method_acq", "type": "elfi.methods.bo.acquisition.RandMaxVar"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "method_acq", "type": "elfi.methods.bo.acquisition.ExpIntVar"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "method_acq", "type": "elfi.methods.bo.acquisition.ExpIntVar"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "mean", "type": "List[int]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "cov_matrix", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "names_param", "type": "List[str]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "eps_prior", "type": "int"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "gm_2d", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "prior", "type": "elfi.methods.utils.ModelPrior"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "n_pts_fit", "type": "int"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "gp", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "secs", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "secs", "type": "Any"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "ub_sec", "type": "Union[Any, float]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "run", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "native", "type": "module"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "addoption", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "request", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "getoption", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "client", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "BaseException", "type": "Type[BaseException]"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "client", "type": "Any"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "get_client", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "set_client", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "client", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "set_client", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "pre", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "basicConfig", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "setLevel", "type": "Callable[[Union[int, str]], None]"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "WARNING", "type": "int"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "setLevel", "type": "Callable[[Union[int, str]], None]"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "WARNING", "type": "int"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "ElfiModel", "type": "Type[elfi.model.elfi_model.ElfiModel]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "Constant", "type": "Type[elfi.model.elfi_model.Constant]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "Prior", "type": "Type[elfi.model.elfi_model.Prior]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "Prior", "type": "Type[elfi.model.elfi_model.Prior]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "get_model", "type": "Callable[..., elfi.model.elfi_model.ElfiModel]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "gp", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "prior", "type": "elfi.methods.utils.ModelPrior"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "_get_dependencies_acq_fn", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "MaxVar", "type": "Type[elfi.methods.bo.acquisition.MaxVar]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "gp", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "prior", "type": "elfi.methods.utils.ModelPrior"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "_get_dependencies_acq_fn", "type": "Callable[[], Any]"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "RandMaxVar", "type": "Type[elfi.methods.bo.acquisition.RandMaxVar]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "gp", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "prior", "type": "elfi.methods.utils.ModelPrior"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "_get_dependencies_acq_fn", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "ExpIntVar", "type": "Type[elfi.methods.bo.acquisition.ExpIntVar]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "get_model", "type": "Callable[..., elfi.model.elfi_model.ElfiModel]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "ModelPrior", "type": "Type[elfi.methods.utils.ModelPrior]"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "gm_2d", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 169, "col_offset": 50, "nodeName": "n_pts_fit", "type": "int"}, {"lineNumber": 170, "col_offset": 9, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 170, "col_offset": 50, "nodeName": "n_pts_fit", "type": "int"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "column_stack", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "n_pts_fit", "type": "int"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "GPyRegression", "type": "Type[elfi.methods.bo.gpy_regression.GPyRegression]"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "names_param", "type": "List[str]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "gp", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "prior", "type": "elfi.methods.utils.ModelPrior"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "s", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "sec", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "st", "type": "float"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "param", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "ElfiModel", "type": "Type[elfi.model.elfi_model.ElfiModel]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "Constant", "type": "Type[elfi.model.elfi_model.Constant]"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "ub_sec", "type": "Union[float, Any]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "Prior", "type": "Type[elfi.model.elfi_model.Prior]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "Simulator", "type": "Type[elfi.model.elfi_model.Simulator]"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "sleeper", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "Summary", "type": "Type[elfi.model.elfi_model.Summary]"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "no_op", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "Distance", "type": "Type[elfi.model.elfi_model.Distance]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "observed", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "ub_sec", "type": "Union[float, Any]"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "ElfiModel", "type": "Type[elfi.model.elfi_model.ElfiModel]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "Prior", "type": "Type[elfi.model.elfi_model.Prior]"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "Simulator", "type": "Type[elfi.model.elfi_model.Simulator]"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "rowsummer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "Distance", "type": "Type[elfi.model.elfi_model.Distance]"}, {"lineNumber": 232, "col_offset": 31, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "attr_fn", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "attr_none", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "attr1", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "attr2", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "rvs", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "clients", "type": "module"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "config", "type": "Any"}, {"lineNumber": 42, "col_offset": 7, "nodeName": "use_client", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "use_client", "type": "Any"}, {"lineNumber": 42, "col_offset": 45, "nodeName": "client_name", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "Client", "type": "Any"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "elfi", "type": "module"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "client", "type": "module"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "client", "type": "module"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "DEBUG", "type": "int"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "logging", "type": "module"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "logging", "type": "module"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "elfi", "type": "module"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 86, "col_offset": 53, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "ma2", "type": "module"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "gp", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "prior", "type": "elfi.methods.utils.ModelPrior"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "gp", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "prior", "type": "elfi.methods.utils.ModelPrior"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "gp", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 143, "col_offset": 43, "nodeName": "prior", "type": "elfi.methods.utils.ModelPrior"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "gauss", "type": "module"}, {"lineNumber": 164, "col_offset": 54, "nodeName": "mean", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 85, "nodeName": "cov_matrix", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 170, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "x1", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "x2", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "bounds_param", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "gp", "type": "elfi.methods.bo.gpy_regression.GPyRegression"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "secs", "type": "Any"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "st", "type": "float"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "request", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "elfi", "type": "module"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 200, "col_offset": 44, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 201, "col_offset": 44, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 202, "col_offset": 42, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 203, "col_offset": 31, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 203, "col_offset": 51, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "elfi", "type": "module"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "ss", "type": "Any"}, {"lineNumber": 217, "col_offset": 43, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 217, "col_offset": 55, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 218, "col_offset": 71, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 219, "col_offset": 47, "nodeName": "m", "type": "elfi.model.elfi_model.ElfiModel"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "rvs_none", "type": "Any"}, {"lineNumber": 232, "col_offset": 18, "nodeName": "rvs1", "type": "Any"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "rvs2", "type": "Any"}, {"lineNumber": 233, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 233, "col_offset": 40, "nodeName": "attr", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "attr_fn", "type": "Any"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "rvs_none", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "attr_fn", "type": "Any"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "rvs1", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "attr_fn", "type": "Any"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "rvs2", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "attr_none", "type": "Any"}, {"lineNumber": 249, "col_offset": 26, "nodeName": "attr1", "type": "Any"}, {"lineNumber": 249, "col_offset": 33, "nodeName": "attr2", "type": "Any"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "rvs_none", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "rvs1", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "rvs2", "type": "Any"}, {"lineNumber": 259, "col_offset": 35, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 262, "col_offset": 42, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "rvs_none", "type": "Any"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "rvs1", "type": "Any"}, {"lineNumber": 274, "col_offset": 31, "nodeName": "rvs2", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "pdf_none", "type": "Any"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "pdf1", "type": "Any"}, {"lineNumber": 277, "col_offset": 24, "nodeName": "pdf2", "type": "Any"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "test_non_rvs_attr", "type": "Callable[..., Any]"}, {"lineNumber": 277, "col_offset": 56, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 277, "col_offset": 70, "nodeName": "rvs", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 281, "col_offset": 19, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "elfi", "type": "module"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "request", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "client_name", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "client_module", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "elfi", "type": "module"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "logging", "type": "module"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "examples", "type": "module"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "eps_prior", "type": "int"}, {"lineNumber": 160, "col_offset": 60, "nodeName": "eps_prior", "type": "int"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "eps_prior", "type": "int"}, {"lineNumber": 161, "col_offset": 60, "nodeName": "eps_prior", "type": "int"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "examples", "type": "module"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "bounds_param", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 170, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "bounds_param", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "time", "type": "module"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "time", "type": "module"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "s", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "i", "type": "int"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 218, "col_offset": 48, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 236, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "attr1", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "attr2", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "attr_none", "type": "Any"}, {"lineNumber": 246, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 255, "col_offset": 23, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "rvs_none", "type": "Any"}, {"lineNumber": 259, "col_offset": 22, "nodeName": "rvs1", "type": "Any"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "rvs2", "type": "Any"}, {"lineNumber": 262, "col_offset": 42, "nodeName": "rvs_none", "type": "Any"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "rvs1", "type": "Any"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "rvs2", "type": "Any"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "rvs_none", "type": "Any"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 277, "col_offset": 76, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 277, "col_offset": 84, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "pdf_none", "type": "Any"}, {"lineNumber": 282, "col_offset": 44, "nodeName": "test_non_rvs_attr", "type": "Callable[..., Any]"}, {"lineNumber": 282, "col_offset": 72, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 282, "col_offset": 86, "nodeName": "rvs", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "logpdf_none", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 285, "col_offset": 31, "nodeName": "logpdf1", "type": "Any"}, {"lineNumber": 286, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 286, "col_offset": 31, "nodeName": "logpdf2", "type": "Any"}, {"lineNumber": 289, "col_offset": 41, "nodeName": "test_non_rvs_attr", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 78, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 289, "col_offset": 92, "nodeName": "rvs", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "client_module", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 48, "col_offset": 53, "nodeName": "client_name", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "elfi", "type": "module"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "mean", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 50, "nodeName": "mean", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "mean", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 50, "nodeName": "mean", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "elfi", "type": "module"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "time", "type": "module"}, {"lineNumber": 218, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "attr1", "type": "Any"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "attr2", "type": "Any"}, {"lineNumber": 246, "col_offset": 34, "nodeName": "attr1", "type": "Any"}, {"lineNumber": 255, "col_offset": 23, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 255, "col_offset": 41, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 255, "col_offset": 60, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 256, "col_offset": 37, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 256, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 257, "col_offset": 37, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 257, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "rvs1", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "rvs2", "type": "Any"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "rvs1", "type": "Any"}, {"lineNumber": 282, "col_offset": 92, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 283, "col_offset": 64, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 44, "nodeName": "log", "type": "Any"}, {"lineNumber": 284, "col_offset": 51, "nodeName": "pdf_none", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 40, "nodeName": "log", "type": "Any"}, {"lineNumber": 285, "col_offset": 47, "nodeName": "pdf1", "type": "Any"}, {"lineNumber": 286, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 286, "col_offset": 40, "nodeName": "log", "type": "Any"}, {"lineNumber": 286, "col_offset": 47, "nodeName": "pdf2", "type": "Any"}, {"lineNumber": 290, "col_offset": 60, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 290, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "rvs_none", "type": "Any"}, {"lineNumber": 284, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 286, "col_offset": 40, "nodeName": "np", "type": "module"}]