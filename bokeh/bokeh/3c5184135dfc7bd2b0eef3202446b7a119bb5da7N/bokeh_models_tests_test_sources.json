[{"lineNumber": 17, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "is_pandas", "type": "bool"}, {"lineNumber": 11, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 488, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "is_pandas", "type": "bool"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "values", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "values", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "values", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "_document", "type": "str"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "mock_setter", "type": "object"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "_stream", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "mock", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "_document", "type": "str"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "_stream", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "mock", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "_document", "type": "str"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "_notify_owners", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "notify_owners_mock", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "data_stream", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "_stream", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "_stream", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "stream_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "_document", "type": "str"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "_notify_owners", "type": "Callable[..., Any]"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "notify_owners_mock", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "data_stream", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "_stream", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "_stream", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 26, "nodeName": "stream_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "_document", "type": "str"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "_notify_owners", "type": "Callable[..., Any]"}, {"lineNumber": 311, "col_offset": 33, "nodeName": "notify_owners_mock", "type": "Callable[..., Any]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "data_stream", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 22, "nodeName": "_stream", "type": "Callable[..., Any]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "_stream", "type": "Callable[..., Any]"}, {"lineNumber": 321, "col_offset": 26, "nodeName": "stream_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "expected_args", "type": "Tuple[str, bokeh.models.sources.ColumnDataSource, Dict[Any, Any], int, None]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "_document", "type": "str"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "mock_setter", "type": "object"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "_patch", "type": "Callable[..., Any]"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "mock", "type": "Callable[..., Any]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "_document", "type": "str"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "mock_setter", "type": "object"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "_patch", "type": "Callable[..., Any]"}, {"lineNumber": 413, "col_offset": 25, "nodeName": "mock", "type": "Callable[..., Any]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "data", "type": "Dict[str, List[int]]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "json", "type": "Dict[Any, Any]"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "data", "type": "Dict[str, List[List[Any]]]"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "json", "type": "Dict[Any, Any]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "data", "type": "Dict[str, List[Any]]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "json", "type": "Dict[Any, Any]"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "df", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "describe", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 53, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "columns", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "k2", "type": "str"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "describe", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "columns", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "k2", "type": "str"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "describe", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "columns", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "k2", "type": "str"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "add", "type": "Callable"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "name", "type": "str"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "add", "type": "Callable"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "name", "type": "str"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "add", "type": "Callable"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "add", "type": "Callable"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "add", "type": "Callable"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "name", "type": "str"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "add", "type": "Callable"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "add", "type": "Callable"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "column_names", "type": "bokeh.core.properties.List"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "_stream", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 56, "nodeName": "mock_setter", "type": "object"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "_stream", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "set_index", "type": "Any"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 205, "col_offset": 42, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 206, "col_offset": 40, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "_stream", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 39, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "_assert_equal_dicts_of_arrays", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "_assert_equal_dicts_of_arrays", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "set_index", "type": "Any"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 257, "col_offset": 42, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 258, "col_offset": 40, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 266, "col_offset": 35, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 267, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "_stream", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 39, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 278, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "_assert_equal_dicts_of_arrays", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "_assert_equal_dicts_of_arrays", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "set_index", "type": "Any"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 302, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 308, "col_offset": 42, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 309, "col_offset": 40, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 314, "col_offset": 22, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 317, "col_offset": 35, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 318, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "_stream", "type": "Callable[..., None]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 328, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 331, "col_offset": 32, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 331, "col_offset": 36, "nodeName": "expected_steam_data", "type": "Dict[Any, Any]"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 332, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "_assert_equal_dicts_of_arrays", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "_assert_equal_dicts_of_arrays", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 355, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 356, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 359, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 366, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 371, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 374, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 376, "col_offset": 28, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 377, "col_offset": 26, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "patch", "type": "Callable[..., None]"}, {"lineNumber": 379, "col_offset": 58, "nodeName": "mock_setter", "type": "object"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 384, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 385, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 388, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 391, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 400, "col_offset": 46, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 409, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 411, "col_offset": 28, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 412, "col_offset": 26, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "patch", "type": "Callable[..., None]"}, {"lineNumber": 414, "col_offset": 120, "nodeName": "mock_setter", "type": "object"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 438, "col_offset": 53, "nodeName": "warns", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 443, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 444, "col_offset": 53, "nodeName": "warns", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 449, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 450, "col_offset": 53, "nodeName": "warns", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 455, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 456, "col_offset": 53, "nodeName": "warns", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 462, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "set_from_json", "type": "Any"}, {"lineNumber": 464, "col_offset": 33, "nodeName": "data", "type": "Dict[str, List[int]]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 465, "col_offset": 26, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 465, "col_offset": 35, "nodeName": "data", "type": "Dict[str, List[int]]"}, {"lineNumber": 468, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 470, "col_offset": 15, "nodeName": "transform_column_source_data", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 470, "col_offset": 44, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "set_from_json", "type": "Any"}, {"lineNumber": 471, "col_offset": 33, "nodeName": "json", "type": "Dict[Any, Any]"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 475, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "transform_column_source_data", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 477, "col_offset": 44, "nodeName": "data", "type": "Dict[str, List[List[Any]]]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "set_from_json", "type": "Any"}, {"lineNumber": 478, "col_offset": 33, "nodeName": "json", "type": "Dict[Any, Any]"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 482, "col_offset": 13, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "transform_column_source_data", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 484, "col_offset": 44, "nodeName": "data", "type": "Dict[str, List[Any]]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "set_from_json", "type": "Any"}, {"lineNumber": 485, "col_offset": 33, "nodeName": "json", "type": "Dict[Any, Any]"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 21, "col_offset": 39, "nodeName": "DataSource", "type": "Type[bokeh.models.sources.DataSource]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "column_names", "type": "bokeh.core.properties.List"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "column_names", "type": "bokeh.core.properties.List"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 46, "col_offset": 65, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "df", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 59, "col_offset": 65, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 68, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "key", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 47, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "group", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "key", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 47, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "group", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "key", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "column_names", "type": "bokeh.core.properties.List"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 134, "col_offset": 45, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "stream", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "stream", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "stream", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "stream", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "stream", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "stream", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 173, "col_offset": 48, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 173, "col_offset": 89, "nodeName": "mock_setter", "type": "object"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 187, "col_offset": 48, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "keys", "type": "Any"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "d1", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "data_stream", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 223, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 226, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 227, "col_offset": 46, "nodeName": "expected_stream_args", "type": "Tuple[str, bokeh.models.sources.ColumnDataSource, Dict[Any, Any], int, None]"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 239, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 243, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 243, "col_offset": 48, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 244, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "data_stream", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "Series", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 275, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 278, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 279, "col_offset": 46, "nodeName": "expected_stream_args", "type": "Tuple[str, bokeh.models.sources.ColumnDataSource, Dict[Any, Any], int, None]"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "arg", "type": "Dict[Any, Any]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 290, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 294, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 294, "col_offset": 48, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 295, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 314, "col_offset": 22, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "data_stream", "type": "Callable[..., Any]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 327, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "arg", "type": "Any"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "ex_arg", "type": "Any"}, {"lineNumber": 332, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 332, "col_offset": 68, "nodeName": "expected_args", "type": "Tuple[str, bokeh.models.sources.ColumnDataSource, Dict[Any, Any], int, None]"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "arg", "type": "Dict[Any, Any]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 345, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 349, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 349, "col_offset": 48, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 350, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 356, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "patch", "type": "Callable[..., None]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 358, "col_offset": 29, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 359, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "patch", "type": "Callable[..., None]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 361, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 361, "col_offset": 29, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 366, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 366, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "patch", "type": "Callable[..., None]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 379, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 380, "col_offset": 25, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 380, "col_offset": 48, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 380, "col_offset": 93, "nodeName": "mock_setter", "type": "object"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 381, "col_offset": 25, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 385, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 385, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "patch", "type": "Callable[..., None]"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 387, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 387, "col_offset": 29, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 388, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "patch", "type": "Callable[..., None]"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 390, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 390, "col_offset": 29, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 391, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "patch", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 393, "col_offset": 29, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 394, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "patch", "type": "Callable[..., None]"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 396, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 397, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 397, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "patch", "type": "Callable[..., None]"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 399, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 399, "col_offset": 29, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 400, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "patch", "type": "Callable[..., None]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 402, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 402, "col_offset": 29, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 414, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 416, "col_offset": 20, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 416, "col_offset": 127, "nodeName": "mock_setter", "type": "object"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 418, "col_offset": 25, "nodeName": "stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 438, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "ColumnDataSource", "type": "Type[bokeh.models.sources.ColumnDataSource]"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 445, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 456, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 465, "col_offset": 26, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 472, "col_offset": 24, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 486, "col_offset": 24, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 27, "col_offset": 52, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 33, "col_offset": 52, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 40, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "column_names", "type": "bokeh.core.properties.List"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 43, "col_offset": 45, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "column_names", "type": "bokeh.core.properties.List"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "columns", "type": "Any"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 53, "col_offset": 53, "nodeName": "column_names", "type": "bokeh.core.properties.List"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 56, "col_offset": 45, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "column_names", "type": "bokeh.core.properties.List"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 59, "col_offset": 52, "nodeName": "columns", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "column_names", "type": "bokeh.core.properties.List"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 71, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "column_names", "type": "bokeh.core.properties.List"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 84, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 89, "col_offset": 82, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "column_names", "type": "bokeh.core.properties.List"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "message", "type": "Warning"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 173, "col_offset": 52, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 187, "col_offset": 52, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "d1", "type": "Any"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "d2", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "v", "type": "Any"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 194, "col_offset": 43, "nodeName": "v", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "arg", "type": "Any"}, {"lineNumber": 230, "col_offset": 30, "nodeName": "ex_arg", "type": "Any"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "_assert_equal_dicts_of_arrays", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 231, "col_offset": 51, "nodeName": "arg", "type": "Any"}, {"lineNumber": 231, "col_offset": 56, "nodeName": "ex_arg", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 33, "nodeName": "arg", "type": "Any"}, {"lineNumber": 233, "col_offset": 38, "nodeName": "ex_arg", "type": "Any"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 238, "col_offset": 43, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 243, "col_offset": 48, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "pd", "type": "Any"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 278, "col_offset": 46, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "values", "type": "Any"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "_assert_equal_dicts_of_arrays", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 282, "col_offset": 51, "nodeName": "arg", "type": "Dict[Any, Any]"}, {"lineNumber": 282, "col_offset": 56, "nodeName": "ex_arg", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 33, "nodeName": "arg", "type": "Any"}, {"lineNumber": 284, "col_offset": 38, "nodeName": "ex_arg", "type": "Any"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 289, "col_offset": 43, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 294, "col_offset": 48, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 319, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "pd", "type": "Any"}, {"lineNumber": 323, "col_offset": 32, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 327, "col_offset": 29, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 328, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 329, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 332, "col_offset": 46, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 334, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 334, "col_offset": 26, "nodeName": "values", "type": "Any"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "v", "type": "Any"}, {"lineNumber": 336, "col_offset": 28, "nodeName": "items", "type": "Callable"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 343, "col_offset": 29, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 344, "col_offset": 43, "nodeName": "notify_owners_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 349, "col_offset": 48, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 355, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 356, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 357, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 358, "col_offset": 29, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 360, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 361, "col_offset": 29, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 365, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 366, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 371, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 380, "col_offset": 52, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 384, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 385, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 386, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 387, "col_offset": 29, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 389, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 390, "col_offset": 29, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 391, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 392, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 393, "col_offset": 29, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 395, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 397, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 398, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 399, "col_offset": 29, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 402, "col_offset": 29, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 406, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 438, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 440, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 440, "col_offset": 34, "nodeName": "warns", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 441, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 441, "col_offset": 34, "nodeName": "message", "type": "Warning"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 446, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 446, "col_offset": 34, "nodeName": "warns", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 447, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 447, "col_offset": 34, "nodeName": "message", "type": "Warning"}, {"lineNumber": 449, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 452, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 452, "col_offset": 34, "nodeName": "warns", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 453, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 453, "col_offset": 34, "nodeName": "message", "type": "Warning"}, {"lineNumber": 455, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 456, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 457, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 458, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 458, "col_offset": 34, "nodeName": "warns", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 459, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 459, "col_offset": 34, "nodeName": "message", "type": "Warning"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 472, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 472, "col_offset": 39, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 472, "col_offset": 55, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 479, "col_offset": 39, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 479, "col_offset": 55, "nodeName": "data", "type": "Dict[str, List[List[Any]]]"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "arange", "type": "Any"}, {"lineNumber": 486, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 486, "col_offset": 39, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 486, "col_offset": 55, "nodeName": "data", "type": "Dict[str, List[Any]]"}, {"lineNumber": 27, "col_offset": 52, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 33, "col_offset": 52, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "columns", "type": "Any"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "key", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "df", "type": "Any"}, {"lineNumber": 43, "col_offset": 50, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "df", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "columns", "type": "Any"}, {"lineNumber": 53, "col_offset": 53, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "key", "type": "Any"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "df", "type": "Any"}, {"lineNumber": 56, "col_offset": 50, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 59, "col_offset": 52, "nodeName": "df", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "k2", "type": "str"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "s", "type": "Any"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "k2", "type": "str"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "s", "type": "Any"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "k2", "type": "str"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "s", "type": "Any"}, {"lineNumber": 98, "col_offset": 49, "nodeName": "data", "type": "bokeh.core.properties.ColumnData"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "exception", "type": "ValueError"}, {"lineNumber": 193, "col_offset": 43, "nodeName": "d2", "type": "Any"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 46, "nodeName": "d2", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "Series", "type": "Any"}, {"lineNumber": 224, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 225, "col_offset": 50, "nodeName": "Series", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 229, "col_offset": 33, "nodeName": "arg", "type": "Any"}, {"lineNumber": 229, "col_offset": 43, "nodeName": "ex_arg", "type": "Any"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 239, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 240, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 241, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 244, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 245, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 246, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 250, "col_offset": 28, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 272, "col_offset": 49, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 275, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 276, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 277, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 290, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 291, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 292, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 295, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 296, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 297, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 328, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 329, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 334, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 335, "col_offset": 33, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 335, "col_offset": 45, "nodeName": "keys", "type": "Any"}, {"lineNumber": 336, "col_offset": 28, "nodeName": "arg", "type": "Dict[Any, Any]"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 339, "col_offset": 58, "nodeName": "expected_args", "type": "Tuple[str, bokeh.models.sources.ColumnDataSource, Dict[Any, Any], int, None]"}, {"lineNumber": 345, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 346, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 347, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 350, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 351, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 352, "col_offset": 50, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 439, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 472, "col_offset": 39, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 476, "col_offset": 25, "nodeName": "arange", "type": "Any"}, {"lineNumber": 479, "col_offset": 39, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 486, "col_offset": 39, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "df", "type": "Any"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "key", "type": "Any"}, {"lineNumber": 43, "col_offset": 50, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 43, "col_offset": 58, "nodeName": "key", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "df", "type": "Any"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "key", "type": "Any"}, {"lineNumber": 56, "col_offset": 50, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 56, "col_offset": 58, "nodeName": "key", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "key", "type": "Any"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 72, "col_offset": 57, "nodeName": "k2", "type": "str"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "key", "type": "Any"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "k2", "type": "str"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "key", "type": "Any"}, {"lineNumber": 98, "col_offset": 49, "nodeName": "ds", "type": "bokeh.models.sources.ColumnDataSource"}, {"lineNumber": 98, "col_offset": 57, "nodeName": "k2", "type": "str"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 156, "col_offset": 37, "nodeName": "ones", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "cm", "type": "unittest.case._AssertRaisesContext[ValueError]"}, {"lineNumber": 193, "col_offset": 46, "nodeName": "k", "type": "Any"}, {"lineNumber": 194, "col_offset": 49, "nodeName": "k", "type": "Any"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "pd", "type": "Any"}, {"lineNumber": 224, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 50, "nodeName": "pd", "type": "Any"}, {"lineNumber": 239, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 281, "col_offset": 39, "nodeName": "k", "type": "Any"}, {"lineNumber": 281, "col_offset": 42, "nodeName": "v", "type": "Any"}, {"lineNumber": 281, "col_offset": 47, "nodeName": "items", "type": "Any"}, {"lineNumber": 290, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 291, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 297, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 334, "col_offset": 39, "nodeName": "k", "type": "Any"}, {"lineNumber": 334, "col_offset": 42, "nodeName": "v", "type": "Any"}, {"lineNumber": 334, "col_offset": 47, "nodeName": "items", "type": "Any"}, {"lineNumber": 335, "col_offset": 33, "nodeName": "arg", "type": "Dict[Any, Any]"}, {"lineNumber": 335, "col_offset": 45, "nodeName": "ex_arg", "type": "Any"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "self", "type": "TestColumnDataSource"}, {"lineNumber": 337, "col_offset": 36, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 337, "col_offset": 51, "nodeName": "v", "type": "Any"}, {"lineNumber": 339, "col_offset": 33, "nodeName": "stream_stuff", "type": "Dict[str, Union[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 339, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 339, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 345, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 347, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 350, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 351, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 34, "nodeName": "warns", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 447, "col_offset": 34, "nodeName": "warns", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 453, "col_offset": 34, "nodeName": "warns", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 459, "col_offset": 34, "nodeName": "warns", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 476, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 54, "nodeName": "ex_arg", "type": "Any"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 414, "col_offset": 50, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 414, "col_offset": 81, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 281, "col_offset": 47, "nodeName": "to_dict", "type": "Any"}, {"lineNumber": 334, "col_offset": 47, "nodeName": "to_dict", "type": "Any"}, {"lineNumber": 337, "col_offset": 61, "nodeName": "k", "type": "Any"}, {"lineNumber": 386, "col_offset": 30, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 386, "col_offset": 41, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 389, "col_offset": 30, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 389, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 392, "col_offset": 30, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 392, "col_offset": 51, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 395, "col_offset": 30, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 395, "col_offset": 47, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 398, "col_offset": 30, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 398, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 401, "col_offset": 30, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 401, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 416, "col_offset": 57, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 416, "col_offset": 88, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 281, "col_offset": 47, "nodeName": "arg", "type": "Any"}, {"lineNumber": 334, "col_offset": 47, "nodeName": "arg", "type": "Any"}, {"lineNumber": 386, "col_offset": 46, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 389, "col_offset": 49, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 392, "col_offset": 56, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 395, "col_offset": 52, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 398, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 401, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}]