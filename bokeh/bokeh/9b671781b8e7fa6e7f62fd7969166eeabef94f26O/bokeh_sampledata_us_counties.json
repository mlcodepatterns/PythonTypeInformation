[{"lineNumber": 23, "col_offset": 0, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "nan", "type": "float"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "data", "type": "Dict[Tuple[int, int], Dict[str, Union[List[Any], str]]]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "_data_dir", "type": "Any"}, {"lineNumber": 25, "col_offset": 6, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 28, "col_offset": 58, "nodeName": "f", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 28, "col_offset": 5, "nodeName": "_open_csv_file", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "next", "type": "Callable"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "f", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "reader", "type": "Callable[..., _csv._reader]"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "f", "type": "Any"}, {"lineNumber": 32, "col_offset": 112, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "xml", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "lats", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "lons", "type": "List[Any]"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "csv", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "dummy", "type": "str"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "state", "type": "str"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "dummy", "type": "str"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "geometry", "type": "str"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "dummy", "type": "str"}, {"lineNumber": 32, "col_offset": 52, "nodeName": "dummy", "type": "str"}, {"lineNumber": 32, "col_offset": 59, "nodeName": "dummy", "type": "str"}, {"lineNumber": 32, "col_offset": 66, "nodeName": "det_name", "type": "str"}, {"lineNumber": 32, "col_offset": 76, "nodeName": "state_id", "type": "str"}, {"lineNumber": 32, "col_offset": 86, "nodeName": "county_id", "type": "str"}, {"lineNumber": 32, "col_offset": 97, "nodeName": "dummy", "type": "str"}, {"lineNumber": 32, "col_offset": 104, "nodeName": "dummy", "type": "str"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "fromstring", "type": "Callable[..., xml.etree.ElementTree.Element]"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "geometry", "type": "str"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "poly", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "coords", "type": "Generator[List[str], Any, None]"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "name", "type": "str"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "det_name", "type": "str"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "state", "type": "str"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "lats", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "lons", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "et", "type": "module"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "findall", "type": "Callable[..., List[xml.etree.ElementTree.Element]]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "lat", "type": "str"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "lon", "type": "str"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "lat", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "lon", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "xml", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "nan", "type": "float"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "nan", "type": "float"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "c", "type": "str"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "lats", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "lons", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "lats", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "lons", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "c", "type": "str"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "poly", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "coords", "type": "Generator[List[str], Any, None]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "lat", "type": "str"}, {"lineNumber": 41, "col_offset": 47, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 41, "col_offset": 53, "nodeName": "lon", "type": "str"}]