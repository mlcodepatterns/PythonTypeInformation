[{"lineNumber": 39, "col_offset": 0, "nodeName": "test_is_abstract", "type": "Callable[[], None]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "test_missing_args", "type": "Callable[[], None]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "test_no_args", "type": "Callable[[], None]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "test_one_arg", "type": "Callable[[], None]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "test_args", "type": "Callable[[], None]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "test_base_invoke", "type": "Callable[[], None]"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "Subcommand", "type": "Type[bokeh.command.subcommand.Subcommand]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "Subcommand", "type": "Type[bokeh.command.subcommand.Subcommand]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "sc", "type": "module"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "sc", "type": "module"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "p", "type": "mock.MagicMock"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "p", "type": "mock.MagicMock"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "args", "type": "Tuple[Tuple[str, Dict[Any, Any]]]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "p", "type": "mock.MagicMock"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "args", "type": "Tuple[Tuple[str, Dict[Any, Any]], Tuple[str, Dict[Any, Any]]]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "p", "type": "mock.MagicMock"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "_Good", "type": "Type[_Good]"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "p", "type": "mock.MagicMock"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "assert_not_called", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "_Good", "type": "Type[_Good]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "_Good", "type": "Type[_Good]"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "p", "type": "mock.MagicMock"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "assert_not_called", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "_Good", "type": "Type[_Good]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "_Good", "type": "Type[_Good]"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "p", "type": "mock.MagicMock"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "_Good", "type": "Type[_Good]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "_Good", "type": "Type[_Good]"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "p", "type": "mock.MagicMock"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "call_count", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "p", "type": "mock.MagicMock"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "obj", "type": "_Good"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "_Bad", "type": "Type[_Bad]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "p", "type": "mock.MagicMock"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "_Good", "type": "Type[_Good]"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "p", "type": "mock.MagicMock"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "invoke", "type": "Callable[[argparse.Namespace], Optional[bool]]"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "p", "type": "mock.MagicMock"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "p", "type": "mock.MagicMock"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "p", "type": "mock.MagicMock"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "_Good", "type": "Type[_Good]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "obj", "type": "_Good"}]