[{"lineNumber": 114, "col_offset": 0, "nodeName": "Asterisk", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "CircleCross", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 0, "nodeName": "CircleDot", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "CircleX", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "CircleY", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 0, "nodeName": "Cross", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "Dash", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "Diamond", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "DiamondCross", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 0, "nodeName": "DiamondDot", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 0, "nodeName": "Dot", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "Hex", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 0, "nodeName": "HexDot", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 0, "nodeName": "InvertedTriangle", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "Plus", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 0, "nodeName": "Square", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 0, "nodeName": "SquareDot", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 0, "nodeName": "SquarePin", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 0, "nodeName": "SquareCross", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "SquareX", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 0, "nodeName": "Star", "type": "Callable[..., Any]"}, {"lineNumber": 219, "col_offset": 0, "nodeName": "StarDot", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 0, "nodeName": "Triangle", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 0, "nodeName": "TriangleDot", "type": "Callable[..., Any]"}, {"lineNumber": 234, "col_offset": 0, "nodeName": "TrianglePin", "type": "Callable[..., Any]"}, {"lineNumber": 239, "col_offset": 0, "nodeName": "X", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 0, "nodeName": "Y", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 292, "col_offset": 0, "nodeName": "Asterisk", "type": "Callable[..., Any]"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "Asterisk", "type": "Callable[..., Any]"}, {"lineNumber": 293, "col_offset": 0, "nodeName": "CircleCross", "type": "Callable[..., Any]"}, {"lineNumber": 293, "col_offset": 21, "nodeName": "CircleCross", "type": "Callable[..., Any]"}, {"lineNumber": 294, "col_offset": 0, "nodeName": "CircleDot", "type": "Callable[..., Any]"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "CircleDot", "type": "Callable[..., Any]"}, {"lineNumber": 295, "col_offset": 0, "nodeName": "CircleY", "type": "Callable[..., Any]"}, {"lineNumber": 295, "col_offset": 17, "nodeName": "CircleY", "type": "Callable[..., Any]"}, {"lineNumber": 296, "col_offset": 0, "nodeName": "CircleX", "type": "Callable[..., Any]"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "CircleX", "type": "Callable[..., Any]"}, {"lineNumber": 297, "col_offset": 0, "nodeName": "Cross", "type": "Callable[..., Any]"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "Cross", "type": "Callable[..., Any]"}, {"lineNumber": 298, "col_offset": 0, "nodeName": "Dash", "type": "Callable[..., Any]"}, {"lineNumber": 298, "col_offset": 14, "nodeName": "Dash", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 0, "nodeName": "Diamond", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 17, "nodeName": "Diamond", "type": "Callable[..., Any]"}, {"lineNumber": 300, "col_offset": 0, "nodeName": "DiamondCross", "type": "Callable[..., Any]"}, {"lineNumber": 300, "col_offset": 22, "nodeName": "DiamondCross", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 0, "nodeName": "DiamondDot", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "DiamondDot", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 0, "nodeName": "Dot", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "Dot", "type": "Callable[..., Any]"}, {"lineNumber": 303, "col_offset": 0, "nodeName": "Hex", "type": "Callable[..., Any]"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "Hex", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 0, "nodeName": "HexDot", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "HexDot", "type": "Callable[..., Any]"}, {"lineNumber": 305, "col_offset": 0, "nodeName": "InvertedTriangle", "type": "Callable[..., Any]"}, {"lineNumber": 305, "col_offset": 26, "nodeName": "InvertedTriangle", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 0, "nodeName": "Plus", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 14, "nodeName": "Plus", "type": "Callable[..., Any]"}, {"lineNumber": 307, "col_offset": 0, "nodeName": "Square", "type": "Callable[..., Any]"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "Square", "type": "Callable[..., Any]"}, {"lineNumber": 308, "col_offset": 0, "nodeName": "SquareCross", "type": "Callable[..., Any]"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "SquareCross", "type": "Callable[..., Any]"}, {"lineNumber": 309, "col_offset": 0, "nodeName": "SquareDot", "type": "Callable[..., Any]"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "SquareDot", "type": "Callable[..., Any]"}, {"lineNumber": 310, "col_offset": 0, "nodeName": "SquarePin", "type": "Callable[..., Any]"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "SquarePin", "type": "Callable[..., Any]"}, {"lineNumber": 311, "col_offset": 0, "nodeName": "SquareX", "type": "Callable[..., Any]"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "SquareX", "type": "Callable[..., Any]"}, {"lineNumber": 312, "col_offset": 0, "nodeName": "Star", "type": "Callable[..., Any]"}, {"lineNumber": 312, "col_offset": 14, "nodeName": "Star", "type": "Callable[..., Any]"}, {"lineNumber": 313, "col_offset": 0, "nodeName": "StarDot", "type": "Callable[..., Any]"}, {"lineNumber": 313, "col_offset": 17, "nodeName": "StarDot", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 0, "nodeName": "Triangle", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "Triangle", "type": "Callable[..., Any]"}, {"lineNumber": 315, "col_offset": 0, "nodeName": "TriangleDot", "type": "Callable[..., Any]"}, {"lineNumber": 315, "col_offset": 21, "nodeName": "TriangleDot", "type": "Callable[..., Any]"}, {"lineNumber": 316, "col_offset": 0, "nodeName": "TrianglePin", "type": "Callable[..., Any]"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "TrianglePin", "type": "Callable[..., Any]"}, {"lineNumber": 317, "col_offset": 0, "nodeName": "X", "type": "Callable[..., Any]"}, {"lineNumber": 317, "col_offset": 11, "nodeName": "X", "type": "Callable[..., Any]"}, {"lineNumber": 318, "col_offset": 0, "nodeName": "Y", "type": "Callable[..., Any]"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "Y", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 6, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "Asterisk", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 14, "nodeName": "Circle", "type": "Any"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "CircleCross", "type": "Callable[..., Any]"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "CircleDot", "type": "Callable[..., Any]"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "CircleX", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "CircleY", "type": "Callable[..., Any]"}, {"lineNumber": 268, "col_offset": 13, "nodeName": "Cross", "type": "Callable[..., Any]"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "Dash", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "Diamond", "type": "Callable[..., Any]"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "DiamondCross", "type": "Callable[..., Any]"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "DiamondDot", "type": "Callable[..., Any]"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "Dot", "type": "Callable[..., Any]"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "Hex", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "HexDot", "type": "Callable[..., Any]"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "InvertedTriangle", "type": "Callable[..., Any]"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "Plus", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "Square", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "SquareCross", "type": "Callable[..., Any]"}, {"lineNumber": 280, "col_offset": 18, "nodeName": "SquareDot", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 18, "nodeName": "SquarePin", "type": "Callable[..., Any]"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "SquareX", "type": "Callable[..., Any]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "Star", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "StarDot", "type": "Callable[..., Any]"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "Triangle", "type": "Callable[..., Any]"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "TriangleDot", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "TrianglePin", "type": "Callable[..., Any]"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "X", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 9, "nodeName": "Y", "type": "Callable[..., Any]"}, {"lineNumber": 292, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 293, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 294, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 295, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 296, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 297, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 298, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 299, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 300, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 301, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 302, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 303, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 304, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 305, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 306, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 307, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 308, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 309, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 310, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 311, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 312, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 313, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 314, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 315, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 316, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 317, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 318, "col_offset": 0, "nodeName": "glyphs", "type": "Any"}, {"lineNumber": 62, "col_offset": 6, "nodeName": "logging", "type": "module"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "Scatter", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 177, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 227, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}]