[{"lineNumber": 31, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_supported_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_no_outliers", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "groups", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "xyvaluesdf", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "xyvaluesbl", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "groups", "type": "List[str]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "xyvalues", "type": "List[float]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "bp", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "builder", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "outliers", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "xyvalues", "type": "collections.OrderedDict[str, numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "Data", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "xyvaluesdf", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "_xy", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "bp", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "exptected_datarect", "type": "Dict[str, Union[List[str], List[float]]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "expected_scatter", "type": "Dict[str, Union[List[str], List[float]]]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "_xy", "type": "Union[numpy.ndarray, List[numpy.ndarray]]"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "bp", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "create_chart", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "BoxPlot", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "xyvalues", "type": "List[float]"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "_builders", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "_data_scatter", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "pd", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "blaze", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "xyvalues", "type": "collections.OrderedDict[str, numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "xyvaluesdf", "type": "Any"}, {"lineNumber": 70, "col_offset": 55, "nodeName": "xyvaluesbl", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "create_chart", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "BoxPlot", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "_xy", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "_builders", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "expected_v", "type": "Union[List[str], List[float]]"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "items", "type": "Callable"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "expected_v", "type": "Union[List[str], List[float]]"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "items", "type": "Callable"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "expected_v", "type": "List[float]"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "items", "type": "Callable"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "lvalues", "type": "List[numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "create_chart", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "BoxPlot", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "_xy", "type": "Union[List[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "_builders", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "expected_v", "type": "Union[List[str], List[float]]"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "items", "type": "Callable"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "expected_v", "type": "Union[List[str], List[float]]"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "items", "type": "Callable"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "expected_v", "type": "List[float]"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "items", "type": "Callable"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "bp", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "builder", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestBoxPlot"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "outliers", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "bp", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "TestBoxPlot"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "_groups", "type": "Any"}, {"lineNumber": 73, "col_offset": 54, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 73, "col_offset": 61, "nodeName": "groups", "type": "List[str]"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "exptected_datarect", "type": "Dict[str, Union[List[str], List[float]]]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 58, "nodeName": "expected_v", "type": "Union[List[float], List[str]]"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "expected_scatter", "type": "Dict[str, Union[List[str], List[float]]]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 61, "nodeName": "expected_v", "type": "Union[List[str], List[float]]"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "expected_seg", "type": "Dict[str, List[float]]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 61, "nodeName": "expected_v", "type": "List[float]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "lvalues", "type": "List[numpy.ndarray]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "bp", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "self", "type": "TestBoxPlot"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "_groups", "type": "Any"}, {"lineNumber": 100, "col_offset": 54, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 100, "col_offset": 61, "nodeName": "groups", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "exptected_datarect", "type": "Dict[str, Union[List[str], List[float]]]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 58, "nodeName": "expected_v", "type": "Union[List[float], List[str]]"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "expected_scatter", "type": "Dict[str, Union[List[str], List[float]]]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 61, "nodeName": "expected_v", "type": "Union[List[str], List[float]]"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "expected_seg", "type": "Dict[str, List[float]]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 61, "nodeName": "expected_v", "type": "List[float]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "builder", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "self", "type": "TestBoxPlot"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "_data_rect", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "self", "type": "TestBoxPlot"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "_data_scatter", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "self", "type": "TestBoxPlot"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "_data_segment", "type": "Any"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "builder", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "self", "type": "TestBoxPlot"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "_data_rect", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "self", "type": "TestBoxPlot"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "_data_scatter", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "self", "type": "TestBoxPlot"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "_data_segment", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "builder", "type": "Any"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "key", "type": "str"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "builder", "type": "Any"}, {"lineNumber": 78, "col_offset": 55, "nodeName": "key", "type": "str"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "builder", "type": "Any"}, {"lineNumber": 81, "col_offset": 55, "nodeName": "key", "type": "str"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "builder", "type": "Any"}, {"lineNumber": 102, "col_offset": 52, "nodeName": "key", "type": "str"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "builder", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "key", "type": "str"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "builder", "type": "Any"}, {"lineNumber": 108, "col_offset": 55, "nodeName": "key", "type": "str"}]