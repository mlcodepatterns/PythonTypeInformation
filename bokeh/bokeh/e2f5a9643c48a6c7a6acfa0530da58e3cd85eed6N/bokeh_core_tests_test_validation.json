[{"lineNumber": 46, "col_offset": 0, "nodeName": "test_error_decorator_code", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "test_warning_decorator_code", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "test_error_decorator_custom", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "test_warning_decorator_custom", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "Model", "type": "Type[bokeh.model.Model]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "code", "type": "int"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "ec", "type": "Dict[int, Tuple[str, str]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "code", "type": "int"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "wc", "type": "Dict[int, Tuple[str, str]]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "foo", "type": "bokeh.core.property.primitive.Int"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "m", "type": "Mod"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "m", "type": "Mod"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "called", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "m", "type": "Mod"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "called", "type": "Any"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "Int", "type": "Type[bokeh.core.property.primitive.Int]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "Mod", "type": "Type[Mod]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "check_integrity", "type": "Callable[[Any], None]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "called", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "called", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "Mod", "type": "Type[Mod]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "check_integrity", "type": "Callable[[Any], None]"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "mock_error", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "called", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "Mod", "type": "Type[Mod]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "check_integrity", "type": "Callable[[Any], None]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "called", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "mock_warn", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "good", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "bad", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "good", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "bad", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "foo", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "foo", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "v", "type": "module"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "m", "type": "Mod"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "mock_error", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "mock_warn", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "v", "type": "module"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "m", "type": "Mod"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "mock_warn", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "v", "type": "module"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "m", "type": "Mod"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "mock_error", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "good", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "bad", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "good", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "bad", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "code", "type": "int"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "ec", "type": "Dict[int, Tuple[str, str]]"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "code", "type": "int"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "wc", "type": "Dict[int, Tuple[str, str]]"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "code", "type": "int"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "code", "type": "int"}]