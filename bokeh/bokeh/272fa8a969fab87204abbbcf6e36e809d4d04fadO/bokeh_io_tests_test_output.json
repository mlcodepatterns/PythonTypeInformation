[{"lineNumber": 59, "col_offset": 0, "nodeName": "test_output_file_no_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "test_output_file_with_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "test_output_notebook_no_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "test_output_notebook_with_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "test_reset_output", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 17, "col_offset": 44, "nodeName": "verify_api", "type": "Callable[[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 16, "col_offset": 46, "nodeName": "INTERNAL", "type": "str"}, {"lineNumber": 16, "col_offset": 56, "nodeName": "PUBLIC", "type": "str"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "PUBLIC", "type": "str"}, {"lineNumber": 47, "col_offset": 7, "nodeName": "INTERNAL", "type": "str"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "test_public_api", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "test_internal_api", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "test_all_declared", "type": "Any"}, {"lineNumber": 53, "col_offset": 55, "nodeName": "test_all_tested", "type": "Any"}, {"lineNumber": 53, "col_offset": 73, "nodeName": "verify_api", "type": "Callable[[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 53, "col_offset": 84, "nodeName": "bio", "type": "module"}, {"lineNumber": 53, "col_offset": 89, "nodeName": "api", "type": "Dict[str, Union[Tuple[Tuple[str, Tuple[int, int, int]], Tuple[str, Tuple[int, int, int]], Tuple[str, Tuple[int, int, int]]], Tuple[()]]]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "default_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "default_load_jupyter_args", "type": "Tuple[None, bool, bool, int]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "load_jupyter_args", "type": "Tuple[bokeh.resources.Resources, bool, bool, int]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "original_call_count", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "default_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "output_notebook", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "output_notebook", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "reset", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "reset_output", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "bio", "type": "module"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "mock_output_file", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "bio", "type": "module"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "mock_output_file", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "bio", "type": "module"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "mock_run_notebook_hook", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 80, "col_offset": 72, "nodeName": "default_load_jupyter_args", "type": "Tuple[None, bool, bool, int]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "Resources", "type": "Type[bokeh.resources.Resources]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "bio", "type": "module"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "load_jupyter_args", "type": "Tuple[bokeh.resources.Resources, bool, bool, int]"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "mock_run_notebook_hook", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 88, "col_offset": 72, "nodeName": "load_jupyter_args", "type": "Tuple[bokeh.resources.Resources, bool, bool, int]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "bio", "type": "module"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "reset", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "original_call_count", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "mock_output_file", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "mock_output_file", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "mock_output_file", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "mock_output_file", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "mock_run_notebook_hook", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "mock_run_notebook_hook", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "mock_run_notebook_hook", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "mock_run_notebook_hook", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "curstate", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "curstate", "type": "Any"}]