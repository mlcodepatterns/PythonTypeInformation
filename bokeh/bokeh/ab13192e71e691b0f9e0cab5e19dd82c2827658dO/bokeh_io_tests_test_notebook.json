[{"lineNumber": 74, "col_offset": 0, "nodeName": "test_install_notebook_hook", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 17, "col_offset": 44, "nodeName": "verify_api", "type": "Callable[[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 16, "col_offset": 46, "nodeName": "INTERNAL", "type": "str"}, {"lineNumber": 16, "col_offset": 56, "nodeName": "PUBLIC", "type": "str"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "PUBLIC", "type": "str"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "INTERNAL", "type": "str"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "test_public_api", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "test_internal_api", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "test_all_declared", "type": "Any"}, {"lineNumber": 64, "col_offset": 55, "nodeName": "test_all_tested", "type": "Any"}, {"lineNumber": 64, "col_offset": 73, "nodeName": "verify_api", "type": "Callable[[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 64, "col_offset": 84, "nodeName": "binb", "type": "module"}, {"lineNumber": 64, "col_offset": 90, "nodeName": "api", "type": "Dict[str, Tuple[Tuple[str, Tuple[int, int, int]], Tuple[str, Tuple[int, int, int]], Tuple[str, Tuple[int, int, int]], Tuple[str, Tuple[int, int, int]]]]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "return_value", "type": "str"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "d", "type": "bokeh.document.document.Document"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "return_value", "type": "List[Union[str, bokeh.document.document.Document]]"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "expected_args", "type": "Tuple[Dict[str, str]]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "expected_kwargs", "type": "Dict[str, Dict[str, Dict[str, None]]]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "install_notebook_hook", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "install_notebook_hook", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "mock_get_comms", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "State", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "Document", "type": "Type[bokeh.document.document.Document]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "mock_notebook_content", "type": "Any"}, {"lineNumber": 95, "col_offset": 77, "nodeName": "d", "type": "bokeh.document.document.Document"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "_id", "type": "None"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "show_doc", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "s", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "_hold", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 108, "col_offset": 54, "nodeName": "expected_args", "type": "Tuple[Dict[str, str]]"}, {"lineNumber": 109, "col_offset": 54, "nodeName": "expected_kwargs", "type": "Dict[str, Dict[str, Dict[str, None]]]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "binb", "type": "module"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "install_notebook_hook", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "binb", "type": "module"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "mock__publish_display_data", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "binb", "type": "module"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "Obj", "type": "Type[Any]"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "d", "type": "bokeh.document.document.Document"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "mock__publish_display_data", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "_HOOKS", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "_HOOKS", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "_HOOKS", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "binb", "type": "module"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "_HOOKS", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "_HOOKS", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "_HOOKS", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "mock__publish_display_data", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "mock__publish_display_data", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "binb", "type": "module"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "binb", "type": "module"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "binb", "type": "module"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "binb", "type": "module"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "binb", "type": "module"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "binb", "type": "module"}]