[{"lineNumber": 27, "col_offset": 9, "nodeName": "HasProps", "type": "Type[bokeh.core.has_props.HasProps]"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "test_fail", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "test_panda_series", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_numpyarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "test_numpyint", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "test_numpyfloat", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "test_numpybool_", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_numpydatetime64", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "test_time", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "test_relativedelta", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "test_decimal", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "test_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "test_hasprops", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "test_color", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_pd_timestamp", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "test_with_basic", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "test_pretty", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "test_with_np_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "test_with_pd_series", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "test_nans_and_infs", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "test_nans_and_infs_pandas", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "test_pandas_datetime_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "test_builtin_datetime_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "test_builtin_timedelta_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "test_deque", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "test_bad_kwargs", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "is_pandas", "type": "bool"}, {"lineNumber": 17, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "foo", "type": "bokeh.core.properties.Int"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "bar", "type": "bokeh.core.properties.String"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 211, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "is_pandas", "type": "bool"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "Int", "type": "Type[bokeh.core.properties.Int]"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "String", "type": "Type[bokeh.core.properties.String]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "npint", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "npfloat", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "nptrue", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "npdt64", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "dttime", "type": "datetime.time"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "rdelt", "type": "dateutil.relativedelta.relativedelta"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "dec", "type": "decimal.Decimal"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "m", "type": "bokeh.models.ranges.Range1d"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "hp", "type": "HP"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "foo", "type": "int"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "bar", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "c", "type": "bokeh.colors.RGB"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "c", "type": "bokeh.colors.RGB"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "ts", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "serialize_json", "type": "Callable[..., str]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "serialized", "type": "str"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "serialized", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "a", "type": "datetime.date"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "b", "type": "datetime.datetime"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "delta", "type": "datetime.timedelta"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "serialized", "type": "str"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "BokehJSONEncoder", "type": "Type[bokeh.core.json_encoder.BokehJSONEncoder]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "asscalar", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 59, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "float64", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 61, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "bool_", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 60, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "datetime64", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "time", "type": "Type[datetime.time]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "relativedelta", "type": "Type[dateutil.relativedelta.relativedelta]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 59, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "Decimal", "type": "Type[decimal.Decimal]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 57, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "Range1d", "type": "Type[bokeh.models.ranges.Range1d]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 50, "nodeName": "ref", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "HP", "type": "Type[HP]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 56, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "hp", "type": "HP"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "hp", "type": "HP"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "RGB", "type": "Type[bokeh.colors.RGB]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 55, "nodeName": "string_types", "type": "Tuple[Type[str], Type[unicode]]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "RGB", "type": "Type[bokeh.colors.RGB]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 55, "nodeName": "string_types", "type": "Tuple[Type[str], Type[unicode]]"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "Timestamp", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "serialized", "type": "str"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "Series", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 150, "col_offset": 36, "nodeName": "arr", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "deserialize", "type": "Any"}, {"lineNumber": 151, "col_offset": 40, "nodeName": "serialized", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "deserialize", "type": "Any"}, {"lineNumber": 165, "col_offset": 40, "nodeName": "serialized", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "baseline", "type": "Dict[unicode, List[int]]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "date", "type": "Type[datetime.date]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "serialized", "type": "str"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "baseline", "type": "Dict[unicode, List[float]]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "timedelta", "type": "Type[datetime.timedelta]"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 198, "col_offset": 36, "nodeName": "delta", "type": "datetime.timedelta"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "serialized", "type": "str"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 208, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 209, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 209, "col_offset": 38, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "default", "type": "Any"}, {"lineNumber": 43, "col_offset": 46, "nodeName": "s", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "a", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "int64", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "npint", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 51, "nodeName": "npint", "type": "Any"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 46, "nodeName": "npfloat", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "npfloat", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "nptrue", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "nptrue", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "npdt64", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 51, "nodeName": "npdt64", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "dt", "type": "module"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "dttime", "type": "datetime.time"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 51, "nodeName": "dttime", "type": "datetime.time"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "rd", "type": "module"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "rdelt", "type": "dateutil.relativedelta.relativedelta"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "decimal", "type": "module"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "dec", "type": "decimal.Decimal"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "dec", "type": "decimal.Decimal"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "m", "type": "bokeh.models.ranges.Range1d"}, {"lineNumber": 85, "col_offset": 50, "nodeName": "m", "type": "bokeh.models.ranges.Range1d"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 51, "nodeName": "m", "type": "bokeh.models.ranges.Range1d"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 46, "nodeName": "hp", "type": "HP"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 51, "nodeName": "hp", "type": "HP"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "hp", "type": "HP"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "hp", "type": "HP"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "hp", "type": "HP"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 51, "nodeName": "hp", "type": "HP"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "c", "type": "bokeh.colors.RGB"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 51, "nodeName": "c", "type": "bokeh.colors.RGB"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "c", "type": "bokeh.colors.RGB"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 51, "nodeName": "c", "type": "bokeh.colors.RGB"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "tslib", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "default", "type": "Any"}, {"lineNumber": 113, "col_offset": 46, "nodeName": "ts", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "s", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "nan", "type": "Any"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "inf", "type": "Any"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "pd", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "pd", "type": "Any"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "idx", "type": "Any"}, {"lineNumber": 162, "col_offset": 47, "nodeName": "idx", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 46, "nodeName": "vals", "type": "Any"}, {"lineNumber": 164, "col_offset": 45, "nodeName": "index", "type": "Any"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "dt", "type": "module"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "dt", "type": "module"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "dt", "type": "module"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 209, "col_offset": 38, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "inf", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "nan", "type": "Any"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "inf", "type": "Any"}, {"lineNumber": 163, "col_offset": 46, "nodeName": "df", "type": "Any"}, {"lineNumber": 164, "col_offset": 45, "nodeName": "df", "type": "Any"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "a", "type": "datetime.date"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "b", "type": "datetime.datetime"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "total_seconds", "type": "Callable[[], float]"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 51, "nodeName": "inf", "type": "Any"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "mktime", "type": "Callable[[Union[Tuple[int, int, int, int, int, int, int, int, int], time.struct_time]], float]"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "mktime", "type": "Callable[[Union[Tuple[int, int, int, int, int, int, int, int, int], time.struct_time]], float]"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "delta", "type": "datetime.timedelta"}, {"lineNumber": 149, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "time", "type": "module"}, {"lineNumber": 189, "col_offset": 39, "nodeName": "timetuple", "type": "Callable[[], time.struct_time]"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "time", "type": "module"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "timetuple", "type": "Callable[[], time.struct_time]"}, {"lineNumber": 189, "col_offset": 39, "nodeName": "a", "type": "datetime.date"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "b", "type": "datetime.datetime"}]