[{"lineNumber": 99, "col_offset": 0, "nodeName": "test_reset_output", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 17, "col_offset": 44, "nodeName": "verify_api", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "Test_api", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 16, "col_offset": 42, "nodeName": "DEV", "type": "str"}, {"lineNumber": 16, "col_offset": 47, "nodeName": "GENERAL", "type": "str"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "GENERAL", "type": "str"}, {"lineNumber": 47, "col_offset": 7, "nodeName": "DEV", "type": "str"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "verify_api", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "bio", "type": "module"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "api", "type": "Dict[str, Union[Tuple[Tuple[str, Tuple[int, int, int]], Tuple[str, Tuple[int, int, int]], Tuple[str, Tuple[int, int, int]]], Tuple[()]]]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "original_call_count", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "default_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "default_load_jupyter_args", "type": "Tuple[None, bool, bool, int]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "load_jupyter_args", "type": "Tuple[bokeh.resources.Resources, bool, bool, int]"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "reset", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "reset_output", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "default_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "output_notebook", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "output_notebook", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "bio", "type": "module"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "reset", "type": "Any"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "original_call_count", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "bio", "type": "module"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "mock_output_file", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "bio", "type": "module"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "mock_output_file", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "bio", "type": "module"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "mock_run_notebook_hook", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 88, "col_offset": 76, "nodeName": "default_load_jupyter_args", "type": "Tuple[None, bool, bool, int]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "Resources", "type": "Type[bokeh.resources.Resources]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "bio", "type": "module"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "load_jupyter_args", "type": "Tuple[bokeh.resources.Resources, bool, bool, int]"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "mock_run_notebook_hook", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 96, "col_offset": 76, "nodeName": "load_jupyter_args", "type": "Tuple[bokeh.resources.Resources, bool, bool, int]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "curstate", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "mock_output_file", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "mock_output_file", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "mock_output_file", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "mock_output_file", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "mock_run_notebook_hook", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "mock_run_notebook_hook", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "mock_run_notebook_hook", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "mock_run_notebook_hook", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "curstate", "type": "Any"}]