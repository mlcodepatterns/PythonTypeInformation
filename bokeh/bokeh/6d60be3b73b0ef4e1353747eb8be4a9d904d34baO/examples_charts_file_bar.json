[{"lineNumber": 10, "col_offset": 0, "nodeName": "width", "type": "int"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "height", "type": "int"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "legend_position", "type": "str"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "countries", "type": "List[Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "gold", "type": "numpy.ndarray"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "silver", "type": "numpy.ndarray"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "bronze", "type": "numpy.ndarray"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "medals", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "df", "type": "Any"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "mixed", "type": "Any"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "categories", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 18, "col_offset": 7, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 23, "col_offset": 9, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "Bar", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "medals", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "countries", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 5, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "medals", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "Bar", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "rand", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "Bar", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "Bar", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "Bar", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "mixed", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "Bar", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "mixed", "type": "Any"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "output_file", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "show", "type": "Callable[..., None]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 14, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 18, "col_offset": 7, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 66, "nodeName": "float", "type": "Any"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 70, "nodeName": "float", "type": "Any"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 70, "nodeName": "float", "type": "Any"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "bronze", "type": "numpy.ndarray"}, {"lineNumber": 23, "col_offset": 43, "nodeName": "silver", "type": "numpy.ndarray"}, {"lineNumber": 23, "col_offset": 56, "nodeName": "gold", "type": "numpy.ndarray"}, {"lineNumber": 26, "col_offset": 67, "nodeName": "legend_position", "type": "str"}, {"lineNumber": 27, "col_offset": 47, "nodeName": "width", "type": "int"}, {"lineNumber": 27, "col_offset": 61, "nodeName": "height", "type": "int"}, {"lineNumber": 32, "col_offset": 5, "nodeName": "pd", "type": "Any"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "countries", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 51, "nodeName": "legend_position", "type": "str"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "width", "type": "int"}, {"lineNumber": 36, "col_offset": 61, "nodeName": "height", "type": "int"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "categories", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "width", "type": "int"}, {"lineNumber": 46, "col_offset": 59, "nodeName": "height", "type": "int"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "categories", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "width", "type": "int"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "height", "type": "int"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "categories", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "width", "type": "int"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "height", "type": "int"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "categories", "type": "List[str]"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "width", "type": "int"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "height", "type": "int"}, {"lineNumber": 69, "col_offset": 5, "nodeName": "vplot", "type": "Callable[..., Any]"}, {"lineNumber": 14, "col_offset": 40, "nodeName": "original_data", "type": "Any"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 18, "col_offset": 40, "nodeName": "abbr", "type": "Any"}, {"lineNumber": 18, "col_offset": 48, "nodeName": "countries", "type": "List[Any]"}, {"lineNumber": 18, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 44, "nodeName": "abbr", "type": "Any"}, {"lineNumber": 19, "col_offset": 52, "nodeName": "countries", "type": "List[Any]"}, {"lineNumber": 19, "col_offset": 70, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 44, "nodeName": "abbr", "type": "Any"}, {"lineNumber": 20, "col_offset": 52, "nodeName": "countries", "type": "List[Any]"}, {"lineNumber": 20, "col_offset": 70, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "Range1d", "type": "Type[bokeh.models.ranges.Range1d]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "hplot", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "dict_stacked", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "df_grouped", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "hplot", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 10, "nodeName": "np_stacked", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "np_negative_grouped", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "hplot", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 10, "nodeName": "np_mixed_grouped", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "np_custom", "type": "Any"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 65, "nodeName": "d", "type": "Any"}, {"lineNumber": 16, "col_offset": 46, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "abbr", "type": "Any"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "abbr", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "abbr", "type": "Any"}, {"lineNumber": 16, "col_offset": 51, "nodeName": "x", "type": "Any"}]