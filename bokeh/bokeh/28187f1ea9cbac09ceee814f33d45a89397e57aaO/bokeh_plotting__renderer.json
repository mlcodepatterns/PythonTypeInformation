[{"lineNumber": 51, "col_offset": 0, "nodeName": "get_default_color", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "create_renderer", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "make_glyph", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "pop_visuals", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 0, "nodeName": "_convert_data_source", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 0, "nodeName": "_pop_renderer_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 0, "nodeName": "_process_sequence_literals", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "pd", "type": "Any"}, {"lineNumber": 12, "col_offset": 6, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 36, "col_offset": 5, "nodeName": "import_optional", "type": "Any"}, {"lineNumber": 64, "col_offset": 7, "nodeName": "plot", "type": "None"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "is_user_source", "type": "bool"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "legend_kwarg", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "renderer_kws", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "source", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "glyph_visuals", "type": "Dict[Any, Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "incompatible_literal_spec_values", "type": "List[str]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "incompatible_literal_spec_values", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "incompatible_literal_spec_values", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 7, "nodeName": "incompatible_literal_spec_values", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "nonselection_visuals", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 7, "nodeName": "legend_kwarg", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "glyph_renderer", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "kws", "type": "Dict[Any, Any]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "defaults", "type": "Dict[str, str]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "trait_defaults", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "glyphprops", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "pname", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "trait", "type": "Any"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "traits", "type": "Set[Any]"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "is_user_source", "type": "bool"}, {"lineNumber": 239, "col_offset": 7, "nodeName": "is_user_source", "type": "bool"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "is_user_source", "type": "bool"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "incompatible_literal_spec_values", "type": "List[Any]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "dataspecs", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "incompatible_literal_spec_values", "type": "List[Any]"}, {"lineNumber": 12, "col_offset": 6, "nodeName": "logging", "type": "module"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "renderers", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "renderers", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "renderers", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "num_renderers", "type": "int"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "_convert_data_source", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "pop_legend_kwarg", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "_pop_renderer_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "renderer_kws", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "pop_visuals", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "_process_sequence_literals", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 67, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 91, "col_offset": 79, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 87, "nodeName": "source", "type": "Any"}, {"lineNumber": 91, "col_offset": 95, "nodeName": "is_user_source", "type": "bool"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "_process_sequence_literals", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 67, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 92, "col_offset": 79, "nodeName": "glyph_visuals", "type": "Dict[Any, Any]"}, {"lineNumber": 92, "col_offset": 94, "nodeName": "source", "type": "Any"}, {"lineNumber": 92, "col_offset": 102, "nodeName": "is_user_source", "type": "bool"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "pop_visuals", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 39, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 7, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "selection_visuals", "type": "Dict[Any, Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "selection_visuals", "type": "None"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "hover_visuals", "type": "Dict[Any, Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "hover_visuals", "type": "None"}, {"lineNumber": 112, "col_offset": 7, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "muted_visuals", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "muted_visuals", "type": "None"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "GlyphRenderer", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "append", "type": "Any"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "glyph_renderer", "type": "Any"}, {"lineNumber": 136, "col_offset": 7, "nodeName": "extra", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 10, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "extra", "type": "Dict[Any, Any]"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "ft", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "traits", "type": "Set[Any]"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "properties", "type": "Any"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "is_visual", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "glyphprops", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "source", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "pop", "type": "Any"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "dataspecs_with_props", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "val", "type": "Any"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 305, "col_offset": 11, "nodeName": "is_user_source", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "plot", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "renderers", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "colors", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "colors", "type": "List[str]"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 97, "col_offset": 92, "nodeName": "glyph_visuals", "type": "Dict[Any, Any]"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "pop_visuals", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 101, "col_offset": 52, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "pop_visuals", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "pop_visuals", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 10, "nodeName": "renderer_kws", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "renderers", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "update_legend", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "plot", "type": "Any"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "legend_kwarg", "type": "Any"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "glyph_renderer", "type": "Any"}, {"lineNumber": 138, "col_offset": 10, "nodeName": "kws", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "kws", "type": "Dict[Any, Any]"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "kws", "type": "Dict[Any, Any]"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "split", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "ft", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "feature", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "trait", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "split_feature_trait", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 45, "nodeName": "ft", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "defaults", "type": "Dict[nothing, nothing]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "defaults", "type": "Dict[str, str]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "trait_defaults", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "get_default_color", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "trait_defaults", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "trait", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "split_feature_trait", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "pname", "type": "Any"}, {"lineNumber": 207, "col_offset": 27, "nodeName": "props", "type": "Dict[str, Any]"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "trait", "type": "Any"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "glyphprops", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "source", "type": "Any"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "attr", "type": "str"}, {"lineNumber": 259, "col_offset": 26, "nodeName": "RENDERER_ARGS", "type": "List[str]"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 261, "col_offset": 49, "nodeName": "ColumnDataSource", "type": "Any"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "val", "type": "Any"}, {"lineNumber": 274, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "var", "type": "Any"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "dataspecs", "type": "Any"}, {"lineNumber": 282, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "val", "type": "Any"}, {"lineNumber": 282, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 289, "col_offset": 22, "nodeName": "val", "type": "Any"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "var", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "renderers", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "num_renderers", "type": "int"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "_GLYPH_SOURCE_MSG", "type": "str"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "x", "type": "str"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 90, "nodeName": "glyph_visuals", "type": "Dict[Any, Any]"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 106, "col_offset": 38, "nodeName": "x", "type": "str"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 82, "nodeName": "glyph_visuals", "type": "Dict[Any, Any]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "x", "type": "str"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 82, "nodeName": "glyph_visuals", "type": "Dict[Any, Any]"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "make_glyph", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "glyph_visuals", "type": "Dict[Any, Any]"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "make_glyph", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "nonselection_visuals", "type": "Dict[Any, Any]"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "make_glyph", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 120, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 55, "nodeName": "selection_visuals", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "make_glyph", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 51, "nodeName": "hover_visuals", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "make_glyph", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "glyphclass", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 51, "nodeName": "muted_visuals", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "plot", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "ft", "type": "Any"}, {"lineNumber": 187, "col_offset": 37, "nodeName": "ft", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "feature", "type": "Any"}, {"lineNumber": 192, "col_offset": 65, "nodeName": "trait", "type": "Any"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "prefix", "type": "str"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "pname", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "trait", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "props", "type": "Dict[str, Any]"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "prefix", "type": "str"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "trait", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "source", "type": "Any"}, {"lineNumber": 241, "col_offset": 34, "nodeName": "ColumnarDataSource", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "source", "type": "Any"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "attr", "type": "str"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 270, "col_offset": 26, "nodeName": "val", "type": "Any"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "Iterable", "type": "Type[Iterable[Any]]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "property", "type": "Any"}, {"lineNumber": 286, "col_offset": 48, "nodeName": "ColorSpec", "type": "Any"}, {"lineNumber": 286, "col_offset": 63, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 286, "col_offset": 74, "nodeName": "val", "type": "Any"}, {"lineNumber": 286, "col_offset": 79, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 286, "col_offset": 113, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 290, "col_offset": 26, "nodeName": "property", "type": "Any"}, {"lineNumber": 290, "col_offset": 51, "nodeName": "ColorSpec", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 306, "col_offset": 52, "nodeName": "var", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 308, "col_offset": 23, "nodeName": "val", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "__view_model__", "type": "Any"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "nice_join", "type": "Any"}, {"lineNumber": 94, "col_offset": 57, "nodeName": "incompatible_literal_spec_values", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "x", "type": "str"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "x", "type": "str"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "x", "type": "str"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "ft", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "pname", "type": "Any"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "props", "type": "Dict[str, Any]"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "prefix", "type": "str"}, {"lineNumber": 208, "col_offset": 45, "nodeName": "pname", "type": "Any"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "trait", "type": "Any"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "glyphprops", "type": "Any"}, {"lineNumber": 211, "col_offset": 57, "nodeName": "props", "type": "Dict[str, Any]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "props", "type": "Dict[str, Any]"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "trait", "type": "Any"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "override_defaults", "type": "Dict[nothing, nothing]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "traits", "type": "Set[Any]"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "ColumnDataSource", "type": "Any"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "source", "type": "Any"}, {"lineNumber": 286, "col_offset": 90, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 286, "col_offset": 94, "nodeName": "val", "type": "Any"}, {"lineNumber": 302, "col_offset": 17, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "incompatible_literal_spec_values", "type": "List[Any]"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "source", "type": "Any"}, {"lineNumber": 308, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "var", "type": "Any"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "prefix", "type": "str"}, {"lineNumber": 211, "col_offset": 48, "nodeName": "trait", "type": "Any"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "pname", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "override_defaults", "type": "Dict[nothing, nothing]"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "pname", "type": "Any"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "defaults", "type": "Dict[str, str]"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "with_traceback", "type": "Callable[[Optional[Any]], BaseException]"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "dataspecs", "type": "Any"}, {"lineNumber": 286, "col_offset": 117, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 286, "col_offset": 128, "nodeName": "v", "type": "Any"}, {"lineNumber": 286, "col_offset": 149, "nodeName": "v", "type": "Any"}, {"lineNumber": 286, "col_offset": 154, "nodeName": "val", "type": "Any"}, {"lineNumber": 290, "col_offset": 26, "nodeName": "dataspecs", "type": "Any"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 291, "col_offset": 45, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 302, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 303, "col_offset": 22, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 212, "col_offset": 34, "nodeName": "prefix", "type": "str"}, {"lineNumber": 212, "col_offset": 41, "nodeName": "trait", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "pname", "type": "Any"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "trait", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 220, "col_offset": 28, "nodeName": "defaults", "type": "Dict[str, str]"}, {"lineNumber": 223, "col_offset": 13, "nodeName": "trait", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "trait_defaults", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "message", "type": "Any"}, {"lineNumber": 286, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 286, "col_offset": 132, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 286, "col_offset": 139, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 290, "col_offset": 36, "nodeName": "var", "type": "Any"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 291, "col_offset": 45, "nodeName": "val", "type": "Any"}, {"lineNumber": 293, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 293, "col_offset": 46, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "pname", "type": "Any"}, {"lineNumber": 220, "col_offset": 37, "nodeName": "pname", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "result", "type": "Dict[Any, Any]"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "trait_defaults", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "err", "type": "ValueError"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 250, "col_offset": 33, "nodeName": "msg", "type": "str"}, {"lineNumber": 250, "col_offset": 53, "nodeName": "exc_info", "type": "Callable[[], Union[Tuple[Type[BaseException], BaseException, types.TracebackType], Tuple[None, None, None]]]"}, {"lineNumber": 293, "col_offset": 21, "nodeName": "val", "type": "Any"}, {"lineNumber": 293, "col_offset": 46, "nodeName": "val", "type": "Any"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "kind", "type": "Any"}, {"lineNumber": 295, "col_offset": 47, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 303, "col_offset": 61, "nodeName": "var", "type": "Any"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "pname", "type": "Any"}, {"lineNumber": 224, "col_offset": 43, "nodeName": "trait", "type": "Any"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 247, "col_offset": 39, "nodeName": "source", "type": "Any"}, {"lineNumber": 250, "col_offset": 53, "nodeName": "sys", "type": "module"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 295, "col_offset": 47, "nodeName": "val", "type": "Any"}, {"lineNumber": 297, "col_offset": 73, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 300, "col_offset": 26, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "val", "type": "Any"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 297, "col_offset": 46, "nodeName": "kind", "type": "Any"}, {"lineNumber": 297, "col_offset": 73, "nodeName": "val", "type": "Any"}, {"lineNumber": 297, "col_offset": 91, "nodeName": "shape", "type": "Any"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "val", "type": "Any"}, {"lineNumber": 297, "col_offset": 46, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 297, "col_offset": 91, "nodeName": "val", "type": "Any"}, {"lineNumber": 300, "col_offset": 40, "nodeName": "var", "type": "Any"}, {"lineNumber": 300, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 297, "col_offset": 46, "nodeName": "val", "type": "Any"}, {"lineNumber": 300, "col_offset": 40, "nodeName": "val", "type": "Any"}, {"lineNumber": 300, "col_offset": 40, "nodeName": "join", "type": "Callable"}, {"lineNumber": 300, "col_offset": 50, "nodeName": "map", "type": "Callable"}, {"lineNumber": 300, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 300, "col_offset": 59, "nodeName": "shape", "type": "Any"}, {"lineNumber": 300, "col_offset": 59, "nodeName": "val", "type": "Any"}]