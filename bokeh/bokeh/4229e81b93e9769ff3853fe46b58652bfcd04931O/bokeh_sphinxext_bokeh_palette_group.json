[{"lineNumber": 83, "col_offset": 0, "nodeName": "html_visit_bokeh_palette_group", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "setup", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "General", "type": "Any"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "Element", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "Directive", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "run", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "has_content", "type": "bool"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "required_arguments", "type": "int"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "names", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "names", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "SkipNode", "type": "Any"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "logging", "type": "module"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "node", "type": "bokeh_palette_group"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "append", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "_BOOTSTRAP_CSS", "type": "unicode"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "append", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "bp", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "group", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "palettes", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "numbers", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "html", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "append", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "append", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "_BOOTSTRAP_JS", "type": "unicode"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "bokeh_palette_group", "type": "Type[bokeh_palette_group]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "add_directive", "type": "Any"}, {"lineNumber": 103, "col_offset": 45, "nodeName": "BokehPaletteGroupDirective", "type": "Type[BokehPaletteGroupDirective]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "bokeh_palette_group", "type": "Type[bokeh_palette_group]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "node", "type": "bokeh_palette_group"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "arguments", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "node", "type": "bokeh_palette_group"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "body", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "body", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "group", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "SphinxError", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "group", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "render", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "html", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "body", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "body", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "app", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "app", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "self", "type": "BokehPaletteGroupDirective"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "PALETTE_GROUP_DETAIL", "type": "Any"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 94, "col_offset": 62, "nodeName": "numbers", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 80, "nodeName": "palettes", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "body", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 44, "nodeName": "html_visit_bokeh_palette_group", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 60, "nodeName": "node", "type": "Any"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "palettes", "type": "Any"}, {"lineNumber": 93, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}]