[{"lineNumber": 18, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "test_fail", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "test_panda_series", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_numpyarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "test_numpyint", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_numpyfloat", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "test_numpybool_", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "test_pd_timestamp", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_with_basic", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "test_with_np_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_with_pd_series", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_nans_and_infs", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "test_nans_and_infs_pandas", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "test_pandas_datetime_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "test_builtin_datetime_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "test_builtin_timedelta_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "is_pandas", "type": "bool"}, {"lineNumber": 14, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 143, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "is_pandas", "type": "bool"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "npint", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "npfloat", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "nptrue", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "ts", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "serialize_json", "type": "Callable[..., str]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "serialized", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "serialized", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "a", "type": "datetime.date"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "b", "type": "datetime.datetime"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "delta", "type": "datetime.timedelta"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "serialized", "type": "str"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "BokehJSONEncoder", "type": "Type[bokeh.core.json_encoder.BokehJSONEncoder]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 25, "col_offset": 37, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "asscalar", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 59, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "float64", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 61, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "bool_", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 60, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "Timestamp", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "serialized", "type": "str"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "Series", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "arr", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "deserialize", "type": "Any"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "serialized", "type": "Any"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "deserialize", "type": "Any"}, {"lineNumber": 103, "col_offset": 40, "nodeName": "serialized", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "baseline", "type": "Dict[unicode, List[int]]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "date", "type": "Type[datetime.date]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "serialized", "type": "str"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "baseline", "type": "Dict[unicode, List[float]]"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "timedelta", "type": "Type[datetime.timedelta]"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 136, "col_offset": 36, "nodeName": "delta", "type": "datetime.timedelta"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "serialized", "type": "str"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "baseline", "type": "Dict[unicode, int]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 25, "col_offset": 37, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "default", "type": "Any"}, {"lineNumber": 30, "col_offset": 46, "nodeName": "s", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "a", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "int64", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 46, "nodeName": "npint", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 51, "nodeName": "npint", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 46, "nodeName": "npfloat", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 51, "nodeName": "npfloat", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "nptrue", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "default", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "nptrue", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "tslib", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "default", "type": "Any"}, {"lineNumber": 54, "col_offset": 46, "nodeName": "ts", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "serialize", "type": "Callable[..., str]"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "s", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "nan", "type": "Any"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "inf", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "pd", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "deserialized", "type": "Any"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "pd", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "idx", "type": "Any"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "idx", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 46, "nodeName": "vals", "type": "Any"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "index", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "dt", "type": "module"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "dt", "type": "module"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "dt", "type": "module"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 25, "col_offset": 37, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "encoder", "type": "bokeh.core.json_encoder.BokehJSONEncoder"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "self", "type": "TestSerializeJson"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "inf", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "nan", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "inf", "type": "Any"}, {"lineNumber": 101, "col_offset": 46, "nodeName": "df", "type": "Any"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "df", "type": "Any"}, {"lineNumber": 123, "col_offset": 44, "nodeName": "a", "type": "datetime.date"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "b", "type": "datetime.datetime"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "self", "type": "TestBokehJSONEncoder"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "inf", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "mktime", "type": "Callable[[Union[Tuple[int, int, int, int, int, int, int, int, int], time.struct_time]], float]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "mktime", "type": "Callable[[Union[Tuple[int, int, int, int, int, int, int, int, int], time.struct_time]], float]"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "time", "type": "module"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "timetuple", "type": "Callable[[], time.struct_time]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "time", "type": "module"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "timetuple", "type": "Callable[[], time.struct_time]"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "a", "type": "datetime.date"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "b", "type": "datetime.datetime"}]