[{"lineNumber": 47, "col_offset": 0, "nodeName": "test_error_decorator_code", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "test_warning_decorator_code", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_error_decorator_custom", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "test_warning_decorator_custom", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "Model", "type": "Type[bokeh.model.Model]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "code", "type": "int"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "ec", "type": "Dict[int, Tuple[str, str]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "code", "type": "int"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "wc", "type": "Dict[int, Tuple[str, str]]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "foo", "type": "bokeh.core.property.primitive.Int"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "m", "type": "Mod"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "m", "type": "Mod"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "called", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "m", "type": "Mod"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "called", "type": "Any"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "Int", "type": "Type[bokeh.core.property.primitive.Int]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "Mod", "type": "Type[Mod]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "check_integrity", "type": "Callable[[Any], None]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "called", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "called", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "Mod", "type": "Type[Mod]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "check_integrity", "type": "Callable[[Any], None]"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "mock_error", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "called", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "Mod", "type": "Type[Mod]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "check_integrity", "type": "Callable[[Any], None]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "called", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "mock_warn", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "good", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "bad", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "good", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "bad", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "foo", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "foo", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "v", "type": "module"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "m", "type": "Mod"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "mock_error", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "mock_warn", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "v", "type": "module"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "m", "type": "Mod"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "mock_warn", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "v", "type": "module"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "m", "type": "Mod"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "mock_error", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "good", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "bad", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "good", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "bad", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "code", "type": "int"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "ec", "type": "Dict[int, Tuple[str, str]]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "code", "type": "int"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "wc", "type": "Dict[int, Tuple[str, str]]"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "code", "type": "int"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "code", "type": "int"}]