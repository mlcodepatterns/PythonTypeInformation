[{"lineNumber": 70, "col_offset": 0, "nodeName": "test_plot_add_annotation_method", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "test_responsive_property_is_false_by_default", "type": "Callable[[], Any]"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "test_string_arg", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_type_arg", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "test_kwargs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_too_many_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "test_no_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_arg_and_kwarg", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "plot", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "label", "type": "bokeh.models.annotations.Label"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "plot", "type": "Any"}, {"lineNumber": 89, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "_plot", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "kw", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "figure", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "Label", "type": "Type[bokeh.models.annotations.Label]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "add_annotation", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "label", "type": "bokeh.models.annotations.Label"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "label", "type": "bokeh.models.annotations.Label"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "renderers", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "figure", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "responsive", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestPlotSelect"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "figure", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "circle", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "select", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "called", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "select", "type": "Any"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "PanTool", "type": "Type[bokeh.models.tools.PanTool]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "called", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "select", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "called", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 43, "col_offset": 52, "nodeName": "kw", "type": "Dict[Any, Any]"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "add_annotation", "type": "Any"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "add_annotation", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "plot", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "plot", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "plot", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_plot", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "_plot", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "mock_find", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 52, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "_plot", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "mock_find", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 52, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "GlyphRenderer", "type": "Type[bokeh.models.renderers.GlyphRenderer]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "_plot", "type": "Any"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "kw", "type": "Dict[Any, Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "mock_find", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "select", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestPlotSelect"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "exception", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "select", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestPlotSelect"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "exception", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "select", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestPlotSelect"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "exception", "type": "Any"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "plot", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "Range1d", "type": "Type[bokeh.models.ranges.Range1d]"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "plot", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "Label", "type": "Type[bokeh.models.annotations.Label]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestPlotSelect"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 36, "col_offset": 62, "nodeName": "PanTool", "type": "Type[bokeh.models.tools.PanTool]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "self", "type": "TestPlotSelect"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "_plot", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "self", "type": "TestPlotSelect"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "_plot", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "self", "type": "TestPlotSelect"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "_plot", "type": "Any"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "PanTool", "type": "Type[bokeh.models.tools.PanTool]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "mock_find", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "mock_find", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "mock_find", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "TestPlotSelect"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "TestPlotSelect"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "TestPlotSelect"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "figure", "type": "Callable[..., Any]"}]