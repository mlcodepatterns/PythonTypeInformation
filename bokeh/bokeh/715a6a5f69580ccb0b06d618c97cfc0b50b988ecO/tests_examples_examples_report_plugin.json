[{"lineNumber": 21, "col_offset": 0, "nodeName": "pytest_addoption", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "get_all_examples", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "pytest_generate_tests", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "pytest_runtest_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "pytest_unconfigure", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "report", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "_examples", "type": "None"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "_warned", "type": "bool"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "_appendrow", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "_write_report", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "append_pass", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "append_failure", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "append_error", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "append_skipped", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "pytest_runtest_logreport", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "pytest_sessionfinish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "pytest_terminal_summary", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "_examples", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "examples_report", "type": "Any"}, {"lineNumber": 87, "col_offset": 7, "nodeName": "examples_report", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "config", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "addoption", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "addoption", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "addoption", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "addoption", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "addoption", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "addoption", "type": "Any"}, {"lineNumber": 45, "col_offset": 7, "nodeName": "_examples", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_examples", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "_examples", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "fixturenames", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "examples", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "fixturenames", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "config", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "request", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "report_path", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "report_path", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "diff_ref", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "diff_ref", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "examples", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "examples_report", "type": "ExamplesTestReport"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "report_path", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "report_path", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "examples", "type": "Dict[Any, Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "diff", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "diff_ref", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "entries", "type": "List[Tuple[Any, bool, bool]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "errors", "type": "int"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "failed", "type": "int"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "passed", "type": "int"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "skipped", "type": "int"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "xfailed", "type": "int"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "xpassed", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "skipped", "type": "bool"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "failed", "type": "bool"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "match", "type": "Optional[Match[Any]]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "diff_ref", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "diff_ref", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "html", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "passed", "type": "int"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "errors", "type": "int"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "passed", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "upload", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 23, "col_offset": 86, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "resolve_ref", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "collect_examples", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "_diff_ref", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "diff_ref", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "_upload", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "upload", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "no_js", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "get_all_examples", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "config", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "fixturenames", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "file_examples", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "fixturenames", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "server_examples", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "fixturenames", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "notebook_examples", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "item", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "option", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "no_js", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "_warned", "type": "bool"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "unregister", "type": "Any"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "html", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "config", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "option", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "option", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "get_all_examples", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "config", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "ExamplesTestReport", "type": "Type[ExamplesTestReport]"}, {"lineNumber": 102, "col_offset": 52, "nodeName": "report_path", "type": "Any"}, {"lineNumber": 102, "col_offset": 65, "nodeName": "diff_ref", "type": "Any"}, {"lineNumber": 102, "col_offset": 75, "nodeName": "examples", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "register", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "examples_report", "type": "ExamplesTestReport"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "expanduser", "type": "Callable"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "report_path", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "path", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "e", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "failed", "type": "bool"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "skipped", "type": "bool"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "search", "type": "Callable"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "match", "type": "Optional[Match[Any]]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "example_path", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "incremental", "type": "Any"}, {"lineNumber": 139, "col_offset": 92, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "template", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "option", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "render", "type": "Any"}, {"lineNumber": 148, "col_offset": 65, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "_appendrow", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "report", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "report", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "xpassed", "type": "int"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "failed", "type": "int"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "_appendrow", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "report", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "report", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "xfailed", "type": "int"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "skipped", "type": "int"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "report", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "failed", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "_write_report", "type": "Callable[[], Any]"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "option", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "entries", "type": "List[Tuple[Any, bool, bool]]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "write_sep", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "option", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "option", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "option", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "flags", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "no_js", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "e", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "parametrize", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "e", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "parametrize", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "e", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "parametrize", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "_warned", "type": "bool"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "option", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "warn", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "pluginmanager", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "config", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "pluginmanager", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "config", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 109, "col_offset": 60, "nodeName": "report_path", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "e", "type": "Any"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "e", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "examples", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "location", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "option", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "Template", "type": "Type[jinja2.environment.Template]"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "config", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "template", "type": "Any"}, {"lineNumber": 143, "col_offset": 39, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 143, "col_offset": 61, "nodeName": "diff_ref", "type": "Any"}, {"lineNumber": 143, "col_offset": 79, "nodeName": "entries", "type": "List[Tuple[Any, bool, bool]]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "report_path", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "html", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "_appendrow", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "report", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "_appendrow", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "report", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "_appendrow", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "report", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "_appendrow", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "report", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "when", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "report", "type": "Any"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "skipped", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "option", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "example", "type": "Any"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "_", "type": "bool"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "_", "type": "bool"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "upload_file_to_s3_by_job_id", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "report_path", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "upload_file_to_s3_by_job_id", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "log_file", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "terminalreporter", "type": "Any"}, {"lineNumber": 201, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 201, "col_offset": 79, "nodeName": "report_path", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "config", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "config", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "example", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "Flags", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "e", "type": "Any"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "examples", "type": "Any"}, {"lineNumber": 63, "col_offset": 53, "nodeName": "is_file", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 64, "col_offset": 57, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 64, "col_offset": 96, "nodeName": "file_examples", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "e", "type": "Any"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "examples", "type": "Any"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "is_server", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 67, "col_offset": 59, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 67, "col_offset": 100, "nodeName": "server_examples", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "e", "type": "Any"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "examples", "type": "Any"}, {"lineNumber": 69, "col_offset": 57, "nodeName": "is_notebook", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "metafunc", "type": "Any"}, {"lineNumber": 70, "col_offset": 61, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 70, "col_offset": 104, "nodeName": "notebook_examples", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "path", "type": "module"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "report", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "rsplit", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "entries", "type": "List[Tuple[Any, bool, bool]]"}, {"lineNumber": 133, "col_offset": 62, "nodeName": "failed", "type": "bool"}, {"lineNumber": 133, "col_offset": 70, "nodeName": "skipped", "type": "bool"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "_write_report", "type": "Callable[[], Any]"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "io", "type": "module"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "jinja2", "type": "module"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "read", "type": "Callable"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 143, "col_offset": 79, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "report_path", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "report_path", "type": "Any"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "io", "type": "module"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "report", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "append_pass", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "report", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "when", "type": "Any"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "report", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "upload_imgs", "type": "Any"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "option", "type": "Any"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "option", "type": "Any"}, {"lineNumber": 201, "col_offset": 79, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 63, "col_offset": 53, "nodeName": "e", "type": "Any"}, {"lineNumber": 64, "col_offset": 63, "nodeName": "path", "type": "Any"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "e", "type": "Any"}, {"lineNumber": 67, "col_offset": 65, "nodeName": "path", "type": "Any"}, {"lineNumber": 69, "col_offset": 57, "nodeName": "e", "type": "Any"}, {"lineNumber": 70, "col_offset": 67, "nodeName": "path", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "item", "type": "Any"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "os", "type": "module"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "examples", "type": "Dict[Any, Any]"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "__file__", "type": "str"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "report", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "append_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "report", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "append_failure", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 36, "nodeName": "report", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "append_skipped", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 32, "nodeName": "report", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "example", "type": "Any"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 64, "col_offset": 63, "nodeName": "e", "type": "Any"}, {"lineNumber": 64, "col_offset": 74, "nodeName": "e", "type": "Any"}, {"lineNumber": 64, "col_offset": 79, "nodeName": "file_examples", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 65, "nodeName": "e", "type": "Any"}, {"lineNumber": 67, "col_offset": 76, "nodeName": "e", "type": "Any"}, {"lineNumber": 67, "col_offset": 81, "nodeName": "server_examples", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 67, "nodeName": "e", "type": "Any"}, {"lineNumber": 70, "col_offset": 78, "nodeName": "e", "type": "Any"}, {"lineNumber": 70, "col_offset": 83, "nodeName": "notebook_examples", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "group", "type": "Callable"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 133, "col_offset": 47, "nodeName": "example_path", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "ExamplesTestReport"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "session", "type": "Any"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "session", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "match", "type": "Optional[Match[Any]]"}]