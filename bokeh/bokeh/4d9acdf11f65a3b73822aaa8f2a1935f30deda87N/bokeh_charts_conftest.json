[{"lineNumber": 23, "col_offset": 0, "nodeName": "test_data", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "wide_data_with_cat", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "df_with_cat_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "cat_list", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "cat_list", "type": "List[str]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "list_data", "type": "List[List[int]]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "array_data", "type": "List[numpy.ndarray]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "pd_data", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "records_data", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "auto_data", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "autompg", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "TestData", "type": "Type[TestData]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "copy", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "dict_data", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 18, "col_offset": 36, "nodeName": "dict_data", "type": "Dict[str, List[int]]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "to_dict", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestData"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "dict_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "cat_list", "type": "Any"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 15, "col_offset": 36, "nodeName": "item", "type": "List[int]"}, {"lineNumber": 15, "col_offset": 46, "nodeName": "item", "type": "List[int]"}, {"lineNumber": 15, "col_offset": 54, "nodeName": "list_data", "type": "List[List[int]]"}, {"lineNumber": 16, "col_offset": 34, "nodeName": "list_data", "type": "List[List[int]]"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "list_data", "type": "List[List[int]]"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "pd", "type": "Any"}, {"lineNumber": 18, "col_offset": 36, "nodeName": "self", "type": "TestData"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "pd_data", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 54, "nodeName": "self", "type": "TestData"}, {"lineNumber": 16, "col_offset": 34, "nodeName": "self", "type": "TestData"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "self", "type": "TestData"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "self", "type": "TestData"}]