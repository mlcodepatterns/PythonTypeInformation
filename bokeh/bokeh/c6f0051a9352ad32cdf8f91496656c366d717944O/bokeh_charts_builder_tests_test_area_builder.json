[{"lineNumber": 33, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "test_supported_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "y_jython", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "y_pypy", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "y_python", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "data_keys", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "_xy", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "data_keys", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "lvalues", "type": "List[List[int]]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "_xy", "type": "Union[List[List[int]], numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "xyvalues", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "area", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "y_0", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "y_1", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "y_2", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "y_python", "type": "Any"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "y_pypy", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "y_jython", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "lvalues", "type": "List[List[int]]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "area", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "xyvalues", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 50, "col_offset": 59, "nodeName": "xyvalues", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "create_chart", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "Area", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 38, "nodeName": "_xy", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "_builders", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 63, "nodeName": "data_keys", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 51, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 56, "col_offset": 58, "nodeName": "y_jython", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "y_pypy", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 58, "col_offset": 58, "nodeName": "y_python", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "x_range", "type": "Any"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "DataRange1d", "type": "Type[bokeh.models.ranges.DataRange1d]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "y_range", "type": "Any"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "Range1d", "type": "Type[bokeh.models.ranges.Range1d]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "start", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "end", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "_data", "type": "Any"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "_data", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "lvalues", "type": "List[List[int]]"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "create_chart", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "Area", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "_xy", "type": "Union[numpy.ndarray, List[List[int]]]"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "_builders", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "_groups", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 63, "nodeName": "data_keys", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 75, "col_offset": 51, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 76, "col_offset": 53, "nodeName": "y_0", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 77, "col_offset": 53, "nodeName": "y_1", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 78, "col_offset": 53, "nodeName": "y_2", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "x_range", "type": "Any"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "DataRange1d", "type": "Type[bokeh.models.ranges.DataRange1d]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "y_range", "type": "Any"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "Range1d", "type": "Type[bokeh.models.ranges.Range1d]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "start", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "end", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "_data", "type": "Any"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "_data", "type": "Any"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "pd", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "area", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "TestAreaBuilder"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "_groups", "type": "Any"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "TestAreaBuilder"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "TestAreaBuilder"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "area", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "TestAreaBuilder"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "area", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "y_range", "type": "Any"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "y_range", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "TestAreaBuilder"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "_source", "type": "Any"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "builder", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "area", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "TestAreaBuilder"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "builder", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "TestAreaBuilder"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "TestAreaBuilder"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "area", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "TestAreaBuilder"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "area", "type": "Any"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "y_range", "type": "Any"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "y_range", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "TestAreaBuilder"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "_source", "type": "Any"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "builder", "type": "Any"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "xyvalues", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "xyvalues", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "xyvalues", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "builder", "type": "Any"}, {"lineNumber": 53, "col_offset": 61, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "keys", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "area", "type": "Any"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "area", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "builder", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "keys", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "area", "type": "Any"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "area", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "builder", "type": "Any"}, {"lineNumber": 53, "col_offset": 66, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "_data", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "_data", "type": "Any"}, {"lineNumber": 53, "col_offset": 66, "nodeName": "xyvalues", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "builder", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "builder", "type": "Any"}]