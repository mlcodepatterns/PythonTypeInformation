[{"lineNumber": 32, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "test_supported_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "now", "type": "datetime.datetime"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "delta", "type": "datetime.timedelta"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "dts", "type": "List[datetime.datetime]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "xyvalues", "type": "collections.OrderedDict[str, Union[List[datetime.datetime], List[int]]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "xyvaluesdf", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "groups", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "now", "type": "Callable"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "timedelta", "type": "Type[datetime.timedelta]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "xyvalues", "type": "collections.OrderedDict[str, Union[List[datetime.datetime], List[int]]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "xyvalues", "type": "collections.OrderedDict[str, Union[List[datetime.datetime], List[int]]]"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "xyvalues", "type": "collections.OrderedDict[str, Union[List[datetime.datetime], List[int]]]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "_xy", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "ts", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "padded_date", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "datetime", "type": "module"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "now", "type": "datetime.datetime"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "dts", "type": "List[datetime.datetime]"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "pd", "type": "Any"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "xyvalues", "type": "collections.OrderedDict[str, Union[List[datetime.datetime], List[int]]]"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "xyvaluesdf", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "create_chart", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "Horizon", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "_xy", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "_builders", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "num_folds", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "_series", "type": "Any"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "groups", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "_fold_height", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "_groups", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 56, "col_offset": 58, "nodeName": "padded_date", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "padded_date", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "datetime", "type": "module"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "delta", "type": "datetime.timedelta"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "ts", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "padded_date", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "padded_date", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "padded_date", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "padded_date", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "TestHorizon"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "builder", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "TestHorizon"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "builder", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "TestHorizon"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "builder", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "TestHorizon"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "builder", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "_data", "type": "Any"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "_xy", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "builder", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "builder", "type": "Any"}]