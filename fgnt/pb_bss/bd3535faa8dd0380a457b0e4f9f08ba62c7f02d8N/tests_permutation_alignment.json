[{"lineNumber": 16, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "estimated_mapping", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "reference_mapping", "type": "List[int]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "permutation", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "inverse", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "estimated_inverse", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "data_dir", "type": "pathlib.Path"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "parent", "type": "pathlib.Path"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "random_permutation", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "permuted_mask", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "estimated_mask", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "permuted_mask", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "mismatch", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "inf", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "global_permutation", "type": "Tuple[int, ...]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "centroids", "type": "Any"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "get_identity_permutation", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "estimated_mapping", "type": "Any"}, {"lineNumber": 28, "col_offset": 51, "nodeName": "reference_mapping", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "estimated_mapping", "type": "Any"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "reference_mapping", "type": "List[int]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "get_inverse_permutation", "type": "Any"}, {"lineNumber": 54, "col_offset": 56, "nodeName": "permutation", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "estimated_inverse", "type": "Any"}, {"lineNumber": 55, "col_offset": 51, "nodeName": "inverse", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "load", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "load", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "E", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "T", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "K", "type": "Any"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "F", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "mask", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "random_permutation", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "apply_mapping_to_mask", "type": "Any"}, {"lineNumber": 66, "col_offset": 50, "nodeName": "mask", "type": "Any"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "random_permutation", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "extract_features", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "estimated_mask", "type": "Any"}, {"lineNumber": 69, "col_offset": 56, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "estimated_mask", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "align", "type": "Any"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "estimated_mask", "type": "Any"}, {"lineNumber": 70, "col_offset": 60, "nodeName": "features", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "permutations", "type": "Callable"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assert_array_less", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "mismatch", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "total_score", "type": "int"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "f", "type": "int"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "K", "type": "int"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "E", "type": "int"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "F", "type": "int"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 108, "col_offset": 51, "nodeName": "F", "type": "int"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "ref_mapping", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "ref_total_score", "type": "Union[Any, int]"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "reference", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 49, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 112, "col_offset": 58, "nodeName": "features", "type": "Any"}, {"lineNumber": 112, "col_offset": 68, "nodeName": "centroids", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "total_score", "type": "Any"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "get_local_mapping", "type": "Any"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "features", "type": "Any"}, {"lineNumber": 113, "col_offset": 63, "nodeName": "centroids", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 115, "col_offset": 32, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "ref_mapping", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "total_score", "type": "Any"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "ref_total_score", "type": "Union[Any, int]"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "FPA", "type": "Type[pb_bss.permutation_alignment.DHTVPermutationAlignment]"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "FPA", "type": "Type[pb_bss.permutation_alignment.DHTVPermutationAlignment]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "__file__", "type": "str"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "data_dir", "type": "pathlib.Path"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "data_dir", "type": "pathlib.Path"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "FPA", "type": "Type[pb_bss.permutation_alignment.DHTVPermutationAlignment]"}, {"lineNumber": 65, "col_offset": 53, "nodeName": "F", "type": "Any"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "K", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "FPA", "type": "Type[pb_bss.permutation_alignment.DHTVPermutationAlignment]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "FPA", "type": "Type[pb_bss.permutation_alignment.DHTVPermutationAlignment]"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "FPA", "type": "Type[pb_bss.permutation_alignment.DHTVPermutationAlignment]"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "itertools", "type": "module"}, {"lineNumber": 74, "col_offset": 57, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 74, "col_offset": 63, "nodeName": "K", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "mismatch", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "K", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "similarity_matrix", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "best_permutation", "type": "None"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "best_score", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "permutation", "type": "Tuple[int, ...]"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "F", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "total_score", "type": "Any"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "best_score", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "total_score", "type": "Union[Any, int]"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "FPA", "type": "Type[pb_bss.permutation_alignment.DHTVPermutationAlignment]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "get_local_mapping", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "centroids", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "size", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "features", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "K", "type": "Any"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "einsum", "type": "Any"}, {"lineNumber": 89, "col_offset": 59, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 62, "nodeName": "mu", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "inf", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "score", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "best_permutation", "type": "Optional[Tuple[int, ...]]"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "best_score", "type": "Any"}, {"lineNumber": 101, "col_offset": 44, "nodeName": "get_local_mapping", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "centroids", "type": "Any"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "arange", "type": "Any"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "K", "type": "int"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "K", "type": "int"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "E", "type": "int"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "F", "type": "int"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "K", "type": "int"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "E", "type": "int"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "FPA", "type": "Type[pb_bss.permutation_alignment.DHTVPermutationAlignment]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "features", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "sum", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "mask", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "K", "type": "Any"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "permutations", "type": "Callable"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "score", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "best_score", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "best_permutation", "type": "Tuple[int, ...]"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "permutation", "type": "Tuple[int, ...]"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "best_score", "type": "Any"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "score", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "features", "type": "Any"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "abs", "type": "Any"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "itertools", "type": "module"}, {"lineNumber": 92, "col_offset": 63, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 92, "col_offset": 69, "nodeName": "K", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "similarity_matrix", "type": "Any"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "f", "type": "int"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "estimated_mask", "type": "Any"}, {"lineNumber": 93, "col_offset": 53, "nodeName": "permutation", "type": "Tuple[int, ...]"}, {"lineNumber": 93, "col_offset": 66, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 93, "col_offset": 72, "nodeName": "K", "type": "Any"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "global_permutation", "type": "Tuple[int, ...]"}]