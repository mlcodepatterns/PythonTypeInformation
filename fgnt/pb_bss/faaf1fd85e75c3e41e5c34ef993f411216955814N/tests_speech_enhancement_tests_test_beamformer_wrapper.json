[{"lineNumber": 8, "col_offset": 0, "nodeName": "rand", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 9, "col_offset": 11, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 17, "col_offset": 7, "nodeName": "data_type", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "mix", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "target_mask", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "noise_mask", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "output_shape", "type": "Tuple[int, int]"}, {"lineNumber": 11, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 11, "col_offset": 30, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 15, "col_offset": 54, "nodeName": "data_type_local", "type": "Any"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "float32", "type": "Any"}, {"lineNumber": 17, "col_offset": 33, "nodeName": "float64", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "uniform", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "data_type", "type": "Any"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "data_type", "type": "Any"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "complex64", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "frames", "type": "int"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "sensors", "type": "int"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "bins", "type": "int"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "Type[TestBeamformerWrapper]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "rand", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "frames", "type": "int"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "sensors", "type": "int"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "bins", "type": "int"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Type[TestBeamformerWrapper]"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "Type[TestBeamformerWrapper]"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Type[TestBeamformerWrapper]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "frames", "type": "int"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "bins", "type": "int"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "gev_wrapper_on_masks", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "output_shape", "type": "Tuple[int, int]"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "gev_wrapper_on_masks", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "output_shape", "type": "Tuple[int, int]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "gev_wrapper_on_masks", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "output_shape", "type": "Tuple[int, int]"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "gev_wrapper_on_masks", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "output_shape", "type": "Tuple[int, int]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "pca_wrapper_on_masks", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "output_shape", "type": "Tuple[int, int]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "pca_wrapper_on_masks", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "output_shape", "type": "Tuple[int, int]"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "pca_wrapper_on_masks", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "output_shape", "type": "Tuple[int, int]"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "pca_mvdr_wrapper_on_masks", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "output_shape", "type": "Tuple[int, int]"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "pca_mvdr_wrapper_on_masks", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "output_shape", "type": "Tuple[int, int]"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "pca_mvdr_wrapper_on_masks", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "output_shape", "type": "Tuple[int, int]"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "pca_mvdr_wrapper_on_masks", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "output_shape", "type": "Tuple[int, int]"}, {"lineNumber": 11, "col_offset": 20, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "data_type", "type": "Any"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "complex128", "type": "Any"}, {"lineNumber": 29, "col_offset": 57, "nodeName": "complex128", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 30, "col_offset": 52, "nodeName": "frames", "type": "int"}, {"lineNumber": 30, "col_offset": 60, "nodeName": "bins", "type": "int"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 31, "col_offset": 51, "nodeName": "frames", "type": "int"}, {"lineNumber": 31, "col_offset": 59, "nodeName": "bins", "type": "int"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "mix", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "target_mask", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "mix", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "noise_mask", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "mix", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "target_mask", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "noise_mask", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "mix", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "target_mask", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "noise_mask", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "mix", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "target_mask", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "mix", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "noise_mask", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "mix", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "target_mask", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "noise_mask", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "mix", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "target_mask", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "mix", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "noise_mask", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "mix", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "target_mask", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "noise_mask", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "mix", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "target_mask", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "noise_mask", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 15, "col_offset": 40, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "uniform", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "float32", "type": "Any"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "self", "type": "TestBeamformerWrapper"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 42, "nodeName": "uniform", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "uniform", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "float64", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 42, "nodeName": "uniform", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 50, "nodeName": "float64", "type": "Any"}, {"lineNumber": 22, "col_offset": 50, "nodeName": "np", "type": "module"}]