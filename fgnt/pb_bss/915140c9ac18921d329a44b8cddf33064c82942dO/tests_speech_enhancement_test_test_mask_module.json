[{"lineNumber": 9, "col_offset": 0, "nodeName": "_random_stft", "type": "Callable[..., Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "X_all", "type": "Any"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "test_single_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "test_separate_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "test_separate_input_equals_single_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "test_", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "test_negative_feature_bin", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "test_without_parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "test_feature_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_component_and_feature_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_forbidden_list_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_equal_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "test_without_parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "test_feature_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "test_component_and_feature_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_forbidden_list_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "test_equal_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "F", "type": "int"}, {"lineNumber": 13, "col_offset": 3, "nodeName": "T", "type": "int"}, {"lineNumber": 13, "col_offset": 6, "nodeName": "D", "type": "int"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "K", "type": "int"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "_random_stft", "type": "Callable[..., Any]"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "F", "type": "int"}, {"lineNumber": 14, "col_offset": 24, "nodeName": "T", "type": "int"}, {"lineNumber": 14, "col_offset": 27, "nodeName": "D", "type": "int"}, {"lineNumber": 14, "col_offset": 30, "nodeName": "K", "type": "int"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "X", "type": "Any"}, {"lineNumber": 15, "col_offset": 3, "nodeName": "N", "type": "Any"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "X_all", "type": "Any"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "X_all", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "M1", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "M1", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "M2", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "M2", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "M3", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "M4", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "signal", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "signal", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "signal", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "signal", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 10, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "simple_ideal_soft_mask", "type": "Any"}, {"lineNumber": 20, "col_offset": 36, "nodeName": "X_all", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "simple_ideal_soft_mask", "type": "Any"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "N", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "simple_ideal_soft_mask", "type": "Any"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "X_all", "type": "Any"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "N", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "simple_ideal_soft_mask", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "N", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestIdealBinaryMask"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "_random_stft", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "K", "type": "int"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "D", "type": "int"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "F", "type": "int"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "T", "type": "int"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "ideal_binary_mask", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "signal", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "ideal_binary_mask", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "signal", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "ideal_binary_mask", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "signal", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "ideal_binary_mask", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "signal", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestWienerLikeMask"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "_random_stft", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "K", "type": "int"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "D", "type": "int"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "F", "type": "int"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "T", "type": "int"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "wiener_like_mask", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "signal", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "wiener_like_mask", "type": "Any"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "signal", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "wiener_like_mask", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "signal", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "wiener_like_mask", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "signal", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 10, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 10, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 10, "col_offset": 41, "nodeName": "rand", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "M1", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 22, "col_offset": 38, "nodeName": "M1", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "M2", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "M2", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "test_single_input", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 50, "nodeName": "test_separate_input", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "M3", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "M3", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "M4", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "M4", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "self", "type": "TestIdealBinaryMask"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "K", "type": "int"}, {"lineNumber": 51, "col_offset": 40, "nodeName": "D", "type": "int"}, {"lineNumber": 51, "col_offset": 43, "nodeName": "F", "type": "int"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "T", "type": "int"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "self", "type": "TestIdealBinaryMask"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "K", "type": "int"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "F", "type": "int"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "T", "type": "int"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "self", "type": "TestIdealBinaryMask"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "K", "type": "int"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "D", "type": "int"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "F", "type": "int"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "ideal_binary_mask", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "self", "type": "TestWienerLikeMask"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "K", "type": "int"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "D", "type": "int"}, {"lineNumber": 77, "col_offset": 43, "nodeName": "F", "type": "int"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "T", "type": "int"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "self", "type": "TestWienerLikeMask"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "K", "type": "int"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "F", "type": "int"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "T", "type": "int"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "self", "type": "TestWienerLikeMask"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "K", "type": "int"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "D", "type": "int"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "F", "type": "int"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "wiener_like_mask", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 10, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 10, "col_offset": 41, "nodeName": "random", "type": "Any"}, {"lineNumber": 10, "col_offset": 57, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "self", "type": "SimpleIdealSoftMaskTests"}, {"lineNumber": 32, "col_offset": 50, "nodeName": "self", "type": "SimpleIdealSoftMaskTests"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "self", "type": "TestIdealBinaryMask"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "signal", "type": "Any"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "signal", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "self", "type": "TestWienerLikeMask"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "signal", "type": "Any"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "signal", "type": "Any"}, {"lineNumber": 10, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "self", "type": "TestIdealBinaryMask"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "self", "type": "TestIdealBinaryMask"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "self", "type": "TestWienerLikeMask"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "self", "type": "TestWienerLikeMask"}]