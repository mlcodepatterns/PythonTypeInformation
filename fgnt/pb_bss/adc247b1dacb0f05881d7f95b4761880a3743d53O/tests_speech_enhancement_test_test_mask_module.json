[{"lineNumber": 14, "col_offset": 0, "nodeName": "randc128", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "test_shape", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "test_binary_result", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "test_greater_equal_zero", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test_smaler_equal_one", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "test_sum_to_one", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "IdealBinaryMaskTest", "type": "Type[IdealBinaryMaskTest]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "IdealBinaryMaskTest", "type": "Type[IdealBinaryMaskTest]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "IdealBinaryMaskTest", "type": "Type[IdealBinaryMaskTest]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "IdealBinaryMaskTest", "type": "Type[IdealBinaryMaskTest]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "IdealBinaryMaskTest", "type": "Type[IdealBinaryMaskTest]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 0, "nodeName": "X_all", "type": "Any"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "test_single_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "test_separate_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "test_separate_input_equals_single_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "test_", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "test_negative_feature_bin", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "test_without_parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "test_feature_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "test_component_and_feature_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "test_forbidden_list_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "test_equal_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "test_without_parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "test_feature_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "test_component_and_feature_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "test_forbidden_list_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "test_equal_power", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "pass_binary_result", "type": "bool"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "pass_greater_equal_zero", "type": "bool"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "pass_smaler_equal_one", "type": "bool"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "pass_sum_to_one", "type": "bool"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "sensor_axis_allowed", "type": "bool"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "pass_binary_result", "type": "bool"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "pass_smaler_equal_one", "type": "bool"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "pass_sum_to_one", "type": "bool"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "sensor_axis_allowed", "type": "bool"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "pass_binary_result", "type": "bool"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "sensor_axis_allowed", "type": "bool"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "pass_binary_result", "type": "bool"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "pass_smaler_equal_one", "type": "bool"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "pass_greater_equal_zero", "type": "bool"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "sensor_axis_allowed", "type": "bool"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "pass_binary_result", "type": "bool"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "pass_smaler_equal_one", "type": "bool"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "pass_greater_equal_zero", "type": "bool"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "sensor_axis_allowed", "type": "bool"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "F", "type": "int"}, {"lineNumber": 178, "col_offset": 3, "nodeName": "T", "type": "int"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "D", "type": "int"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "K", "type": "int"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "randc128", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "F", "type": "int"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "T", "type": "int"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "D", "type": "int"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "K", "type": "int"}, {"lineNumber": 180, "col_offset": 0, "nodeName": "X", "type": "Any"}, {"lineNumber": 180, "col_offset": 3, "nodeName": "N", "type": "Any"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 261, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "randn", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "ideal_binary_mask", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "pass_greater_equal_zero", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "pass_smaler_equal_one", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "pass_sum_to_one", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "wiener_like_mask", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "pass_binary_result", "type": "bool"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "ideal_amplitude_mask", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "ideal_ratio_mask", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "ideal_complex_mask", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "phase_sensitive_mask", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "X_all", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "X_all", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "M1", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "M1", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "M2", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "M2", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "M3", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "M4", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "signal", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "signal", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "signal", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "signal", "type": "numpy.ndarray"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "runmodule", "type": "Any"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 15, "col_offset": 31, "nodeName": "complex128", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "IdealBinaryMaskTest"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "mask_module", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "sensor_axis_allowed", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "pass_binary_result", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "sensor_axis_allowed", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "pass_binary_result", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "sensor_axis_allowed", "type": "Any"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assert_array_greater_equal", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "sensor_axis_allowed", "type": "Any"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assert_array_less_equal", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "sensor_axis_allowed", "type": "Any"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "WienerLikeMaskTestInherint"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "mask_module", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "WienerLikeMaskTestInherint"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "IdealAmplitudeMaskTestInherint"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "mask_module", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "IdealRatioMaskTestInherint"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "mask_module", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "IdealComplexMaskTestInherint"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "mask_module", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "PhaseSensitiveMaskTestInherint"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "mask_module", "type": "Any"}, {"lineNumber": 185, "col_offset": 13, "nodeName": "simple_ideal_soft_mask", "type": "Any"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "X_all", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "simple_ideal_soft_mask", "type": "Any"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 191, "col_offset": 39, "nodeName": "N", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "simple_ideal_soft_mask", "type": "Any"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "X_all", "type": "Any"}, {"lineNumber": 200, "col_offset": 43, "nodeName": "N", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "simple_ideal_soft_mask", "type": "Any"}, {"lineNumber": 205, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 205, "col_offset": 39, "nodeName": "N", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestIdealBinaryMask"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "randc128", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 31, "nodeName": "K", "type": "int"}, {"lineNumber": 212, "col_offset": 34, "nodeName": "D", "type": "int"}, {"lineNumber": 212, "col_offset": 37, "nodeName": "F", "type": "int"}, {"lineNumber": 212, "col_offset": 40, "nodeName": "T", "type": "int"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "ideal_binary_mask", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "signal", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "ideal_binary_mask", "type": "Any"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "signal", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "ideal_binary_mask", "type": "Any"}, {"lineNumber": 223, "col_offset": 33, "nodeName": "signal", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "ideal_binary_mask", "type": "Any"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "signal", "type": "numpy.ndarray"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestWienerLikeMask"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "randc128", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "K", "type": "int"}, {"lineNumber": 238, "col_offset": 34, "nodeName": "D", "type": "int"}, {"lineNumber": 238, "col_offset": 37, "nodeName": "F", "type": "int"}, {"lineNumber": 238, "col_offset": 40, "nodeName": "T", "type": "int"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "wiener_like_mask", "type": "Any"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "signal", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "wiener_like_mask", "type": "Any"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "signal", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "wiener_like_mask", "type": "Any"}, {"lineNumber": 249, "col_offset": 32, "nodeName": "signal", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "wiener_like_mask", "type": "Any"}, {"lineNumber": 258, "col_offset": 32, "nodeName": "signal", "type": "numpy.ndarray"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "nose", "type": "Any"}, {"lineNumber": 15, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "source_axis", "type": "int"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "unique", "type": "Any"}, {"lineNumber": 89, "col_offset": 48, "nodeName": "out", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "min", "type": "Any"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "out", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 37, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "max", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "out", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "sum", "type": "Any"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "out", "type": "Any"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "out_source_axis", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "M1", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 187, "col_offset": 38, "nodeName": "M1", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "M2", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "M2", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "test_single_input", "type": "Callable[[], Any]"}, {"lineNumber": 197, "col_offset": 50, "nodeName": "test_separate_input", "type": "Callable[[], Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "M3", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 202, "col_offset": 38, "nodeName": "M3", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "M4", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "M4", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "self", "type": "TestIdealBinaryMask"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 216, "col_offset": 37, "nodeName": "K", "type": "int"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "D", "type": "int"}, {"lineNumber": 216, "col_offset": 43, "nodeName": "F", "type": "int"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "T", "type": "int"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "self", "type": "TestIdealBinaryMask"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 220, "col_offset": 37, "nodeName": "K", "type": "int"}, {"lineNumber": 220, "col_offset": 40, "nodeName": "F", "type": "int"}, {"lineNumber": 220, "col_offset": 43, "nodeName": "T", "type": "int"}, {"lineNumber": 223, "col_offset": 33, "nodeName": "self", "type": "TestIdealBinaryMask"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "K", "type": "int"}, {"lineNumber": 224, "col_offset": 40, "nodeName": "D", "type": "int"}, {"lineNumber": 224, "col_offset": 43, "nodeName": "F", "type": "int"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "ideal_binary_mask", "type": "Any"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "self", "type": "TestWienerLikeMask"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 242, "col_offset": 37, "nodeName": "K", "type": "int"}, {"lineNumber": 242, "col_offset": 40, "nodeName": "D", "type": "int"}, {"lineNumber": 242, "col_offset": 43, "nodeName": "F", "type": "int"}, {"lineNumber": 242, "col_offset": 46, "nodeName": "T", "type": "int"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "self", "type": "TestWienerLikeMask"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 246, "col_offset": 37, "nodeName": "K", "type": "int"}, {"lineNumber": 246, "col_offset": 40, "nodeName": "F", "type": "int"}, {"lineNumber": 246, "col_offset": 43, "nodeName": "T", "type": "int"}, {"lineNumber": 249, "col_offset": 32, "nodeName": "self", "type": "TestWienerLikeMask"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 250, "col_offset": 37, "nodeName": "K", "type": "int"}, {"lineNumber": 250, "col_offset": 40, "nodeName": "D", "type": "int"}, {"lineNumber": 250, "col_offset": 43, "nodeName": "F", "type": "int"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "wiener_like_mask", "type": "Any"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "tc", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "__file__", "type": "str"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "sensor_axis", "type": "int"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "source_axis", "type": "int"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "sensor_axis", "type": "int"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "self", "type": "SimpleIdealSoftMaskTests"}, {"lineNumber": 197, "col_offset": 50, "nodeName": "self", "type": "SimpleIdealSoftMaskTests"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "self", "type": "TestIdealBinaryMask"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "signal", "type": "Any"}, {"lineNumber": 228, "col_offset": 44, "nodeName": "signal", "type": "Any"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "self", "type": "TestWienerLikeMask"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "signal", "type": "Any"}, {"lineNumber": 254, "col_offset": 43, "nodeName": "signal", "type": "Any"}, {"lineNumber": 55, "col_offset": 68, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "mask_calculator", "type": "Any"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "self", "type": "TestIdealBinaryMask"}, {"lineNumber": 228, "col_offset": 44, "nodeName": "self", "type": "TestIdealBinaryMask"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "self", "type": "TestWienerLikeMask"}, {"lineNumber": 254, "col_offset": 43, "nodeName": "self", "type": "TestWienerLikeMask"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "tc", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "tc", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "tc", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 43, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "tc", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "tc", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "kwargs", "type": "Any"}]