[{"lineNumber": 7, "col_offset": 0, "nodeName": "scenario", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "test_input_metrics", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "test_output_metrics", "type": "Callable[[], Any]"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "samples", "type": "int"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "rir_length", "type": "int"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "channels", "type": "int"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "speakers", "type": "int"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "speech_source_1", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "speech_source_2", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "h1", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "h2", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "speech_image_1", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "speech_image_2", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "noise", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "observation", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "example", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "metrics", "type": "pb_bss.evaluation.wrapper.InputMetrics"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "example", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "speech_prediction", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "speech_contribution", "type": "numpy.ndarray"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "noise_contribution", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "metrics", "type": "pb_bss.evaluation.wrapper.OutputMetrics"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "rand", "type": "Any"}, {"lineNumber": 14, "col_offset": 37, "nodeName": "samples", "type": "int"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "rand", "type": "Any"}, {"lineNumber": 15, "col_offset": 37, "nodeName": "samples", "type": "int"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "rand", "type": "Any"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "channels", "type": "int"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "rir_length", "type": "int"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "rand", "type": "Any"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "channels", "type": "int"}, {"lineNumber": 18, "col_offset": 34, "nodeName": "rir_length", "type": "int"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 33, "col_offset": 52, "nodeName": "noise", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "noise", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "observation", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "scenario", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "InputMetrics", "type": "Type[pb_bss.evaluation.wrapper.InputMetrics]"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "K_source", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "channels", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "scenario", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "speech_image_1", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "speech_image_2", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "OutputMetrics", "type": "Type[pb_bss.evaluation.wrapper.OutputMetrics]"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "K_source", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "speech_image_2", "type": "numpy.ndarray"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "channels", "type": "int"}, {"lineNumber": 29, "col_offset": 46, "nodeName": "samples", "type": "int"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "channels", "type": "int"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "samples", "type": "int"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "speech_image_1", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "speech_image_2", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "metrics", "type": "pb_bss.evaluation.wrapper.InputMetrics"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "metrics", "type": "pb_bss.evaluation.wrapper.InputMetrics"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "k", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "example", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "speech_prediction", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "speech_contribution", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "noise_contribution", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "metrics", "type": "pb_bss.evaluation.wrapper.OutputMetrics"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "k", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "h1", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "h2", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "speech_source_1", "type": "Any"}, {"lineNumber": 36, "col_offset": 52, "nodeName": "speech_source_2", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "speech_image_1", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "speech_image_2", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "example", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "example", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "example", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "example", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "as_dict", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "example", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 61, "nodeName": "example", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 9, "nodeName": "speech_image_1", "type": "Any"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "speech_image_2", "type": "Any"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "example", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "as_dict", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "metrics", "type": "pb_bss.evaluation.wrapper.InputMetrics"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "speech_image_2", "type": "Any"}, {"lineNumber": 104, "col_offset": 9, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "speech_image_1", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "example", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "example", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "metrics", "type": "pb_bss.evaluation.wrapper.OutputMetrics"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 129, "col_offset": 42, "nodeName": "inf", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 129, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 133, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 135, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "k", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "v", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "k", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "v", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "v", "type": "Any"}]