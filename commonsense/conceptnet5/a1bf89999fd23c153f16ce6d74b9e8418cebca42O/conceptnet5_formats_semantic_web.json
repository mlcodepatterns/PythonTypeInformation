[{"lineNumber": 25, "col_offset": 0, "nodeName": "decode_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "safe_quote", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "encode_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "resource_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "full_conceptnet_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "SEE_ALSO", "type": "unicode"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "write", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "write_link", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "close", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "parse_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "parse_line", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "resolve_node", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 12, "col_offset": 3, "nodeName": "major", "type": "int"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "urlsplit", "type": "Callable[..., urlparse.SplitResult]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "urlsplit", "type": "Callable[..., urlparse.SplitResult]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "unquote", "type": "Callable"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "unquote", "type": "Callable"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "quote", "type": "Callable"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "quote", "type": "Callable"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "string_type", "type": "Type[basestring]"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "basestring", "type": "Type[basestring]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "url_bytes", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "parsed", "type": "urlparse.SplitResult"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "fragment", "type": "str"}, {"lineNumber": 12, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "urlparse", "type": "module"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "urllib", "type": "module"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "urllib", "type": "module"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "encode", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "decode_escapes", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "quote", "type": "Callable"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "urlsplit", "type": "Callable[..., urlparse.SplitResult]"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "parsed", "type": "urlparse.SplitResult"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "fragment", "type": "str"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "path", "type": "str"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "ROOT_URL", "type": "unicode"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "seen", "type": "Set[Union[Any, Tuple[Any, unicode, Any]]]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "prefixes", "type": "Dict[Any, Any]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 12, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "decode", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "encode", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "safe_quote", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "url", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "decode_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "url", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "parsed", "type": "urlparse.SplitResult"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "path", "type": "str"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "uri", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "safe_quote", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "uri", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "filename_or_stream", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "stream", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "filename_or_stream", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "stream", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "NTriplesWriter"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "triple", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "seen", "type": "Set[Union[Any, Tuple[Any, unicode, Any]]]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "line_pieces", "type": "List[unicode]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "line", "type": "unicode"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "write", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "stream", "type": "Any"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "NTriplesReader"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "filename", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "subj", "type": "Any"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "rel", "type": "Any"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "objdot", "type": "Any"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "split", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "dot", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "rsplit", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "dot", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "subj", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "rel", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "prefixname", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "subj_url", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "rel_url", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "strip", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "uri", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "path", "type": "str"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "self", "type": "NTriplesWriter"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "NTriplesWriter"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "filename_or_stream", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "self", "type": "NTriplesWriter"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "triple", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "line_pieces", "type": "List[unicode]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "line", "type": "unicode"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "NTriplesWriter"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "node1", "type": "Any"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "SEE_ALSO", "type": "unicode"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "node2", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "self", "type": "NTriplesWriter"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "sys", "type": "module"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "close", "type": "Any"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "codecs", "type": "module"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "strip", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "result", "type": "Optional[Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "line", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "objdot", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "prefixes", "type": "Dict[Any, Any]"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "decode_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "obj", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "obj_tag", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "obj_url", "type": "Any"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "resolve_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 49, "nodeName": "obj", "type": "Any"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "subj_url", "type": "Any"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "rel_url", "type": "Any"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "obj_url", "type": "Any"}, {"lineNumber": 185, "col_offset": 47, "nodeName": "obj_tag", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 208, "col_offset": 13, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "url", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "unquote", "type": "Callable"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "url_bytes", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "parsed", "type": "urlparse.SplitResult"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "codecs", "type": "module"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "seen", "type": "Set[Union[Any, Tuple[Any, unicode, Any]]]"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "stream", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "stream", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "line", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "parse_line", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "line", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "result", "type": "Optional[Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "self", "type": "NTriplesReader"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "prefixname", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "resolve_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 41, "nodeName": "subj", "type": "Any"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "resolve_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 40, "nodeName": "rel", "type": "Any"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "self", "type": "NTriplesReader"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "node_text", "type": "Any"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "node_text", "type": "Any"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "decode_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "node_text", "type": "Any"}, {"lineNumber": 208, "col_offset": 13, "nodeName": "node_text", "type": "Any"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "node_text", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "type_tag", "type": "Any"}, {"lineNumber": 212, "col_offset": 88, "nodeName": "quoted_string", "type": "Any"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "node_text", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "url_base", "type": "unicode"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "path", "type": "str"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "path", "type": "str"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "NTriplesWriter"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "encode_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "item", "type": "Any"}, {"lineNumber": 135, "col_offset": 48, "nodeName": "item", "type": "Any"}, {"lineNumber": 135, "col_offset": 56, "nodeName": "triple", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "self", "type": "NTriplesWriter"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "NTriplesWriter"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "self", "type": "NTriplesReader"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "result", "type": "Optional[Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "self", "type": "NTriplesReader"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "self", "type": "NTriplesReader"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "quoted_string", "type": "Any"}, {"lineNumber": 210, "col_offset": 31, "nodeName": "type_tag", "type": "Any"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "rsplit", "type": "Any"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "resource_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "type_tag", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "node_text", "type": "Any"}, {"lineNumber": 216, "col_offset": 88, "nodeName": "quoted_string", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "lang", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "resource", "type": "Any"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "split", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "prefixes", "type": "Dict[Any, Any]"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "prefixes", "type": "Dict[Any, Any]"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "node_text", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "line", "type": "Any"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "node_text", "type": "Any"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "decode_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 211, "col_offset": 52, "nodeName": "type_tag", "type": "Any"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 212, "col_offset": 58, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "quoted_string", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "quoted_string", "type": "Any"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "lang_code", "type": "Any"}, {"lineNumber": 215, "col_offset": 43, "nodeName": "rsplit", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "lang", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "node_text", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "self", "type": "NTriplesReader"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "self", "type": "NTriplesReader"}, {"lineNumber": 227, "col_offset": 37, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "decode_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "quoted_string", "type": "Any"}, {"lineNumber": 212, "col_offset": 58, "nodeName": "quoted_string", "type": "Any"}, {"lineNumber": 215, "col_offset": 43, "nodeName": "node_text", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 216, "col_offset": 58, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "split", "type": "Any"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "quoted_string", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "node_text", "type": "Any"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 226, "col_offset": 54, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 228, "col_offset": 37, "nodeName": "url_base", "type": "unicode"}, {"lineNumber": 228, "col_offset": 48, "nodeName": "resource", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "quoted_string", "type": "Any"}, {"lineNumber": 216, "col_offset": 58, "nodeName": "quoted_string", "type": "Any"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "lang_code", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "node_text", "type": "Any"}, {"lineNumber": 222, "col_offset": 64, "nodeName": "node_text", "type": "Any"}]