[{"lineNumber": 19, "col_offset": 0, "nodeName": "cycle_writer", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "translate_wp_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "map_web_relation", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "handle_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "handle_triple", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 5, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "source", "type": "str"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "WRITER_NUM", "type": "int"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "writer", "type": "conceptnet5.edges.MultiWriter"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "sw_map", "type": "conceptnet5.edges.FlatEdgeWriter"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "sw_map_used", "type": "Set[Union[Tuple[str, Any], Tuple[str, str], Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "MultiWriter", "type": "Type[conceptnet5.edges.MultiWriter]"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "FlatEdgeWriter", "type": "Type[conceptnet5.edges.FlatEdgeWriter]"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "WRITER_NUM", "type": "int"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "writer", "type": "conceptnet5.edges.MultiWriter"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "url", "type": "unicode"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "url", "type": "unicode"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "result", "type": "unicode"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "count", "type": "int"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "subj_concept", "type": "str"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "obj_concept", "type": "str"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "webrel", "type": "Optional[str]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "rel", "type": "Any"}, {"lineNumber": 87, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 36, "nodeName": "WRITER_NUM", "type": "int"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "MultiWriter", "type": "Type[conceptnet5.edges.MultiWriter]"}, {"lineNumber": 26, "col_offset": 10, "nodeName": "decode", "type": "Callable[..., unicode]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "un_camel_case", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "decode", "type": "Callable[..., unicode]"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "result", "type": "unicode"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "filename", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "count", "type": "int"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "xrange", "type": "Type[xrange]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "subj", "type": "str"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "pred", "type": "str"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "obj", "type": "str"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "make_concept_uri", "type": "Callable[..., str]"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "make_concept_uri", "type": "Callable[..., str]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "map_web_relation", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "pred", "type": "str"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "webrel", "type": "Optional[str]"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "normalize_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "sw_map_used", "type": "Set[Union[Tuple[str, Any], Tuple[str, str], Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "sw_map_used", "type": "Set[Union[Tuple[str, Any], Tuple[str, str], Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "sw_map_used", "type": "Set[Union[Tuple[str, Any], Tuple[str, str], Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "make_edge", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "rel", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "subj_concept", "type": "str"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "obj_concept", "type": "str"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "write", "type": "Callable[[Any], None]"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "edge", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "handle_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "handle_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "writer", "type": "conceptnet5.edges.MultiWriter"}, {"lineNumber": 23, "col_offset": 40, "nodeName": "WRITER_NUM", "type": "int"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "count", "type": "int"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "count", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "handle_triple", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "pred", "type": "str"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "obj", "type": "str"}, {"lineNumber": 57, "col_offset": 69, "nodeName": "obj", "type": "str"}, {"lineNumber": 57, "col_offset": 88, "nodeName": "obj", "type": "str"}, {"lineNumber": 57, "col_offset": 103, "nodeName": "subj", "type": "str"}, {"lineNumber": 57, "col_offset": 119, "nodeName": "obj", "type": "str"}, {"lineNumber": 57, "col_offset": 139, "nodeName": "subj", "type": "str"}, {"lineNumber": 57, "col_offset": 160, "nodeName": "obj", "type": "str"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "translate_wp_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 53, "nodeName": "subj", "type": "str"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "translate_wp_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 52, "nodeName": "obj", "type": "str"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "webrel", "type": "Optional[str]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "pred", "type": "str"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "rel", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "add", "type": "Callable"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "write", "type": "Callable[[Any], None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "subj", "type": "str"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "subj_concept", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "add", "type": "Callable"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "write", "type": "Callable[[Any], None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "obj", "type": "str"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "obj_concept", "type": "str"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "add", "type": "Callable"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "write", "type": "Callable[[Any], None]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "writer", "type": "conceptnet5.edges.MultiWriter"}, {"lineNumber": 26, "col_offset": 10, "nodeName": "unquote", "type": "Callable"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "url", "type": "str"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "unquote", "type": "Callable"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "url", "type": "str"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "result", "type": "unicode"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "cycle_writer", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "sw_map_used", "type": "Set[Union[Tuple[str, Any], Tuple[str, str], Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "pred", "type": "str"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "rel", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "sw_map", "type": "conceptnet5.edges.FlatEdgeWriter"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "pred", "type": "str"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "rel", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "sw_map_used", "type": "Set[Union[Tuple[str, Any], Tuple[str, str], Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "subj", "type": "str"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "subj_concept", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "sw_map", "type": "conceptnet5.edges.FlatEdgeWriter"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "subj", "type": "str"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "subj_concept", "type": "str"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "sw_map_used", "type": "Set[Union[Tuple[str, Any], Tuple[str, str], Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "obj", "type": "str"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "obj_concept", "type": "str"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "sw_map", "type": "conceptnet5.edges.FlatEdgeWriter"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "obj", "type": "str"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "obj_concept", "type": "str"}, {"lineNumber": 26, "col_offset": 10, "nodeName": "urllib", "type": "module"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "urllib", "type": "module"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "result", "type": "unicode"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "line", "type": "str"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "strip", "type": "Callable[..., unicode]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 53, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "strip", "type": "Callable[..., unicode]"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "url", "type": "unicode"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "url", "type": "unicode"}]