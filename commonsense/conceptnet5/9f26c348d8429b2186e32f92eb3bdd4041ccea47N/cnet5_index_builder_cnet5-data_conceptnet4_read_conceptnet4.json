[{"lineNumber": 48, "col_offset": 0, "nodeName": "can_skip", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "build_frame_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "build_relation", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "build_start", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "build_end", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "build_data_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "build_sources", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "by_bedume_and_bad", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "handle_raw_assertion", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "add_lines_to_queue", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 0, "nodeName": "run_single_process", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "LICENSE", "type": "str"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "BEDUME_FLAGGED_CONCEPTS", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "BEDUME_FLAGGED_PLACES", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "lang", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "language_id", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "activity", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "text", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "polarity", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "relname", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "polarity", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "relation", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "lang", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "language_id", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "startText", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "text1", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "start", "type": "str"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "start", "type": "str"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "lang", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "language_id", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "endText", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "text2", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "end", "type": "str"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "end", "type": "str"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "lang", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "language_id", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "activity", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "creator_node", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "activity_node", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "sources", "type": "List[Union[Tuple[List[Any], int], Tuple[List[Any], Any]]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "vote", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "sources", "type": "List[Union[Tuple[List[Any], int], Tuple[List[Any], Any]]]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "raw_assertions", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "raw_assertions", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "writer", "type": "conceptnet5.edges.MultiWriter"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "raw_assertions", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "raw_assertions", "type": "Any"}, {"lineNumber": 166, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 50, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "goodness", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "activity", "type": "Any"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "activity", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "frame", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "frequency", "type": "Any"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "polarity", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "replace", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "relation", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "frequency", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "relname", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "relname", "type": "str"}, {"lineNumber": 76, "col_offset": 7, "nodeName": "polarity", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "relation", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "relation", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "make_concept_uri", "type": "Callable[..., str]"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "startText", "type": "Any"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "lang", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "make_concept_uri", "type": "Callable[..., str]"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "endText", "type": "Any"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "lang", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "normalize_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "activity", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "normalize_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "normalize_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "flagged", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "relation", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "start", "type": "str"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "end", "type": "str"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "sources", "type": "List[Union[Tuple[List[Any], int], Tuple[List[Any], Any]]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "edges", "type": "List[Dict[str, Any]]"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "sources", "type": "List[Union[Tuple[List[Any], int], Tuple[List[Any], Any]]]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "edges", "type": "List[Dict[str, Any]]"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "filter", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "MultiWriter", "type": "Type[conceptnet5.edges.MultiWriter]"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "filter", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "edges", "type": "Union[List[nothing], List[Dict[str, Any]]]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "edge", "type": "Dict[str, Any]"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "edges", "type": "Union[List[nothing], List[Dict[str, Any]]]"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "quickReader", "type": "Any"}, {"lineNumber": 50, "col_offset": 7, "nodeName": "lang", "type": "Any"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "frame", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "frame", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "replace", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "replace", "type": "Any"}, {"lineNumber": 67, "col_offset": 101, "nodeName": "text2", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "frame", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "frame", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "normalize_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "normalize_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "lang", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 103, "col_offset": 57, "nodeName": "username", "type": "Any"}, {"lineNumber": 104, "col_offset": 55, "nodeName": "activity", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "votes", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "source_list", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "BEDUME_FLAGGED_CONCEPTS", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 49, "nodeName": "BEDUME_FLAGGED_PLACES", "type": "List[str]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "check", "type": "str"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "can_skip", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "build_frame_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "build_relation", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "build_start", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "build_end", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "build_data_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "build_sources", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "source_list", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "weight", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "objects", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "put", "type": "Any"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "objects", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "handle_raw_assertion", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "sys", "type": "module"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "QuickReader", "type": "Any"}, {"lineNumber": 168, "col_offset": 49, "nodeName": "handle_raw_assertion", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 70, "nodeName": "add_lines_to_queue", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "run_single_process", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "replace", "type": "Any"}, {"lineNumber": 67, "col_offset": 101, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "relname", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "relname", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 103, "col_offset": 57, "nodeName": "creator", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "creator_node", "type": "Any"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "activity_node", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "sources", "type": "List[Union[Tuple[List[Any], int], Tuple[List[Any], Any]]]"}, {"lineNumber": 109, "col_offset": 63, "nodeName": "vote", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "weight", "type": "int"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "by_bedume_and_bad", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "source_list", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "start", "type": "str"}, {"lineNumber": 139, "col_offset": 51, "nodeName": "end", "type": "str"}, {"lineNumber": 139, "col_offset": 55, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "edge", "type": "Dict[str, Any]"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "RawAssertion", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "RawAssertion", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "write", "type": "Callable[[Any], None]"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "edge", "type": "Dict[str, Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "quickReader", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 67, "col_offset": 54, "nodeName": "text1", "type": "Any"}, {"lineNumber": 103, "col_offset": 57, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 109, "col_offset": 63, "nodeName": "vote", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "replace", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "check", "type": "str"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 116, "col_offset": 53, "nodeName": "check", "type": "str"}, {"lineNumber": 136, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "source_list", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "make_edge", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "relation", "type": "Any"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "start", "type": "str"}, {"lineNumber": 142, "col_offset": 50, "nodeName": "end", "type": "str"}, {"lineNumber": 142, "col_offset": 55, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 142, "col_offset": 64, "nodeName": "LICENSE", "type": "str"}, {"lineNumber": 142, "col_offset": 73, "nodeName": "source_list", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 98, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "edge", "type": "Dict[str, Any]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "writer", "type": "conceptnet5.edges.MultiWriter"}, {"lineNumber": 67, "col_offset": 54, "nodeName": "raw_assertion", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "normalize_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "normalize_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "flagged", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "start", "type": "str"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "end", "type": "str"}, {"lineNumber": 142, "col_offset": 117, "nodeName": "weight", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "edges", "type": "List[Dict[str, Any]]"}, {"lineNumber": 108, "col_offset": 62, "nodeName": "username", "type": "Any"}, {"lineNumber": 108, "col_offset": 62, "nodeName": "user", "type": "Any"}, {"lineNumber": 108, "col_offset": 62, "nodeName": "vote", "type": "Any"}]