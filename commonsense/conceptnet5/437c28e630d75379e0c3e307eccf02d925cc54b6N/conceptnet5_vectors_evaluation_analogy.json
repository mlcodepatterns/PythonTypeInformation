[{"lineNumber": 13, "col_offset": 0, "nodeName": "read_google_analogies", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "read_turney_analogies", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "read_train_pairs_semeval2012", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "read_questions_semeval2012", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "read_turk_ranks", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "analogy_func", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "pairwise_analogy_func", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "tune_pairwise_analogies", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 0, "nodeName": "eval_analogies", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 0, "nodeName": "eval_semeval2012_analogies", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 277, "col_offset": 0, "nodeName": "eval_semeval2012_global", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 300, "col_offset": 0, "nodeName": "evaluate", "type": "Callable[..., Any]"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "quads", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "questions", "type": "List[Tuple[Tuple[Any, ...], List[Tuple[Any, ...]], int]]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "question_lines", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "questions", "type": "List[Tuple[Tuple[Any, ...], List[Tuple[Any, ...]], int]]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "train_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "va1", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "vb1", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "va2", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "vb2", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "total", "type": "int"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "correct", "type": "int"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "weights", "type": "List[float]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "best_weights", "type": "None"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "best_acc", "type": "float"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "weight_direct", "type": "float"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "weights", "type": "List[float]"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "best_weights", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "quads", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "vocab", "type": "List[Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "tframe", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "total", "type": "int"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "correct", "type": "int"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "seen_mistakes", "type": "Set[Any]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "quad", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "quads", "type": "List[Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "train_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "questions", "type": "List[List[Tuple[Any, ...]]]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "turk_rank", "type": "List[Tuple[Tuple[Any, ...], float]]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "pairs_to_rank", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "our_pair_scores", "type": "Dict[Tuple[Any, ...], Any]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "pairs_to_rank", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "correct_most", "type": "int"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "correct_least", "type": "int"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "total", "type": "int"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "our_semeval_scores", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "turk_semeval_scores", "type": "List[float]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "spearman", "type": "float"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "maxdiff", "type": "float"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "spearman_scores", "type": "List[Any]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "maxdiff_scores", "type": "List[Any]"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "spearman_output", "type": "List[Any]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "maxdiff_output", "type": "List[Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "interval", "type": "str"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 306, "col_offset": 7, "nodeName": "tune_analogies", "type": "Any"}, {"lineNumber": 310, "col_offset": 35, "nodeName": "sat_results", "type": "Any"}, {"lineNumber": 332, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 33, "col_offset": 45, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 56, "col_offset": 64, "nodeName": "subset", "type": "Any"}, {"lineNumber": 56, "col_offset": 72, "nodeName": "family", "type": "Any"}, {"lineNumber": 56, "col_offset": 80, "nodeName": "subclass", "type": "Any"}, {"lineNumber": 57, "col_offset": 54, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "train_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 68, "col_offset": 62, "nodeName": "subset", "type": "Any"}, {"lineNumber": 68, "col_offset": 70, "nodeName": "family", "type": "Any"}, {"lineNumber": 68, "col_offset": 78, "nodeName": "subclass", "type": "Any"}, {"lineNumber": 69, "col_offset": 54, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "questions", "type": "List[List[Tuple[Any, ...]]]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "questions", "type": "List[List[Tuple[Any, ...]]]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 82, "col_offset": 60, "nodeName": "subset", "type": "Any"}, {"lineNumber": 82, "col_offset": 68, "nodeName": "family", "type": "Any"}, {"lineNumber": 82, "col_offset": 76, "nodeName": "subclass", "type": "Any"}, {"lineNumber": 83, "col_offset": 54, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "gold_ranks", "type": "List[Tuple[Tuple[Any, ...], float]]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "get_vector", "type": "Any"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "a1", "type": "Any"}, {"lineNumber": 102, "col_offset": 10, "nodeName": "get_vector", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "b1", "type": "Any"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "get_vector", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "a2", "type": "Any"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "get_vector", "type": "Any"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "b2", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 119, "col_offset": 42, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "low", "type": "Any"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "high", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "proportion_confint", "type": "Any"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "correct", "type": "int"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "total", "type": "int"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "Series", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "weight_transpose", "type": "float"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "weights", "type": "List[float]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "weight_direct", "type": "Any"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "weight_transpose", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "eval_pairwise_analogies", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "frame", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "eval_filename", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "get_support_data_filename", "type": "Callable[[Any], str]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "read_google_analogies", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "filename", "type": "str"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "prompt", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "answer", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "vector", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "similar", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "result", "type": "None"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "match", "type": "Any"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "index", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "total", "type": "int"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "low", "type": "Any"}, {"lineNumber": 216, "col_offset": 9, "nodeName": "high", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "proportion_confint", "type": "Any"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "correct", "type": "int"}, {"lineNumber": 216, "col_offset": 44, "nodeName": "total", "type": "int"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "Series", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 10, "nodeName": "subset", "type": "Any"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "family", "type": "Any"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "read_train_pairs_semeval2012", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 226, "col_offset": 47, "nodeName": "subset", "type": "Any"}, {"lineNumber": 226, "col_offset": 55, "nodeName": "family", "type": "Any"}, {"lineNumber": 226, "col_offset": 63, "nodeName": "subclass", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "read_questions_semeval2012", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 227, "col_offset": 43, "nodeName": "subset", "type": "Any"}, {"lineNumber": 227, "col_offset": 51, "nodeName": "family", "type": "Any"}, {"lineNumber": 227, "col_offset": 59, "nodeName": "subclass", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "read_turk_ranks", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "subset", "type": "Any"}, {"lineNumber": 228, "col_offset": 40, "nodeName": "family", "type": "Any"}, {"lineNumber": 228, "col_offset": 48, "nodeName": "subclass", "type": "Any"}, {"lineNumber": 229, "col_offset": 21, "nodeName": "pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "rank_pair_scores", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "train_pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "train_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "question", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 244, "col_offset": 33, "nodeName": "questions", "type": "List[List[Tuple[Any, ...]]]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "question_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "least", "type": "Tuple[Any, ...]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "most", "type": "Tuple[Any, ...]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "question_pairs_scores", "type": "List[Any]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "question_pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "question_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "our_answer_most", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "our_answer_least", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "total", "type": "int"}, {"lineNumber": 263, "col_offset": 26, "nodeName": "score", "type": "Any"}, {"lineNumber": 264, "col_offset": 27, "nodeName": "score", "type": "float"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "round", "type": "Callable"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "round", "type": "Callable"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "low_maxdiff", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "high_maxdiff", "type": "Any"}, {"lineNumber": 270, "col_offset": 32, "nodeName": "proportion_confint", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "family", "type": "int"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "subclass", "type": "str"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "average_maxdiff_score", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "average_spearman_score", "type": "Any"}, {"lineNumber": 303, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "empty_comparison_table", "type": "Callable[[], Any]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "sat_results", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "sat_results", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "loc", "type": "Any"}, {"lineNumber": 312, "col_offset": 7, "nodeName": "subset", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "semeval_subset", "type": "str"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "semeval_subset", "type": "Any"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "subset", "type": "Any"}, {"lineNumber": 317, "col_offset": 7, "nodeName": "semeval_scope", "type": "Any"}, {"lineNumber": 319, "col_offset": 44, "nodeName": "spearman_score", "type": "Any"}, {"lineNumber": 320, "col_offset": 43, "nodeName": "maxdiff_score", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "filename", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "line", "type": "str"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "line", "type": "str"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "pairs", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "pairs", "type": "List[List[str]]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "gold_score", "type": "float"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "pair", "type": "List[str]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "gold_ranks", "type": "List[Tuple[Tuple[Any, ...], float]]"}, {"lineNumber": 97, "col_offset": 59, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 70, "nodeName": "frame", "type": "Any"}, {"lineNumber": 97, "col_offset": 77, "nodeName": "a2", "type": "Any"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "wrap", "type": "Any"}, {"lineNumber": 102, "col_offset": 10, "nodeName": "wrap", "type": "Any"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "wrap", "type": "Any"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "wrap", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "dot", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "va1", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "prompt", "type": "Tuple[Any, ...]"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "choices", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "answer", "type": "int"}, {"lineNumber": 119, "col_offset": 52, "nodeName": "read_turney_analogies", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 74, "nodeName": "eval_filename", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "prompt", "type": "Tuple[Any, ...]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "choice_values", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "choice", "type": "Tuple[Any, ...]"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "choices", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "our_answer", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "total", "type": "int"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "low", "type": "Any"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "high", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "acc", "type": "Any"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "subset", "type": "Any"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "weight_direct", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "weight_transpose", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "word", "type": "Any"}, {"lineNumber": 190, "col_offset": 36, "nodeName": "frame", "type": "Any"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "vocab", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "quad", "type": "Any"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "quad", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "analogy_func", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "frame", "type": "Any"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "similar_to_vec", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 33, "nodeName": "tframe", "type": "Any"}, {"lineNumber": 200, "col_offset": 41, "nodeName": "vector", "type": "Any"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "similar", "type": "Any"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "answer", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "correct", "type": "int"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 217, "col_offset": 39, "nodeName": "low", "type": "Any"}, {"lineNumber": 217, "col_offset": 44, "nodeName": "high", "type": "Any"}, {"lineNumber": 229, "col_offset": 45, "nodeName": "turk_rank", "type": "List[Tuple[Tuple[Any, ...], float]]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "our_pair_scores", "type": "Dict[Tuple[Any, ...], Any]"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "mean", "type": "Any"}, {"lineNumber": 238, "col_offset": 40, "nodeName": "rank_pair_scores", "type": "List[Any]"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "question", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "question", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "question", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "question_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 255, "col_offset": 27, "nodeName": "question_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "most", "type": "Tuple[Any, ...]"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "our_answer_most", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "correct_most", "type": "int"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "least", "type": "Tuple[Any, ...]"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "our_answer_least", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "correct_least", "type": "int"}, {"lineNumber": 264, "col_offset": 52, "nodeName": "turk_rank", "type": "List[Tuple[Tuple[Any, ...], float]]"}, {"lineNumber": 270, "col_offset": 52, "nodeName": "correct_least", "type": "int"}, {"lineNumber": 270, "col_offset": 68, "nodeName": "correct_most", "type": "int"}, {"lineNumber": 270, "col_offset": 88, "nodeName": "total", "type": "int"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "confidence_interval", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 273, "col_offset": 32, "nodeName": "spearman", "type": "float"}, {"lineNumber": 273, "col_offset": 42, "nodeName": "total", "type": "int"}, {"lineNumber": 280, "col_offset": 36, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "FileNotFoundError", "type": "Type[FileNotFoundError]"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "mean", "type": "Any"}, {"lineNumber": 292, "col_offset": 33, "nodeName": "mean", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 293, "col_offset": 31, "nodeName": "average_spearman_score", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 294, "col_offset": 30, "nodeName": "average_maxdiff_score", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 296, "col_offset": 22, "nodeName": "maxdiff_output", "type": "List[Any]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "spearman_output", "type": "List[Any]"}, {"lineNumber": 303, "col_offset": 39, "nodeName": "frame", "type": "Any"}, {"lineNumber": 307, "col_offset": 22, "nodeName": "tune_pairwise_analogies", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 307, "col_offset": 46, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 307, "col_offset": 55, "nodeName": "analogy_filename", "type": "Any"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "eval_pairwise_analogies", "type": "Callable[..., Any]"}, {"lineNumber": 309, "col_offset": 46, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 309, "col_offset": 55, "nodeName": "analogy_filename", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "maxdiff_score", "type": "Any"}, {"lineNumber": 318, "col_offset": 23, "nodeName": "spearman_score", "type": "Any"}, {"lineNumber": 318, "col_offset": 40, "nodeName": "eval_semeval2012_global", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 318, "col_offset": 64, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 318, "col_offset": 73, "nodeName": "semeval_subset", "type": "Union[Any, str]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "loc", "type": "Any"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "family", "type": "int"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "subclass", "type": "str"}, {"lineNumber": 323, "col_offset": 32, "nodeName": "product", "type": "Callable"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "standardized_uri", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 18, "col_offset": 32, "nodeName": "term", "type": "str"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "open", "type": "Callable"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "filename", "type": "str"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "line", "type": "str"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "get_support_data_filename", "type": "Callable[[Any], str]"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "filename", "type": "str"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "pair", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "get_support_data_filename", "type": "Callable[[Any], str]"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "filename", "type": "str"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "get_support_data_filename", "type": "Callable[[Any], str]"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "filename", "type": "str"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "gold_score", "type": "str"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "pair", "type": "str"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "gold_score", "type": "str"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "frame", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "b1", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "frame", "type": "Any"}, {"lineNumber": 97, "col_offset": 53, "nodeName": "a1", "type": "Any"}, {"lineNumber": 109, "col_offset": 10, "nodeName": "dot", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "vb1", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "va2", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "subset", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "a1", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "b1", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "choice", "type": "Tuple[Any, ...]"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "choice_values", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "our_answer", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "answer", "type": "int"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "correct", "type": "int"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "correct", "type": "int"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "total", "type": "int"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "acc", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "best_acc", "type": "float"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "best_weights", "type": "Tuple[float, float]"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "best_acc", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "acc", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "top_n_list", "type": "Any"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "word", "type": "Any"}, {"lineNumber": 191, "col_offset": 48, "nodeName": "word", "type": "Any"}, {"lineNumber": 191, "col_offset": 56, "nodeName": "vocab", "type": "List[Any]"}, {"lineNumber": 199, "col_offset": 38, "nodeName": "prompt", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "match", "type": "Any"}, {"lineNumber": 203, "col_offset": 28, "nodeName": "prompt", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "match", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "seen_mistakes", "type": "Set[Any]"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "correct", "type": "int"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "total", "type": "int"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 229, "col_offset": 36, "nodeName": "score", "type": "float"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "pairwise_analogy_func", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 235, "col_offset": 42, "nodeName": "vectors", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 237, "col_offset": 36, "nodeName": "score", "type": "Any"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "our_pair_scores", "type": "Dict[Tuple[Any, ...], Any]"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 252, "col_offset": 41, "nodeName": "score", "type": "Any"}, {"lineNumber": 263, "col_offset": 36, "nodeName": "pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 263, "col_offset": 42, "nodeName": "score", "type": "Any"}, {"lineNumber": 263, "col_offset": 51, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 264, "col_offset": 43, "nodeName": "score", "type": "float"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "spearmanr", "type": "Any"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "our_semeval_scores", "type": "List[Any]"}, {"lineNumber": 266, "col_offset": 51, "nodeName": "turk_semeval_scores", "type": "List[float]"}, {"lineNumber": 268, "col_offset": 21, "nodeName": "correct_least", "type": "int"}, {"lineNumber": 268, "col_offset": 37, "nodeName": "correct_most", "type": "int"}, {"lineNumber": 268, "col_offset": 54, "nodeName": "total", "type": "int"}, {"lineNumber": 268, "col_offset": 62, "nodeName": "total", "type": "int"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "maxdiff", "type": "float"}, {"lineNumber": 272, "col_offset": 32, "nodeName": "low_maxdiff", "type": "Any"}, {"lineNumber": 272, "col_offset": 45, "nodeName": "high_maxdiff", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "maxdiff", "type": "Any"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "spearman", "type": "Any"}, {"lineNumber": 282, "col_offset": 32, "nodeName": "eval_semeval2012_analogies", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 282, "col_offset": 59, "nodeName": "vectors", "type": "Any"}, {"lineNumber": 282, "col_offset": 68, "nodeName": "subset", "type": "Any"}, {"lineNumber": 282, "col_offset": 76, "nodeName": "family", "type": "int"}, {"lineNumber": 282, "col_offset": 84, "nodeName": "subclass", "type": "str"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 283, "col_offset": 35, "nodeName": "spearman", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 284, "col_offset": 34, "nodeName": "maxdiff", "type": "Any"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "spearman_output", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "maxdiff_output", "type": "List[Any]"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 307, "col_offset": 80, "nodeName": "subset", "type": "Any"}, {"lineNumber": 309, "col_offset": 80, "nodeName": "subset", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "results", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "results", "type": "Any"}, {"lineNumber": 323, "col_offset": 40, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 327, "col_offset": 82, "nodeName": "spearman_score", "type": "Any"}, {"lineNumber": 328, "col_offset": 81, "nodeName": "maxdiff_score", "type": "Any"}, {"lineNumber": 329, "col_offset": 19, "nodeName": "FileNotFoundError", "type": "Type[FileNotFoundError]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "line", "type": "str"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "answer_index", "type": "int"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "raw_pairs", "type": "List[nothing]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "concept_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "line", "type": "str"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "pair", "type": "str"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 76, "col_offset": 78, "nodeName": "pair", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 86, "nodeName": "pairs", "type": "List[List[str]]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "questions", "type": "List[List[Tuple[Any, ...]]]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "line", "type": "str"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "line", "type": "str"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "gold_ranks", "type": "List[Tuple[Tuple[Any, ...], float]]"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "gold_score", "type": "float"}, {"lineNumber": 109, "col_offset": 10, "nodeName": "vb2", "type": "Any"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "subset", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "a2", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "b2", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "weight_direct", "type": "float"}, {"lineNumber": 169, "col_offset": 37, "nodeName": "weight_transpose", "type": "float"}, {"lineNumber": 169, "col_offset": 55, "nodeName": "acc", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "weight_direct", "type": "float"}, {"lineNumber": 170, "col_offset": 47, "nodeName": "weight_transpose", "type": "float"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "acc", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "best_acc", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "wordfreq", "type": "Any"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 214, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 235, "col_offset": 51, "nodeName": "train_pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 235, "col_offset": 66, "nodeName": "pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 236, "col_offset": 42, "nodeName": "train_pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 236, "col_offset": 57, "nodeName": "pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "rank_pair_scores", "type": "List[Any]"}, {"lineNumber": 251, "col_offset": 36, "nodeName": "question_pair", "type": "Tuple[Any, ...]"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "question_pairs_scores", "type": "List[Any]"}, {"lineNumber": 254, "col_offset": 41, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 254, "col_offset": 51, "nodeName": "question_pairs_scores", "type": "List[Any]"}, {"lineNumber": 255, "col_offset": 42, "nodeName": "argmin", "type": "Any"}, {"lineNumber": 255, "col_offset": 52, "nodeName": "question_pairs_scores", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 58, "nodeName": "items", "type": "Callable"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "spearman_scores", "type": "List[Any]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "maxdiff_scores", "type": "List[Any]"}, {"lineNumber": 291, "col_offset": 41, "nodeName": "score", "type": "Any"}, {"lineNumber": 291, "col_offset": 61, "nodeName": "score", "type": "Any"}, {"lineNumber": 291, "col_offset": 70, "nodeName": "maxdiff_scores", "type": "List[Any]"}, {"lineNumber": 292, "col_offset": 42, "nodeName": "score", "type": "Any"}, {"lineNumber": 292, "col_offset": 62, "nodeName": "score", "type": "Any"}, {"lineNumber": 292, "col_offset": 71, "nodeName": "spearman_scores", "type": "List[Any]"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "maxdiff_score", "type": "Any"}, {"lineNumber": 325, "col_offset": 31, "nodeName": "spearman_score", "type": "Any"}, {"lineNumber": 325, "col_offset": 48, "nodeName": "eval_semeval2012_analogies", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 325, "col_offset": 75, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 325, "col_offset": 84, "nodeName": "semeval_subset", "type": "Union[Any, str]"}, {"lineNumber": 326, "col_offset": 75, "nodeName": "family", "type": "int"}, {"lineNumber": 326, "col_offset": 83, "nodeName": "subclass", "type": "str"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "loc", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "loc", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "line", "type": "str"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "line", "type": "str"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "line", "type": "str"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "train_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "pair", "type": "str"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "pairs", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "standardized_uri", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "term", "type": "str"}, {"lineNumber": 91, "col_offset": 58, "nodeName": "term", "type": "str"}, {"lineNumber": 91, "col_offset": 66, "nodeName": "pair", "type": "List[str]"}, {"lineNumber": 121, "col_offset": 52, "nodeName": "idx", "type": "int"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "choice_values", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "pairwise_analogy_func", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 127, "col_offset": 42, "nodeName": "vectors", "type": "Any"}, {"lineNumber": 127, "col_offset": 51, "nodeName": "a1", "type": "Any"}, {"lineNumber": 127, "col_offset": 55, "nodeName": "b1", "type": "Any"}, {"lineNumber": 127, "col_offset": 59, "nodeName": "a2", "type": "Any"}, {"lineNumber": 127, "col_offset": 63, "nodeName": "b2", "type": "Any"}, {"lineNumber": 127, "col_offset": 67, "nodeName": "weight_direct", "type": "Any"}, {"lineNumber": 127, "col_offset": 82, "nodeName": "weight_transpose", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "eval_pairwise_analogies", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "frame", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "eval_filename", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "weight_direct", "type": "float"}, {"lineNumber": 173, "col_offset": 37, "nodeName": "weight_transpose", "type": "float"}, {"lineNumber": 173, "col_offset": 55, "nodeName": "acc", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "seen_mistakes", "type": "Set[Any]"}, {"lineNumber": 254, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 58, "nodeName": "our_pair_scores", "type": "Dict[Tuple[Any, ...], Any]"}, {"lineNumber": 291, "col_offset": 47, "nodeName": "interval", "type": "str"}, {"lineNumber": 292, "col_offset": 48, "nodeName": "interval", "type": "str"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "results", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "results", "type": "Any"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "line", "type": "str"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "line", "type": "str"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 42, "col_offset": 58, "nodeName": "qline", "type": "nothing"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 43, "col_offset": 94, "nodeName": "pair", "type": "nothing"}, {"lineNumber": 43, "col_offset": 102, "nodeName": "raw_pairs", "type": "List[nothing]"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "questions", "type": "List[Tuple[Tuple[Any, ...], List[Tuple[Any, ...]], int]]"}, {"lineNumber": 47, "col_offset": 75, "nodeName": "answer_index", "type": "int"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "question_lines", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "question_lines", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "standardized_uri", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 52, "nodeName": "term", "type": "str"}, {"lineNumber": 62, "col_offset": 62, "nodeName": "term", "type": "str"}, {"lineNumber": 62, "col_offset": 70, "nodeName": "pair", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "standardized_uri", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 50, "nodeName": "term", "type": "str"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "term", "type": "str"}, {"lineNumber": 76, "col_offset": 68, "nodeName": "pair", "type": "List[str]"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "weight_direct", "type": "float"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "weight_transpose", "type": "float"}, {"lineNumber": 212, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 212, "col_offset": 58, "nodeName": "answer", "type": "Any"}, {"lineNumber": 327, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 327, "col_offset": 61, "nodeName": "family", "type": "int"}, {"lineNumber": 327, "col_offset": 69, "nodeName": "subclass", "type": "str"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 328, "col_offset": 60, "nodeName": "family", "type": "int"}, {"lineNumber": 328, "col_offset": 68, "nodeName": "subclass", "type": "str"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "split", "type": "nothing"}, {"lineNumber": 42, "col_offset": 67, "nodeName": "question_lines", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "concept_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 47, "col_offset": 56, "nodeName": "concept_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "line", "type": "str"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "quad", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "quad", "type": "Any"}, {"lineNumber": 212, "col_offset": 41, "nodeName": "quad", "type": "Any"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "qline", "type": "nothing"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "standardized_uri", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 66, "nodeName": "term", "type": "nothing"}, {"lineNumber": 43, "col_offset": 76, "nodeName": "term", "type": "nothing"}, {"lineNumber": 43, "col_offset": 84, "nodeName": "pair", "type": "nothing"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "pair", "type": "str"}]