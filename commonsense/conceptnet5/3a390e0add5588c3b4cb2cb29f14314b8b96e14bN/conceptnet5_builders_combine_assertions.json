[{"lineNumber": 13, "col_offset": 0, "nodeName": "weight_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "combine_assertions", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "output_assertion", "type": "Callable[..., Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "N", "type": "int"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "CURRENT_DIR", "type": "str"}, {"lineNumber": 10, "col_offset": 14, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "current_uri", "type": "None"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "current_data", "type": "Dict[nothing, nothing]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "current_surface", "type": "None"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "current_weight", "type": "float"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "current_sources", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "out", "type": "conceptnet5.json_stream.JSONStreamWriter"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "uri", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "sources", "type": "Set[Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "source_tree", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 10, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 41, "col_offset": 10, "nodeName": "JSONStreamWriter", "type": "Type[conceptnet5.json_stream.JSONStreamWriter]"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "out_filename", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "csv_filename", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "parts", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "weight", "type": "float"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "current_uri", "type": "Any"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "disjunction_uri", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "make_edge", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "uri", "type": "Any"}, {"lineNumber": 120, "col_offset": 55, "nodeName": "uri", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "write", "type": "Callable[[Any], None]"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "combine_assertions", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "input", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 141, "col_offset": 48, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 141, "col_offset": 62, "nodeName": "license", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 17, "col_offset": 42, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "codecs", "type": "module"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "surface", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "uri", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "uri", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "current_uri", "type": "None"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "current_weight", "type": "float"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "weight", "type": "float"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "current_uri", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "uri", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "current_weight", "type": "float"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "weight", "type": "float"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "current_sources", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "current_surface", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "output_assertion", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "out", "type": "conceptnet5.json_stream.JSONStreamWriter"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "sources", "type": "Set[Any]"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "source_tree", "type": "Any"}, {"lineNumber": 117, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "out", "type": "conceptnet5.json_stream.JSONStreamWriter"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 141, "col_offset": 48, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 141, "col_offset": 62, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "math", "type": "module"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "max", "type": "Callable"}, {"lineNumber": 17, "col_offset": 42, "nodeName": "math", "type": "module"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "parts", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "uri", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "rel", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "start", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "end", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "context", "type": "Any"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "weight", "type": "Any"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "source_uri", "type": "Any"}, {"lineNumber": 49, "col_offset": 63, "nodeName": "id", "type": "Any"}, {"lineNumber": 49, "col_offset": 67, "nodeName": "this_dataset", "type": "Any"}, {"lineNumber": 49, "col_offset": 81, "nodeName": "surface", "type": "Any"}, {"lineNumber": 49, "col_offset": 91, "nodeName": "parts", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "strip", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "surface", "type": "None"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "source_uri", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "current_sources", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "surface", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "current_surface", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "surface", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "current_uri", "type": "None"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "rel", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "start", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "end", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "source_uri", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "surface", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "rel", "type": "Any"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "start", "type": "Any"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "end", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "license", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "current_sources", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "current_surface", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "current_uri", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "out", "type": "conceptnet5.json_stream.JSONStreamWriter"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "weight", "type": "float"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "surface", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "parts", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "uri", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "rel", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "start", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "end", "type": "Any"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "context", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "weight", "type": "Any"}, {"lineNumber": 52, "col_offset": 51, "nodeName": "source_uri", "type": "Any"}, {"lineNumber": 52, "col_offset": 63, "nodeName": "id", "type": "Any"}, {"lineNumber": 52, "col_offset": 67, "nodeName": "this_dataset", "type": "Any"}, {"lineNumber": 52, "col_offset": 82, "nodeName": "parts", "type": "Any"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "source_uri", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "current_surface", "type": "None"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "weight_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "current_weight", "type": "float"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "current_sources", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 62, "nodeName": "csv_filename", "type": "Any"}, {"lineNumber": 55, "col_offset": 76, "nodeName": "line", "type": "Any"}]