[{"lineNumber": 50, "col_offset": 0, "nodeName": "join_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 0, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "string_type", "type": "Type[str]"}, {"lineNumber": 9, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "wiktionarySemantics", "type": "Any"}, {"lineNumber": 6, "col_offset": 14, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "texts", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "links", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "item", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "lst", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "one_line_wikitext", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "wikitext", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "semantics", "type": "ConceptNetWiktionarySemantics"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "ast", "type": "Any"}, {"lineNumber": 191, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "links", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "language", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "language", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "pos", "type": "None"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "pos", "type": "None"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "sense", "type": "None"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "sense", "type": "None"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "rel", "type": "str"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "rel", "type": "str"}, {"lineNumber": 51, "col_offset": 7, "nodeName": "lst", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "texts", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "LinkedText", "type": "Type[LinkedText]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "text", "type": "str"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "links", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "default_language", "type": "str"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "language", "type": "str"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "value", "type": "Optional[LinkedText]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "value", "type": "Optional[LinkedText]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "template_value", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "position", "type": "int"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "ast", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "template_value", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "template_value", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "template_value", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "sense", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "ast", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "ConceptNetWiktionarySemantics", "type": "Type[ConceptNetWiktionarySemantics]"}, {"lineNumber": 183, "col_offset": 10, "nodeName": "parse", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "startrule", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "pprint", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "ast", "type": "Any"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 9, "nodeName": "file", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "startrule", "type": "Any"}, {"lineNumber": 11, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 11, "col_offset": 22, "nodeName": "text", "type": "Any"}, {"lineNumber": 11, "col_offset": 28, "nodeName": "LinkedText", "type": "Type[LinkedText]"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "text", "type": "Any"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "links", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "text", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "links", "type": "List[nothing]"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "links", "type": "List[nothing]"}, {"lineNumber": 19, "col_offset": 33, "nodeName": "text", "type": "Any"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "links", "type": "Any"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "links", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "LinkedText", "type": "Type[LinkedText]"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "text", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "links", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "EdgeInfo", "type": "Type[EdgeInfo]"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "language", "type": "Any"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "target", "type": "Any"}, {"lineNumber": 36, "col_offset": 52, "nodeName": "pos", "type": "Any"}, {"lineNumber": 36, "col_offset": 57, "nodeName": "sense", "type": "Any"}, {"lineNumber": 36, "col_offset": 69, "nodeName": "rel", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "EdgeInfo", "type": "Type[EdgeInfo]"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "language", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "target", "type": "Any"}, {"lineNumber": 39, "col_offset": 52, "nodeName": "pos", "type": "Any"}, {"lineNumber": 39, "col_offset": 62, "nodeName": "sense", "type": "Any"}, {"lineNumber": 39, "col_offset": 69, "nodeName": "rel", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "EdgeInfo", "type": "Type[EdgeInfo]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "language", "type": "Any"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "target", "type": "Any"}, {"lineNumber": 42, "col_offset": 52, "nodeName": "pos", "type": "Any"}, {"lineNumber": 42, "col_offset": 62, "nodeName": "sense", "type": "Any"}, {"lineNumber": 42, "col_offset": 74, "nodeName": "rel", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "item", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "ConceptNetWiktionarySemantics"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "self", "type": "ConceptNetWiktionarySemantics"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "wiktionaryParser", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "parse", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "text", "type": "str"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "ast", "type": "Any"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "join_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "ast", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "join_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "ast", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "links", "type": "List[nothing]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "links", "type": "List[EdgeInfo]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "LinkedText", "type": "Type[LinkedText]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "LinkedText", "type": "Type[LinkedText]"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "copy", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "template_value", "type": "Any"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "ast", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "EdgeInfo", "type": "Type[EdgeInfo]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "ast", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "ast", "type": "Any"}, {"lineNumber": 180, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "filename", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "read", "type": "Callable"}, {"lineNumber": 183, "col_offset": 10, "nodeName": "semantics", "type": "ConceptNetWiktionarySemantics"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "filename", "type": "Any"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "trace", "type": "Any"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 202, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 202, "col_offset": 42, "nodeName": "trace", "type": "Any"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "self", "type": "LinkedText"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "text", "type": "Any"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "self", "type": "LinkedText"}, {"lineNumber": 13, "col_offset": 25, "nodeName": "links", "type": "Any"}, {"lineNumber": 13, "col_offset": 38, "nodeName": "links", "type": "List[nothing]"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "self", "type": "LinkedText"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "self", "type": "LinkedText"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 19, "col_offset": 33, "nodeName": "other", "type": "Any"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "self", "type": "LinkedText"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "other", "type": "Any"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "text", "type": "Any"}, {"lineNumber": 24, "col_offset": 50, "nodeName": "links", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 36, "col_offset": 57, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 36, "col_offset": 69, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 39, "col_offset": 52, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 39, "col_offset": 69, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 42, "col_offset": 52, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 42, "col_offset": 62, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "language", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "target", "type": "Any"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "pos", "type": "Any"}, {"lineNumber": 46, "col_offset": 50, "nodeName": "sense", "type": "Any"}, {"lineNumber": 46, "col_offset": 62, "nodeName": "rel", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "string_type", "type": "Type[str]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "wiktionarySemantics", "type": "Any"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "parser", "type": "Any"}, {"lineNumber": 83, "col_offset": 59, "nodeName": "rule_name", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "self", "type": "ConceptNetWiktionarySemantics"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "ast", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "ast", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "ast", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "text", "type": "Any"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "links", "type": "Union[List[EdgeInfo], List[nothing]]"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "key", "type": "int"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "position", "type": "int"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "position", "type": "int"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "template_value", "type": "Dict[Union[int, Any], Any]"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "item", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "ast", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "ast", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "ast", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "set_sense", "type": "Any"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "sense", "type": "Any"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "info", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 202, "col_offset": 42, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 13, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "self", "type": "LinkedText"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "self", "type": "LinkedText"}, {"lineNumber": 24, "col_offset": 50, "nodeName": "self", "type": "LinkedText"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 46, "col_offset": 50, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 46, "col_offset": 62, "nodeName": "self", "type": "EdgeInfo"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "item", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "LinkedText", "type": "Type[LinkedText]"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "EdgeInfo", "type": "Type[EdgeInfo]"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "ast", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "item", "type": "Any"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "key", "type": "Union[int, Any]"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "ast", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "ast", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "ast", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "info", "type": "Any"}, {"lineNumber": 173, "col_offset": 50, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "texts", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "links", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "default_language", "type": "Any"}, {"lineNumber": 173, "col_offset": 54, "nodeName": "ast", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "text", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "links", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "item", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "item", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "self", "type": "ConceptNetWiktionarySemantics"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "ast", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "texts", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "item", "type": "Any"}]