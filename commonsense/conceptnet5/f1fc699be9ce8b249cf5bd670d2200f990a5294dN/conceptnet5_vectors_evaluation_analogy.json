[{"lineNumber": 10, "col_offset": 0, "nodeName": "read_google_analogies", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "read_turney_analogies", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "analogy_func", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "pairwise_analogy_func", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "tune_pairwise_analogies", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "eval_analogies", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "quads", "type": "List[Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "questions", "type": "List[Tuple[Tuple[Any, ...], List[Tuple[Any, ...]], int]]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "question_lines", "type": "List[str]"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "questions", "type": "List[Tuple[Tuple[Any, ...], List[Tuple[Any, ...]], int]]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "va1", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "vb1", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "va2", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "vb2", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "total", "type": "int"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "correct", "type": "int"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "weights", "type": "List[float]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "best_weights", "type": "None"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "best_acc", "type": "float"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "weight_direct", "type": "float"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "weights", "type": "List[float]"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "best_weights", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "quads", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "vocab", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "tframe", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "total", "type": "int"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "correct", "type": "int"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "seen_mistakes", "type": "Set[Any]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "quad", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "quads", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 45, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "a1", "type": "Any"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "b1", "type": "Any"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "a2", "type": "Any"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "b2", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "low", "type": "Any"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "high", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "proportion_confint", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "correct", "type": "int"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "total", "type": "int"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "Series", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "weight_transpose", "type": "float"}, {"lineNumber": 115, "col_offset": 32, "nodeName": "weights", "type": "List[float]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "weight_direct", "type": "Any"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "weight_transpose", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "eval_pairwise_analogies", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "frame", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "eval_filename", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "get_support_data_filename", "type": "Callable[[Any], str]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "read_google_analogies", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "filename", "type": "str"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "prompt", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "answer", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "vector", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "similar", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "result", "type": "None"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "match", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "index", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "total", "type": "int"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "low", "type": "Any"}, {"lineNumber": 166, "col_offset": 9, "nodeName": "high", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "proportion_confint", "type": "Any"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "correct", "type": "int"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "total", "type": "int"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "Series", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "filename", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 52, "col_offset": 59, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 70, "nodeName": "frame", "type": "Any"}, {"lineNumber": 52, "col_offset": 77, "nodeName": "a2", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "dot", "type": "Any"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "va1", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "frame", "type": "Any"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "prompt", "type": "Tuple[Any, ...]"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "choices", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "answer", "type": "int"}, {"lineNumber": 74, "col_offset": 52, "nodeName": "read_turney_analogies", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 74, "nodeName": "eval_filename", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "prompt", "type": "Tuple[Any, ...]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "choice_values", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "choice", "type": "Tuple[Any, ...]"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "choices", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "our_answer", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "total", "type": "int"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "low", "type": "Any"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "high", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "acc", "type": "Any"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "weight_direct", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "weight_transpose", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "word", "type": "Any"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "frame", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "vocab", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "quad", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "quad", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "analogy_func", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "frame", "type": "Any"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "similar_to_vec", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "tframe", "type": "Any"}, {"lineNumber": 150, "col_offset": 41, "nodeName": "vector", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "similar", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "answer", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "correct", "type": "int"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "low", "type": "Any"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "high", "type": "Any"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "standardized_uri", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "term", "type": "str"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "open", "type": "Callable"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "filename", "type": "str"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "line", "type": "str"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "frame", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "b1", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "frame", "type": "Any"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "a1", "type": "Any"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "dot", "type": "Any"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "vb1", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "va2", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "subset", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "a1", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "b1", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "choice", "type": "Tuple[Any, ...]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "choice_values", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "our_answer", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "answer", "type": "int"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "correct", "type": "int"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "correct", "type": "int"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "total", "type": "int"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "acc", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "best_acc", "type": "float"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "best_weights", "type": "Tuple[float, float]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "best_acc", "type": "Any"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "acc", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "top_n_list", "type": "Any"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "word", "type": "Any"}, {"lineNumber": 141, "col_offset": 48, "nodeName": "word", "type": "Any"}, {"lineNumber": 141, "col_offset": 56, "nodeName": "vocab", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "prompt", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "match", "type": "Any"}, {"lineNumber": 153, "col_offset": 28, "nodeName": "prompt", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "match", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "seen_mistakes", "type": "Set[Any]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "correct", "type": "int"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "total", "type": "int"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "line", "type": "str"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "answer_index", "type": "int"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "raw_pairs", "type": "List[nothing]"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "concept_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "vb2", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "subset", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "a2", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "b2", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "weight_direct", "type": "float"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "weight_transpose", "type": "float"}, {"lineNumber": 122, "col_offset": 55, "nodeName": "acc", "type": "Any"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "weight_direct", "type": "float"}, {"lineNumber": 123, "col_offset": 47, "nodeName": "weight_transpose", "type": "float"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "wordfreq", "type": "Any"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "line", "type": "str"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "line", "type": "str"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "line", "type": "str"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "idx", "type": "int"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "choice_values", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "pairwise_analogy_func", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "a1", "type": "Any"}, {"lineNumber": 82, "col_offset": 52, "nodeName": "b1", "type": "Any"}, {"lineNumber": 82, "col_offset": 56, "nodeName": "a2", "type": "Any"}, {"lineNumber": 82, "col_offset": 60, "nodeName": "b2", "type": "Any"}, {"lineNumber": 82, "col_offset": 64, "nodeName": "weight_direct", "type": "Any"}, {"lineNumber": 82, "col_offset": 79, "nodeName": "weight_transpose", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "eval_pairwise_analogies", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "frame", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "eval_filename", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "seen_mistakes", "type": "Set[Any]"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "line", "type": "str"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "line", "type": "str"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 39, "col_offset": 58, "nodeName": "qline", "type": "nothing"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 40, "col_offset": 94, "nodeName": "pair", "type": "nothing"}, {"lineNumber": 40, "col_offset": 102, "nodeName": "raw_pairs", "type": "List[nothing]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "questions", "type": "List[Tuple[Tuple[Any, ...], List[Tuple[Any, ...]], int]]"}, {"lineNumber": 44, "col_offset": 75, "nodeName": "answer_index", "type": "int"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "question_lines", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "question_lines", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "weight_direct", "type": "float"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "weight_transpose", "type": "float"}, {"lineNumber": 162, "col_offset": 50, "nodeName": "result", "type": "Any"}, {"lineNumber": 162, "col_offset": 58, "nodeName": "answer", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "split", "type": "nothing"}, {"lineNumber": 39, "col_offset": 67, "nodeName": "question_lines", "type": "List[str]"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "concept_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "concept_pairs", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "quad", "type": "Any"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "quad", "type": "Any"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "quad", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "qline", "type": "nothing"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "standardized_uri", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 66, "nodeName": "term", "type": "nothing"}, {"lineNumber": 40, "col_offset": 76, "nodeName": "term", "type": "nothing"}, {"lineNumber": 40, "col_offset": 84, "nodeName": "pair", "type": "nothing"}]