[{"lineNumber": 32, "col_offset": 0, "nodeName": "parse_topic_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "translate_dbpedia_url", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "map_dbpedia_relation", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "handle_file", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "handle_triple", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 161, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "__author__", "type": "unicode"}, {"lineNumber": 20, "col_offset": 3, "nodeName": "major", "type": "int"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "urlsplit", "type": "Callable[..., urlparse.SplitResult]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "urlsplit", "type": "Callable[..., urlparse.SplitResult]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "quote", "type": "Callable"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "quote", "type": "Callable"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "text", "type": "unicode"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "match", "type": "Optional[Match[unicode]]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "pieces", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "reader", "type": "conceptnet5.formats.semantic_web.NTriplesReader"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "out", "type": "conceptnet5.formats.json_stream.JSONStreamWriter"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "map_out", "type": "conceptnet5.formats.semantic_web.NTriplesWriter"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "subj_concept", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "obj_concept", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "rel", "type": "Optional[unicode]"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "mapped_pairs", "type": "List[Union[Tuple[Any, Optional[unicode]], Tuple[Any, Any]]]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 171, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 20, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "urlparse", "type": "module"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "urllib", "type": "module"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "replace", "type": "Callable"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "text", "type": "unicode"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "text", "type": "unicode"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "match", "type": "Callable"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "text", "type": "unicode"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "match", "type": "Optional[Match[unicode]]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "parse_topic_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "pieces", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "un_camel_case", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "normalized_concept_uri", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "lang", "type": "unicode"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "resource_name", "type": "Callable[[Any], str]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "url", "type": "Any"}, {"lineNumber": 88, "col_offset": 7, "nodeName": "name", "type": "str"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "NTriplesReader", "type": "Type[conceptnet5.formats.semantic_web.NTriplesReader]"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "JSONStreamWriter", "type": "Type[conceptnet5.formats.json_stream.JSONStreamWriter]"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "NTriplesWriter", "type": "Type[conceptnet5.formats.semantic_web.NTriplesWriter]"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "sw_map_file", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "filename", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "subj", "type": "Any"}, {"lineNumber": 107, "col_offset": 10, "nodeName": "pred", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "obj", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "tag", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "parse_line", "type": "Callable[[Any], Optional[Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "line", "type": "unicode"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "tag", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "obj", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "translate_dbpedia_url", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 41, "nodeName": "subj", "type": "Any"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "translate_dbpedia_url", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "obj", "type": "Any"}, {"lineNumber": 133, "col_offset": 7, "nodeName": "obj_concept", "type": "Any"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "map_dbpedia_relation", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "pred", "type": "Any"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "rel", "type": "Optional[unicode]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "sw_url", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "conceptnet_uri", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "conceptnet_url", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "make_edge", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "rel", "type": "Optional[unicode]"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "subj_concept", "type": "Any"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "obj_concept", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "write", "type": "Callable[[Any], None]"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "edge", "type": "Dict[str, Any]"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "handle_file", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 168, "col_offset": 41, "nodeName": "sw_map", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 20, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "text", "type": "str"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "replace", "type": "Callable[..., unicode]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "text", "type": "unicode"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "resource_name", "type": "Callable[[Any], str]"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "url", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "pieces", "type": "Any"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "pieces", "type": "Any"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "handle_triple", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 52, "nodeName": "reader", "type": "conceptnet5.formats.semantic_web.NTriplesReader"}, {"lineNumber": 103, "col_offset": 60, "nodeName": "out", "type": "conceptnet5.formats.json_stream.JSONStreamWriter"}, {"lineNumber": 103, "col_offset": 65, "nodeName": "map_out", "type": "conceptnet5.formats.semantic_web.NTriplesWriter"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "reader", "type": "conceptnet5.formats.semantic_web.NTriplesReader"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "pred", "type": "Any"}, {"lineNumber": 119, "col_offset": 53, "nodeName": "obj", "type": "Any"}, {"lineNumber": 119, "col_offset": 72, "nodeName": "obj", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "subj", "type": "Any"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "obj", "type": "Any"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "subj", "type": "Any"}, {"lineNumber": 120, "col_offset": 73, "nodeName": "obj", "type": "Any"}, {"lineNumber": 144, "col_offset": 9, "nodeName": "pred", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "rel", "type": "Optional[unicode]"}, {"lineNumber": 145, "col_offset": 9, "nodeName": "subj", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "subj_concept", "type": "Any"}, {"lineNumber": 146, "col_offset": 9, "nodeName": "obj", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "obj_concept", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "full_conceptnet_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 45, "nodeName": "conceptnet_uri", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "write_link", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "conceptnet_url", "type": "Any"}, {"lineNumber": 150, "col_offset": 43, "nodeName": "sw_url", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "cc_sharealike", "type": "unicode"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "out", "type": "conceptnet5.formats.json_stream.JSONStreamWriter"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 168, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "text", "type": "unicode"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "group", "type": "Callable"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "strip", "type": "Callable[..., unicode]"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "name", "type": "str"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "strip", "type": "Callable[..., unicode]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "map_out", "type": "conceptnet5.formats.semantic_web.NTriplesWriter"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "Licenses", "type": "Type[conceptnet5.uri.Licenses]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "match", "type": "Optional[Match[unicode]]"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "name", "type": "str"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "group", "type": "Callable"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "decode", "type": "Callable[..., unicode]"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "match", "type": "Optional[Match[unicode]]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "line", "type": "str"}]