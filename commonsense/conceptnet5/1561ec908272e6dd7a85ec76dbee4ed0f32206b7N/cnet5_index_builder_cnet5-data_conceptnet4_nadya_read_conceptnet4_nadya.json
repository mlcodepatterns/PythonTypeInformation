[{"lineNumber": 13, "col_offset": 0, "nodeName": "can_skip", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "build_frame_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "build_relation", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "build_start", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "build_end", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "build_sources", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "build_data_set", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "extract_parts", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "handle_raw_flat_assertion", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "run_single_process", "type": "Callable[[], Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "JA", "type": "Any"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "LICENSE", "type": "str"}, {"lineNumber": 9, "col_offset": 5, "nodeName": "NoStopwordMeCabWrapper", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "lang", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "activity", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "polarity", "type": "float"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "relname", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "relation", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "lang", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "startText", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "start", "type": "str"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "start", "type": "str"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "lang", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "endText", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "end", "type": "str"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "end", "type": "str"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "score", "type": "float"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "activity_node", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "sources", "type": "List[Tuple[List[Any], float]]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "sources", "type": "List[Tuple[List[Any], float]]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "raw_votes", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "votes_list", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "raw_vote", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "raw_votes", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "votes_list", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "writer", "type": "conceptnet5.edges.MultiWriter"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 137, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 9, "col_offset": 5, "nodeName": "japanese", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 15, "col_offset": 7, "nodeName": "lang", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "activity", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "replace", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "relname", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "relname", "type": "str"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "polarity", "type": "float"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "relation", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "relation", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "make_concept_uri", "type": "Callable[..., str]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "startText", "type": "Any"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "lang", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "make_concept_uri", "type": "Callable[..., str]"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "endText", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "lang", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "normalize_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "normalize_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "raw_vote", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "parts", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "vote_username", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "vote_int", "type": "int"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "relation", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "start", "type": "str"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "end", "type": "str"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "sources", "type": "List[Tuple[List[Any], float]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "edges", "type": "List[Dict[str, Any]]"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "sources", "type": "List[Tuple[List[Any], float]]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "edges", "type": "List[Dict[str, Any]]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "MultiWriter", "type": "Type[conceptnet5.edges.MultiWriter]"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "listdir", "type": "Callable"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "path", "type": "str"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "raw_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 7, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "normalize_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "normalize_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "normalize_list", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "normalize_list", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 67, "col_offset": 64, "nodeName": "flat_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 68, "col_offset": 73, "nodeName": "flat_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 70, "col_offset": 79, "nodeName": "flat_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 71, "col_offset": 73, "nodeName": "flat_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 72, "col_offset": 76, "nodeName": "flat_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 73, "col_offset": 73, "nodeName": "flat_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 76, "col_offset": 82, "nodeName": "flat_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "raw_vote", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "parts", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "extract_parts", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "flat_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "can_skip", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "build_frame_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "build_relation", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "build_start", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "build_end", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "build_data_set", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "build_sources", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "source_list", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "weight", "type": "float"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "edges", "type": "Union[List[nothing], List[Dict[str, Any]]]"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "edge", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "edges", "type": "Union[List[nothing], List[Dict[str, Any]]]"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "sys", "type": "module"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "run_single_process", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "replace", "type": "Any"}, {"lineNumber": 27, "col_offset": 105, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "relname", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "relname", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "JA", "type": "Any"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "JA", "type": "Any"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "activity_node", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "score", "type": "float"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "re", "type": "module"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "re", "type": "module"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 69, "col_offset": 80, "nodeName": "flat_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "re", "type": "module"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "re", "type": "module"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "re", "type": "module"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "re", "type": "module"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 74, "col_offset": 82, "nodeName": "flat_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 75, "col_offset": 82, "nodeName": "flat_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "re", "type": "module"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 77, "col_offset": 80, "nodeName": "flat_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 78, "col_offset": 73, "nodeName": "flat_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "raw_vote", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "votes_list", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "vote_username", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "vote_int", "type": "int"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "weight", "type": "int"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "edge", "type": "Dict[str, Any]"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "codecs", "type": "module"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "path", "type": "str"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "filename", "type": "str"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "handle_raw_flat_assertion", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "raw_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "re", "type": "module"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "re", "type": "module"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "re", "type": "module"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "re", "type": "module"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "re", "type": "module"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "split", "type": "Any"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 112, "col_offset": 45, "nodeName": "source_list", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "make_edge", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "relation", "type": "Any"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "start", "type": "str"}, {"lineNumber": 116, "col_offset": 50, "nodeName": "end", "type": "str"}, {"lineNumber": 116, "col_offset": 55, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 116, "col_offset": 64, "nodeName": "LICENSE", "type": "str"}, {"lineNumber": 116, "col_offset": 73, "nodeName": "source_list", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 98, "nodeName": "frame_text", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "edge", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "write", "type": "Callable[[Any], None]"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "edge", "type": "Dict[str, Any]"}, {"lineNumber": 27, "col_offset": 54, "nodeName": "parts_dict", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 79, "col_offset": 57, "nodeName": "flat_assertion", "type": "Union[str, unicode]"}, {"lineNumber": 116, "col_offset": 117, "nodeName": "weight", "type": "float"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "edges", "type": "List[Dict[str, Any]]"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "writer", "type": "conceptnet5.edges.MultiWriter"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "parts", "type": "Any"}]