[{"lineNumber": 16, "col_offset": 0, "nodeName": "success", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "error", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "make_query_url", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "groupkey_to_pairs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "paginated_url", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "make_paginated_view", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "lookup_grouped_by_feature", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 0, "nodeName": "lookup_paginated", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 0, "nodeName": "lookup_single_assertion", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 0, "nodeName": "query_relatedness", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 196, "col_offset": 0, "nodeName": "query_related", "type": "Callable[..., Any]"}, {"lineNumber": 234, "col_offset": 0, "nodeName": "query_paginated", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 0, "nodeName": "standardize_uri", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "VECTORS", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "FINDER", "type": "conceptnet5.db.query.AssertionFinder"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "CONTEXT", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "VALID_KEYS", "type": "List[str]"}, {"lineNumber": 10, "col_offset": 10, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 11, "col_offset": 9, "nodeName": "AssertionFinder", "type": "Type[conceptnet5.db.query.AssertionFinder]"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "CONTEXT", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "CONTEXT", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "response", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "str_items", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "groupkey", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "new_params", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "prev_offset", "type": "Union[int, Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "next_offset", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "pager", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "more", "type": "bool"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "pager", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "found", "type": "Dict[Any, Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "grouped", "type": "List[Dict[str, Any]]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "group", "type": "Dict[str, Any]"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "grouped", "type": "List[Dict[str, Any]]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "found", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "edges", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "more", "type": "bool"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "found", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "response", "type": "Dict[Any, Any]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "url", "type": "str"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "found", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "related", "type": "List[Dict[str, Any]]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "response", "type": "Dict[str, Union[List[Dict[str, Any]], Any]]"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "response", "type": "Dict[str, Union[List[Dict[str, Any]], Any]]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "found", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "edges", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "more", "type": "bool"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "text", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "uri", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 11, "col_offset": 32, "nodeName": "DB_NAME", "type": "str"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "status", "type": "Any"}, {"lineNumber": 23, "col_offset": 54, "nodeName": "details", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "str_items", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "url", "type": "str"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "direction", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "rel", "type": "Any"}, {"lineNumber": 47, "col_offset": 7, "nodeName": "direction", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "make_query_url", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "url", "type": "str"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "new_params", "type": "Any"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "max", "type": "Callable"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "offset", "type": "int"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "limit", "type": "Any"}, {"lineNumber": 84, "col_offset": 7, "nodeName": "offset", "type": "int"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "lookup_grouped_by_feature", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "term", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "groupkey", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "assertions", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "items", "type": "Callable"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "groupkey", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "base_url", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "feature_pairs", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "url", "type": "str"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "symmetric", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "group", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "ld_node", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "term", "type": "Any"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "grouped", "type": "List[Dict[str, Any]]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "lookup", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "term", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "found", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "term", "type": "Any"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "edges", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "found", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "lookup", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "uri", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "uri", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "found", "type": "Any"}, {"lineNumber": 182, "col_offset": 10, "nodeName": "make_query_url", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "relatedness", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "response", "type": "Dict[str, Union[float, str, List[str]]]"}, {"lineNumber": 201, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "uri", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "similar_terms", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 34, "nodeName": "query", "type": "Union[List[Tuple[str, float]], Any]"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "uri", "type": "Any"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "related", "type": "List[Dict[str, Any]]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "query", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "query", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "found", "type": "Any"}, {"lineNumber": 243, "col_offset": 73, "nodeName": "edges", "type": "Any"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "success", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "replace", "type": "Any"}, {"lineNumber": 262, "col_offset": 10, "nodeName": "standardized_concept_uri", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 35, "nodeName": "language", "type": "Any"}, {"lineNumber": 262, "col_offset": 45, "nodeName": "text", "type": "Any"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "uri", "type": "Any"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "success", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "item", "type": "Tuple[str, Any]"}, {"lineNumber": 33, "col_offset": 51, "nodeName": "items", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "direction", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "offset", "type": "int"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "limit", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "paginated_url", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "url", "type": "str"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "params", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "offset", "type": "int"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "limit", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "paginated_url", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "url", "type": "str"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "params", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "limit", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "pager", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "paginated_url", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "url", "type": "Any"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "params", "type": "Tuple[()]"}, {"lineNumber": 85, "col_offset": 59, "nodeName": "prev_offset", "type": "Any"}, {"lineNumber": 85, "col_offset": 72, "nodeName": "limit", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "pager", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "paginated_url", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "url", "type": "str"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "params", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 87, "col_offset": 55, "nodeName": "next_offset", "type": "Any"}, {"lineNumber": 87, "col_offset": 68, "nodeName": "limit", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "pager", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "error", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "FINDER", "type": "conceptnet5.db.query.AssertionFinder"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "found", "type": "Dict[Any, Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "direction", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "rel", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "groupkey_to_pairs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "groupkey", "type": "Any"}, {"lineNumber": 109, "col_offset": 52, "nodeName": "term", "type": "Any"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "make_query_url", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "base_url", "type": "str"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "feature_pairs", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "direction", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "url", "type": "str"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "symmetric", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "feature_limit", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "view", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "view", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "group", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "grouped", "type": "List[Dict[str, Any]]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "group", "type": "Dict[str, Any]"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "grouped", "type": "List[Dict[str, Any]]"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "filters", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "error", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "success", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "FINDER", "type": "conceptnet5.db.query.AssertionFinder"}, {"lineNumber": 147, "col_offset": 58, "nodeName": "offset", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "limit", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "found", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "edges", "type": "Any"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "offset", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "make_paginated_view", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 47, "nodeName": "term", "type": "Any"}, {"lineNumber": 152, "col_offset": 57, "nodeName": "offset", "type": "Any"}, {"lineNumber": 152, "col_offset": 65, "nodeName": "limit", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "error", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "success", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "FINDER", "type": "conceptnet5.db.query.AssertionFinder"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "error", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "response", "type": "Dict[Any, Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "success", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "response", "type": "Dict[Any, Any]"}, {"lineNumber": 179, "col_offset": 7, "nodeName": "node1", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "node2", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "error", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "get_similarity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "node1", "type": "Any"}, {"lineNumber": 184, "col_offset": 52, "nodeName": "node2", "type": "Any"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "url", "type": "str"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "success", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "response", "type": "Dict[str, Union[float, str, List[str]]]"}, {"lineNumber": 201, "col_offset": 7, "nodeName": "uri", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "VECTORS", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 225, "col_offset": 48, "nodeName": "filter", "type": "Any"}, {"lineNumber": 225, "col_offset": 62, "nodeName": "limit", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "FINDER", "type": "conceptnet5.db.query.AssertionFinder"}, {"lineNumber": 241, "col_offset": 56, "nodeName": "offset", "type": "Any"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "limit", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "make_query_url", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "found", "type": "Any"}, {"lineNumber": 244, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "edges", "type": "Any"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "offset", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 247, "col_offset": 45, "nodeName": "offset", "type": "Any"}, {"lineNumber": 247, "col_offset": 53, "nodeName": "limit", "type": "Any"}, {"lineNumber": 256, "col_offset": 7, "nodeName": "text", "type": "Any"}, {"lineNumber": 256, "col_offset": 23, "nodeName": "language", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "error", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "text", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "item", "type": "Tuple[str, Any]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "url", "type": "str"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "str_items", "type": "List[str]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "rel", "type": "Any"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "term", "type": "Any"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "key", "type": "Any"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "val", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "params", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "offset", "type": "int"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "limit", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "term", "type": "Any"}, {"lineNumber": 104, "col_offset": 58, "nodeName": "feature_limit", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "feature_pairs", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "assertions", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "assertions", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "make_paginated_view", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "base_url", "type": "str"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "feature_pairs", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 121, "col_offset": 44, "nodeName": "feature_limit", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "group", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "grouped", "type": "List[Dict[str, Any]]"}, {"lineNumber": 147, "col_offset": 39, "nodeName": "limit", "type": "Any"}, {"lineNumber": 151, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "found", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "edges", "type": "Any"}, {"lineNumber": 152, "col_offset": 77, "nodeName": "more", "type": "bool"}, {"lineNumber": 154, "col_offset": 72, "nodeName": "term", "type": "Any"}, {"lineNumber": 168, "col_offset": 78, "nodeName": "uri", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "response", "type": "Dict[Any, Any]"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "found", "type": "Any"}, {"lineNumber": 182, "col_offset": 52, "nodeName": "node1", "type": "Any"}, {"lineNumber": 182, "col_offset": 70, "nodeName": "node2", "type": "Any"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "VECTORS", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "round", "type": "Callable"}, {"lineNumber": 203, "col_offset": 9, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "query", "type": "List[Tuple[str, float]]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "term_pieces", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "piece", "type": "Any"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "term_pieces", "type": "Any"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "error", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "key", "type": "Any"}, {"lineNumber": 228, "col_offset": 18, "nodeName": "weight", "type": "Any"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "items", "type": "Any"}, {"lineNumber": 241, "col_offset": 38, "nodeName": "limit", "type": "Any"}, {"lineNumber": 243, "col_offset": 48, "nodeName": "items", "type": "Any"}, {"lineNumber": 245, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "found", "type": "Any"}, {"lineNumber": 245, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "edges", "type": "Any"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 247, "col_offset": 65, "nodeName": "more", "type": "bool"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "rel", "type": "Any"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "term", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "rel", "type": "Any"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "term", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "feature_limit", "type": "Any"}, {"lineNumber": 134, "col_offset": 63, "nodeName": "response", "type": "Dict[str, Any]"}, {"lineNumber": 185, "col_offset": 47, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 185, "col_offset": 53, "nodeName": "relatedness", "type": "Any"}, {"lineNumber": 203, "col_offset": 9, "nodeName": "uri", "type": "Any"}, {"lineNumber": 203, "col_offset": 38, "nodeName": "count", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "_list", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "language", "type": "Any"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "termlist", "type": "Any"}, {"lineNumber": 205, "col_offset": 43, "nodeName": "split", "type": "Any"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "split", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "uri", "type": "Any"}, {"lineNumber": 222, "col_offset": 70, "nodeName": "uri", "type": "Any"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "found", "type": "Any"}, {"lineNumber": 243, "col_offset": 48, "nodeName": "query", "type": "Any"}, {"lineNumber": 247, "col_offset": 29, "nodeName": "items", "type": "Any"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "key", "type": "Any"}, {"lineNumber": 61, "col_offset": 67, "nodeName": "key", "type": "Any"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "assertion", "type": "Any"}, {"lineNumber": 114, "col_offset": 63, "nodeName": "assertions", "type": "Any"}, {"lineNumber": 203, "col_offset": 38, "nodeName": "uri", "type": "Any"}, {"lineNumber": 205, "col_offset": 43, "nodeName": "uri", "type": "Any"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "termlist", "type": "Any"}, {"lineNumber": 209, "col_offset": 26, "nodeName": "piece", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "weight", "type": "float"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "term", "type": "Any"}, {"lineNumber": 213, "col_offset": 27, "nodeName": "piece", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "weight", "type": "float"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "error", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 247, "col_offset": 29, "nodeName": "query", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "term", "type": "Any"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "weight", "type": "Any"}, {"lineNumber": 210, "col_offset": 35, "nodeName": "split", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 211, "col_offset": 35, "nodeName": "weight", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "query", "type": "List[Tuple[str, float]]"}, {"lineNumber": 215, "col_offset": 65, "nodeName": "weight", "type": "float"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "uri", "type": "Any"}, {"lineNumber": 217, "col_offset": 82, "nodeName": "uri", "type": "Any"}, {"lineNumber": 210, "col_offset": 35, "nodeName": "piece", "type": "Any"}, {"lineNumber": 215, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 215, "col_offset": 48, "nodeName": "language", "type": "Any"}, {"lineNumber": 215, "col_offset": 58, "nodeName": "term", "type": "Any"}]