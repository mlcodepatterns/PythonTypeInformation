[{"lineNumber": 21, "col_offset": 0, "nodeName": "english_filter", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "lemmatize", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 0, "nodeName": "lemmatize_with_residue", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "uri_and_residue", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "STOPWORDS", "type": "List[str]"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "LEMMATIZER", "type": "SimpleLemmatizer"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "non_stopwords", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "non_stopwords", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "SimpleLemmatizer", "type": "Type[SimpleLemmatizer]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "lemma_pairs", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "non_stopwords", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "preserve_stopwords", "type": "bool"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "lemmas", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "residue", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "uri", "type": "str"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "non_stopwords", "type": "List[Any]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "non_stopwords", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "non_stopwords", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "language", "type": "str"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "language", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "_mapping", "type": "Dict[Any, Tuple[Any, Any]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "_vocab", "type": "collections.defaultdict[nothing, Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "_patterns", "type": "List[nothing]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "loaded", "type": "bool"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "loaded", "type": "bool"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "filename", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "filename", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "pos", "type": "str"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "filename", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "word", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "lookup", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "word", "type": "Any"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "simple_tokenize", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "text", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "pair", "type": "Any"}, {"lineNumber": 151, "col_offset": 7, "nodeName": "non_stopwords", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "non_stopwords", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "non_stopwords", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "lemma_pairs", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "is_stopword", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "lemmas", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "lemmas", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "residue", "type": "str"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "lemmatize_with_residue", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 45, "nodeName": "text", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "uri", "type": "str"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "residue", "type": "str"}, {"lineNumber": 26, "col_offset": 45, "nodeName": "token", "type": "Any"}, {"lineNumber": 26, "col_offset": 54, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "non_stopwords", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "_load_patterns", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "_load_exceptions", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "_load_unchanged", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_load_vocab", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "get_support_data_filename", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "open", "type": "Callable"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "filename", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "get_support_data_filename", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "open", "type": "Callable"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "filename", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "re_pattern", "type": "Pattern[str]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "replacement", "type": "str"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "filename", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "get_support_data_filename", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "open", "type": "Callable"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "filename", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "word", "type": "str"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "loaded", "type": "bool"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "lower", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "word", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "_mapping", "type": "Dict[Union[str, Any], Union[Tuple[str, str], Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "word", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "seen", "type": "Any"}, {"lineNumber": 94, "col_offset": 55, "nodeName": "_patterns", "type": "List[Tuple[Pattern[str], str, str, str]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_mapping", "type": "Dict[Union[str, Any], Union[Tuple[str, str], Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "word", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "word", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "LEMMATIZER", "type": "SimpleLemmatizer"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "lemmatize", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "token", "type": "Any"}, {"lineNumber": 149, "col_offset": 40, "nodeName": "token", "type": "Any"}, {"lineNumber": 149, "col_offset": 49, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "pair", "type": "Any"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "lemma_pairs", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "non_stopwords", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "ending", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "preserve_stopwords", "type": "bool"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 165, "col_offset": 28, "nodeName": "residue", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "lemmas", "type": "List[Any]"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "lemmatize", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "token", "type": "Any"}, {"lineNumber": 26, "col_offset": 64, "nodeName": "token", "type": "Any"}, {"lineNumber": 26, "col_offset": 77, "nodeName": "STOPWORDS", "type": "List[str]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "non_stopwords", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_mapping", "type": "Dict[Union[str, Any], Union[Tuple[str, str], Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "_patterns", "type": "List[Tuple[Pattern[str], str, str, str]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_vocab", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 54, "col_offset": 79, "nodeName": "language", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "word", "type": "str"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "pos", "type": "str"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "word", "type": "str"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 60, "col_offset": 82, "nodeName": "language", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "pattern", "type": "str"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "replacement", "type": "str"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "pos", "type": "str"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "morph", "type": "str"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "morph", "type": "str"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "morph", "type": "str"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "get_support_data_filename", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "open", "type": "Callable"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "filename", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 77, "col_offset": 83, "nodeName": "language", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "_mapping", "type": "Dict[Union[str, Any], Union[Tuple[str, str], Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "word", "type": "str"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "_load", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "word", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "_mapping", "type": "Dict[Union[str, Any], Union[Tuple[str, str], Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "word", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "re_pattern", "type": "Pattern[str]"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "replacement", "type": "str"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "pos", "type": "str"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "morph", "type": "str"}, {"lineNumber": 94, "col_offset": 55, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "word", "type": "Any"}, {"lineNumber": 150, "col_offset": 68, "nodeName": "STOPWORDS", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "STOPWORDS", "type": "List[str]"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "is_stopword", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 54, "col_offset": 79, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 60, "col_offset": 82, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "re", "type": "module"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "replacement", "type": "str"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "_patterns", "type": "List[Tuple[Pattern[str], str, str, str]]"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "re_pattern", "type": "Pattern[str]"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "replacement", "type": "str"}, {"lineNumber": 67, "col_offset": 73, "nodeName": "morph", "type": "str"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 71, "col_offset": 81, "nodeName": "language", "type": "Any"}, {"lineNumber": 71, "col_offset": 96, "nodeName": "pos", "type": "str"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "before", "type": "str"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "after", "type": "str"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "morph", "type": "str"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "_mapping", "type": "Dict[Union[str, Any], Union[Tuple[str, str], Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "after", "type": "str"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "morph", "type": "str"}, {"lineNumber": 77, "col_offset": 83, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "line", "type": "str"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "word", "type": "str"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "word", "type": "Any"}, {"lineNumber": 91, "col_offset": 72, "nodeName": "word", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "match", "type": "Callable"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "word", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "replaced", "type": "str"}, {"lineNumber": 150, "col_offset": 53, "nodeName": "pair", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "non_stopwords", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 56, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "residue", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "lemmas", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "residue", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "_vocab", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 67, "col_offset": 60, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 71, "col_offset": 81, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "before", "type": "str"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "re_pattern", "type": "Pattern[str]"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "replacement", "type": "str"}, {"lineNumber": 97, "col_offset": 59, "nodeName": "word", "type": "Any"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "replaced", "type": "str"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "word", "type": "Any"}, {"lineNumber": 160, "col_offset": 52, "nodeName": "ending", "type": "Any"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "line", "type": "str"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "pos", "type": "str"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "line", "type": "str"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "pattern", "type": "str"}, {"lineNumber": 67, "col_offset": 60, "nodeName": "pos", "type": "str"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "re_pattern", "type": "Pattern[str]"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "replaced", "type": "str"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "morph", "type": "str"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "seen", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "morph2", "type": "Any"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "lemmas", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "line", "type": "str"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "_vocab", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "seen", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "stem", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "morph_recursive", "type": "Any"}, {"lineNumber": 102, "col_offset": 48, "nodeName": "lookup", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "replaced", "type": "str"}, {"lineNumber": 102, "col_offset": 70, "nodeName": "seen", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "morph_recursive", "type": "Any"}, {"lineNumber": 103, "col_offset": 51, "nodeName": "morph", "type": "str"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "_mapping", "type": "Dict[Union[str, Any], Union[Tuple[str, str], Tuple[Any, Any], Tuple[Any, str]]]"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "stem", "type": "Any"}, {"lineNumber": 104, "col_offset": 53, "nodeName": "morph2", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "stem", "type": "Any"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "morph2", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "replaced", "type": "str"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "word", "type": "Any"}, {"lineNumber": 102, "col_offset": 48, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "self", "type": "SimpleLemmatizer"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "word", "type": "Any"}, {"lineNumber": 100, "col_offset": 57, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 100, "col_offset": 57, "nodeName": "pos", "type": "str"}]