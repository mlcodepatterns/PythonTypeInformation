[{"lineNumber": 15, "col_offset": 0, "nodeName": "strip_words", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "handle_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "REL", "type": "str"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "DATASET", "type": "str"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "LICENSE", "type": "str"}, {"lineNumber": 11, "col_offset": 10, "nodeName": "cc_attribution", "type": "str"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "SOURCE", "type": "List[Dict[str, str]]"}, {"lineNumber": 11, "col_offset": 10, "nodeName": "Licenses", "type": "Type[conceptnet5.uri.Licenses]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "tree", "type": "xml.etree.ElementTree.ElementTree"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "out", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "root", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "lang", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "annotation", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "split", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "parse", "type": "Callable[..., xml.etree.ElementTree.ElementTree]"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "MsgpackStreamWriter", "type": "Type[conceptnet5.formats.msgpack_stream.MsgpackStreamWriter]"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "getroot", "type": "Callable[[], xml.etree.ElementTree.Element]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "attrib", "type": "Dict[Any, Any]"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "root", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "word", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "text", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "ET", "type": "module"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "tree", "type": "xml.etree.ElementTree.ElementTree"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "strip_words", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "text", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "start", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "end", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "edge", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "annotation", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "standardized_concept_uri", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "standardized_concept_uri", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "lang", "type": "Any"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "word", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "make_edge", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "REL", "type": "str"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "start", "type": "Any"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "end", "type": "Any"}, {"lineNumber": 36, "col_offset": 46, "nodeName": "DATASET", "type": "str"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "LICENSE", "type": "str"}, {"lineNumber": 36, "col_offset": 64, "nodeName": "SOURCE", "type": "List[Dict[str, str]]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "write", "type": "Callable[[Any], None]"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "edge", "type": "Dict[str, Any]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "root", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 34, "col_offset": 52, "nodeName": "attrib", "type": "Dict[Any, Any]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "out", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 34, "col_offset": 52, "nodeName": "annotation", "type": "xml.etree.ElementTree.Element"}]