[{"lineNumber": 17, "col_offset": 0, "nodeName": "weight_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "keep_concept", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "make_assertion", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "combine_assertions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "N", "type": "int"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "CURRENT_DIR", "type": "str"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "group_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "pieces", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "start", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "end", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "info_dicts", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "unscaled_weight", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "licenses", "type": "Set[Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "surface_text", "type": "None"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "sources", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "seen_sources", "type": "Set[Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "info", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "info_dicts", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "weight", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "out", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "out_bad", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 142, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 40, "col_offset": 7, "nodeName": "is_absolute_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "uri", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "ALL_LANGUAGES", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "split_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "uri", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "line", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "uri", "type": "Any"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "rel", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "start", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "end", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "_", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "split", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "uri_prefix", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "uri_prefix", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "end", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "subsource", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "weight_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "unscaled_weight", "type": "Any"}, {"lineNumber": 85, "col_offset": 7, "nodeName": "cc_sharealike", "type": "str"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "licenses", "type": "Set[Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "license", "type": "str"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "cc_sharealike", "type": "str"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "license", "type": "str"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "cc_attribution", "type": "str"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "make_edge", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 116, "col_offset": 10, "nodeName": "MsgpackStreamWriter", "type": "Type[conceptnet5.formats.msgpack_stream.MsgpackStreamWriter]"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "MsgpackStreamWriter", "type": "Type[conceptnet5.formats.msgpack_stream.MsgpackStreamWriter]"}, {"lineNumber": 119, "col_offset": 51, "nodeName": "stream", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "combine_assertions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "input", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "cli", "type": "click.core.Command"}, {"lineNumber": 42, "col_offset": 7, "nodeName": "get_uri_language", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "uri", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "valid_language", "type": "Callable[[Any], bool]"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "pieces", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "line", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "line_group", "type": "Iterator[Any]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "line", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "line", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 54, "nodeName": "line", "type": "Any"}, {"lineNumber": 68, "col_offset": 62, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "info", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "info", "type": "Any"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "info_dicts", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "info_dicts", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "surface_text", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "info", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "conjunction", "type": "Any"}, {"lineNumber": 85, "col_offset": 7, "nodeName": "Licenses", "type": "Type[conceptnet5.uri.Licenses]"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "Licenses", "type": "Type[conceptnet5.uri.Licenses]"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "Licenses", "type": "Type[conceptnet5.uri.Licenses]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "rel", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "end", "type": "Any"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "weight", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "license", "type": "str"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "sources", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "surface_text", "type": "Any"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "input_filename", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "line_group", "type": "Iterator[Any]"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "groupby", "type": "Callable"}, {"lineNumber": 120, "col_offset": 49, "nodeName": "stream", "type": "Any"}, {"lineNumber": 120, "col_offset": 57, "nodeName": "group_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "assertion", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "out", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "out_bad", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "min", "type": "Callable"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "weight", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "get_uri_language", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "uri", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "line", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "keep_concept", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "start", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "keep_concept", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "end", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "json", "type": "module"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "info", "type": "Any"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "info", "type": "Any"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "info_dicts", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "surface_text", "type": "None"}, {"lineNumber": 76, "col_offset": 53, "nodeName": "info", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "info", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "conjunction_uri", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "conjunction", "type": "Any"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "seen_sources", "type": "Set[Any]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "split", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "itertools", "type": "module"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "make_assertion", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "line_group", "type": "Iterator[Any]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "assertion", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "destination", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "out", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "destination", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "out_bad", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "write", "type": "Callable[[Any], None]"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "assertion", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "subsource", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "conjunction", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "assertion", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "destination", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "max", "type": "Callable"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "line", "type": "Any"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "sources", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "seen_sources", "type": "Set[Any]"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "weight", "type": "Any"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "values", "type": "Any"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "subsource", "type": "Any"}]