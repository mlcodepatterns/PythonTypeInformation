[{"lineNumber": 44, "col_offset": 0, "nodeName": "convert_lang_code", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "get_one", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "parse_gloss", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "read_jmdict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 0, "nodeName": "output_edge", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "NOUN_TYPES", "type": "List[str]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "ADJ_TYPES", "type": "List[str]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "ADV_TYPES", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "VERB_TYPES", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "GLOSS_RE", "type": "Pattern[str]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "language", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "short_code", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 80, "col_offset": 5, "nodeName": "VERBOSE", "type": "int"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "matched", "type": "Match[str]"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "matched", "type": "Match[str]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "outfile", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "xml", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "entries", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "entry", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "entries", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "edge", "type": "Any"}, {"lineNumber": 125, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "short_code", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "alpha2", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "get", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "tag", "type": "str"}, {"lineNumber": 58, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "get", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "tag", "type": "str"}, {"lineNumber": 68, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 80, "col_offset": 5, "nodeName": "re", "type": "module"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "match", "type": "Callable"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "text", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "open", "type": "Callable"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "filename", "type": "str"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "outfilename", "type": "str"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "decode", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "parse", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "headwords", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "sense", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "make_edge", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "rel", "type": "Any"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "subj_concept", "type": "str"}, {"lineNumber": 117, "col_offset": 40, "nodeName": "obj_concept", "type": "str"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "read_jmdict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "languages", "type": "Any"}, {"lineNumber": 45, "col_offset": 53, "nodeName": "code", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "language", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "short_code", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "terminology", "type": "Any"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "node", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "node", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "GLOSS_RE", "type": "Pattern[str]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "codecs", "type": "module"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "xmltodict", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "xml", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "headwords", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "headwords", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "entry", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "pos", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "glosses", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "gloss", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "glosses", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "outfile", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "outfile", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "dumps", "type": "Any"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "obj", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "pycountry", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "language", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "read", "type": "Callable"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "word", "type": "Any"}, {"lineNumber": 97, "col_offset": 37, "nodeName": "word", "type": "Any"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "get_one", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "sense", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "json", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "sys", "type": "module"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "group", "type": "Callable"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 97, "col_offset": 45, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 54, "nodeName": "entry", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "word", "type": "Any"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "word", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "sense", "type": "Any"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 58, "nodeName": "sense", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "gloss", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "matched", "type": "Match[str]"}, {"lineNumber": 99, "col_offset": 49, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 58, "nodeName": "entry", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "parse_gloss", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "lang", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "head", "type": "Any"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "headwords", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "gloss", "type": "Any"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "convert_lang_code", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "ja_concept", "type": "str"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "other_concept", "type": "str"}, {"lineNumber": 108, "col_offset": 49, "nodeName": "gloss", "type": "Any"}, {"lineNumber": 110, "col_offset": 41, "nodeName": "make_concept_uri", "type": "Callable[..., str]"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "head", "type": "Any"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "make_concept_uri", "type": "Callable[..., str]"}, {"lineNumber": 111, "col_offset": 61, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 111, "col_offset": 67, "nodeName": "lang", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "output_edge", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "outfile", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "ja_concept", "type": "str"}, {"lineNumber": 113, "col_offset": 65, "nodeName": "other_concept", "type": "str"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "other_concept", "type": "str"}]