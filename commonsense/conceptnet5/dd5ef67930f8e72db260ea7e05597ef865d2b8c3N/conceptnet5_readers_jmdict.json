[{"lineNumber": 46, "col_offset": 0, "nodeName": "convert_lang_code", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "fix_context", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "parse_gloss", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "handle_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 225, "col_offset": 0, "nodeName": "output_edge", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "NOUN_TYPES", "type": "List[str]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "ADJ_TYPES", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "ADV_TYPES", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "VERB_TYPES", "type": "List[str]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "GLOSS_RE", "type": "Pattern[str]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "ending", "type": "str"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "context", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "VERBOSE", "type": "int"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "matched", "type": "Match[str]"}, {"lineNumber": 95, "col_offset": 7, "nodeName": "matched", "type": "Match[str]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "file", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "out", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "data", "type": "str"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "xml", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "root_node", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "entry", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "edge", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 56, "col_offset": 7, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "ending", "type": "str"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "get", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "tag", "type": "Any"}, {"lineNumber": 74, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "re", "type": "module"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "match", "type": "Callable"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "text", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "filename", "type": "Any"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "MsgpackStreamWriter", "type": "Type[conceptnet5.formats.msgpack_stream.MsgpackStreamWriter]"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "parse", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "data", "type": "str"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "xml", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "root_node", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "headwords", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "senses", "type": "Any"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "make_edge", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "rel", "type": "str"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "subj_concept", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "obj_concept", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "write", "type": "Callable[[Any], None]"}, {"lineNumber": 238, "col_offset": 14, "nodeName": "edge", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "code", "type": "Any"}, {"lineNumber": 56, "col_offset": 7, "nodeName": "context", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "context", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "node", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "subnode", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "GLOSS_RE", "type": "Pattern[str]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "codecs", "type": "module"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "file", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "file", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "xmltodict", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "headwords", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "headwords", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "entry", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "sense_num", "type": "int"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "sense", "type": "Any"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "senses", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "glosses", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "contexts", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "pos", "type": "str"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "pos_tag", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "gloss", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "glosses", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "cc_sharealike", "type": "str"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "out", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "langcodes", "type": "Any"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "word", "type": "Any"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "word", "type": "Any"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "sense", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "Licenses", "type": "Type[conceptnet5.uri.Licenses]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "group", "type": "Callable"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 54, "nodeName": "entry", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "word", "type": "Any"}, {"lineNumber": 156, "col_offset": 41, "nodeName": "word", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "sense", "type": "Any"}, {"lineNumber": 170, "col_offset": 49, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 58, "nodeName": "sense", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "fix_context", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "context", "type": "Any"}, {"lineNumber": 171, "col_offset": 49, "nodeName": "context", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "NOUN_TYPES", "type": "List[str]"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "pos", "type": "str"}, {"lineNumber": 184, "col_offset": 30, "nodeName": "gloss", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "lang", "type": "str"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "head", "type": "Any"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "headwords", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "ending", "type": "str"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "matched", "type": "Match[str]"}, {"lineNumber": 156, "col_offset": 49, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 156, "col_offset": 58, "nodeName": "entry", "type": "Any"}, {"lineNumber": 171, "col_offset": 60, "nodeName": "get_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 171, "col_offset": 69, "nodeName": "sense", "type": "Any"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "pos_tag", "type": "Any"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "VERB_TYPES", "type": "List[str]"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "pos", "type": "str"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "parse_gloss", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "convert_lang_code", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "gloss", "type": "Any"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "lang", "type": "str"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 205, "col_offset": 35, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "valid_concept_name", "type": "Callable[[Any], bool]"}, {"lineNumber": 207, "col_offset": 43, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "other_concept", "type": "Any"}, {"lineNumber": 220, "col_offset": 28, "nodeName": "context", "type": "Any"}, {"lineNumber": 220, "col_offset": 39, "nodeName": "contexts", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "pos_tag", "type": "Any"}, {"lineNumber": 178, "col_offset": 37, "nodeName": "ADJ_TYPES", "type": "List[str]"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "pos", "type": "str"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "gloss", "type": "Any"}, {"lineNumber": 189, "col_offset": 45, "nodeName": "gloss", "type": "Any"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "parse_gloss", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 39, "nodeName": "gloss", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "count", "type": "Callable[..., int]"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "sensekey", "type": "str"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "ja_concept", "type": "Any"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "ja_concept", "type": "Any"}, {"lineNumber": 217, "col_offset": 40, "nodeName": "standardized_concept_uri", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 65, "nodeName": "lang", "type": "str"}, {"lineNumber": 217, "col_offset": 71, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "output_edge", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 218, "col_offset": 36, "nodeName": "out", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 218, "col_offset": 55, "nodeName": "ja_concept", "type": "Any"}, {"lineNumber": 218, "col_offset": 67, "nodeName": "other_concept", "type": "Any"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "context_node", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "pos_tag", "type": "Any"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "ADV_TYPES", "type": "List[str]"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "pos", "type": "str"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 210, "col_offset": 31, "nodeName": "senses", "type": "Any"}, {"lineNumber": 212, "col_offset": 41, "nodeName": "standardized_concept_uri", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "head", "type": "Any"}, {"lineNumber": 213, "col_offset": 44, "nodeName": "pos", "type": "str"}, {"lineNumber": 213, "col_offset": 59, "nodeName": "sensekey", "type": "str"}, {"lineNumber": 216, "col_offset": 41, "nodeName": "standardized_concept_uri", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 72, "nodeName": "head", "type": "Any"}, {"lineNumber": 216, "col_offset": 78, "nodeName": "pos", "type": "str"}, {"lineNumber": 221, "col_offset": 43, "nodeName": "standardized_concept_uri", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 74, "nodeName": "context", "type": "Any"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "output_edge", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 40, "nodeName": "out", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 222, "col_offset": 62, "nodeName": "ja_concept", "type": "Any"}, {"lineNumber": 222, "col_offset": 74, "nodeName": "context_node", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "pos_tag", "type": "Any"}, {"lineNumber": 211, "col_offset": 47, "nodeName": "sense_num", "type": "int"}]