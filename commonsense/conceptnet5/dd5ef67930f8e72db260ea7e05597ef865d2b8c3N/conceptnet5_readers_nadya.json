[{"lineNumber": 51, "col_offset": 0, "nodeName": "handle_line", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "handle_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "cnet4_id", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "freq", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "vote", "type": "int"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "builder", "type": "conceptnet5.readers.conceptnet4.CN4Builder"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "out", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "cnet4_id", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "lang", "type": "str"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "frame_text", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "relname", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "start_text", "type": "str"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "end_text", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "freq", "type": "str"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "vote", "type": "str"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "email", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "creator", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "voter", "type": "str"}, {"lineNumber": 70, "col_offset": 7, "nodeName": "cnet4_id", "type": "str"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "cnet4_id", "type": "str"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "freq", "type": "str"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "vote", "type": "str"}, {"lineNumber": 78, "col_offset": 7, "nodeName": "vote", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "parts_dict", "type": "Dict[str, Union[int, str, List[nothing]]]"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "CN4Builder", "type": "Type[conceptnet5.readers.conceptnet4.CN4Builder]"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "MsgpackStreamWriter", "type": "Type[conceptnet5.formats.msgpack_stream.MsgpackStreamWriter]"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "open", "type": "Callable"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "input_filename", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "new_obj", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "lang", "type": "str"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "freq", "type": "int"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "cnet4_id", "type": "int"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "relname", "type": "str"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "frame_text", "type": "str"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "start_text", "type": "str"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "end_text", "type": "str"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "voter", "type": "str"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "handle_line", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "line", "type": "str"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "builder", "type": "conceptnet5.readers.conceptnet4.CN4Builder"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "handle_assertion", "type": "Callable[[Any], Generator[Dict[str, Any], Any, None]]"}, {"lineNumber": 101, "col_offset": 44, "nodeName": "parts_dict", "type": "Dict[str, Union[int, str, List[nothing]]]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "write", "type": "Callable[[Any], None]"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "new_obj", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "builder", "type": "conceptnet5.readers.conceptnet4.CN4Builder"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "out", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}]