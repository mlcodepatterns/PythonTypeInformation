[{"lineNumber": 7, "col_offset": 0, "nodeName": "concept_is_bad", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "concept_is_frequent_enough", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "negate_concept", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "build_assoc_space", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "counts", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "triples", "type": "List[Tuple[float, str, str]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "triples", "type": "List[Tuple[float, str, str]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "concept", "type": "str"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "counts", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "space", "type": "Any"}, {"lineNumber": 78, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 37, "col_offset": 7, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "SparseEntryStorage", "type": "Any"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "value", "type": "float"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "left", "type": "str"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "right", "type": "str"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "from_sparse_storage", "type": "Any"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "build_assoc_space", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "uri", "type": "str"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "uri", "type": "str"}, {"lineNumber": 37, "col_offset": 7, "nodeName": "concept", "type": "str"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "concept", "type": "str"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "concept", "type": "str"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "codecs", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "left", "type": "str"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "right", "type": "str"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "value", "type": "str"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "value", "type": "float"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "concept_is_frequent_enough", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "concept", "type": "str"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "counts", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "negation", "type": "str"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "AssocSpace", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "space", "type": "Any"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "count", "type": "Callable[..., int]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "counts", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "value", "type": "str"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "counts", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "counts", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "concept_is_frequent_enough", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "left", "type": "str"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "counts", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "concept_is_frequent_enough", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 83, "nodeName": "right", "type": "str"}, {"lineNumber": 59, "col_offset": 90, "nodeName": "counts", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 59, "col_offset": 102, "nodeName": "left", "type": "str"}, {"lineNumber": 59, "col_offset": 110, "nodeName": "right", "type": "str"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "add_entry", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "add_entry", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "negate_concept", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "concept", "type": "str"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "concept_is_frequent_enough", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "negation", "type": "str"}, {"lineNumber": 68, "col_offset": 52, "nodeName": "counts", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "uri", "type": "str"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "concept_is_bad", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "left", "type": "str"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "concept_is_bad", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 59, "nodeName": "right", "type": "str"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "triples", "type": "List[Tuple[float, str, str]]"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "value", "type": "float"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "left", "type": "str"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "right", "type": "str"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "left", "type": "str"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "right", "type": "str"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "value", "type": "float"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "left", "type": "str"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "right", "type": "str"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "concept", "type": "str"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "concept", "type": "str"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "add_entry", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "line", "type": "str"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "concept", "type": "str"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "negation", "type": "str"}]