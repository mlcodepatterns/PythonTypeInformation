[{"lineNumber": 12, "col_offset": 0, "nodeName": "setup_simple_frame", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "setup_multiling_frame", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "test_load", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "test_englishify", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "test_match_prefix", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "test_index_prefix_range", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "test_lookup_neighbors", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "test_expand_terms", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "test_similar_terms", "type": "Callable[[], Any]"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "test_similar_terms_filter", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "test_missing_language", "type": "Callable[[], Any]"}, {"lineNumber": 159, "col_offset": 0, "nodeName": "test_cache_with_oov", "type": "Callable[[], Any]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "DATA", "type": "str"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "TEST_FRAME", "type": "None"}, {"lineNumber": 8, "col_offset": 7, "nodeName": "get", "type": "Callable"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "index", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "index", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "term", "type": "str"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "expected_prefix_matches", "type": "List[Tuple[str, float]]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "prefix_matches", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "term", "type": "str"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "neighbors", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "expected_neighbors", "type": "List[Tuple[str, float]]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "term", "type": "List[Tuple[str, float]]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "expanded_terms", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "expected_expanded_terms", "type": "List[Tuple[str, float]]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "similarity", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 8, "col_offset": 7, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "is_monotonic_increasing", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "_match_prefix", "type": "Callable[[Any, Any], List[Tuple[Any, Any]]]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "expected_prefix_matches", "type": "List[Tuple[str, float]]"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "prefix_matches", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "_find_neighbors", "type": "Callable[[Any, Any, Any], List[Tuple[Any, Any]]]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "expected_neighbors", "type": "List[Tuple[str, float]]"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "neighbors", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "expand_terms", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "expected_expanded_terms", "type": "List[Tuple[str, float]]"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "expanded_terms", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 150, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "similar_terms", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 8, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 25, "col_offset": 47, "nodeName": "index", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "index", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "frame", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "small_frame", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_trie", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "index", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "index", "type": "Any"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_englishify", "type": "Callable[[Any], Optional[str]]"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "term", "type": "str"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "_index_prefix_range", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "_index_prefix_range", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "term", "type": "str"}, {"lineNumber": 105, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "term", "type": "List[Tuple[str, float]]"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 150, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "similarity", "type": "Any"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "any", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "frame", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "frame", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "frame", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "any", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 51, "col_offset": 43, "nodeName": "label", "type": "Any"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "index", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "small_frame", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "similar_terms", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "similar_terms", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "similar_terms", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "similar_terms", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "similar_terms", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "label", "type": "Any"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "frame", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}]