[{"lineNumber": 13, "col_offset": 0, "nodeName": "weight_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "read_reliability_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "read_blacklist", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "truncate_term", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "transform_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "flatten_sources", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "extract_contributors", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "combine_assertions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 221, "col_offset": 0, "nodeName": "output_assertion", "type": "Callable[..., Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "N", "type": "int"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "CURRENT_DIR", "type": "str"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 10, "col_offset": 14, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "reliability", "type": "Dict[str, float]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "reliability", "type": "Dict[str, float]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "blacklisted", "type": "Set[str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "blacklisted", "type": "Set[str]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "parts", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "sources_out", "type": "List[Union[str, Any]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "source", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "sources", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "sources_out", "type": "List[Union[str, Any]]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "current_uri", "type": "None"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "current_data", "type": "Dict[nothing, nothing]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "current_contributors", "type": "Set[nothing]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "current_surface", "type": "None"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "current_dataset", "type": "None"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "current_weight", "type": "float"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "current_sources", "type": "List[nothing]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "current_license", "type": "str"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "cc_attribution", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "blacklist", "type": "Set[str]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "out", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "out_bad", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "csv_filename", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "input_filenames", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "uri", "type": "Optional[str]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "sources", "type": "Set[str]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "source_tree", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 256, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 10, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "open", "type": "Callable"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "filename", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "line", "type": "str"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "open", "type": "Callable"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "filename", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "before_comment", "type": "str"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "before_comment", "type": "str"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "split", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 46, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "Licenses", "type": "Type[conceptnet5.uri.Licenses]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "read_blacklist", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "MsgpackStreamWriter", "type": "Type[conceptnet5.formats.msgpack_stream.MsgpackStreamWriter]"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "MsgpackStreamWriter", "type": "Type[conceptnet5.formats.msgpack_stream.MsgpackStreamWriter]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 227, "col_offset": 10, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 230, "col_offset": 14, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "disjunction_uri", "type": "Callable[..., Any]"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "make_edge", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "uri", "type": "Optional[str]"}, {"lineNumber": 237, "col_offset": 55, "nodeName": "uri", "type": "Optional[str]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "write", "type": "Callable[[Any], None]"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "license", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "license", "type": "Any"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "combine_assertions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 267, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "score", "type": "float"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "score", "type": "float"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "term", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "parts", "type": "Any"}, {"lineNumber": 46, "col_offset": 7, "nodeName": "node", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "truncate_term", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "source", "type": "str"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "source", "type": "str"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "get_support_data_filename", "type": "Callable[[Any], str]"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "open", "type": "Callable"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "csv_filename", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "surface", "type": "str"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "weight", "type": "float"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "current_uri", "type": "Optional[str]"}, {"lineNumber": 227, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[str, List[str], List[nothing], float, int]]]"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 231, "col_offset": 35, "nodeName": "sources", "type": "Set[str]"}, {"lineNumber": 234, "col_offset": 34, "nodeName": "source_tree", "type": "Any"}, {"lineNumber": 234, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[str, List[str], List[nothing], float, int]]]"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 237, "col_offset": 37, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "out", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "AssertionCombiner"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "combine_assertions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 253, "col_offset": 45, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 253, "col_offset": 58, "nodeName": "license", "type": "Any"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 267, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 17, "col_offset": 42, "nodeName": "min", "type": "Callable"}, {"lineNumber": 17, "col_offset": 46, "nodeName": "weight", "type": "float"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "line", "type": "str"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "score_str", "type": "str"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "source", "type": "str"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "score_str", "type": "str"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "reliability", "type": "Dict[str, float]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "before_comment", "type": "str"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "node", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "source", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "head", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "parse_compound_uri", "type": "Callable[[Any], Tuple[Any, List[str]]]"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "source", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "source", "type": "str"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "head", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "parse_compound_uri", "type": "Callable[[Any], Tuple[Any, List[str]]]"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "source", "type": "str"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "line", "type": "str"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "uri", "type": "str"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "rel", "type": "str"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "start", "type": "str"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "end", "type": "str"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "weight", "type": "str"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "source_uri", "type": "str"}, {"lineNumber": 130, "col_offset": 55, "nodeName": "id", "type": "str"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "this_dataset", "type": "str"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "this_license", "type": "str"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "surface", "type": "str"}, {"lineNumber": 131, "col_offset": 52, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "weight", "type": "str"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "uri", "type": "str"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "uri", "type": "str"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "current_uri", "type": "None"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "current_uri", "type": "str"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "uri", "type": "str"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "current_data", "type": "Dict[str, str]"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "current_weight", "type": "float"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "weight", "type": "float"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "current_sources", "type": "List[str]"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "current_contributors", "type": "Union[Set[str], Set[nothing]]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "current_surface", "type": "Optional[str]"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "current_dataset", "type": "str"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "this_dataset", "type": "str"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "current_license", "type": "str"}, {"lineNumber": 199, "col_offset": 34, "nodeName": "this_license", "type": "str"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "blacklist", "type": "Set[str]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "judged_weight", "type": "int"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "judged_weight", "type": "float"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "judged_weight", "type": "Union[float, int]"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "destination", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 207, "col_offset": 30, "nodeName": "out", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "destination", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "out_bad", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "output_assertion", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "destination", "type": "conceptnet5.formats.msgpack_stream.MsgpackStreamWriter"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[str, List[str], List[nothing], float, int]]]"}, {"lineNumber": 253, "col_offset": 28, "nodeName": "input_filename", "type": "Any"}, {"lineNumber": 253, "col_offset": 58, "nodeName": "self", "type": "AssertionCombiner"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "source", "type": "str"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "blacklisted", "type": "Set[str]"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "node", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "sources_out", "type": "List[Union[str, Any]]"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "source", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "source", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "item", "type": "str"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "line", "type": "str"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "line", "type": "str"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "surface", "type": "str"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "current_uri", "type": "None"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "rel", "type": "str"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "start", "type": "str"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "end", "type": "str"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "source_uri", "type": "str"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "extract_contributors", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 60, "nodeName": "source_uri", "type": "str"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "surface", "type": "str"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "weight_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 45, "nodeName": "current_weight", "type": "float"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "rel", "type": "str"}, {"lineNumber": 212, "col_offset": 31, "nodeName": "start", "type": "str"}, {"lineNumber": 212, "col_offset": 42, "nodeName": "end", "type": "str"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "current_dataset", "type": "Optional[str]"}, {"lineNumber": 213, "col_offset": 49, "nodeName": "current_license", "type": "str"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "current_sources", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "current_surface", "type": "Optional[str]"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "judged_weight", "type": "Union[float, int]"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "current_uri", "type": "Optional[str]"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "max", "type": "Callable"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "sources_out", "type": "List[Union[str, Any]]"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "item", "type": "str"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 19, "nodeName": "weight", "type": "float"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "line", "type": "str"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "line", "type": "str"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "item", "type": "str"}]