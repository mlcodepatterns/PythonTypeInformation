[{"lineNumber": 13, "col_offset": 0, "nodeName": "setup_simple_frame", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "setup_multi_ling_frame", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "test_load", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "test_expand_terms", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "test_englishify", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_match_prefix", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "test_lookup_neighbors", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "test_vector_space_wrapper", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "test_vector_space_wrapper_filter", "type": "Callable[[], Any]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "test_missing_language", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "test_cache_with_oov", "type": "Callable[[], Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "DATA", "type": "str"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "TEST_FRAME", "type": "None"}, {"lineNumber": 9, "col_offset": 7, "nodeName": "get", "type": "Callable"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "index", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "index", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "term", "type": "str"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "term", "type": "str"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "expected_prefix_matches", "type": "List[Tuple[str, float]]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "prefix_matches", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "term", "type": "str"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "neighbors", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "expected_neighbors", "type": "List[Tuple[str, float]]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "similarity", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 9, "col_offset": 7, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "is_monotonic_increasing", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "_match_prefix", "type": "Callable[[Any, Any], List[Tuple[Any, Any]]]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "expected_prefix_matches", "type": "List[Tuple[str, float]]"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "prefix_matches", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "_find_neighbors", "type": "Callable[[Any, Any, Any], List[Tuple[Any, Any]]]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "expected_neighbors", "type": "List[Tuple[str, float]]"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "neighbors", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "is_monotonic_increasing", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "similar_terms", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "VectorSpaceWrapper", "type": "Type[conceptnet5.vectors.query.VectorSpaceWrapper]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "load", "type": "Callable[[], None]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "ok_", "type": "Any"}, {"lineNumber": 9, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 25, "col_offset": 47, "nodeName": "index", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "data", "type": "List[List[int]]"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "index", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "frame", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "small_frame", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_trie", "type": "Any"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_englishify", "type": "Callable[[Any], Optional[str]]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "term", "type": "str"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "term", "type": "str"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 88, "col_offset": 45, "nodeName": "term", "type": "str"}, {"lineNumber": 102, "col_offset": 36, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "index", "type": "Any"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "index", "type": "Any"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "index", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "index", "type": "Any"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "index", "type": "Any"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "index", "type": "Any"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "similarity", "type": "Any"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "TEST_FRAME", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "any", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "frame", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "frame", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "frame", "type": "Any"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "frame", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_index_prefix_range", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_index_prefix_range", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "any", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 51, "col_offset": 43, "nodeName": "label", "type": "Any"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "index", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "small_frame", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "is_term", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "label", "type": "Any"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "label", "type": "Any"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "index", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "similar_terms", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "similar_terms", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "similar_terms", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "similar_terms", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "similar_terms", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "label", "type": "Any"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "frame", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "frame", "type": "Any"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "get_vector", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "vectors", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "wrap", "type": "conceptnet5.vectors.query.VectorSpaceWrapper"}]