[{"lineNumber": 14, "col_offset": 0, "nodeName": "combine_assertions", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "output_assertion", "type": "Callable[..., Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "N", "type": "int"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "CURRENT_DIR", "type": "str"}, {"lineNumber": 12, "col_offset": 14, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "current_uri", "type": "None"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "current_data", "type": "Dict[nothing, nothing]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "current_surface", "type": "None"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "current_weight", "type": "float"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "current_sources", "type": "List[nothing]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "out", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "line", "type": "Union[str, unicode]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "uri", "type": "Optional[Union[str, unicode]]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "source_tree", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "line", "type": "str"}, {"lineNumber": 70, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 12, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 20, "col_offset": 10, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "out_filename", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "csv_filename", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "weight", "type": "float"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "surface", "type": "Union[unicode, str]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "output_assertion", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "out", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "make_disjunction_uri", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "make_edge", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "uri", "type": "Optional[Union[unicode, str]]"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "uri", "type": "Optional[Union[unicode, str]]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "line", "type": "str"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "combine_assertions", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "input", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 82, "col_offset": 62, "nodeName": "license", "type": "Any"}, {"lineNumber": 20, "col_offset": 10, "nodeName": "codecs", "type": "module"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "codecs", "type": "module"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "uri", "type": "Union[unicode, str]"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "rel", "type": "Union[unicode, str]"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "start", "type": "Union[unicode, str]"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "end", "type": "Union[unicode, str]"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "context", "type": "Union[unicode, str]"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "weight", "type": "Union[unicode, str]"}, {"lineNumber": 22, "col_offset": 47, "nodeName": "source_uri", "type": "Union[unicode, str]"}, {"lineNumber": 22, "col_offset": 59, "nodeName": "id", "type": "Union[unicode, str]"}, {"lineNumber": 22, "col_offset": 63, "nodeName": "this_dataset", "type": "Union[unicode, str]"}, {"lineNumber": 22, "col_offset": 77, "nodeName": "surface", "type": "Union[unicode, str]"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "weight", "type": "Union[unicode, str]"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "strip", "type": "Union[Callable[..., unicode], Callable[..., str]]"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "uri", "type": "Union[str, unicode]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "uri", "type": "Union[str, unicode]"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "current_uri", "type": "None"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "current_uri", "type": "Union[str, unicode]"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "uri", "type": "Union[str, unicode]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "current_weight", "type": "float"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "weight", "type": "float"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "current_sources", "type": "List[Union[str, unicode]]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "current_surface", "type": "Optional[Union[unicode, str]]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "rel", "type": "Union[unicode, str]"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "start", "type": "Union[str, unicode]"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "end", "type": "Union[unicode, str]"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "license", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "current_sources", "type": "Union[List[nothing], List[Union[str, unicode]]]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "current_surface", "type": "Optional[Union[unicode, str]]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "current_weight", "type": "float"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "current_uri", "type": "Optional[Union[str, unicode]]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "out", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "source_tree", "type": "Any"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "json", "type": "module"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "out", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 82, "col_offset": 62, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 22, "col_offset": 87, "nodeName": "split", "type": "Union[Callable[..., List[unicode]], Callable[..., List[str]]]"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "surface", "type": "Union[unicode, str]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "current_uri", "type": "None"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "rel", "type": "Union[unicode, str]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "start", "type": "Union[str, unicode]"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "end", "type": "Union[unicode, str]"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "source_uri", "type": "Union[str, unicode]"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "surface", "type": "Union[unicode, str]"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 22, "col_offset": 87, "nodeName": "line", "type": "Union[unicode, str]"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}]