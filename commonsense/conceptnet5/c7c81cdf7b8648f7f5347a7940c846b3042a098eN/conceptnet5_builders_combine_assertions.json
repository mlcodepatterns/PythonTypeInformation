[{"lineNumber": 13, "col_offset": 0, "nodeName": "weight_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "combine_assertions", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "output_assertion", "type": "Callable[..., Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "N", "type": "int"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "CURRENT_DIR", "type": "str"}, {"lineNumber": 10, "col_offset": 14, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "current_uri", "type": "None"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "current_data", "type": "Dict[nothing, nothing]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "current_surface", "type": "None"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "current_weight", "type": "float"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "current_sources", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "uri", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "sources", "type": "Set[Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "source_tree", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "line", "type": "str"}, {"lineNumber": 115, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 10, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 41, "col_offset": 10, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "out_filename", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "csv_filename", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "weight", "type": "float"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "surface", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "output_assertion", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "disjunction_uri", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "make_edge", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "uri", "type": "Any"}, {"lineNumber": 108, "col_offset": 55, "nodeName": "uri", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 10, "nodeName": "line", "type": "str"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "combine_assertions", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "input", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 130, "col_offset": 48, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 130, "col_offset": 62, "nodeName": "license", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 17, "col_offset": 42, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 41, "col_offset": 10, "nodeName": "codecs", "type": "module"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "codecs", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "uri", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "rel", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "start", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "end", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "context", "type": "Any"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "weight", "type": "Any"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "source_uri", "type": "Any"}, {"lineNumber": 44, "col_offset": 59, "nodeName": "id", "type": "Any"}, {"lineNumber": 44, "col_offset": 63, "nodeName": "this_dataset", "type": "Any"}, {"lineNumber": 44, "col_offset": 77, "nodeName": "surface", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "strip", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "uri", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "uri", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "current_uri", "type": "None"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "current_weight", "type": "float"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "weight", "type": "float"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "current_uri", "type": "Any"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "uri", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "current_weight", "type": "float"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "weight", "type": "float"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "current_sources", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "current_surface", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "rel", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "end", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "license", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "current_sources", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "current_surface", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "current_uri", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "sources", "type": "Set[Any]"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "source_tree", "type": "Any"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "assertion", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "json", "type": "module"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 130, "col_offset": 48, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 130, "col_offset": 62, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "math", "type": "module"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "max", "type": "Callable"}, {"lineNumber": 17, "col_offset": 42, "nodeName": "math", "type": "module"}, {"lineNumber": 44, "col_offset": 87, "nodeName": "split", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "surface", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "source_uri", "type": "Any"}, {"lineNumber": 57, "col_offset": 45, "nodeName": "surface", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "current_surface", "type": "Any"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "surface", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "current_uri", "type": "None"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "rel", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "start", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "end", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "source_uri", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "surface", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "weight_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "current_weight", "type": "float"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "weight", "type": "float"}, {"lineNumber": 44, "col_offset": 87, "nodeName": "line", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "current_sources", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "current_surface", "type": "None"}]