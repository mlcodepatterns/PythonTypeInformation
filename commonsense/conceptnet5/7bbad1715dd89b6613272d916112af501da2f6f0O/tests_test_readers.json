[{"lineNumber": 20, "col_offset": 0, "nodeName": "data_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "test_reader_modules", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "compare_input_and_output", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "TESTDATA_DIR", "type": "str"}, {"lineNumber": 12, "col_offset": 3, "nodeName": "major", "type": "int"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "get_support_data_filename", "type": "Callable[[Any], str]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "combiner", "type": "conceptnet5.builders.combine_assertions.AssertionCombiner"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "io_mappings", "type": "List[Union[Tuple[module, str, List[str]], Tuple[Any, str, List[str]], Tuple[conceptnet5.builders.combine_assertions.AssertionCombiner, str, List[str]]]]"}, {"lineNumber": 39, "col_offset": 43, "nodeName": "io_mappings", "type": "List[Union[Tuple[module, str, List[str]], Tuple[Any, str, List[str]], Tuple[conceptnet5.builders.combine_assertions.AssertionCombiner, str, List[str]]]]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "handle_file", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "input_filename", "type": "str"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "output_filenames", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "output_streams", "type": "List[io.StringIO]"}, {"lineNumber": 12, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "TESTDATA_DIR", "type": "str"}, {"lineNumber": 21, "col_offset": 38, "nodeName": "filename", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "AssertionCombiner", "type": "Type[conceptnet5.builders.combine_assertions.AssertionCombiner]"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "reader_module", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "input", "type": "str"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "outputs", "type": "List[str]"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "reader_module", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "data_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "handle_file", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "input_filename", "type": "str"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "reference_output_filename", "type": "str"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "output_stream", "type": "io.StringIO"}, {"lineNumber": 57, "col_offset": 54, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 57, "col_offset": 58, "nodeName": "output_filenames", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 76, "nodeName": "output_streams", "type": "List[io.StringIO]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "reference_output_file", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "reference_lines", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "actual_lines", "type": "List[str]"}, {"lineNumber": 12, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "conceptnet4", "type": "module"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "dbpedia", "type": "module"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "jmdict", "type": "module"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "ptt_petgame", "type": "module"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "verbosity", "type": "module"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "wiktionary_en", "type": "Any"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "wordnet", "type": "module"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "combiner", "type": "conceptnet5.builders.combine_assertions.AssertionCombiner"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "data_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "output", "type": "Any"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "output", "type": "Any"}, {"lineNumber": 46, "col_offset": 56, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "_", "type": "str"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "output_filenames", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "output_streams", "type": "List[io.StringIO]"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "reference_output_filename", "type": "str"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "readlines", "type": "Callable[..., List[str]]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "line1", "type": "str"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "line2", "type": "str"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "reference_lines", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 49, "nodeName": "actual_lines", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "compare_input_and_output", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "reader_module", "type": "Any"}, {"lineNumber": 40, "col_offset": 55, "nodeName": "input", "type": "str"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "outputs", "type": "List[str]"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "codecs", "type": "module"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "reference_output_file", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "reference_output_filename", "type": "str"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "line2", "type": "str"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "output_stream", "type": "io.StringIO"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "line1", "type": "str"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "line2", "type": "str"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "json", "type": "module"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "json", "type": "module"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "line1", "type": "str"}]