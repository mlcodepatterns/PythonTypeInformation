[{"lineNumber": 8, "col_offset": 4, "nodeName": "setup", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "test_create_link", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "add_message", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_upate", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_query_all", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "test_get_by_uid", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test_delete", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "test_get_counts", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "test_query_link", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "id", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "raw_count", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "uid", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "id", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "new_count", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "tt", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "uid", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "id", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "new_count", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "new_count", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "tt", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "tf", "type": "bool"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "tf", "type": "bool"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "tf", "type": "bool"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "tf", "type": "bool"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "tf", "type": "bool"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "tf", "type": "bool"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "tf", "type": "bool"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "tf", "type": "bool"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "tt", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "tt", "type": "Any"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 9, "col_offset": 18, "nodeName": "get_uu4d", "type": "Callable[[], Any]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 10, "col_offset": 25, "nodeName": "get_counts", "type": "Callable[[], Any]"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "raw_count", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "create_link", "type": "Callable"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "uid", "type": "Any"}, {"lineNumber": 21, "col_offset": 31, "nodeName": "post_data", "type": "Dict[str, str]"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "get_counts", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "get_by_uid", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "uid", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "link", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "order", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "logo", "type": "Any"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "new_count", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "create_link", "type": "Callable"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "uid", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "post_data", "type": "Dict[str, Union[str, Any]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "add_message", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "get_counts", "type": "Callable[[], Any]"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "new_count", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "update", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "id", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "post_data2", "type": "Dict[str, str]"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "get_counts", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "new_count", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "get_by_uid", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "id", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "link", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "order", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "logo", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "link", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "order", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "logo", "type": "Any"}, {"lineNumber": 82, "col_offset": 10, "nodeName": "query_all", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "add_message", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "query_all", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 10, "nodeName": "get_by_uid", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "id", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "add_message", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "get_by_uid", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "id", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "uid", "type": "Any"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "id", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "add_message", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "get_by_uid", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "id", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "uid", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "id", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "delete", "type": "Callable[[Any], bool]"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "id", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "get_by_uid", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "id", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 113, "col_offset": 10, "nodeName": "get_counts", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "add_message", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 10, "nodeName": "get_counts", "type": "Callable[[], Any]"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 120, "col_offset": 10, "nodeName": "query_link", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "add_message", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "query_link", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "get_by_uid", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "id", "type": "Any"}, {"lineNumber": 9, "col_offset": 18, "nodeName": "tools", "type": "module"}, {"lineNumber": 10, "col_offset": 25, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "tt", "type": "Any"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "post_data", "type": "Dict[str, str]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "tt", "type": "Any"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "post_data", "type": "Dict[str, str]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "tt", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "tt", "type": "Any"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "post_data", "type": "Dict[str, str]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "raw_count", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "post_data", "type": "Dict[str, str]"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "raw_count", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "raw_count", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "tt", "type": "Any"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "post_data", "type": "Dict[str, str]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "tt", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "post_data", "type": "Dict[str, str]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "tt", "type": "Any"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "tt", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "post_data", "type": "Dict[str, str]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "tt", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "post_data2", "type": "Dict[str, str]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "tt", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "post_data2", "type": "Dict[str, str]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "tt", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "tt", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "post_data2", "type": "Dict[str, str]"}, {"lineNumber": 82, "col_offset": 10, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "uid", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "id", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "tf", "type": "bool"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "uid", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "id", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "tf", "type": "bool"}, {"lineNumber": 97, "col_offset": 10, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 113, "col_offset": 10, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 115, "col_offset": 10, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 120, "col_offset": 10, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "uid", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "id", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "tf", "type": "bool"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "uid", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "id", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "tf", "type": "bool"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "delete", "type": "Callable[[Any], bool]"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "tt", "type": "Any"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "post_data", "type": "Dict[str, str]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "post_data", "type": "Dict[str, str]"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "post_data2", "type": "Dict[str, str]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "i", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "i", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "i", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "i", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "self", "type": "TestMLink"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "MLink", "type": "Type[torcms.model.link_model.MLink]"}]