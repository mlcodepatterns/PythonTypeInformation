[{"lineNumber": 13, "col_offset": 21, "nodeName": "BaseHandler", "type": "Type[torcms.core.base_handler.BaseHandler]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "initialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "get", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "add_or_update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "list", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "mequa", "type": "torcms.model.info_model.MInfor"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "musage", "type": "torcms.model.usage_model.MUsage"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "mrel", "type": "torcms.model.info_relation_model.MInforRel"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "mcollect", "type": "torcms.model.collect_model.MCollect"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "url_str", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "out_dic", "type": "Dict[str, bool]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], None]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "CollectHandler"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "MInfor", "type": "Type[torcms.model.info_model.MInfor]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "CollectHandler"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "MUsage", "type": "Type[torcms.model.usage_model.MUsage]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "CollectHandler"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "MInforRel", "type": "Type[torcms.model.info_relation_model.MInforRel]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "CollectHandler"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "MCollect", "type": "Type[torcms.model.collect_model.MCollect]"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "url_arr", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "url_str", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "info", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "add_or_update", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "uid", "type": "Any"}, {"lineNumber": 40, "col_offset": 55, "nodeName": "app_id", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "out_dic", "type": "Dict[str, bool]"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "render", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "url_str", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "parse_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "url_str", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "list", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "logger", "type": "module"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 39, "col_offset": 61, "nodeName": "uid", "type": "Any"}, {"lineNumber": 39, "col_offset": 80, "nodeName": "app_id", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "mcollect", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "userinfo", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "json", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "userinfo", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "CollectHandler", "type": "Type[CollectHandler]"}, {"lineNumber": 15, "col_offset": 30, "nodeName": "self", "type": "CollectHandler"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "self", "type": "CollectHandler"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "CollectHandler"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "get_current_user", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 61, "nodeName": "userinfo", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "query_recent", "type": "Any"}, {"lineNumber": 47, "col_offset": 60, "nodeName": "uid", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "url_arr", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "self", "type": "CollectHandler"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "add_or_update", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "url_str", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "set_status", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "mcollect", "type": "Any"}, {"lineNumber": 47, "col_offset": 60, "nodeName": "userinfo", "type": "Any"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 30, "col_offset": 40, "nodeName": "url_str", "type": "Any"}, {"lineNumber": 30, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 30, "col_offset": 61, "nodeName": "url_str", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "self", "type": "CollectHandler"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "self", "type": "CollectHandler"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 60, "nodeName": "self", "type": "Any"}]