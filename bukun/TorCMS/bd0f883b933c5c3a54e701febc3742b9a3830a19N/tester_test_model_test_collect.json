[{"lineNumber": 11, "col_offset": 4, "nodeName": "setup", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "add_message", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "test_add_or_update", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "add_mess", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test_query_recent", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_get_by_signature", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "test_count_of_user", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "test_query_pager_by_all", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "test_query_pager_by_userid", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "user_id", "type": "str"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "post_id", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "post_id", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "user_id", "type": "str"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "user_id", "type": "str"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "app_id", "type": "str"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "post_id", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "user_id", "type": "str"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "user_id", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "user_id", "type": "str"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "user_id", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "user_id", "type": "str"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "user_id", "type": "str"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "user_id", "type": "str"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "user_id", "type": "str"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "tf", "type": "bool"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "tf", "type": "bool"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "user_id", "type": "str"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "user_id", "type": "str"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "tf", "type": "bool"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "tf", "type": "bool"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "tt", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "tt", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "get", "type": "Callable"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "post_id", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "create_post", "type": "Callable[[Any, Union[Container[Any], Mapping[str, protocols.SupportsStrip]]], Any]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "post_id", "type": "Any"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "p_d", "type": "Dict[str, Union[str, int, Dict[nothing, nothing]]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "add_message", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "add_or_update", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "user_id", "type": "str"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "app_id", "type": "str"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "get_by_signature", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "user_id", "type": "str"}, {"lineNumber": 45, "col_offset": 47, "nodeName": "app_id", "type": "str"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "add_message", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "add_or_update", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "user_id", "type": "Any"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "post_id", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "add_mess", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "query_recent", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "user_id", "type": "str"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "post_id", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "post_id", "type": "str"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "add_mess", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "get_by_signature", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "user_id", "type": "str"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "post_id", "type": "str"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "count_of_user", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "user_id", "type": "str"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "add_mess", "type": "Callable[[], Any]"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "count_of_user", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "user_id", "type": "str"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "add_mess", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "query_pager_by_all", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "user_id", "type": "str"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "add_mess", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "query_pager_by_userid", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "user_id", "type": "str"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "get_by_uid", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "post_id", "type": "str"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "get", "type": "Callable"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "get", "type": "Callable"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "get", "type": "Callable"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "get", "type": "Callable"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "MPost", "type": "Type[torcms.model.post_model.MPost]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "MCollect", "type": "Type[torcms.model.collect_model.MCollect]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "MCollect", "type": "Type[torcms.model.collect_model.MCollect]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "MCollect", "type": "Type[torcms.model.collect_model.MCollect]"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "MCollect", "type": "Type[torcms.model.collect_model.MCollect]"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "MCollect", "type": "Type[torcms.model.collect_model.MCollect]"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "MCollect", "type": "Type[torcms.model.collect_model.MCollect]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "MCollect", "type": "Type[torcms.model.collect_model.MCollect]"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "MCollect", "type": "Type[torcms.model.collect_model.MCollect]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "post_id", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "post_id", "type": "str"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "tf", "type": "bool"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "MCollect", "type": "Type[torcms.model.collect_model.MCollect]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "post_id", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "post_id", "type": "str"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "tf", "type": "bool"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "MPost", "type": "Type[torcms.model.post_model.MPost]"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "delete", "type": "Callable[[Any], bool]"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "post_id", "type": "str"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "i", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "i", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "self", "type": "TestMCollect"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "MPost", "type": "Type[torcms.model.post_model.MPost]"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "self", "type": "TestMCollect"}]