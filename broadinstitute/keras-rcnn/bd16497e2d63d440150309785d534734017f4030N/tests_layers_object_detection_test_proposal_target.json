[{"lineNumber": 9, "col_offset": 0, "nodeName": "test_get_config", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "test_proposal_target", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "test_get_bbox_regression_labels", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "test_get_bbox_targets", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "test_sample_indices", "type": "Callable[[], Any]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "layer", "type": "keras_rcnn.layers.object_detection._proposal_target.ProposalTarget"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "expected", "type": "Dict[str, Union[bool, str, int, Tuple[float, float], float]]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "c", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "layer", "type": "keras_rcnn.layers.object_detection._proposal_target.ProposalTarget"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "c", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "p", "type": "keras_rcnn.layers.object_detection._proposal_target.ProposalTarget"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "bbox_target_data", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "bbox_target_data", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "labels", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "bbox_targets", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "bbox_targets", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "p", "type": "keras_rcnn.layers.object_detection._proposal_target.ProposalTarget"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "rois", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "gt_boxes", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "gt_boxes", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "bbox_targets", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "bbox_targets", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "p", "type": "keras_rcnn.layers.object_detection._proposal_target.ProposalTarget"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "sampled", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "sampled", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "sampled", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "sampled", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "sampled", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "sampled", "type": "Any"}, {"lineNumber": 10, "col_offset": 12, "nodeName": "ProposalTarget", "type": "Type[keras_rcnn.layers.object_detection._proposal_target.ProposalTarget]"}, {"lineNumber": 21, "col_offset": 33, "nodeName": "expected", "type": "Dict[str, Union[bool, str, int, Tuple[float, float], float]]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "set_learning_phase", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "ProposalTarget", "type": "Type[keras_rcnn.layers.object_detection._proposal_target.ProposalTarget]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 33, "col_offset": 10, "nodeName": "z", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "layer", "type": "keras_rcnn.layers.object_detection._proposal_target.ProposalTarget"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "Model", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "z", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "predict", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "ProposalTarget", "type": "Type[keras_rcnn.layers.object_detection._proposal_target.ProposalTarget]"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "cast", "type": "Any"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "bbox_target_data", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "get_bbox_regression_labels", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 48, "nodeName": "bbox_target_data", "type": "Any"}, {"lineNumber": 64, "col_offset": 66, "nodeName": "labels", "type": "Any"}, {"lineNumber": 64, "col_offset": 74, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "eval", "type": "Any"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "bbox_targets", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "bbox_targets", "type": "Any"}, {"lineNumber": 75, "col_offset": 58, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "ProposalTarget", "type": "Type[keras_rcnn.layers.object_detection._proposal_target.ProposalTarget]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "cast", "type": "Any"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "gt_boxes", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "get_bbox_targets", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "rois", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "gt_boxes", "type": "Any"}, {"lineNumber": 87, "col_offset": 54, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 62, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "eval", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "bbox_targets", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "bbox_targets", "type": "Any"}, {"lineNumber": 106, "col_offset": 58, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "ProposalTarget", "type": "Type[keras_rcnn.layers.object_detection._proposal_target.ProposalTarget]"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "sample_indices", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "eval", "type": "Any"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "sampled", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "sample_indices", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "eval", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "sampled", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 10, "col_offset": 12, "nodeName": "layers", "type": "module"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "get_config", "type": "Callable[[], Dict[Any, Any]]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "backend", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "layers", "type": "module"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "c", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "models", "type": "Any"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "c", "type": "Any"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 35, "col_offset": 46, "nodeName": "y", "type": "Any"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "z", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "b", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "c", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "z", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "layers", "type": "module"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "backend", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "p", "type": "keras_rcnn.layers.object_detection._proposal_target.ProposalTarget"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "backend", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "bbox_targets", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "layers", "type": "module"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "backend", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "numpy", "type": "module"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "p", "type": "keras_rcnn.layers.object_detection._proposal_target.ProposalTarget"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "backend", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "layers", "type": "module"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "p", "type": "keras_rcnn.layers.object_detection._proposal_target.ProposalTarget"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "backend", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "sampled", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "i", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "p", "type": "keras_rcnn.layers.object_detection._proposal_target.ProposalTarget"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "backend", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "sampled", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "i", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 10, "col_offset": 12, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "layer", "type": "keras_rcnn.layers.object_detection._proposal_target.ProposalTarget"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "keras", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "keras", "type": "Any"}, {"lineNumber": 60, "col_offset": 66, "nodeName": "floatx", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "keras", "type": "Any"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "floatx", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "keras", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "keras", "type": "Any"}, {"lineNumber": 60, "col_offset": 66, "nodeName": "backend", "type": "Any"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "backend", "type": "Any"}, {"lineNumber": 60, "col_offset": 66, "nodeName": "keras", "type": "Any"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "keras", "type": "Any"}]