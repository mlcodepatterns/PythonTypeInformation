[{"lineNumber": 14, "col_offset": 0, "nodeName": "_extract_features", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "_extract_proposals", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "_extract_regions", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "_train", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "Model", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "f", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "models", "type": "Any"}, {"lineNumber": 15, "col_offset": 7, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "features", "type": "Any"}, {"lineNumber": 53, "col_offset": 7, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "options", "type": "Dict[nothing, nothing]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "convolution_3x3", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "regions", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "regions", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "regions", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "regions", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "regions", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "regions", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 90, "col_offset": 7, "nodeName": "training_options", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "training_options", "type": "Dict[str, Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[float, bool, int]]]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "proposals_", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 19, "col_offset": 78, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 20, "col_offset": 78, "nodeName": "features", "type": "Any"}, {"lineNumber": 22, "col_offset": 83, "nodeName": "features", "type": "Any"}, {"lineNumber": 24, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 25, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 27, "col_offset": 83, "nodeName": "features", "type": "Any"}, {"lineNumber": 29, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 30, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 31, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 32, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 34, "col_offset": 83, "nodeName": "features", "type": "Any"}, {"lineNumber": 36, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 37, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 38, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 39, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 41, "col_offset": 83, "nodeName": "features", "type": "Any"}, {"lineNumber": 43, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 44, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 45, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 57, "col_offset": 86, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 59, "col_offset": 115, "nodeName": "convolution_3x3", "type": "Any"}, {"lineNumber": 60, "col_offset": 97, "nodeName": "convolution_3x3", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "scores", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 73, "col_offset": 71, "nodeName": "regions", "type": "Any"}, {"lineNumber": 75, "col_offset": 91, "nodeName": "regions", "type": "Any"}, {"lineNumber": 76, "col_offset": 74, "nodeName": "regions", "type": "Any"}, {"lineNumber": 78, "col_offset": 91, "nodeName": "regions", "type": "Any"}, {"lineNumber": 79, "col_offset": 74, "nodeName": "regions", "type": "Any"}, {"lineNumber": 81, "col_offset": 127, "nodeName": "regions", "type": "Any"}, {"lineNumber": 82, "col_offset": 124, "nodeName": "regions", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "scores", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "bounding_boxes", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "image", "type": "Any"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "labels", "type": "Any"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 123, "col_offset": 46, "nodeName": "image", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "scores", "type": "Any"}, {"lineNumber": 125, "col_offset": 53, "nodeName": "features", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "all_anchors", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "rpn_labels", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "bounding_box_targets", "type": "Any"}, {"lineNumber": 134, "col_offset": 52, "nodeName": "scores", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "labels_targets", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "bounding_box_targets", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "scores", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "bounding_boxes", "type": "Any"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "scores", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "bounding_boxes", "type": "Any"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 159, "col_offset": 43, "nodeName": "scores", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 173, "col_offset": 52, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "compile", "type": "Any"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "MaxPooling2D", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "MaxPooling2D", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "MaxPooling2D", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "MaxPooling2D", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "RegionOfInterest", "type": "Type[keras_rcnn.layers._pooling.RegionOfInterest]"}, {"lineNumber": 71, "col_offset": 71, "nodeName": "features", "type": "Any"}, {"lineNumber": 71, "col_offset": 81, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 71, "col_offset": 92, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "TimeDistributed", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "TimeDistributed", "type": "Any"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "TimeDistributed", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "TimeDistributed", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "TimeDistributed", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "TimeDistributed", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "TimeDistributed", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "_extract_features", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "_extract_proposals", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 44, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "AnchorTarget", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "bounding_boxes", "type": "Any"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "RPNRegressionLoss", "type": "Type[keras_rcnn.layers.losses._rpn.RPNRegressionLoss]"}, {"lineNumber": 136, "col_offset": 57, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 136, "col_offset": 65, "nodeName": "bounding_box_targets", "type": "Any"}, {"lineNumber": 136, "col_offset": 87, "nodeName": "rpn_labels", "type": "Any"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "RPNClassificationLoss", "type": "Type[keras_rcnn.layers.losses._rpn.RPNClassificationLoss]"}, {"lineNumber": 137, "col_offset": 61, "nodeName": "scores", "type": "Any"}, {"lineNumber": 137, "col_offset": 69, "nodeName": "rpn_labels", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "ObjectProposal", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "scores", "type": "Any"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "all_anchors", "type": "Any"}, {"lineNumber": 145, "col_offset": 58, "nodeName": "ProposalTarget", "type": "Type[keras_rcnn.layers.object_detection._proposal_target.ProposalTarget]"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "proposals_", "type": "Any"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "labels", "type": "Any"}, {"lineNumber": 150, "col_offset": 31, "nodeName": "bounding_boxes", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "_extract_regions", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "classes", "type": "Any"}, {"lineNumber": 152, "col_offset": 52, "nodeName": "features", "type": "Any"}, {"lineNumber": 152, "col_offset": 62, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 152, "col_offset": 72, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "RCNNRegressionLoss", "type": "Type[keras_rcnn.layers.losses._rcnn.RCNNRegressionLoss]"}, {"lineNumber": 154, "col_offset": 64, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 154, "col_offset": 72, "nodeName": "bounding_box_targets", "type": "Any"}, {"lineNumber": 154, "col_offset": 94, "nodeName": "labels_targets", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "RCNNClassificationLoss", "type": "Type[keras_rcnn.layers.losses._rcnn.RCNNClassificationLoss]"}, {"lineNumber": 155, "col_offset": 68, "nodeName": "scores", "type": "Any"}, {"lineNumber": 155, "col_offset": 76, "nodeName": "labels_targets", "type": "Any"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "ObjectDetection", "type": "Type[keras_rcnn.layers._object_detection.ObjectDetection]"}, {"lineNumber": 157, "col_offset": 70, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 157, "col_offset": 81, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 157, "col_offset": 89, "nodeName": "scores", "type": "Any"}, {"lineNumber": 157, "col_offset": 97, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "_train", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "classes", "type": "Any"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "training_options", "type": "Any"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 19, "col_offset": 69, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 20, "col_offset": 69, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 24, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 25, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 29, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 30, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 31, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 32, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 36, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 37, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 38, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 39, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 43, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 44, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 45, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 57, "col_offset": 77, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "layers", "type": "module"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "Flatten", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 76, "col_offset": 47, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 82, "col_offset": 65, "nodeName": "classes", "type": "Any"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "layers", "type": "module"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "layers", "type": "module"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "layers", "type": "module"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "layers", "type": "module"}, {"lineNumber": 145, "col_offset": 58, "nodeName": "layers", "type": "module"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "losses", "type": "module"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "losses", "type": "module"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "layers", "type": "module"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "classes", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "RCNN", "type": "Type[RCNN]"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "self", "type": "RCNN"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "RCNN", "type": "Type[RCNN]"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "self", "type": "RCNN"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "keras", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "keras", "type": "Any"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "layers", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "keras", "type": "Any"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "layers", "type": "Any"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "keras", "type": "Any"}, {"lineNumber": 76, "col_offset": 47, "nodeName": "layers", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "keras", "type": "Any"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "layers", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "keras", "type": "Any"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "layers", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "layers", "type": "Any"}, {"lineNumber": 81, "col_offset": 69, "nodeName": "classes", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "layers", "type": "Any"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 145, "col_offset": 58, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "layers", "type": "module"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "layers", "type": "module"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "keras", "type": "Any"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "keras", "type": "Any"}, {"lineNumber": 76, "col_offset": 47, "nodeName": "keras", "type": "Any"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "keras", "type": "Any"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "keras", "type": "Any"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "keras", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "keras", "type": "Any"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "training_options", "type": "Union[Any, Dict[str, Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[float, bool, int]]]]]"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "training_options", "type": "Union[Any, Dict[str, Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[float, bool, int]]]]]"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "training_options", "type": "Union[Any, Dict[str, Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[float, bool, int]]]]]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "training_options", "type": "Union[Any, Dict[str, Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[float, bool, int]]]]]"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "training_options", "type": "Union[Any, Dict[str, Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[float, bool, int]]]]]"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "training_options", "type": "Union[Any, Dict[str, Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[float, bool, int]]]]]"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "training_options", "type": "Union[Any, Dict[str, Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[float, bool, int]]]]]"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "training_options", "type": "Union[Any, Dict[str, Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[float, bool, int]]]]]"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "training_options", "type": "Union[Any, Dict[str, Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[float, bool, int]]]]]"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "training_options", "type": "Union[Any, Dict[str, Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[float, bool, int]]]]]"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "training_options", "type": "Union[Any, Dict[str, Union[Dict[str, float], Dict[nothing, nothing], Dict[str, int], Dict[str, Union[float, bool, int]]]]]"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "keras_rcnn", "type": "module"}]