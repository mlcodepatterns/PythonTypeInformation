[{"lineNumber": 14, "col_offset": 10, "nodeName": "Model", "type": "Any"}, {"lineNumber": 14, "col_offset": 10, "nodeName": "models", "type": "Any"}, {"lineNumber": 14, "col_offset": 10, "nodeName": "keras", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "convolution_3x3", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "bounding_boxes", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "image", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "labels", "type": "Any"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 126, "col_offset": 78, "nodeName": "image", "type": "Any"}, {"lineNumber": 127, "col_offset": 78, "nodeName": "features", "type": "Any"}, {"lineNumber": 129, "col_offset": 83, "nodeName": "features", "type": "Any"}, {"lineNumber": 131, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 132, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 134, "col_offset": 83, "nodeName": "features", "type": "Any"}, {"lineNumber": 136, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 137, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 138, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 139, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 141, "col_offset": 83, "nodeName": "features", "type": "Any"}, {"lineNumber": 143, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 144, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 145, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 146, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 148, "col_offset": 83, "nodeName": "features", "type": "Any"}, {"lineNumber": 150, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 151, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 152, "col_offset": 79, "nodeName": "features", "type": "Any"}, {"lineNumber": 154, "col_offset": 86, "nodeName": "features", "type": "Any"}, {"lineNumber": 156, "col_offset": 115, "nodeName": "convolution_3x3", "type": "Any"}, {"lineNumber": 157, "col_offset": 119, "nodeName": "convolution_3x3", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "anchors", "type": "Any"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "rpn_labels", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "bounding_box_targets", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "scores", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "labels_targets", "type": "Any"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "bounding_box_targets", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "anchors", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 167, "col_offset": 47, "nodeName": "scores", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "compile", "type": "Any"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "MaxPooling2D", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "MaxPooling2D", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "MaxPooling2D", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "MaxPooling2D", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "AnchorTarget", "type": "Any"}, {"lineNumber": 159, "col_offset": 86, "nodeName": "scores", "type": "Any"}, {"lineNumber": 159, "col_offset": 94, "nodeName": "bounding_boxes", "type": "Any"}, {"lineNumber": 159, "col_offset": 110, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "RPN", "type": "Type[keras_rcnn.layers.losses._rpn.RPN]"}, {"lineNumber": 161, "col_offset": 51, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 161, "col_offset": 59, "nodeName": "bounding_box_targets", "type": "Any"}, {"lineNumber": 161, "col_offset": 81, "nodeName": "scores", "type": "Any"}, {"lineNumber": 161, "col_offset": 89, "nodeName": "rpn_labels", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "ObjectProposal", "type": "Any"}, {"lineNumber": 163, "col_offset": 56, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 163, "col_offset": 66, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 163, "col_offset": 74, "nodeName": "scores", "type": "Any"}, {"lineNumber": 163, "col_offset": 82, "nodeName": "anchors", "type": "Any"}, {"lineNumber": 165, "col_offset": 58, "nodeName": "ProposalTarget", "type": "Type[keras_rcnn.layers.object_detection._proposal_target.ProposalTarget]"}, {"lineNumber": 165, "col_offset": 94, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 165, "col_offset": 105, "nodeName": "labels", "type": "Any"}, {"lineNumber": 165, "col_offset": 113, "nodeName": "bounding_boxes", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "classes", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 126, "col_offset": 69, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 127, "col_offset": 69, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 131, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 132, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 136, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 137, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 138, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 139, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 143, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 144, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 145, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 146, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 150, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 151, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 152, "col_offset": 70, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 154, "col_offset": 77, "nodeName": "options", "type": "Dict[str, Union[str, Tuple[int, int]]]"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "layers", "type": "module"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "layers", "type": "module"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "layers", "type": "module"}, {"lineNumber": 165, "col_offset": 58, "nodeName": "layers", "type": "module"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "RPN", "type": "Type[RPN]"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "self", "type": "RPN"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 172, "col_offset": 14, "nodeName": "RPN", "type": "Type[RPN]"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "self", "type": "RPN"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "keras", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 165, "col_offset": 58, "nodeName": "keras_rcnn", "type": "module"}]