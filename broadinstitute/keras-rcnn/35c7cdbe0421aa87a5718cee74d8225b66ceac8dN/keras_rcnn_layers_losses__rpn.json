[{"lineNumber": 9, "col_offset": 10, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 9, "col_offset": 10, "nodeName": "layers", "type": "Any"}, {"lineNumber": 9, "col_offset": 10, "nodeName": "keras", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "anchors", "type": "Any"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "anchors", "type": "Any"}, {"lineNumber": 16, "col_offset": 69, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "target_deltas", "type": "Any"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "target_deltas", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "target_scores", "type": "Any"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "target_scores", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "output_deltas", "type": "Any"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "output_deltas", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "output_deltas", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "condition", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "indices", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "condition", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "indices", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "condition", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "p_star_i", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "p_star_i", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "a_y", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "weight", "type": "float"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "configuration", "type": "Dict[str, Any]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "RPN"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "target_deltas", "type": "Any"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "target_scores", "type": "Any"}, {"lineNumber": 16, "col_offset": 38, "nodeName": "output_deltas", "type": "Any"}, {"lineNumber": 16, "col_offset": 53, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "RPN"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "RPN"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "RPN"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "RPN"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "RPN"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 24, "col_offset": 51, "nodeName": "output_deltas", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "RPN"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 25, "col_offset": 51, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "add_loss", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "output_deltas", "type": "Any"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "not_equal", "type": "Any"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "target_scores", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "where", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "condition", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "gather_nd", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "target_scores", "type": "Any"}, {"lineNumber": 37, "col_offset": 66, "nodeName": "indices", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "gather_nd", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 46, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 38, "col_offset": 66, "nodeName": "indices", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "binary_crossentropy", "type": "Any"}, {"lineNumber": 40, "col_offset": 49, "nodeName": "target", "type": "Any"}, {"lineNumber": 40, "col_offset": 57, "nodeName": "output", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "not_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "where", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "condition", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "gather_nd", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "output_deltas", "type": "Any"}, {"lineNumber": 50, "col_offset": 66, "nodeName": "indices", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "gather_nd", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "target_deltas", "type": "Any"}, {"lineNumber": 51, "col_offset": 66, "nodeName": "indices", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "gather_nd", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 53, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 53, "col_offset": 73, "nodeName": "indices", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "greater", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "where", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "condition", "type": "Any"}, {"lineNumber": 60, "col_offset": 55, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 58, "nodeName": "y", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "p_star_i", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "target", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "smooth_l1", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 67, "col_offset": 51, "nodeName": "target", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "p_star_i", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "a_y", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "weight", "type": "float"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "anchors", "type": "Any"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "configuration", "type": "Dict[str, Any]"}, {"lineNumber": 13, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "backend", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "backend", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "RPN"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "classification_loss", "type": "Any"}, {"lineNumber": 27, "col_offset": 49, "nodeName": "regression_loss", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "backend", "type": "module"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 38, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "backend", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "backend", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "backend", "type": "module"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "backend", "type": "module"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "backend", "type": "module"}, {"lineNumber": 53, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "backend", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "backend", "type": "module"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "backend", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "backend", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "backend", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "backend", "type": "module"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "backend", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "backend", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "p_star_i", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "self", "type": "RPN"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 13, "col_offset": 14, "nodeName": "RPN", "type": "Type[RPN]"}, {"lineNumber": 13, "col_offset": 19, "nodeName": "self", "type": "RPN"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "keras", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "keras", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "self", "type": "RPN"}, {"lineNumber": 27, "col_offset": 49, "nodeName": "self", "type": "RPN"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "keras", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "keras", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "keras", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "keras", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "keras", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "backend", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "backend", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "RPN", "type": "Type[RPN]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "self", "type": "RPN"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "keras", "type": "Any"}]