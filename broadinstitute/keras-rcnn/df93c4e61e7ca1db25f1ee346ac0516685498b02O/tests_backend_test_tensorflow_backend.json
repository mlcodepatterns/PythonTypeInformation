[{"lineNumber": 7, "col_offset": 0, "nodeName": "test_crop_and_resize", "type": "Callable[[], Any]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "test_inside_image", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "test_propose", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "test_overlap", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "test_overlapping", "type": "Callable[[], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "test_shift", "type": "Callable[[], Any]"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "slices", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "stride", "type": "int"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "features", "type": "Tuple[int, int]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "all_anchors", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "img_info", "type": "Tuple[int, int, int]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "inds_inside", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "all_inside_anchors", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "rpn_scores", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "rpn_boxes", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "overlapping", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "overlapping", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "stride", "type": "int"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "features", "type": "Tuple[int, int]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "img_info", "type": "Tuple[int, int, int]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "gt_boxes", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "gt_boxes", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "all_anchors", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "argmax_overlaps_inds", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "max_overlaps", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "gt_argmax_overlaps_inds", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 8, "col_offset": 12, "nodeName": "variable", "type": "Any"}, {"lineNumber": 10, "col_offset": 12, "nodeName": "variable", "type": "Any"}, {"lineNumber": 14, "col_offset": 13, "nodeName": "crop_and_resize", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 14, "col_offset": 48, "nodeName": "image", "type": "Any"}, {"lineNumber": 14, "col_offset": 55, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 14, "col_offset": 62, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "shift", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 43, "nodeName": "features", "type": "Tuple[int, int]"}, {"lineNumber": 23, "col_offset": 53, "nodeName": "stride", "type": "int"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "inds_inside", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "all_inside_anchors", "type": "Any"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "inside_image", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 27, "col_offset": 70, "nodeName": "all_anchors", "type": "Any"}, {"lineNumber": 27, "col_offset": 83, "nodeName": "img_info", "type": "Tuple[int, int, int]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "eval", "type": "Any"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "inds_inside", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "eval", "type": "Any"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "all_inside_anchors", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "variable", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "variable", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "propose", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "rpn_boxes", "type": "Any"}, {"lineNumber": 41, "col_offset": 54, "nodeName": "rpn_scores", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "propose", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "rpn_boxes", "type": "Any"}, {"lineNumber": 45, "col_offset": 54, "nodeName": "rpn_scores", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "variable", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "variable", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "overlap", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "eval", "type": "Any"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "overlapping", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "overlapping", "type": "Any"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "variable", "type": "Any"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "gt_boxes", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "shift", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "features", "type": "Tuple[int, int]"}, {"lineNumber": 93, "col_offset": 53, "nodeName": "stride", "type": "int"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "inds_inside", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "all_inside_anchors", "type": "Any"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "inside_image", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 95, "col_offset": 70, "nodeName": "all_anchors", "type": "Any"}, {"lineNumber": 95, "col_offset": 83, "nodeName": "img_info", "type": "Tuple[int, int, int]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "argmax_overlaps_inds", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "max_overlaps", "type": "Any"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "gt_argmax_overlaps_inds", "type": "Any"}, {"lineNumber": 97, "col_offset": 66, "nodeName": "overlapping", "type": "Callable[[Any, Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 97, "col_offset": 97, "nodeName": "gt_boxes", "type": "Any"}, {"lineNumber": 97, "col_offset": 107, "nodeName": "all_inside_anchors", "type": "Any"}, {"lineNumber": 97, "col_offset": 127, "nodeName": "inds_inside", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "eval", "type": "Any"}, {"lineNumber": 99, "col_offset": 46, "nodeName": "argmax_overlaps_inds", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "eval", "type": "Any"}, {"lineNumber": 100, "col_offset": 38, "nodeName": "max_overlaps", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "eval", "type": "Any"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "gt_argmax_overlaps_inds", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "shift", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 8, "col_offset": 12, "nodeName": "backend", "type": "Any"}, {"lineNumber": 8, "col_offset": 35, "nodeName": "ones", "type": "Any"}, {"lineNumber": 10, "col_offset": 12, "nodeName": "backend", "type": "Any"}, {"lineNumber": 10, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 14, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "backend", "type": "module"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "backend", "type": "module"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "backend", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "inds_inside", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "backend", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "all_inside_anchors", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "backend", "type": "Any"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "backend", "type": "Any"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "backend", "type": "module"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "backend", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "backend", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "backend", "type": "module"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "backend", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "backend", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "backend", "type": "module"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "backend", "type": "module"}, {"lineNumber": 97, "col_offset": 66, "nodeName": "backend", "type": "module"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "backend", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "backend", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "backend", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "argmax_overlaps_inds", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "max_overlaps", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "gt_argmax_overlaps_inds", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "backend", "type": "module"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "backend", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 8, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 8, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 10, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 10, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 14, "col_offset": 13, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "eval", "type": "Any"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "slices", "type": "Any"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "keras", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "keras", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "keras", "type": "Any"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "eval", "type": "Any"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "keras", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "keras", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 97, "col_offset": 66, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "keras", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "keras", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "backend", "type": "Any"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "numpy", "type": "module"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "eval", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "eval", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "backend", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "backend", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "backend", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "keras", "type": "Any"}]