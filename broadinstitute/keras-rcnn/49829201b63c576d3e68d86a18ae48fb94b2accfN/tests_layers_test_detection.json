[{"lineNumber": 10, "col_offset": 8, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "detections", "type": "keras_rcnn.layers._object_detection.ObjectDetection"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "proposals", "type": "numpy.ndarray"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "pred_boxes", "type": "numpy.ndarray"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "pred_boxes", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "pred_scores", "type": "numpy.ndarray"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "pred_scores", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "classes", "type": "Any"}, {"lineNumber": 11, "col_offset": 21, "nodeName": "ObjectDetection", "type": "Type[keras_rcnn.layers._object_detection.ObjectDetection]"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 14, "col_offset": 20, "nodeName": "variable", "type": "Any"}, {"lineNumber": 14, "col_offset": 43, "nodeName": "proposals", "type": "numpy.ndarray"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "variable", "type": "Any"}, {"lineNumber": 16, "col_offset": 44, "nodeName": "pred_boxes", "type": "numpy.ndarray"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "variable", "type": "Any"}, {"lineNumber": 19, "col_offset": 45, "nodeName": "pred_scores", "type": "numpy.ndarray"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "variable", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "classes", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "call", "type": "Callable[..., List[Any]]"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "eval", "type": "Any"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "eval", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "classes", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assert_approx_equal", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 11, "col_offset": 21, "nodeName": "layers", "type": "module"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 14, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "backend", "type": "Any"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "backend", "type": "Any"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "backend", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "detections", "type": "keras_rcnn.layers._object_detection.ObjectDetection"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "proposals", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "pred_boxes", "type": "Any"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "pred_scores", "type": "Any"}, {"lineNumber": 24, "col_offset": 49, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "backend", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "backend", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "sum", "type": "Any"}, {"lineNumber": 37, "col_offset": 58, "nodeName": "sum", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 11, "col_offset": 21, "nodeName": "keras_rcnn", "type": "module"}, {"lineNumber": 14, "col_offset": 20, "nodeName": "keras", "type": "Any"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "keras", "type": "Any"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "keras", "type": "Any"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "keras", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "keras", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "expected", "type": "Any"}, {"lineNumber": 37, "col_offset": 58, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "classes", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "classes", "type": "Any"}]