[{"lineNumber": 10, "col_offset": 0, "nodeName": "write_gct", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "rpkm_df", "type": "Any"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "reads_df", "type": "Any"}, {"lineNumber": 32, "col_offset": 3, "nodeName": "exon_report", "type": "Any"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 21, "col_offset": 7, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 10, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "rpkm_gct", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "exon_intron_report", "type": "Any"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "rpkm_df", "type": "Any"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "loc", "type": "Any"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "reads_df", "type": "Any"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "write_gct", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "rpkm_df", "type": "Any"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 3, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "exon_df", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "exon_count", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "gene_name", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "output_df", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "values", "type": "Any"}, {"lineNumber": 11, "col_offset": 38, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "argparse", "type": "module"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 21, "col_offset": 7, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "split", "type": "Any"}, {"lineNumber": 25, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "rpkm_df", "type": "Any"}, {"lineNumber": 28, "col_offset": 50, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "gtf", "type": "TextIO"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "gtf", "type": "TextIO"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "index", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "output_df", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "output_df", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "loc", "type": "Any"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "exon_df", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "write_gct", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "output_df", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 11, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 11, "col_offset": 19, "nodeName": "gct_path", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 26, "col_offset": 126, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 29, "col_offset": 49, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "pd", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "exon_report", "type": "Any"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "line", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "attr", "type": "str"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "attr", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "pd", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "output_df", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "loc", "type": "Any"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "output_df", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 11, "col_offset": 9, "nodeName": "gzip", "type": "module"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "reads_df", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "exon_report", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "line", "type": "List[str]"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "attr", "type": "str"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 53, "col_offset": 132, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "rpkm_df", "type": "Any"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "index", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 58, "col_offset": 55, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 13, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "split", "type": "Callable"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "exon_intron_report", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "line", "type": "str"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "attr", "type": "str"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "attr", "type": "str"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "line", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "exon_count", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 53, "col_offset": 53, "nodeName": "i", "type": "Any"}, {"lineNumber": 53, "col_offset": 58, "nodeName": "index", "type": "Any"}, {"lineNumber": 53, "col_offset": 76, "nodeName": "j", "type": "Any"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "exon_df", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 13, "col_offset": 40, "nodeName": "df", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "i", "type": "str"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "line", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "gene_name", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "attr", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "i", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "j", "type": "Any"}, {"lineNumber": 53, "col_offset": 58, "nodeName": "rpkm_df", "type": "Any"}, {"lineNumber": 53, "col_offset": 81, "nodeName": "arange", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "line", "type": "str"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "i", "type": "str"}, {"lineNumber": 45, "col_offset": 47, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "attr", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 81, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 91, "nodeName": "exon_count", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 55, "col_offset": 64, "nodeName": "i", "type": "Any"}, {"lineNumber": 55, "col_offset": 69, "nodeName": "index", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "attr", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 102, "nodeName": "i", "type": "Any"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "split", "type": "Any"}, {"lineNumber": 55, "col_offset": 69, "nodeName": "output_df", "type": "Any"}, {"lineNumber": 45, "col_offset": 47, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "i", "type": "Any"}, {"lineNumber": 45, "col_offset": 47, "nodeName": "attr", "type": "str"}]