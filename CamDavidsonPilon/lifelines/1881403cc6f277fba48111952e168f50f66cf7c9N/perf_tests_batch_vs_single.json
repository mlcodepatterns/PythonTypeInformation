[{"lineNumber": 14, "col_offset": 0, "nodeName": "REPLICATES", "type": "int"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "ROSSI", "type": "Any"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "ROSSI_ROWS", "type": "Any"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "results", "type": "Dict[Tuple[Any, Any, Any], Dict[str, float]]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "results", "type": "Any"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "results", "type": "Any"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "results", "type": "Any"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "results", "type": "Any"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "X", "type": "Any"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "X", "type": "Any"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "Y", "type": "Any"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "model", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "load_rossi", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "shape", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "n_copies", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "additional_x_vars", "type": "Any"}, {"lineNumber": 20, "col_offset": 33, "nodeName": "fraction", "type": "Any"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "product", "type": "Callable"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "sort_index", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "reset_index", "type": "Any"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "rename", "type": "Any"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "results", "type": "Any"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 67, "col_offset": 10, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "results", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "log", "type": "Any"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "results", "type": "Any"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "results", "type": "Any"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "results", "type": "Any"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "results", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "add_constant", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 6, "nodeName": "params", "type": "Any"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "ROSSI", "type": "Any"}, {"lineNumber": 20, "col_offset": 67, "nodeName": "logspace", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "n_unique_durations", "type": "int"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "unique_durations", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "batch_results", "type": "List[float]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "single_results", "type": "List[float]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "batch_time", "type": "float"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "single_time", "type": "float"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "T", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "results", "type": "Any"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "results", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "results", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "results", "type": "Any"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "results", "type": "Any"}, {"lineNumber": 67, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "results", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "results", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "results", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "results", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "results", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "results", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "results", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "sm", "type": "Any"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "summary", "type": "Any"}, {"lineNumber": 83, "col_offset": 6, "nodeName": "model", "type": "Any"}, {"lineNumber": 20, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 83, "nodeName": "log10", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "n_copies", "type": "Any"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "additional_x_vars", "type": "Any"}, {"lineNumber": 22, "col_offset": 43, "nodeName": "fraction", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "n_copies", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "ROSSI_ROWS", "type": "Any"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "concat", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "round", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "additional_x_vars", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "REPLICATES", "type": "int"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "cph_batch", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "start_time", "type": "float"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "REPLICATES", "type": "int"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "cph_single", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "start_time", "type": "float"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "min", "type": "Callable"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "batch_results", "type": "List[float]"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "min", "type": "Callable"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "single_results", "type": "List[float]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "results", "type": "Dict[Tuple[Any, Any, Any], Dict[str, float]]"}, {"lineNumber": 51, "col_offset": 60, "nodeName": "batch_time", "type": "float"}, {"lineNumber": 51, "col_offset": 82, "nodeName": "single_time", "type": "float"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "OLS", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "Y", "type": "Any"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "X", "type": "Any"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "model", "type": "Any"}, {"lineNumber": 20, "col_offset": 83, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 25, "col_offset": 33, "nodeName": "n_copies", "type": "Any"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "exponential", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "tile", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "unique_durations", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "randn", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "n", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "CoxPHFitter", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "df", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "CoxPHFitter", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "batch_time", "type": "float"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "single_time", "type": "float"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "results", "type": "Dict[Tuple[Any, Any, Any], Dict[str, float]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "sm", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "ROSSI", "type": "Any"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "fraction", "type": "Any"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "random", "type": "Any"}, {"lineNumber": 27, "col_offset": 67, "nodeName": "n_unique_durations", "type": "int"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 29, "col_offset": 77, "nodeName": "shape", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "cph_batch", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "batch_results", "type": "List[float]"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "start_time", "type": "float"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "cph_single", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "single_results", "type": "List[float]"}, {"lineNumber": 46, "col_offset": 43, "nodeName": "start_time", "type": "float"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "n", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "fraction", "type": "Any"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 51, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 29, "col_offset": 77, "nodeName": "df", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "df", "type": "Any"}, {"lineNumber": 29, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 63, "nodeName": "fraction", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "df", "type": "Any"}]