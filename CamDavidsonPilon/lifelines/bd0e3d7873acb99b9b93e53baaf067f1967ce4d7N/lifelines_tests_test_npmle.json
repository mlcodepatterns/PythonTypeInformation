[{"lineNumber": 10, "col_offset": 0, "nodeName": "test_is_subset", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "test_create_turnbull_intervals", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "test_npmle", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "test_npmle_with_weights_is_identical_if_uniform_weights", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "test_npmle_with_weights", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "test_sf_doesnt_return_nans", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "test_mice_and_optimization_flag", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "test_mice_scipy", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "sol", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "weights", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "left", "type": "List[int]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "right", "type": "List[int]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "results", "type": "Tuple[Any, Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "sf", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "results", "type": "Tuple[Any, Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "results", "type": "Tuple[Any, Any]"}, {"lineNumber": 11, "col_offset": 11, "nodeName": "is_subset", "type": "Callable[[lifelines.fitters.npmle.namedtuple_Interval_left_right, lifelines.fitters.npmle.namedtuple_Interval_left_right], bool]"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "is_subset", "type": "Callable[[lifelines.fitters.npmle.namedtuple_Interval_left_right, lifelines.fitters.npmle.namedtuple_Interval_left_right], bool]"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "is_subset", "type": "Callable[[lifelines.fitters.npmle.namedtuple_Interval_left_right, lifelines.fitters.npmle.namedtuple_Interval_left_right], bool]"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "is_subset", "type": "Callable[[lifelines.fitters.npmle.namedtuple_Interval_left_right, lifelines.fitters.npmle.namedtuple_Interval_left_right], bool]"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "is_subset", "type": "Callable[[lifelines.fitters.npmle.namedtuple_Interval_left_right, lifelines.fitters.npmle.namedtuple_Interval_left_right], bool]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "left", "type": "Tuple[Any, ...]"}, {"lineNumber": 23, "col_offset": 10, "nodeName": "right", "type": "Tuple[Any, ...]"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "left", "type": "Any"}, {"lineNumber": 26, "col_offset": 10, "nodeName": "right", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "left", "type": "Any"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "right", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "left", "type": "Any"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "right", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "left", "type": "List[int]"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "right", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "left", "type": "List[int]"}, {"lineNumber": 42, "col_offset": 10, "nodeName": "right", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "left", "type": "List[int]"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "right", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 52, "col_offset": 64, "nodeName": "sol", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "left", "type": "List[int]"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "right", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "sol", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "npmle", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "left", "type": "List[int]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "right", "type": "List[int]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "reconstruct_survival_function", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "load_mice", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "npmle", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "load_mice", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "npmle", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 11, "col_offset": 21, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 11, "col_offset": 37, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 12, "col_offset": 21, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 12, "col_offset": 37, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 13, "col_offset": 37, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 14, "col_offset": 37, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 15, "col_offset": 33, "nodeName": "inf", "type": "Any"}, {"lineNumber": 15, "col_offset": 42, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 15, "col_offset": 54, "nodeName": "inf", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "is_subset", "type": "Callable[[lifelines.fitters.npmle.namedtuple_Interval_left_right, lifelines.fitters.npmle.namedtuple_Interval_left_right], bool]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "is_subset", "type": "Callable[[lifelines.fitters.npmle.namedtuple_Interval_left_right, lifelines.fitters.npmle.namedtuple_Interval_left_right], bool]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "is_subset", "type": "Callable[[lifelines.fitters.npmle.namedtuple_Interval_left_right, lifelines.fitters.npmle.namedtuple_Interval_left_right], bool]"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "create_turnbull_intervals", "type": "Callable[[Any, Any], List[lifelines.fitters.npmle.namedtuple_Interval_left_right]]"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "left", "type": "Tuple[Any, ...]"}, {"lineNumber": 24, "col_offset": 43, "nodeName": "right", "type": "Tuple[Any, ...]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "create_turnbull_intervals", "type": "Callable[[Any, Any], List[lifelines.fitters.npmle.namedtuple_Interval_left_right]]"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "left", "type": "Any"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "right", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "create_turnbull_intervals", "type": "Callable[[Any, Any], List[lifelines.fitters.npmle.namedtuple_Interval_left_right]]"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "left", "type": "Any"}, {"lineNumber": 30, "col_offset": 43, "nodeName": "right", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "create_turnbull_intervals", "type": "Callable[[Any, Any], List[lifelines.fitters.npmle.namedtuple_Interval_left_right]]"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "left", "type": "Any"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "right", "type": "Any"}, {"lineNumber": 37, "col_offset": 74, "nodeName": "inf", "type": "Any"}, {"lineNumber": 37, "col_offset": 86, "nodeName": "inf", "type": "Any"}, {"lineNumber": 37, "col_offset": 94, "nodeName": "inf", "type": "Any"}, {"lineNumber": 37, "col_offset": 102, "nodeName": "inf", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "npt", "type": "Any"}, {"lineNumber": 38, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 74, "nodeName": "inf", "type": "Any"}, {"lineNumber": 42, "col_offset": 86, "nodeName": "inf", "type": "Any"}, {"lineNumber": 42, "col_offset": 94, "nodeName": "inf", "type": "Any"}, {"lineNumber": 42, "col_offset": 102, "nodeName": "inf", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "right", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "npt", "type": "Any"}, {"lineNumber": 44, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 74, "nodeName": "inf", "type": "Any"}, {"lineNumber": 50, "col_offset": 86, "nodeName": "inf", "type": "Any"}, {"lineNumber": 50, "col_offset": 94, "nodeName": "inf", "type": "Any"}, {"lineNumber": 50, "col_offset": 102, "nodeName": "inf", "type": "Any"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "npt", "type": "Any"}, {"lineNumber": 54, "col_offset": 93, "nodeName": "inf", "type": "Any"}, {"lineNumber": 54, "col_offset": 105, "nodeName": "inf", "type": "Any"}, {"lineNumber": 54, "col_offset": 113, "nodeName": "inf", "type": "Any"}, {"lineNumber": 54, "col_offset": 121, "nodeName": "inf", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "npt", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "npt", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "results", "type": "Tuple[Any, Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "npt", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "results", "type": "Tuple[Any, Any]"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "results", "type": "Tuple[Any, Any]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "df", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "npt", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "npt", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "df", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "npt", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "npt", "type": "Any"}, {"lineNumber": 15, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 17, "col_offset": 41, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 18, "col_offset": 41, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 24, "col_offset": 54, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 24, "col_offset": 70, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 24, "col_offset": 86, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 24, "col_offset": 102, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 27, "col_offset": 54, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 30, "col_offset": 54, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 33, "col_offset": 54, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 37, "col_offset": 74, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 86, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 94, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 102, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "npmle", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "left", "type": "List[int]"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "right", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 74, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 86, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 94, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 102, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "npmle", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "left", "type": "List[int]"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "right", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 74, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 86, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 94, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 102, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "npmle", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "left", "type": "List[int]"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "right", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 93, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 105, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 113, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 121, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "npmle", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "left", "type": "List[int]"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "right", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 62, "col_offset": 53, "nodeName": "interval", "type": "Type[lifelines.fitters.npmle.namedtuple_Interval_left_right]"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "results", "type": "Tuple[Any, Any]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "results", "type": "Tuple[Any, Any]"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "results", "type": "Tuple[Any, Any]"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "results", "type": "Tuple[Any, Any]"}, {"lineNumber": 52, "col_offset": 51, "nodeName": "weights", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "sf", "type": "Any"}]