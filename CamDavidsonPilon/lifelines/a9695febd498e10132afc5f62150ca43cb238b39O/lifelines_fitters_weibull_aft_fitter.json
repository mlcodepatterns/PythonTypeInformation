[{"lineNumber": 19, "col_offset": 23, "nodeName": "ParametericAFTRegressionFitter", "type": "Type[lifelines.fitters.ParametericAFTRegressionFitter]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "_scipy_fit_method", "type": "str"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "_scipy_fit_options", "type": "Dict[str, Union[int, float]]"}, {"lineNumber": 106, "col_offset": 96, "nodeName": "ArrayBox", "type": "Any"}, {"lineNumber": 122, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 163, "col_offset": 94, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_ancillary_parameter_name", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "_primary_parameter_name", "type": "str"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "lambda_params", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "log_lambda_", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "rho_params", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "rho_", "type": "Any"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "Union", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "lambda_params", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "log_lambda_", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "rho_params", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "log_rho_", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "WeibullAFTFitter"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "WeibullAFTFitter"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "alpha", "type": "float"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "penalizer", "type": "float"}, {"lineNumber": 93, "col_offset": 65, "nodeName": "l1_ratio", "type": "float"}, {"lineNumber": 93, "col_offset": 75, "nodeName": "fit_intercept", "type": "bool"}, {"lineNumber": 93, "col_offset": 90, "nodeName": "model_ancillary", "type": "bool"}, {"lineNumber": 96, "col_offset": 88, "nodeName": "DataframeSliceDict", "type": "Type[lifelines.utils.DataframeSliceDict]"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "params", "type": "Any"}, {"lineNumber": 99, "col_offset": 38, "nodeName": "lambda_params", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "params", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "safe_exp", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "safe_exp", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "DictBox", "type": "Any"}, {"lineNumber": 106, "col_offset": 73, "nodeName": "DataframeSliceDict", "type": "Type[lifelines.utils.DataframeSliceDict]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "params", "type": "Any"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "lambda_params", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "params", "type": "Any"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "rho_params", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "lambda_", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "rho_", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "_prep_inputs_for_prediction_and_return_scores", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 75, "nodeName": "df", "type": "Any"}, {"lineNumber": 151, "col_offset": 79, "nodeName": "ancillary_df", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "conditional_after", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "lambda_", "type": "Any"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "rho_", "type": "Any"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "_prep_inputs_for_prediction_and_return_scores", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 189, "col_offset": 75, "nodeName": "df", "type": "Any"}, {"lineNumber": 189, "col_offset": 79, "nodeName": "ancillary_df", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "Union", "type": "Any"}, {"lineNumber": 96, "col_offset": 61, "nodeName": "Union", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "Xs", "type": "lifelines.utils.DataframeSliceDict"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "rho_params", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "rho_", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "ArrayBox", "type": "Any"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "Union", "type": "Any"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "Xs", "type": "lifelines.utils.DataframeSliceDict"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "Xs", "type": "lifelines.utils.DataframeSliceDict"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "log_rho_", "type": "Any"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "log_lambda_", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "self", "type": "WeibullAFTFitter"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "conditional_after", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "conditional_after", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 159, "col_offset": 95, "nodeName": "conditional_after", "type": "Any"}, {"lineNumber": 163, "col_offset": 63, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "self", "type": "WeibullAFTFitter"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "lambda_", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "WeibullAFTFitter", "type": "Type[WeibullAFTFitter]"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "self", "type": "WeibullAFTFitter"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "Xs", "type": "lifelines.utils.DataframeSliceDict"}, {"lineNumber": 104, "col_offset": 68, "nodeName": "log_lambda_", "type": "Any"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "expm1", "type": "Any"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "log_rho_", "type": "Any"}, {"lineNumber": 113, "col_offset": 74, "nodeName": "log_lambda_", "type": "Any"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 153, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "np", "type": "Any"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "conditional_after", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "lambda_", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "_get_index", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "df", "type": "Any"}, {"lineNumber": 163, "col_offset": 72, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 190, "col_offset": 67, "nodeName": "_get_index", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 190, "col_offset": 78, "nodeName": "df", "type": "Any"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "DictBox", "type": "Any"}, {"lineNumber": 96, "col_offset": 67, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 96, "col_offset": 74, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "log", "type": "Any"}, {"lineNumber": 106, "col_offset": 52, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 106, "col_offset": 59, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "np", "type": "Any"}, {"lineNumber": 113, "col_offset": 62, "nodeName": "log", "type": "Any"}, {"lineNumber": 113, "col_offset": 69, "nodeName": "T", "type": "Union[float, numpy.ndarray]"}, {"lineNumber": 153, "col_offset": 45, "nodeName": "df", "type": "Any"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "df", "type": "Any"}, {"lineNumber": 155, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "np", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "power", "type": "Any"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "np", "type": "Any"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "clip", "type": "Any"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "T", "type": "Union[float, numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 57, "nodeName": "inf", "type": "Any"}, {"lineNumber": 113, "col_offset": 62, "nodeName": "np", "type": "Any"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "df", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 159, "col_offset": 87, "nodeName": "rho_", "type": "Any"}, {"lineNumber": 190, "col_offset": 53, "nodeName": "rho_", "type": "Any"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "np", "type": "Any"}, {"lineNumber": 104, "col_offset": 57, "nodeName": "np", "type": "Any"}, {"lineNumber": 159, "col_offset": 77, "nodeName": "rho_", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "log", "type": "Any"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "p", "type": "float"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "conditional_after", "type": "Any"}, {"lineNumber": 159, "col_offset": 65, "nodeName": "lambda_", "type": "Any"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "np", "type": "Any"}]