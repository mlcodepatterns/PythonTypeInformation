[{"lineNumber": 50, "col_offset": 7, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "format_data", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "ndims", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "KMeans", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "MiniBatchKMeans", "type": "Any"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "AgglomerativeClustering", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "FeatureAgglomeration", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "Birch", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "SpectralClustering", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "HDBSCAN", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "string_types", "type": "Tuple[Type[str], Type[unicode]]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "labels_", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "formatter", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "six", "type": "module"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "model_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "model_params", "type": "Union[Dict[nothing, nothing], Any, Dict[str, Any]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "n_clusters", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "string_types", "type": "Tuple[Type[str], Type[unicode]]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "six", "type": "module"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "cluster", "type": "Any"}]