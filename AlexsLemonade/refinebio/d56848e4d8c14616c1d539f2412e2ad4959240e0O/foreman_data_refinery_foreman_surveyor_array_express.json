[{"lineNumber": 17, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "EXPERIMENTS_URL", "type": "str"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "SAMPLES_URL", "type": "str"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "ExternalSourceSurveyor", "type": "Any"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "basicConfig", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 14, "nodeName": "EXPERIMENTS_URL", "type": "str"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "INFO", "type": "int"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "experiment_request", "type": "requests.models.Response"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "parsed_json", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "experiment", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 50, "nodeName": "experiment_accession_code", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "experiment", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "samples", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 57, "nodeName": "List", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "experiment", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "download_urls", "type": "Set[Any]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "url", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "download_urls", "type": "Set[Any]"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "logging", "type": "module"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "ARRAY_EXPRESS", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "raw_format", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "AFFY_TO_PCL", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "experiment", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "parsed_json", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "experiment", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "experiment", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "parsed_json", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "parsed_json", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "organism_name", "type": "str"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "characteristic", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "sample_file", "type": "Any"}, {"lineNumber": 81, "col_offset": 62, "nodeName": "Batch", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 69, "nodeName": "experiment_accession_code", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "get_experiment_metadata", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "experiment_accession_code", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "_generate_batches", "type": "Callable[..., List[Any]]"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "samples", "type": "Any"}, {"lineNumber": 166, "col_offset": 50, "nodeName": "experiment", "type": "Dict[str, Any]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "download_url", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "batches_with_url", "type": "List[Any]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "Downloaders", "type": "Any"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "batch", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "ProcessorPipeline", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "raw_format", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "processed_format", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "NO_OP", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "NONE", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "requests", "type": "module"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "EXPERIMENTS_URL", "type": "str"}, {"lineNumber": 45, "col_offset": 60, "nodeName": "experiment_accession_code", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "warn", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 68, "nodeName": "experiment_accession_code", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "experiment", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "experiment", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "parsed_json", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "experiment", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "parsed_json", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "organism_name", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "organism_id", "type": "int"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "organism_id", "type": "Any"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "comments", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "raw_format", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "processed_format", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "get", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "self", "type": "ArrayExpressSurveyor"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "requests", "type": "module"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 164, "col_offset": 44, "nodeName": "experiment_accession_code", "type": "Any"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "self", "type": "ArrayExpressSurveyor"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "_generate_batches", "type": "Callable[..., List[Any]]"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "samples", "type": "Any"}, {"lineNumber": 171, "col_offset": 54, "nodeName": "experiment", "type": "Dict[str, Any]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "batch", "type": "Any"}, {"lineNumber": 174, "col_offset": 48, "nodeName": "batch", "type": "Any"}, {"lineNumber": 174, "col_offset": 57, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "batch", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 30, "col_offset": 44, "nodeName": "BatchKeyValue", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "batch", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "batch", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "ProcessorPipeline", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "ProcessorPipeline", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "parsed_json", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "experiment", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "organism_name", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "get_id_for_name", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "organism_name", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "sample_file", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "comments", "type": "Any"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "comment", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "comments", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "download_url", "type": "Any"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "replicate_raw", "type": "bool"}, {"lineNumber": 133, "col_offset": 63, "nodeName": "raw_format", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "objects", "type": "Any"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "id", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "SAMPLES_URL", "type": "str"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "json", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "samples", "type": "Any"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "self", "type": "ArrayExpressSurveyor"}, {"lineNumber": 176, "col_offset": 42, "nodeName": "batch", "type": "Any"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "handle_batches", "type": "Any"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "batches_with_url", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "json", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "parsed_json", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "upper", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "upper", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "experiment", "type": "Dict[Any, Any]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "Organism", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "replicate_raw", "type": "bool"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "comments", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "Batch", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "SurveyJobKeyValue", "type": "Any"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "survey_job", "type": "Any"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 176, "col_offset": 62, "nodeName": "download_url", "type": "Any"}, {"lineNumber": 176, "col_offset": 84, "nodeName": "url", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "self", "type": "ArrayExpressSurveyor"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "experiment_request", "type": "requests.models.Response"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "parsed_json", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "sample_file", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "download_url", "type": "Any"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "download_url", "type": "Any"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "raw_format", "type": "Any"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "processed_format", "type": "Any"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "organism_id", "type": "Any"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "organism_name", "type": "Any"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "self", "type": "ArrayExpressSurveyor"}, {"lineNumber": 176, "col_offset": 62, "nodeName": "batch", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "characteristic", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "characteristic", "type": "Any"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "sample_file", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "find", "type": "Any"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "comment", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "sample_file", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "experiment", "type": "Dict[Any, Any]"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "experiment", "type": "Dict[Any, Any]"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "experiment", "type": "Dict[Any, Any]"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "experiment", "type": "Dict[Any, Any]"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "experiment", "type": "Dict[Any, Any]"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "sample_file", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "comment", "type": "Any"}]