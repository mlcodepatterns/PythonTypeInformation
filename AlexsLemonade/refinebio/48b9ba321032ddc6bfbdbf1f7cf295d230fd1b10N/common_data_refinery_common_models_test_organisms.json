[{"lineNumber": 101, "col_offset": 0, "nodeName": "mocked_requests_get", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 103, "col_offset": 7, "nodeName": "url", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "ESEARCH_URL", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "id", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "return_value", "type": "unittest.mock.Mock"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "ESEARCH_RESPONSE_XML", "type": "str"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "taxonomy_id", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "new_id", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "mocked_requests_get", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "taxonomy_id", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "new_id", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "return_value", "type": "unittest.mock.Mock"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "EFETCH_RESPONSE_XML", "type": "str"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "organism_name", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "new_name", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "return_value", "type": "unittest.mock.Mock"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 226, "col_offset": 37, "nodeName": "EFETCH_NOT_FOUND_XML", "type": "str"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "return_value", "type": "unittest.mock.Mock"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 241, "col_offset": 37, "nodeName": "ESEARCH_NOT_FOUND_XML", "type": "str"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "taxonomy_id", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "new_id", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "delete", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "create", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "get_name_for_id", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assert_not_called", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "create", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "get_id_for_name", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "id", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assert_not_called", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 141, "col_offset": 32, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "return_value", "type": "unittest.mock.Mock"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "get_id_for_name", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "taxonomy_id", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "ESEARCH_URL", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "get_id_for_name", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "new_id", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assert_not_called", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "get_id_for_name", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "taxonomy_id", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "get_id_for_name", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "new_id", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assert_not_called", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 204, "col_offset": 32, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "return_value", "type": "unittest.mock.Mock"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "get_name_for_id", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "organism_name", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "EFETCH_URL", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "get_name_for_id", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "new_name", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assert_not_called", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "return_value", "type": "unittest.mock.Mock"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 240, "col_offset": 32, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "return_value", "type": "unittest.mock.Mock"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "get_id_for_name", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "taxonomy_id", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "get_id_for_name", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "new_id", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assert_not_called", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "text", "type": "str"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "ESEARCH_NOT_FOUND_XML", "type": "str"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "text", "type": "str"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "ESEARCH_RESPONSE_XML", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "objects", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "Organism", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "objects", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "Organism", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "Organism", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "Organism", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "Organism", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "Organism", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "Organism", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "Organism", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "InvalidNCBITaxonomyId", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "get_name_for_id", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "Organism", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "Organism", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "mock_get", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "all", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "Organism", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "Organism", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "ESEARCH_URL", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "ESEARCH_URL", "type": "Any"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "Organism", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "ESEARCH_URL", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "ESEARCH_URL", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "objects", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "Organism", "type": "Any"}]