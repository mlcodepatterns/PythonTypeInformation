[{"lineNumber": 17, "col_offset": 0, "nodeName": "_no_op_processor_fn", "type": "Callable[[Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "no_op_processor", "type": "Callable[[int], None]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "S3_BUCKET_NAME", "type": "Any"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "logger", "type": "Any"}, {"lineNumber": 17, "col_offset": 46, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 12, "col_offset": 17, "nodeName": "get_env_variable", "type": "Any"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "get_and_configure_logger", "type": "Any"}, {"lineNumber": 14, "col_offset": 34, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "sample", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "command_executed", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "is_ccdl", "type": "bool"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "system_version", "type": "Any"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "job_context", "type": "Dict[Any, Any]"}, {"lineNumber": 17, "col_offset": 37, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "ComputationalResult", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "save", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "computed_file", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "absolute_file_path", "type": "Any"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "source_absolute_file_path", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "filename", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "source_filename", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "info", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "result", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "job_context", "type": "Dict[Any, Any]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "run_pipeline", "type": "Any"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "job_context", "type": "Dict[Any, Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "ComputedFile", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "computed_file", "type": "Any"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "sample", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "computed_file", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "sample", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "calculate_sha1", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "calculate_size", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "computed_file", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "sync_to_s3", "type": "Any"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "S3_BUCKET_NAME", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "failure_reason", "type": "str"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "failure_reason", "type": "str"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "failure_reason", "type": "str"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "job_context", "type": "Dict[Any, Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "logger", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "utils", "type": "Any"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "job_id", "type": "int"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "start_job", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "_no_op_processor_fn", "type": "Callable[[Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "end_job", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "computed_file", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "computed_file", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "computed_file", "type": "Any"}, {"lineNumber": 43, "col_offset": 76, "nodeName": "filename", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "computed_file", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "exception", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "raw_path", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 51, "col_offset": 72, "nodeName": "name", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "job_context", "type": "Dict[Any, Any]"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "utils", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "utils", "type": "Any"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "sha1", "type": "Any"}, {"lineNumber": 43, "col_offset": 76, "nodeName": "computed_file", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "logger", "type": "Any"}, {"lineNumber": 51, "col_offset": 72, "nodeName": "file", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "job_context", "type": "Dict[Any, Any]"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "computed_file", "type": "Any"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "job_context", "type": "Dict[Any, Any]"}]