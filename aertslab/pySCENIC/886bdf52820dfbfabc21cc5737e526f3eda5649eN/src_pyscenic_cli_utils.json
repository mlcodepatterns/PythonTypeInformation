[{"lineNumber": 20, "col_offset": 0, "nodeName": "save_df_as_loom", "type": "Callable[[Any, str], None]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "load_exp_matrix_as_loom", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "load_exp_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "save_matrix", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "guess_separator", "type": "Callable[[str], str]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "load_signatures", "type": "Callable[[str], Sequence[Type[Any]]]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "save_enriched_motifs", "type": "Callable[[Any, str], None]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "ATTRIBUTE_NAME_CELL_IDENTIFIER", "type": "str"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "ATTRIBUTE_NAME_GENE", "type": "str"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "FILE_EXTENSION2SEPARATOR", "type": "Dict[str, str]"}, {"lineNumber": 62, "col_offset": 60, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "LINE_LIMIT", "type": "int"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "column_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "row_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "pd", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "extension", "type": "str"}, {"lineNumber": 62, "col_offset": 60, "nodeName": "pd", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "extension", "type": "str"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "sep", "type": "str"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "extension", "type": "str"}, {"lineNumber": 118, "col_offset": 35, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "extension", "type": "str"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "ATTRIBUTE_NAME_CELL_IDENTIFIER", "type": "str"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "ATTRIBUTE_NAME_GENE", "type": "str"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "create", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "ds", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "extension", "type": "str"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 57, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 93, "col_offset": 7, "nodeName": "extension", "type": "str"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "lines", "type": "str"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 128, "col_offset": 7, "nodeName": "extension", "type": "str"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 155, "col_offset": 7, "nodeName": "extension", "type": "str"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "regulons", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "pd", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "astype", "type": "Any"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "astype", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "lp", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "fname", "type": "str"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "values", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "row_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "column_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "connect", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "fname", "type": "str"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "fname", "type": "str"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "transpose", "type": "bool"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "T", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "df", "type": "Any"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "extension", "type": "str"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "pd", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "fname", "type": "str"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "extension", "type": "str"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "fname", "type": "str"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "readline", "type": "Callable"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "LINE_LIMIT", "type": "int"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "sep", "type": "str"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 115, "col_offset": 59, "nodeName": "fname", "type": "str"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "df2regulons", "type": "Any"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "extension", "type": "str"}, {"lineNumber": 118, "col_offset": 44, "nodeName": "Type", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "fname", "type": "str"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "df2regulons", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "df", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "extension", "type": "str"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "name2targets", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "values", "type": "Any"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "values", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "T", "type": "Any"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "lp", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "FILE_EXTENSION2SEPARATOR", "type": "Dict[str, str]"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "load_exp_matrix_as_loom", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "fname", "type": "str"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "FILE_EXTENSION2SEPARATOR", "type": "Dict[str, str]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "save_df_as_loom", "type": "Callable[[Any, str], None]"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "df", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "fname", "type": "str"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "line", "type": "str"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "lines", "type": "str"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "min", "type": "Callable"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "FILE_EXTENSION2SEPARATOR", "type": "Dict[str, str]"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "load_motifs", "type": "Any"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "fname", "type": "str"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "load_from_yaml", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 132, "col_offset": 9, "nodeName": "extension", "type": "str"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "sep", "type": "str"}, {"lineNumber": 118, "col_offset": 49, "nodeName": "GeneSignature", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "FILE_EXTENSION2SEPARATOR", "type": "Dict[str, str]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "extension", "type": "str"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "index", "type": "Any"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "columns", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "df", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "fname", "type": "str"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "FILE_EXTENSION2SEPARATOR", "type": "Dict[str, str]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 79, "col_offset": 62, "nodeName": "fname", "type": "str"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "fname", "type": "str"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "transpose", "type": "bool"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "T", "type": "Any"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "df", "type": "Any"}, {"lineNumber": 94, "col_offset": 54, "nodeName": "FILE_EXTENSION2SEPARATOR", "type": "Dict[str, str]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 98, "col_offset": 62, "nodeName": "fname", "type": "str"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "sep", "type": "str"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "count_columns", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "sep", "type": "str"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "fname", "type": "str"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "guess_separator", "type": "Callable[[str], str]"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "fname", "type": "str"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "from_gmt", "type": "Any"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "fname", "type": "str"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "extension", "type": "str"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "fname", "type": "str"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "FILE_EXTENSION2SEPARATOR", "type": "Dict[str, str]"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "r", "type": "Any"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 160, "col_offset": 67, "nodeName": "r", "type": "Any"}, {"lineNumber": 160, "col_offset": 72, "nodeName": "regulons", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "fname", "type": "str"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "regulons", "type": "Any"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "fname", "type": "str"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "extension", "type": "str"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "df", "type": "Any"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "df", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "ds", "type": "Any"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "ra", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "ca", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 74, "col_offset": 61, "nodeName": "extension", "type": "str"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 94, "col_offset": 79, "nodeName": "extension", "type": "str"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "line", "type": "str"}, {"lineNumber": 109, "col_offset": 95, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 129, "col_offset": 50, "nodeName": "FILE_EXTENSION2SEPARATOR", "type": "Dict[str, str]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "GeneSignature", "type": "Any"}, {"lineNumber": 135, "col_offset": 50, "nodeName": "sep", "type": "str"}, {"lineNumber": 136, "col_offset": 49, "nodeName": "sep", "type": "str"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 156, "col_offset": 54, "nodeName": "extension", "type": "str"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "keys", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "name2targets", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "pickle", "type": "module"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "to_gmt", "type": "Any"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "fname", "type": "str"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "regulons", "type": "Any"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "extension", "type": "str"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "ds", "type": "Any"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "ATTRIBUTE_NAME_GENE", "type": "str"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "ds", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "ATTRIBUTE_NAME_CELL_IDENTIFIER", "type": "str"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 109, "col_offset": 62, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 109, "col_offset": 95, "nodeName": "line", "type": "str"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 129, "col_offset": 75, "nodeName": "extension", "type": "str"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "fname", "type": "str"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 141, "col_offset": 62, "nodeName": "fname", "type": "str"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "gene2weight", "type": "Any"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "json", "type": "module"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "GeneSignature", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "save_to_yaml", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "regulons", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "fname", "type": "str"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "pickle", "type": "module"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "r", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 170, "col_offset": 66, "nodeName": "fname", "type": "str"}, {"lineNumber": 109, "col_offset": 62, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 109, "col_offset": 62, "nodeName": "line", "type": "str"}]