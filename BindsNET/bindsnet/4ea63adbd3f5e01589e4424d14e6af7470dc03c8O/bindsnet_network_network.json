[{"lineNumber": 12, "col_offset": 0, "nodeName": "load", "type": "Callable[..., Network]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "Module", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "network", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "network", "type": "Any"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 12, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 12, "col_offset": 62, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "load", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "learning", "type": "bool"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "learning", "type": "bool"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "dt", "type": "float"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "dt", "type": "float"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "connections", "type": "Dict[Tuple[str, str], Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "monitors", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "layer", "type": "Any"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "connection", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "dt", "type": "float"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "dt", "type": "float"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "monitor", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "network", "type": "Network"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "self", "type": "Network"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "dt", "type": "float"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "dt", "type": "float"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "virtual_file", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "inputs", "type": "Dict[nothing, Any]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "c", "type": "nothing"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "connections", "type": "Dict[Tuple[str, str], Any]"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "inputs", "type": "Dict[nothing, Any]"}, {"lineNumber": 207, "col_offset": 54, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "clamps", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "unclamps", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "masks", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "injects_v", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "timesteps", "type": "int"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "t", "type": "int"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "c", "type": "Tuple[str, str]"}, {"lineNumber": 393, "col_offset": 17, "nodeName": "connections", "type": "Dict[Tuple[str, str], Any]"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "layer", "type": "str"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "connection", "type": "Tuple[str, str]"}, {"lineNumber": 404, "col_offset": 26, "nodeName": "connections", "type": "Dict[Tuple[str, str], Any]"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "monitor", "type": "str"}, {"lineNumber": 407, "col_offset": 23, "nodeName": "monitors", "type": "Dict[str, Any]"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "learning", "type": "bool"}, {"lineNumber": 419, "col_offset": 24, "nodeName": "mode", "type": "bool"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "open", "type": "Callable"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "file_name", "type": "str"}, {"lineNumber": 22, "col_offset": 61, "nodeName": "map_location", "type": "str"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "learning", "type": "bool"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "network", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "learning", "type": "bool"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "reward_fn", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "reward_fn", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "reward_fn", "type": "None"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "Nodes", "type": "Any"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "name", "type": "str"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "layer", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "learning", "type": "bool"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "compute_decays", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "dt", "type": "float"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "set_batch_size", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "AbstractConnection", "type": "Any"}, {"lineNumber": 132, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 132, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "connections", "type": "Dict[Tuple[str, str], Any]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 143, "col_offset": 50, "nodeName": "connection", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "connection", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "self", "type": "Network"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "learning", "type": "bool"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "AbstractMonitor", "type": "Any"}, {"lineNumber": 148, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "monitors", "type": "Dict[str, Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "monitor", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "monitor", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "self", "type": "Network"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "self", "type": "Network"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "SpooledTemporaryFile", "type": "Type[tempfile.SpooledTemporaryFile[Any]]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "self", "type": "Network"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "virtual_file", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "load", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "virtual_file", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 207, "col_offset": 34, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "layers", "type": "Iterable[Any]"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "self", "type": "Network"}, {"lineNumber": 238, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "get", "type": "Callable"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "get", "type": "Callable"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "reward_fn", "type": "Any"}, {"lineNumber": 308, "col_offset": 11, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 321, "col_offset": 23, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "one_step", "type": "Any"}, {"lineNumber": 342, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 342, "col_offset": 23, "nodeName": "timesteps", "type": "int"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "l", "type": "str"}, {"lineNumber": 343, "col_offset": 21, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "c", "type": "Tuple[str, str]"}, {"lineNumber": 380, "col_offset": 21, "nodeName": "connections", "type": "Dict[Tuple[str, str], Any]"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "m", "type": "str"}, {"lineNumber": 389, "col_offset": 21, "nodeName": "monitors", "type": "Dict[str, Any]"}, {"lineNumber": 393, "col_offset": 17, "nodeName": "self", "type": "Network"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "self", "type": "Network"}, {"lineNumber": 404, "col_offset": 26, "nodeName": "self", "type": "Network"}, {"lineNumber": 407, "col_offset": 23, "nodeName": "self", "type": "Network"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "train", "type": "Any"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "mode", "type": "bool"}, {"lineNumber": 23, "col_offset": 46, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 23, "col_offset": 51, "nodeName": "network", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "Network"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "reward_fn", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "Network"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "name", "type": "str"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "self", "type": "Network"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "self", "type": "Network"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "self", "type": "Network"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "target", "type": "str"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "connection", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "self", "type": "Network"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "Network"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "name", "type": "str"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "open", "type": "Callable"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "file_name", "type": "str"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "virtual_file", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "layers", "type": "Iterable[Any]"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "source", "type": "nothing"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "source", "type": "nothing"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "target", "type": "nothing"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "target", "type": "nothing"}, {"lineNumber": 207, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 207, "col_offset": 64, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "self", "type": "Network"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "compute", "type": "Any"}, {"lineNumber": 335, "col_offset": 24, "nodeName": "time", "type": "int"}, {"lineNumber": 335, "col_offset": 31, "nodeName": "dt", "type": "float"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 343, "col_offset": 21, "nodeName": "self", "type": "Network"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "clamp", "type": "Optional[Any]"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "unclamp", "type": "Optional[Any]"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "inject_v", "type": "Optional[Any]"}, {"lineNumber": 380, "col_offset": 21, "nodeName": "self", "type": "Network"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 389, "col_offset": 21, "nodeName": "self", "type": "Network"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "reset_state_variables", "type": "Any"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "reset_state_variables", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "reset_state_variables", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "source", "type": "str"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "target", "type": "str"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "source", "type": "str"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "c", "type": "nothing"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "inputs", "type": "Dict[nothing, Any]"}, {"lineNumber": 233, "col_offset": 32, "nodeName": "compute", "type": "nothing"}, {"lineNumber": 233, "col_offset": 60, "nodeName": "s", "type": "nothing"}, {"lineNumber": 207, "col_offset": 64, "nodeName": "torch", "type": "Any"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "reward_fn", "type": "Any"}, {"lineNumber": 305, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 323, "col_offset": 42, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 326, "col_offset": 24, "nodeName": "l", "type": "str"}, {"lineNumber": 326, "col_offset": 29, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 329, "col_offset": 24, "nodeName": "m", "type": "str"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "monitors", "type": "Dict[str, Any]"}, {"lineNumber": 335, "col_offset": 31, "nodeName": "self", "type": "Network"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 339, "col_offset": 26, "nodeName": "_get_inputs", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 345, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 345, "col_offset": 46, "nodeName": "AbstractInput", "type": "Any"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "one_step", "type": "Any"}, {"lineNumber": 356, "col_offset": 24, "nodeName": "get", "type": "Union[Any, Callable]"}, {"lineNumber": 356, "col_offset": 35, "nodeName": "l", "type": "str"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "clamp", "type": "Optional[Any]"}, {"lineNumber": 364, "col_offset": 26, "nodeName": "get", "type": "Union[Any, Callable]"}, {"lineNumber": 364, "col_offset": 39, "nodeName": "l", "type": "str"}, {"lineNumber": 365, "col_offset": 19, "nodeName": "unclamp", "type": "Optional[Any]"}, {"lineNumber": 372, "col_offset": 27, "nodeName": "get", "type": "Union[Any, Callable]"}, {"lineNumber": 372, "col_offset": 41, "nodeName": "l", "type": "str"}, {"lineNumber": 373, "col_offset": 19, "nodeName": "inject_v", "type": "Optional[Any]"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "update", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 386, "col_offset": 26, "nodeName": "_get_inputs", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "record", "type": "Any"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "Type", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "connections", "type": "Dict[Tuple[str, str], Any]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "connections", "type": "Dict[Tuple[str, str], Any]"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "inputs", "type": "Dict[nothing, Any]"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "inputs", "type": "Dict[nothing, Any]"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 233, "col_offset": 60, "nodeName": "source", "type": "nothing"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "self", "type": "Network"}, {"lineNumber": 311, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 314, "col_offset": 20, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 314, "col_offset": 34, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "size", "type": "Any"}, {"lineNumber": 323, "col_offset": 42, "nodeName": "self", "type": "Network"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "self", "type": "Network"}, {"lineNumber": 324, "col_offset": 38, "nodeName": "size", "type": "Any"}, {"lineNumber": 326, "col_offset": 29, "nodeName": "self", "type": "Network"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "self", "type": "Network"}, {"lineNumber": 339, "col_offset": 26, "nodeName": "self", "type": "Network"}, {"lineNumber": 345, "col_offset": 30, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 347, "col_offset": 20, "nodeName": "forward", "type": "Any"}, {"lineNumber": 353, "col_offset": 20, "nodeName": "forward", "type": "Any"}, {"lineNumber": 356, "col_offset": 24, "nodeName": "clamps", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 364, "col_offset": 26, "nodeName": "unclamps", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 372, "col_offset": 27, "nodeName": "injects_v", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 375, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 375, "col_offset": 44, "nodeName": "inject_v", "type": "Optional[Any]"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 382, "col_offset": 54, "nodeName": "learning", "type": "bool"}, {"lineNumber": 382, "col_offset": 71, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 386, "col_offset": 26, "nodeName": "self", "type": "Network"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "connections", "type": "Dict[Tuple[str, str], Any]"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "connections", "type": "Dict[Tuple[str, str], Any]"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "monitors", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "AbstractReward", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "self", "type": "Network"}, {"lineNumber": 224, "col_offset": 42, "nodeName": "c", "type": "nothing"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "self", "type": "Network"}, {"lineNumber": 225, "col_offset": 42, "nodeName": "c", "type": "nothing"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "c", "type": "nothing"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "self", "type": "Network"}, {"lineNumber": 229, "col_offset": 42, "nodeName": "shape", "type": "nothing"}, {"lineNumber": 229, "col_offset": 63, "nodeName": "device", "type": "nothing"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "c", "type": "nothing"}, {"lineNumber": 233, "col_offset": 32, "nodeName": "connections", "type": "Dict[Tuple[str, str], Any]"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 311, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 314, "col_offset": 27, "nodeName": "key", "type": "str"}, {"lineNumber": 315, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 319, "col_offset": 20, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 319, "col_offset": 34, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "set_batch_size", "type": "Any"}, {"lineNumber": 327, "col_offset": 54, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "reset_state_variables", "type": "Any"}, {"lineNumber": 345, "col_offset": 30, "nodeName": "self", "type": "Network"}, {"lineNumber": 345, "col_offset": 42, "nodeName": "l", "type": "str"}, {"lineNumber": 351, "col_offset": 24, "nodeName": "update", "type": "Callable"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "ndimension", "type": "Any"}, {"lineNumber": 359, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 366, "col_offset": 23, "nodeName": "ndimension", "type": "Any"}, {"lineNumber": 367, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 374, "col_offset": 23, "nodeName": "ndimension", "type": "Any"}, {"lineNumber": 377, "col_offset": 44, "nodeName": "inject_v", "type": "Optional[Any]"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "connections", "type": "Dict[Tuple[str, str], Any]"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "get", "type": "Union[Any, Callable]"}, {"lineNumber": 382, "col_offset": 35, "nodeName": "c", "type": "Tuple[str, str]"}, {"lineNumber": 382, "col_offset": 54, "nodeName": "self", "type": "Network"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "monitors", "type": "Dict[str, Any]"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "self", "type": "Network"}, {"lineNumber": 394, "col_offset": 29, "nodeName": "c", "type": "Tuple[str, str]"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "self", "type": "Network"}, {"lineNumber": 402, "col_offset": 24, "nodeName": "layer", "type": "str"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "self", "type": "Network"}, {"lineNumber": 405, "col_offset": 29, "nodeName": "connection", "type": "Tuple[str, str]"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "self", "type": "Network"}, {"lineNumber": 408, "col_offset": 26, "nodeName": "monitor", "type": "str"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "c", "type": "nothing"}, {"lineNumber": 229, "col_offset": 42, "nodeName": "target", "type": "nothing"}, {"lineNumber": 229, "col_offset": 63, "nodeName": "s", "type": "nothing"}, {"lineNumber": 233, "col_offset": 32, "nodeName": "self", "type": "Network"}, {"lineNumber": 233, "col_offset": 49, "nodeName": "c", "type": "nothing"}, {"lineNumber": 314, "col_offset": 34, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "key", "type": "str"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 324, "col_offset": 38, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 327, "col_offset": 54, "nodeName": "self", "type": "Network"}, {"lineNumber": 347, "col_offset": 20, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 351, "col_offset": 24, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 351, "col_offset": 38, "nodeName": "_get_inputs", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 353, "col_offset": 20, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 353, "col_offset": 45, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "clamp", "type": "Optional[Any]"}, {"lineNumber": 366, "col_offset": 23, "nodeName": "unclamp", "type": "Optional[Any]"}, {"lineNumber": 367, "col_offset": 41, "nodeName": "unclamp", "type": "Optional[Any]"}, {"lineNumber": 374, "col_offset": 23, "nodeName": "inject_v", "type": "Optional[Any]"}, {"lineNumber": 375, "col_offset": 24, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 377, "col_offset": 53, "nodeName": "t", "type": "int"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "self", "type": "Network"}, {"lineNumber": 381, "col_offset": 33, "nodeName": "c", "type": "Tuple[str, str]"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "masks", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "self", "type": "Network"}, {"lineNumber": 390, "col_offset": 30, "nodeName": "m", "type": "str"}, {"lineNumber": 229, "col_offset": 63, "nodeName": "target", "type": "nothing"}, {"lineNumber": 311, "col_offset": 23, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 319, "col_offset": 34, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 323, "col_offset": 26, "nodeName": "key", "type": "str"}, {"lineNumber": 324, "col_offset": 45, "nodeName": "key", "type": "str"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "monitors", "type": "Dict[str, Any]"}, {"lineNumber": 347, "col_offset": 20, "nodeName": "self", "type": "Network"}, {"lineNumber": 347, "col_offset": 32, "nodeName": "l", "type": "str"}, {"lineNumber": 347, "col_offset": 45, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 347, "col_offset": 55, "nodeName": "t", "type": "int"}, {"lineNumber": 351, "col_offset": 38, "nodeName": "self", "type": "Network"}, {"lineNumber": 353, "col_offset": 20, "nodeName": "self", "type": "Network"}, {"lineNumber": 353, "col_offset": 32, "nodeName": "l", "type": "str"}, {"lineNumber": 353, "col_offset": 52, "nodeName": "l", "type": "str"}, {"lineNumber": 359, "col_offset": 24, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 359, "col_offset": 44, "nodeName": "clamp", "type": "Optional[Any]"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 367, "col_offset": 24, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "layers", "type": "Dict[str, Any]"}, {"lineNumber": 369, "col_offset": 41, "nodeName": "unclamp", "type": "Optional[Any]"}, {"lineNumber": 375, "col_offset": 24, "nodeName": "self", "type": "Network"}, {"lineNumber": 375, "col_offset": 36, "nodeName": "l", "type": "str"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "self", "type": "Network"}, {"lineNumber": 377, "col_offset": 36, "nodeName": "l", "type": "str"}, {"lineNumber": 311, "col_offset": 30, "nodeName": "key", "type": "str"}, {"lineNumber": 314, "col_offset": 34, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 319, "col_offset": 41, "nodeName": "key", "type": "str"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "self", "type": "Network"}, {"lineNumber": 327, "col_offset": 36, "nodeName": "l", "type": "str"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "self", "type": "Network"}, {"lineNumber": 330, "col_offset": 38, "nodeName": "m", "type": "str"}, {"lineNumber": 347, "col_offset": 52, "nodeName": "l", "type": "str"}, {"lineNumber": 351, "col_offset": 63, "nodeName": "l", "type": "str"}, {"lineNumber": 359, "col_offset": 24, "nodeName": "self", "type": "Network"}, {"lineNumber": 359, "col_offset": 36, "nodeName": "l", "type": "str"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "self", "type": "Network"}, {"lineNumber": 361, "col_offset": 36, "nodeName": "l", "type": "str"}, {"lineNumber": 361, "col_offset": 44, "nodeName": "clamp", "type": "Optional[Any]"}, {"lineNumber": 367, "col_offset": 24, "nodeName": "self", "type": "Network"}, {"lineNumber": 367, "col_offset": 36, "nodeName": "l", "type": "str"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "self", "type": "Network"}, {"lineNumber": 369, "col_offset": 36, "nodeName": "l", "type": "str"}, {"lineNumber": 369, "col_offset": 49, "nodeName": "t", "type": "int"}, {"lineNumber": 314, "col_offset": 41, "nodeName": "key", "type": "str"}, {"lineNumber": 315, "col_offset": 32, "nodeName": "key", "type": "str"}, {"lineNumber": 361, "col_offset": 50, "nodeName": "t", "type": "int"}]