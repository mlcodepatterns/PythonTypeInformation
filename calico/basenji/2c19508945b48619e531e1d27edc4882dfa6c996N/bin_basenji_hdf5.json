[{"lineNumber": 28, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 156, "col_offset": 0, "nodeName": "batch_end", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "bigwig_batch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 214, "col_offset": 0, "nodeName": "segments_1hot", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "usage", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "chrom_segments", "type": "Dict[Any, List[Tuple[int, Any]]]"}, {"lineNumber": 54, "col_offset": 7, "nodeName": "gaps_file", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "segments", "type": "List[Tuple[Any, int, Any]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "chrom_segments", "type": "Dict[Any, List[Tuple[int, Any]]]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "seqs_1hot", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "model", "type": "basenji.autoencoder.AE"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "target_wigs", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "num_targets", "type": "int"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "bstart", "type": "int"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "targets_latent", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "total_n", "type": "int"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "valid_n", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "test_n", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "train_n", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "order", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "seqs_1hot", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "targets_latent", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "hdf5_out", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "vi", "type": "Any"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "train_n", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "ti", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "bi", "type": "int"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "bstart", "type": "int"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "blength", "type": "int"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "bend", "type": "int"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "bi", "type": "int"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "bend", "type": "int"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "wig_in", "type": "Any"}, {"lineNumber": 195, "col_offset": 37, "nodeName": "segments", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "fasta", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "seqs_1hot", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 37, "nodeName": "segments", "type": "Any"}, {"lineNumber": 251, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "OptionParser", "type": "Type[optparse.OptionParser]"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "usage", "type": "str"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "add_option", "type": "Callable"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "add_option", "type": "Callable"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "add_option", "type": "Callable"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "add_option", "type": "Callable"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "add_option", "type": "Callable"}, {"lineNumber": 36, "col_offset": 5, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "fasta_file", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "sample_wigs_file", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "params_file", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "model_file", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "hdf5_file", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "load_chromosomes", "type": "Callable[[Any], Dict[Any, List[Tuple[int, Any]]]]"}, {"lineNumber": 51, "col_offset": 53, "nodeName": "fasta_file", "type": "Any"}, {"lineNumber": 54, "col_offset": 7, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "chrom_segments", "type": "Dict[Any, List[Tuple[int, Any]]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "segments", "type": "List[Tuple[Any, int, Any]]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "segments_1hot", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "segments", "type": "List[Tuple[Any, int, Any]]"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 66, "col_offset": 60, "nodeName": "fasta_file", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 10, "nodeName": "read_job_params", "type": "Callable[[Any], Dict[str, Union[float, int, str, List[Union[float, int, str]]]]]"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "params_file", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "AE", "type": "Type[basenji.autoencoder.AE]"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "open", "type": "Callable"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "sample_wigs_file", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "a", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "target_wigs", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "Pool", "type": "Callable[..., multiprocessing.pool.Pool]"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "processes", "type": "Any"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "bstart", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "bend", "type": "int"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "bwr_params", "type": "List[Tuple[str, List[Tuple[Any, int, Any]], Any]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "wig_targets", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "wig_targets", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "targets_wig", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "batcher", "type": "basenji.batcher.BatcherT"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "bstart", "type": "int"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "bend", "type": "int"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "targets_latent", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "valid_pct", "type": "Any"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "total_n", "type": "int"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "test_pct", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "total_n", "type": "int"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "test_n", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "total_n", "type": "int"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "seqs_1hot", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "targets_latent", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "File", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "hdf5_file", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "create_dataset", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "create_dataset", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "create_dataset", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "create_dataset", "type": "Any"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "train_n", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "valid_n", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "create_dataset", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "create_dataset", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "blength", "type": "Union[Any, int]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "bi", "type": "int"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "open", "type": "Any"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "wig_file", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "seg_start", "type": "Any"}, {"lineNumber": 195, "col_offset": 26, "nodeName": "seg_end", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "seg_values", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "seq_start", "type": "int"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "seq_end", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "Fastafile", "type": "Any"}, {"lineNumber": 227, "col_offset": 28, "nodeName": "fasta_file", "type": "List[Tuple[Any, int, Any]]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "seg_start", "type": "Any"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "seg_end", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "seg_seq", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "seq_start", "type": "int"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "seq_end", "type": "Any"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "seqs_1hot", "type": "List[Any]"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "error", "type": "Callable[[str], None]"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "genome", "type": "module"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "split_contigs", "type": "Callable"}, {"lineNumber": 55, "col_offset": 54, "nodeName": "chrom_segments", "type": "Dict[Any, List[Tuple[int, Any]]]"}, {"lineNumber": 55, "col_offset": 70, "nodeName": "gaps_file", "type": "Any"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 74, "col_offset": 10, "nodeName": "dna_io", "type": "module"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "targets", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "autoencoder", "type": "module"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "target_wigs", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "a", "type": "List[str]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "segments", "type": "List[Tuple[Any, int, Any]]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "batch_end", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "segments", "type": "List[Tuple[Any, int, Any]]"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "bstart", "type": "int"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "starmap", "type": "Callable"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "bigwig_batch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "bwr_params", "type": "List[Tuple[str, List[Tuple[Any, int, Any]], Any]]"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "wig_targets", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "wig_targets", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "BatcherT", "type": "Type[basenji.batcher.BatcherT]"}, {"lineNumber": 111, "col_offset": 43, "nodeName": "targets_wig", "type": "Any"}, {"lineNumber": 111, "col_offset": 56, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "seqs_1hot", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "total_n", "type": "int"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "valid_n", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "order", "type": "Any"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "order", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "h5py", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "hdf5_out", "type": "Any"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "seqs_1hot", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "hdf5_out", "type": "Any"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "targets_latent", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "hdf5_out", "type": "Any"}, {"lineNumber": 144, "col_offset": 40, "nodeName": "seqs_1hot", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "hdf5_out", "type": "Any"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "targets_latent", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "hdf5_out", "type": "Any"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "seqs_1hot", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "hdf5_out", "type": "Any"}, {"lineNumber": 150, "col_offset": 40, "nodeName": "targets_latent", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "hdf5_out", "type": "Any"}, {"lineNumber": 163, "col_offset": 10, "nodeName": "bi", "type": "int"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "blength", "type": "int"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "batch_max", "type": "int"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "seg_start", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "seg_end", "type": "Any"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "segments", "type": "List[Tuple[Any, int, Any]]"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "seg_end", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "seg_start", "type": "Any"}, {"lineNumber": 169, "col_offset": 7, "nodeName": "bstart", "type": "int"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "bend", "type": "int"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "bend", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "exit", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "pyBigWig", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "values", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 197, "col_offset": 42, "nodeName": "seg_start", "type": "Any"}, {"lineNumber": 197, "col_offset": 53, "nodeName": "seg_end", "type": "Any"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "seq_start", "type": "int"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 202, "col_offset": 14, "nodeName": "seq_end", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "seq_start", "type": "Any"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "batch_length", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "seq_end", "type": "Any"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "batch_length", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "pysam", "type": "Any"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "fetch", "type": "Any"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 234, "col_offset": 37, "nodeName": "seg_start", "type": "Any"}, {"lineNumber": 234, "col_offset": 48, "nodeName": "seg_end", "type": "Any"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "seq_start", "type": "int"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 239, "col_offset": 14, "nodeName": "seq_end", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "seg_start", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "batch_length", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "seg_end", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "batch_length", "type": "Any"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "basenji", "type": "module"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "genome", "type": "module"}, {"lineNumber": 55, "col_offset": 70, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "seg_start", "type": "int"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "seg_end", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 74, "col_offset": 10, "nodeName": "basenji", "type": "module"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "basenji", "type": "module"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "wig_file", "type": "str"}, {"lineNumber": 101, "col_offset": 56, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 101, "col_offset": 80, "nodeName": "wig_file", "type": "str"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "batcher", "type": "module"}, {"lineNumber": 111, "col_offset": 56, "nodeName": "model", "type": "basenji.autoencoder.AE"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "targets_latent", "type": "Any"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "latent", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "sess", "type": "Any"}, {"lineNumber": 112, "col_offset": 49, "nodeName": "batcher", "type": "basenji.batcher.BatcherT"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 51, "nodeName": "train_n", "type": "Any"}, {"lineNumber": 140, "col_offset": 57, "nodeName": "train_n", "type": "Any"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "vi", "type": "Any"}, {"lineNumber": 145, "col_offset": 56, "nodeName": "vi", "type": "Any"}, {"lineNumber": 149, "col_offset": 49, "nodeName": "ti", "type": "Any"}, {"lineNumber": 150, "col_offset": 55, "nodeName": "ti", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "segments", "type": "List[Tuple[Any, int, Any]]"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "bi", "type": "int"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "segments", "type": "List[Tuple[Any, int, Any]]"}, {"lineNumber": 170, "col_offset": 73, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "wig_in", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "seg_values", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "fasta", "type": "Any"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "seg_seq", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "basenji", "type": "module"}, {"lineNumber": 60, "col_offset": 53, "nodeName": "seg_start", "type": "int"}, {"lineNumber": 60, "col_offset": 64, "nodeName": "seg_end", "type": "Any"}, {"lineNumber": 60, "col_offset": 75, "nodeName": "chrom_segments", "type": "Dict[Any, List[Tuple[int, Any]]]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "seqs_1hot", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "a", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "segments", "type": "List[Tuple[Any, int, Any]]"}, {"lineNumber": 101, "col_offset": 56, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 101, "col_offset": 92, "nodeName": "values", "type": "Callable"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "basenji", "type": "module"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "model", "type": "basenji.autoencoder.AE"}, {"lineNumber": 144, "col_offset": 53, "nodeName": "vi", "type": "Any"}, {"lineNumber": 144, "col_offset": 56, "nodeName": "valid_n", "type": "Any"}, {"lineNumber": 145, "col_offset": 59, "nodeName": "vi", "type": "Any"}, {"lineNumber": 145, "col_offset": 62, "nodeName": "valid_n", "type": "Any"}, {"lineNumber": 170, "col_offset": 73, "nodeName": "sys", "type": "module"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "seg_values", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "seqs_1hot", "type": "List[Any]"}, {"lineNumber": 241, "col_offset": 29, "nodeName": "dna_1hot", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 90, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "bstart", "type": "int"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "bend", "type": "int"}, {"lineNumber": 101, "col_offset": 92, "nodeName": "target_wigs", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 204, "col_offset": 38, "nodeName": "seq_start", "type": "int"}, {"lineNumber": 204, "col_offset": 48, "nodeName": "seq_end", "type": "Any"}, {"lineNumber": 241, "col_offset": 29, "nodeName": "dna_io", "type": "module"}, {"lineNumber": 241, "col_offset": 53, "nodeName": "seg_seq", "type": "Any"}, {"lineNumber": 241, "col_offset": 29, "nodeName": "basenji", "type": "module"}, {"lineNumber": 241, "col_offset": 61, "nodeName": "seq_start", "type": "int"}, {"lineNumber": 241, "col_offset": 71, "nodeName": "seq_end", "type": "Any"}]