[{"lineNumber": 17, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "usage", "type": "str"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "segments", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "wig_in", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "segments", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 82, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "OptionParser", "type": "Type[optparse.OptionParser]"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "usage", "type": "str"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "add_option", "type": "Callable"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "add_option", "type": "Callable"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "add_option", "type": "Callable"}, {"lineNumber": 23, "col_offset": 5, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "wig_file", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "seg_bed_file", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "out_file", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "open", "type": "Callable"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "seg_bed_file", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "a", "type": "List[str]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "chrom", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "seg_start", "type": "int"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "seg_end", "type": "int"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "open", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "wig_file", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "chrom", "type": "str"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "seg_start", "type": "int"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "seg_end", "type": "int"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "seg_values", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "bstart", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "bend", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "save", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "out_file", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 25, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "error", "type": "Callable[[str], None]"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "a", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "pyBigWig", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "seg_values", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "nan_to_num", "type": "Any"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "seg_values", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "bstart", "type": "int"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "bend", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "bstart", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "stride", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "bend", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "stride", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "a", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "a", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "segments", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "chrom", "type": "str"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "seg_start", "type": "int"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "seg_end", "type": "int"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "seg_values", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "seg_values", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "pool_width", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "sv", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "sv", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "sv", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "values", "type": "Any"}, {"lineNumber": 50, "col_offset": 48, "nodeName": "chrom", "type": "str"}, {"lineNumber": 50, "col_offset": 55, "nodeName": "seg_start", "type": "int"}, {"lineNumber": 50, "col_offset": 66, "nodeName": "seg_end", "type": "int"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "seg_values", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "sum", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "wig_in", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "seg_end", "type": "int"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "seg_start", "type": "int"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "bstart", "type": "int"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "bend", "type": "Any"}, {"lineNumber": 52, "col_offset": 79, "nodeName": "wig_file", "type": "Any"}, {"lineNumber": 52, "col_offset": 88, "nodeName": "chrom", "type": "str"}, {"lineNumber": 52, "col_offset": 94, "nodeName": "seg_start", "type": "int"}, {"lineNumber": 52, "col_offset": 104, "nodeName": "seg_end", "type": "int"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 66, "col_offset": 94, "nodeName": "pool_width", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "seg_values", "type": "Any"}, {"lineNumber": 66, "col_offset": 54, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 66, "col_offset": 74, "nodeName": "pool_width", "type": "Any"}, {"lineNumber": 66, "col_offset": 94, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "bstart", "type": "int"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "bend", "type": "Any"}, {"lineNumber": 66, "col_offset": 54, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 66, "col_offset": 74, "nodeName": "options", "type": "optparse.Values"}]