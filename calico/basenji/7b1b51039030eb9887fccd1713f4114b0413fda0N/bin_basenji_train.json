[{"lineNumber": 23, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 116, "col_offset": 0, "nodeName": "read_job_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "usage", "type": "str"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "data_open", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "train_seqs", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "train_targets", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "valid_seqs", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "valid_targets", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "t0", "type": "float"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "dr", "type": "basenji.rnn.RNN"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "batcher_train", "type": "basenji.batcher.Batcher"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "batcher_valid", "type": "basenji.batcher.Batcher"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "saver", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "OptionParser", "type": "Type[optparse.OptionParser]"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "usage", "type": "str"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "add_option", "type": "Callable"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "add_option", "type": "Callable"}, {"lineNumber": 28, "col_offset": 5, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 33, "col_offset": 5, "nodeName": "data_file", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "File", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "data_file", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "data_open", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "data_open", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "data_open", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "data_open", "type": "Any"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "read_job_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "job", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "RNN", "type": "Type[basenji.rnn.RNN]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "Batcher", "type": "Type[basenji.batcher.Batcher]"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "train_seqs", "type": "Any"}, {"lineNumber": 64, "col_offset": 56, "nodeName": "train_targets", "type": "Any"}, {"lineNumber": 64, "col_offset": 71, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "Batcher", "type": "Type[basenji.batcher.Batcher]"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "valid_seqs", "type": "Any"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "valid_targets", "type": "Any"}, {"lineNumber": 65, "col_offset": 71, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "Saver", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "sess", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "t0", "type": "float"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "best_r2", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "early_stop_i", "type": "int"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "epoch", "type": "int"}, {"lineNumber": 121, "col_offset": 7, "nodeName": "job_file", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 5, "nodeName": "error", "type": "Callable[[str], None]"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "h5py", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "options", "type": "optparse.Values"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "train_seqs", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "train_seqs", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "train_targets", "type": "Any"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "time", "type": "module"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "rnn", "type": "module"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "dr", "type": "basenji.rnn.RNN"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "batcher", "type": "module"}, {"lineNumber": 64, "col_offset": 71, "nodeName": "dr", "type": "basenji.rnn.RNN"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "batcher", "type": "module"}, {"lineNumber": 65, "col_offset": 71, "nodeName": "dr", "type": "basenji.rnn.RNN"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "Session", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "open", "type": "Callable"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "job_file", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 31, "col_offset": 5, "nodeName": "parser", "type": "optparse.OptionParser"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "basenji", "type": "module"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "t0", "type": "float"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "basenji", "type": "module"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "basenji", "type": "module"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "time", "type": "module"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "initialize_all_variables", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "early_stop_i", "type": "int"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "t0", "type": "float"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "train_loss", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "best_str", "type": "str"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "et", "type": "float"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "param", "type": "str"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "val", "type": "str"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "val", "type": "int"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "val", "type": "float"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "param", "type": "str"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "val", "type": "Union[int, float]"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 75, "col_offset": 54, "nodeName": "t0", "type": "float"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "get", "type": "Callable"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "train_epoch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "sess", "type": "Any"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "batcher_train", "type": "basenji.batcher.Batcher"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "valid_loss", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "valid_r2", "type": "Any"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "test", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "sess", "type": "Any"}, {"lineNumber": 89, "col_offset": 53, "nodeName": "batcher_valid", "type": "basenji.batcher.Batcher"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "valid_r2", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "best_r2", "type": "int"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "best_r2", "type": "Any"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "valid_r2", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "best_str", "type": "str"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "early_stop_i", "type": "int"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "early_stop_i", "type": "int"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "t0", "type": "float"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "et", "type": "float"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "time_str", "type": "str"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "line", "type": "str"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "find", "type": "Callable[..., int]"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "val", "type": "str"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "val", "type": "str"}, {"lineNumber": 133, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 137, "col_offset": 34, "nodeName": "val", "type": "Union[int, float]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "time", "type": "module"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "time", "type": "module"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "dr", "type": "basenji.rnn.RNN"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "dr", "type": "basenji.rnn.RNN"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "et", "type": "float"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "et", "type": "float"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "time_str", "type": "str"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "time_str", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "val", "type": "str"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "param", "type": "str"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "time", "type": "module"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "time", "type": "module"}, {"lineNumber": 109, "col_offset": 114, "nodeName": "train_loss", "type": "Any"}, {"lineNumber": 109, "col_offset": 126, "nodeName": "valid_loss", "type": "Any"}, {"lineNumber": 109, "col_offset": 138, "nodeName": "valid_r2", "type": "Any"}, {"lineNumber": 109, "col_offset": 148, "nodeName": "time_str", "type": "Any"}, {"lineNumber": 109, "col_offset": 158, "nodeName": "best_str", "type": "str"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "param", "type": "str"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "job", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "et", "type": "float"}, {"lineNumber": 106, "col_offset": 42, "nodeName": "et", "type": "float"}, {"lineNumber": 109, "col_offset": 105, "nodeName": "epoch", "type": "int"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "param", "type": "str"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "param", "type": "str"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "param", "type": "str"}]