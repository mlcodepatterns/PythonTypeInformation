[{"lineNumber": 4, "col_offset": 0, "nodeName": "convert_codec", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "image_processor", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "convert_image_processor", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "text_processor", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "convert_text_processor", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "convert_layer", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "migrate", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "default_data_normalizer", "type": "Callable[[], Any]"}, {"lineNumber": 223, "col_offset": 0, "nodeName": "default_text_preprocessor", "type": "Callable[[], Any]"}, {"lineNumber": 5, "col_offset": 11, "nodeName": "codec", "type": "Dict[Any, Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, Union[bool, int]], List[str], str]], Dict[str, Union[Dict[nothing, nothing], List[str], str]], Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Union[Dict[str, List[Union[int, float]]], List[str], str]]]]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, Union[bool, int]], List[str], str]], Dict[str, Union[Dict[nothing, nothing], List[str], str]], Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Union[Dict[str, List[Union[int, float]]], List[str], str]]]]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, str], List[str], str]]]]"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, str], List[str], str]]]]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "mapping", "type": "Dict[str, str]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "solver_mapper", "type": "Dict[str, str]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "network", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "backend", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "codec", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "data_preprocessor", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "text_preprocessor", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "text_postprocessor", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "converted_pre_processors", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "converted_post_processors", "type": "List[Any]"}, {"lineNumber": 4, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 10, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "args", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 16, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "recurse_convert", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "proc", "type": "Dict[Any, Any]"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "recurse_convert", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "proc", "type": "Dict[Any, Any]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "get", "type": "Any"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "get", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "get", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "convert_text_processor", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 132, "col_offset": 55, "nodeName": "text_postprocessor", "type": "Any"}, {"lineNumber": 8, "col_offset": 32, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "args", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "mapping", "type": "Dict[str, str]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "get", "type": "Callable"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "get", "type": "Callable"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "network", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "convert_image_processor", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "data_preprocessor", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "convert_text_processor", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "text_preprocessor", "type": "Any"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 8, "col_offset": 41, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 50, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "backend", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "solver_mapper", "type": "Dict[str, str]"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "get", "type": "Any"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "converted_pre_processors", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "converted_post_processors", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, Union[bool, int]], List[str], str]], Dict[str, Union[Dict[nothing, nothing], List[str], str]], Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Union[Dict[str, List[Union[int, float]]], List[str], str]]]]"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "default_data_normalizer", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, str], List[str], str]]]]"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "default_text_preprocessor", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "network", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "network", "type": "Any"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "network", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "get", "type": "Any"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "get", "type": "Any"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "get", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "get", "type": "Callable"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "convert_codec", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "codec", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "recurse_convert", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, str], List[str], str]]]]"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "default_text_preprocessor", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "get", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "convert_layer", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "l", "type": "Any"}, {"lineNumber": 147, "col_offset": 48, "nodeName": "l", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "network", "type": "Any"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "network", "type": "Any"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "network", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, str], List[str], str]]]]"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "default_text_preprocessor", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "network", "type": "Any"}, {"lineNumber": 147, "col_offset": 53, "nodeName": "get", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, Union[bool, int]], List[str], str]], Dict[str, Union[Dict[nothing, nothing], List[str], str]], Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Union[Dict[str, List[Union[int, float]]], List[str], str]]]]"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "image_processor", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "recurse_convert", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 147, "col_offset": 53, "nodeName": "network", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, Union[bool, int]], List[str], str]], Dict[str, Union[Dict[nothing, nothing], List[str], str]], Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Union[Dict[str, List[Union[int, float]]], List[str], str]]]]"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "image_processor", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "conv", "type": "List[Optional[str]]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, Union[bool, int]], List[str], str]], Dict[str, Union[Dict[nothing, nothing], List[str], str]], Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Union[Dict[str, List[Union[int, float]]], List[str], str]]]]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "image_processor", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, str], List[str], str]]]]"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "text_processor", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "conv", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, Union[bool, int]], List[str], str]], Dict[str, Union[Dict[nothing, nothing], List[str], str]], Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Union[Dict[str, List[Union[int, float]]], List[str], str]]]]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "image_processor", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, str], List[str], str]]]]"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "text_processor", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, str], List[str], str]]]]"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "text_processor", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "get", "type": "Callable"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, str], List[str], str]]]]"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "text_processor", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "get", "type": "Callable"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "get", "type": "Callable"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "get", "type": "Callable"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 79, "col_offset": 84, "nodeName": "conv", "type": "List[Optional[str]]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, str], List[str], str]]]]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "text_processor", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 82, "col_offset": 88, "nodeName": "conv", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 89, "nodeName": "get", "type": "Callable"}, {"lineNumber": 84, "col_offset": 80, "nodeName": "get", "type": "Callable"}, {"lineNumber": 86, "col_offset": 72, "nodeName": "get", "type": "Callable"}, {"lineNumber": 79, "col_offset": 89, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 82, "col_offset": 93, "nodeName": "get", "type": "Callable"}, {"lineNumber": 84, "col_offset": 80, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 86, "col_offset": 72, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 82, "col_offset": 93, "nodeName": "p", "type": "Dict[Any, Any]"}]