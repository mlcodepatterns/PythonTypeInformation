[{"lineNumber": 16, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "Enum", "type": "Type[enum.Enum]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "RequestParams", "type": "Type[namedtuple_RequestParams_epochs_text_only]"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "ABC", "type": "Type[abc.ABC]"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "DatasetGenerator", "type": "Type[DatasetGenerator]"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "DataSet", "type": "Type[DataSet]"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "TRAIN", "type": "int"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "PREDICT", "type": "int"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "EVAL", "type": "int"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 181, "col_offset": 60, "nodeName": "DatasetGenerator", "type": "Type[DatasetGenerator]"}, {"lineNumber": 240, "col_offset": 60, "nodeName": "DatasetGenerator", "type": "Type[DatasetGenerator]"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "output_queue", "type": "Any"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "output_queue", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "mode", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "mode", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "samples", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "p", "type": "None"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "request_queue", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "ctx", "type": "multiprocessing.context.SpawnContext"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "p", "type": "multiprocessing.context.SpawnProcess"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "request_queue", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "global_index", "type": "int"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_samples", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "loaded", "type": "bool"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "mode", "type": "DataSetMode"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "mode", "type": "DataSetMode"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "skip_invalid", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "skip_invalid", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "remove_invalid", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "remove_invalid", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "_samples", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "loaded", "type": "bool"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "text_only", "type": "Any"}, {"lineNumber": 189, "col_offset": 49, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "loaded", "type": "bool"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "Queue", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "get_context", "type": "Callable"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "Process", "type": "Type[multiprocessing.context.SpawnProcess]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "start", "type": "Callable[[], None]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "request_queue", "type": "None"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "request_queue", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "put", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "epoch", "type": "int"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "DataSetMode", "type": "Type[DataSetMode]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "DataSet"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "DataSet"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "DataSet"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "DataSet"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "DataSet"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "_samples", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "self", "type": "DataSet"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "DataSet"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "sample", "type": "Any"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 163, "col_offset": 94, "nodeName": "f", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "extension", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "mp_context", "type": "Any"}, {"lineNumber": 187, "col_offset": 37, "nodeName": "output_queue", "type": "Any"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "mode", "type": "DataSetMode"}, {"lineNumber": 187, "col_offset": 57, "nodeName": "samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "DataSetMode", "type": "Type[DataSetMode]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "mode", "type": "DataSetMode"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "texts", "type": "List[None]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "images", "type": "List[None]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 231, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "RawDataSet"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "RawDataSetGenerator", "type": "Type[RawDataSetGenerator]"}, {"lineNumber": 241, "col_offset": 35, "nodeName": "mp_context", "type": "Any"}, {"lineNumber": 241, "col_offset": 47, "nodeName": "output_queue", "type": "Any"}, {"lineNumber": 241, "col_offset": 61, "nodeName": "mode", "type": "DataSetMode"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "mp_context", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "mp", "type": "module"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "ctx", "type": "multiprocessing.context.SpawnContext"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "run", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "p", "type": "multiprocessing.context.SpawnProcess"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "join", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "join", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "request_queue", "type": "Any"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "RequestParams", "type": "Type[namedtuple_RequestParams_epochs_text_only]"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "text_only", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "rq_params", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "Empty", "type": "Type[queue.Empty]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "sample_idx", "type": "int"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "sample", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "samples", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "self", "type": "DataSet"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "sample", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "_samples", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "mode", "type": "DataSetMode"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "PREDICT", "type": "Any"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "mode", "type": "DataSetMode"}, {"lineNumber": 154, "col_offset": 60, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "write", "type": "Callable[[str], int]"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 168, "col_offset": 81, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "extension", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "images", "type": "Any"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "texts", "type": "Any"}, {"lineNumber": 212, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "images", "type": "Any"}, {"lineNumber": 214, "col_offset": 34, "nodeName": "texts", "type": "Any"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "texts", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "images", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "images", "type": "Any"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "image", "type": "Any"}, {"lineNumber": 231, "col_offset": 23, "nodeName": "text", "type": "Any"}, {"lineNumber": 231, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "images", "type": "Union[List[None], Any]"}, {"lineNumber": 231, "col_offset": 54, "nodeName": "texts", "type": "Union[List[None], Any]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "add_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 61, "nodeName": "self", "type": "RawDataSet"}, {"lineNumber": 241, "col_offset": 72, "nodeName": "samples", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "request_queue", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "get", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "queue", "type": "module"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "rq_params", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "mode", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "DataSet"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "self", "type": "DataSet"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "DataSetMode", "type": "Type[DataSetMode]"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "self", "type": "DataSet"}, {"lineNumber": 154, "col_offset": 60, "nodeName": "DataSetMode", "type": "Type[DataSetMode]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "path", "type": "module"}, {"lineNumber": 162, "col_offset": 67, "nodeName": "sample", "type": "Any"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "codecs", "type": "module"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "f", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 171, "col_offset": 80, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 189, "col_offset": 59, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 214, "col_offset": 56, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 214, "col_offset": 60, "nodeName": "images", "type": "Any"}, {"lineNumber": 214, "col_offset": 77, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 214, "col_offset": 81, "nodeName": "texts", "type": "Any"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "texts", "type": "Any"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 222, "col_offset": 33, "nodeName": "images", "type": "Any"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 224, "col_offset": 33, "nodeName": "images", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "texts", "type": "Union[List[None], Any]"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "texts", "type": "Union[List[None], Any]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "self", "type": "RawDataSet"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "image", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "text", "type": "Any"}, {"lineNumber": 241, "col_offset": 72, "nodeName": "self", "type": "RawDataSet"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "request_queue", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "exception", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "e", "type": "Exception"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "DataSetMode", "type": "Type[DataSetMode]"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "samples", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "line", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "text", "type": "str"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "_load_sample", "type": "Callable[[Any, Any], Generator[Tuple[Any, str], None, None]]"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "sample", "type": "Any"}, {"lineNumber": 73, "col_offset": 64, "nodeName": "text_only", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "global_index", "type": "int"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "sample_idx", "type": "int"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "size", "type": "Any"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "os", "type": "module"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 163, "col_offset": 65, "nodeName": "extension", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "sample", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "sample", "type": "Any"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "self", "type": "DatasetGenerator"}, {"lineNumber": 73, "col_offset": 64, "nodeName": "rq_params", "type": "Any"}, {"lineNumber": 88, "col_offset": 65, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 88, "col_offset": 75, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "line", "type": "Any"}, {"lineNumber": 156, "col_offset": 50, "nodeName": "amax", "type": "Any"}, {"lineNumber": 156, "col_offset": 58, "nodeName": "line", "type": "Any"}, {"lineNumber": 156, "col_offset": 67, "nodeName": "amin", "type": "Any"}, {"lineNumber": 156, "col_offset": 75, "nodeName": "line", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "sample", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 189, "col_offset": 65, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 189, "col_offset": 75, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "Full", "type": "Type[queue.Full]"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 88, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 168, "col_offset": 47, "nodeName": "sample", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 189, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "put", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "queue", "type": "module"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "sample", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "output_queue", "type": "Any"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "global_index", "type": "int"}, {"lineNumber": 76, "col_offset": 69, "nodeName": "sample_idx", "type": "int"}, {"lineNumber": 76, "col_offset": 81, "nodeName": "line", "type": "Any"}, {"lineNumber": 76, "col_offset": 87, "nodeName": "text", "type": "str"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "self", "type": "DatasetGenerator"}]