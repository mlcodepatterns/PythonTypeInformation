[{"lineNumber": 18, "col_offset": 0, "nodeName": "update_model", "type": "Callable[[Dict[Any, Any], str], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "convert_codec", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "image_processor", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "convert_image_processor", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "text_processor", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "convert_text_processor", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "convert_layer", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 175, "col_offset": 0, "nodeName": "migrate", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 231, "col_offset": 0, "nodeName": "default_data_normalizer", "type": "Callable[[], Any]"}, {"lineNumber": 285, "col_offset": 0, "nodeName": "default_text_preprocessor", "type": "Callable[[], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "trainer_params", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "scenario_params", "type": "Any"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "scenario_params", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "pred_model_inputs", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "outputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "pred_model", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "img_input", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "img_len", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "final_model_inputs", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "output_wrapper", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "final_model_outputs", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "pred_model", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "codec", "type": "Dict[Any, Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[nothing, nothing], List[str], str]], Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Union[Dict[str, List[Union[int, float]]], List[str], str]], Dict[str, Union[Dict[str, Union[bool, int]], List[str], str]]]]"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[nothing, nothing], List[str], str]], Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Union[Dict[str, List[Union[int, float]]], List[str], str]], Dict[str, Union[Dict[str, Union[bool, int]], List[str], str]]]]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]]]]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]]]]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "mapping", "type": "Dict[str, str]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "solver_mapper", "type": "Dict[str, str]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "network", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "backend", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "codec", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "data_preprocessor", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "text_preprocessor", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "text_postprocessor", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "converted_pre_processors", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "converted_post_processors", "type": "List[Any]"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 18, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "trainer_params_from_dict", "type": "Any"}, {"lineNumber": 20, "col_offset": 63, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "trainer_params", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "load_model", "type": "Any"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "Model", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "Input", "type": "Any"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "Input", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "img_input", "type": "Any"}, {"lineNumber": 49, "col_offset": 55, "nodeName": "img_len", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "WrappedOutputLayer", "type": "Type[Any]"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "output_wrapper", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "Model", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "save", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "load_model", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "rename", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "args", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "recurse_convert", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "proc", "type": "Dict[Any, Any]"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "args", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "recurse_convert", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "proc", "type": "Dict[Any, Any]"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "get", "type": "Any"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "get", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "get", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "convert_text_processor", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 192, "col_offset": 55, "nodeName": "text_postprocessor", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "CalamariScenario", "type": "Type[calamari_ocr.ocr.backends.scenario.CalamariScenario]"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "models", "type": "Any"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "path", "type": "str"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "keras", "type": "Any"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "greedy_decoded", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "greedy_decoded", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 73, "nodeName": "input", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "models", "type": "Any"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "pred_model_inputs", "type": "Any"}, {"lineNumber": 45, "col_offset": 70, "nodeName": "outputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "keras", "type": "Any"}, {"lineNumber": 47, "col_offset": 134, "nodeName": "float32", "type": "Any"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "keras", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "int32", "type": "Any"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "pred_model", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "models", "type": "Any"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "final_model_inputs", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 71, "nodeName": "final_model_outputs", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "pred_model", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "path", "type": "str"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "models", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "path", "type": "str"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "path", "type": "str"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "path", "type": "str"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "path", "type": "str"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "mapping", "type": "Dict[str, str]"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "get", "type": "Callable"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "get", "type": "Callable"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "network", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "convert_image_processor", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "data_preprocessor", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "convert_text_processor", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "text_preprocessor", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 207, "col_offset": 32, "nodeName": "__module__", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "logits", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "output_len", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "output_len", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "roll", "type": "Any"}, {"lineNumber": 32, "col_offset": 51, "nodeName": "logits", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "cast", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "greedy_decoded", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "input", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "line_height_", "type": "Any"}, {"lineNumber": 47, "col_offset": 83, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 47, "col_offset": 134, "nodeName": "tf", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "keras", "type": "Any"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "backend", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "solver_mapper", "type": "Dict[str, str]"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 203, "col_offset": 18, "nodeName": "get", "type": "Any"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "getfile", "type": "Callable[[Union[module, Type[Any], types.MethodType, Callable[..., Any], types.TracebackType, types.FrameType, types.CodeType]], str]"}, {"lineNumber": 206, "col_offset": 51, "nodeName": "CalamariScenario", "type": "Type[calamari_ocr.ocr.backends.scenario.CalamariScenario]"}, {"lineNumber": 207, "col_offset": 32, "nodeName": "CalamariScenario", "type": "Type[calamari_ocr.ocr.backends.scenario.CalamariScenario]"}, {"lineNumber": 221, "col_offset": 35, "nodeName": "converted_pre_processors", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 36, "nodeName": "converted_post_processors", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "logits", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "nn", "type": "Any"}, {"lineNumber": 33, "col_offset": 58, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "to_dense", "type": "Any"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "greedy_decoded", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "l", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "l", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "layers", "type": "Any"}, {"lineNumber": 44, "col_offset": 73, "nodeName": "layers", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "data_params", "type": "Any"}, {"lineNumber": 47, "col_offset": 83, "nodeName": "data_params", "type": "Any"}, {"lineNumber": 51, "col_offset": 53, "nodeName": "final_model_inputs", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 80, "nodeName": "final_model_inputs", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[nothing, nothing], List[str], str]], Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Union[Dict[str, List[Union[int, float]]], List[str], str]], Dict[str, Union[Dict[str, Union[bool, int]], List[str], str]]]]"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "default_data_normalizer", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]]]]"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "default_text_preprocessor", "type": "Callable[[], Any]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "network", "type": "Any"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "network", "type": "Any"}, {"lineNumber": 203, "col_offset": 18, "nodeName": "network", "type": "Any"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "inspect", "type": "module"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "get", "type": "Any"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "get", "type": "Any"}, {"lineNumber": 212, "col_offset": 38, "nodeName": "get", "type": "Any"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "get", "type": "Callable"}, {"lineNumber": 218, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 219, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "convert_codec", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 220, "col_offset": 39, "nodeName": "codec", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "ctc_greedy_decoder", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 44, "col_offset": 73, "nodeName": "model", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "scenario_params", "type": "Any"}, {"lineNumber": 47, "col_offset": 83, "nodeName": "scenario_params", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "recurse_convert", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]]]]"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "default_text_preprocessor", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "layer", "type": "Dict[Any, Any]"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "get", "type": "Any"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "convert_layer", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 209, "col_offset": 41, "nodeName": "l", "type": "Any"}, {"lineNumber": 209, "col_offset": 48, "nodeName": "l", "type": "Any"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "network", "type": "Any"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "network", "type": "Any"}, {"lineNumber": 212, "col_offset": 38, "nodeName": "network", "type": "Any"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "d", "type": "Dict[Any, Any]"}, {"lineNumber": 218, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 219, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "ctc_ops", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 41, "col_offset": 66, "nodeName": "constant", "type": "Any"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "l", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]]]]"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "default_text_preprocessor", "type": "Callable[[], Any]"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "network", "type": "Any"}, {"lineNumber": 209, "col_offset": 53, "nodeName": "get", "type": "Any"}, {"lineNumber": 36, "col_offset": 50, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 37, "col_offset": 59, "nodeName": "cast", "type": "Any"}, {"lineNumber": 41, "col_offset": 88, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[nothing, nothing], List[str], str]], Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Union[Dict[str, List[Union[int, float]]], List[str], str]], Dict[str, Union[Dict[str, Union[bool, int]], List[str], str]]]]"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "image_processor", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "recurse_convert", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 209, "col_offset": 53, "nodeName": "network", "type": "Any"}, {"lineNumber": 36, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 63, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 59, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 67, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[nothing, nothing], List[str], str]], Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Union[Dict[str, List[Union[int, float]]], List[str], str]], Dict[str, Union[Dict[str, Union[bool, int]], List[str], str]]]]"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "image_processor", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "conv", "type": "List[Optional[str]]"}, {"lineNumber": 37, "col_offset": 67, "nodeName": "K", "type": "Any"}, {"lineNumber": 37, "col_offset": 77, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[nothing, nothing], List[str], str]], Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Union[Dict[str, List[Union[int, float]]], List[str], str]], Dict[str, Union[Dict[str, Union[bool, int]], List[str], str]]]]"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "image_processor", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]]]]"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "text_processor", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "conv", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[nothing, nothing], List[str], str]], Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Union[Dict[str, List[Union[int, float]]], List[str], str]], Dict[str, Union[Dict[str, Union[bool, int]], List[str], str]]]]"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "image_processor", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]]]]"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "text_processor", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]]]]"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "text_processor", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "get", "type": "Callable"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]]]]"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "text_processor", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "get", "type": "Callable"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "get", "type": "Callable"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "get", "type": "Callable"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 139, "col_offset": 84, "nodeName": "conv", "type": "List[Optional[str]]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "flat", "type": "List[Union[Dict[str, Union[Dict[str, str], List[str], str]], Dict[str, Optional[Union[List[str], str]]], Dict[str, Union[Dict[str, List[Dict[str, Union[str, bool]]]], List[str], str]]]]"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "text_processor", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 142, "col_offset": 88, "nodeName": "conv", "type": "List[str]"}, {"lineNumber": 139, "col_offset": 89, "nodeName": "get", "type": "Callable"}, {"lineNumber": 144, "col_offset": 80, "nodeName": "get", "type": "Callable"}, {"lineNumber": 146, "col_offset": 72, "nodeName": "get", "type": "Callable"}, {"lineNumber": 139, "col_offset": 89, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 142, "col_offset": 93, "nodeName": "get", "type": "Callable"}, {"lineNumber": 144, "col_offset": 80, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 146, "col_offset": 72, "nodeName": "p", "type": "Dict[Any, Any]"}, {"lineNumber": 142, "col_offset": 93, "nodeName": "p", "type": "Dict[Any, Any]"}]