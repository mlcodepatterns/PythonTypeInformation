[{"lineNumber": 16, "col_offset": 0, "nodeName": "train_individual_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "this_absdir", "type": "str"}, {"lineNumber": 13, "col_offset": 14, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "train_args_json", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "train_script_path", "type": "str"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "fold_file", "type": "Union[str, Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "cross_fold", "type": "calamari_ocr.ocr.cross_fold.CrossFold"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "run_args", "type": "List[Dict[str, Union[Any, str, Dict[str, Any]]]]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "folds_to_run", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "fold", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "folds_to_run", "type": "Any"}, {"lineNumber": 159, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 13, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 13, "col_offset": 30, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "run_args", "type": "Any"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "run_args", "type": "Any"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "run", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "setup_train_args", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "fold_id", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "single_fold", "type": "Any"}, {"lineNumber": 89, "col_offset": 7, "nodeName": "max_parallel_models", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "max_parallel_models", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "keep_temporary_files", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "temporary_dir", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "temporary_dir", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "temporary_dir", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "this_absdir", "type": "str"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "temporary_dir", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "CrossFold", "type": "Type[calamari_ocr.ocr.cross_fold.CrossFold]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "write_folds_to_json", "type": "Callable[[Any], None]"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "fold_file", "type": "Union[Any, str]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "single_fold", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "train_files", "type": "List[nothing]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "test_files", "type": "List[nothing]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "path", "type": "Union[str, Any]"}, {"lineNumber": 154, "col_offset": 69, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 13, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "prefix_run_command", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 62, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 76, "col_offset": 54, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "single_fold", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 89, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "temporary_dir", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "temporary_dir", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "best_models_dir", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "best_models_dir", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "train_script_path", "type": "str"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 116, "col_offset": 62, "nodeName": "files", "type": "Any"}, {"lineNumber": 116, "col_offset": 85, "nodeName": "best_models_dir", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "cross_fold", "type": "calamari_ocr.ocr.cross_fold.CrossFold"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 121, "col_offset": 70, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "train_files", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "fold", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "test_files", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "fold", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "temporary_dir", "type": "Any"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "f", "type": "file"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "fold_args", "type": "Dict[str, Any]"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "fold", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "train_files", "type": "List[nothing]"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "test_files", "type": "List[nothing]"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "train_script_path", "type": "str"}, {"lineNumber": 134, "col_offset": 64, "nodeName": "best_models_dir", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "Pool", "type": "Callable[..., multiprocessing.pool.Pool]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "get", "type": "Callable[..., Any]"}, {"lineNumber": 13, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "train_args_json", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "args", "type": "Any"}, {"lineNumber": 28, "col_offset": 63, "nodeName": "args", "type": "Any"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "line", "type": "Any"}, {"lineNumber": 76, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "weights", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "weights", "type": "Any"}, {"lineNumber": 76, "col_offset": 54, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "single_fold", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "path", "type": "module"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "temporary_dir", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "temporary_dir", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 112, "col_offset": 86, "nodeName": "this_absdir", "type": "str"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 116, "col_offset": 62, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 116, "col_offset": 85, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "single_fold", "type": "Any"}, {"lineNumber": 121, "col_offset": 76, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 80, "nodeName": "folds", "type": "List[List[nothing]]"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "cross_fold", "type": "calamari_ocr.ocr.cross_fold.CrossFold"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "cross_fold", "type": "calamari_ocr.ocr.cross_fold.CrossFold"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 125, "col_offset": 48, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 125, "col_offset": 70, "nodeName": "fold", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "path", "type": "Union[str, Any]"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "fold_args", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "fold_args", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "fold_args", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "fold_args", "type": "Dict[str, Any]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "fold_args", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "fold_args", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "join", "type": "Callable"}, {"lineNumber": 133, "col_offset": 51, "nodeName": "temporary_dir", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "fold_args", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 64, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "fold_args", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 77, "nodeName": "format", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "seed", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "fold_args", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "f", "type": "file"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "run_args", "type": "List[Dict[str, Union[Any, str, Dict[str, Any]]]]"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "path", "type": "Union[str, Any]"}, {"lineNumber": 151, "col_offset": 47, "nodeName": "fold_args", "type": "Dict[str, Any]"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "max_parallel_models", "type": "Any"}, {"lineNumber": 13, "col_offset": 46, "nodeName": "stack", "type": "Callable[..., List[Tuple[types.FrameType, str, int, str, Optional[List[str]], Optional[int]]]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "weights", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "single_fold", "type": "Any"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "fold_id", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "fold_id", "type": "Any"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "os", "type": "module"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 121, "col_offset": 80, "nodeName": "cross_fold", "type": "calamari_ocr.ocr.cross_fold.CrossFold"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 133, "col_offset": 51, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 133, "col_offset": 71, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 133, "col_offset": 88, "nodeName": "fold", "type": "Any"}, {"lineNumber": 135, "col_offset": 77, "nodeName": "best_model_label", "type": "Any"}, {"lineNumber": 135, "col_offset": 109, "nodeName": "fold", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "fold_args", "type": "Dict[str, Any]"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "seed", "type": "Any"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "fold", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "weights", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "fold_args", "type": "Dict[str, Any]"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "weights", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "json", "type": "module"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "map_async", "type": "Callable[..., multiprocessing.pool.AsyncResult]"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "train_individual_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "run_args", "type": "List[Dict[str, Union[Any, str, Dict[str, Any]]]]"}, {"lineNumber": 13, "col_offset": 46, "nodeName": "inspect", "type": "module"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 86, "col_offset": 92, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 86, "col_offset": 106, "nodeName": "fold_id", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "os", "type": "module"}, {"lineNumber": 135, "col_offset": 77, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "weights", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "fold_args", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 39, "nodeName": "weights", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 86, "col_offset": 92, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 143, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 143, "col_offset": 52, "nodeName": "fold", "type": "Any"}]