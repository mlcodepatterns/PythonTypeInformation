[{"lineNumber": 7, "col_offset": 0, "nodeName": "wordBeamSearch", "type": "Callable[..., Any]"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "chars", "type": "Any"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "blankIdx", "type": "int"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "genesisBeam", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "last", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "startChars", "type": "Set[Any]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "bestBeams", "type": "Any"}, {"lineNumber": 66, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "testLM", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "testMat", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "testBW", "type": "int"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 9, "col_offset": 12, "nodeName": "getAllChars", "type": "Any"}, {"lineNumber": 10, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 10, "col_offset": 19, "nodeName": "chars", "type": "Any"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "maxT", "type": "int"}, {"lineNumber": 11, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "mat", "type": "numpy.ndarray"}, {"lineNumber": 13, "col_offset": 18, "nodeName": "Beam", "type": "Any"}, {"lineNumber": 13, "col_offset": 23, "nodeName": "lm", "type": "Any"}, {"lineNumber": 13, "col_offset": 27, "nodeName": "useNGrams", "type": "bool"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "BeamList", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "addBeam", "type": "Any"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "genesisBeam", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "maxT", "type": "int"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "curr", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "bestBeams", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "beam", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "bestBeams", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "last", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "curr", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "completeBeams", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "lm", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "getBestBeams", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "getText", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "LanguageModel", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "wordBeamSearch", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "testMat", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "testBW", "type": "int"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "testLM", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 9, "col_offset": 12, "nodeName": "lm", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "last", "type": "Any"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "getNextChars", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "BeamList", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "getBestBeams", "type": "Any"}, {"lineNumber": 24, "col_offset": 38, "nodeName": "beamWidth", "type": "int"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "prNonBlank", "type": "int"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "prBlank", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "last", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "last", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "tree", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "last", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "labelIdx", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "prNonBlank", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "addBeam", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "labelIdx", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "getNextChars", "type": "Any"}, {"lineNumber": 51, "col_offset": 51, "nodeName": "allowWordToWordTransition", "type": "bool"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "c", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "startChars", "type": "Set[Any]"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "bestBeams", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "lm", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "getText", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "index", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "getPrTotal", "type": "Any"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "mat", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "curr", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "createChildBeam", "type": "Any"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "prBlank", "type": "Any"}, {"lineNumber": 37, "col_offset": 59, "nodeName": "prNonBlank", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "index", "type": "Any"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "c", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "beam", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "addBeam", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "isWord", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "wordDev", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "wordDev", "type": "Any"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "c", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "beam", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "chars", "type": "Any"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "getPrNonBlank", "type": "Any"}, {"lineNumber": 31, "col_offset": 52, "nodeName": "mat", "type": "numpy.ndarray"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "beam", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "beam", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "chars", "type": "Any"}, {"lineNumber": 41, "col_offset": 66, "nodeName": "c", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "curr", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "createChildBeam", "type": "Any"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "c", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "lm", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "textual", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "createChildBeam", "type": "Any"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "c", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "textual", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "addBeam", "type": "Any"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "b", "type": "Any"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "getText", "type": "Any"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "beam", "type": "Any"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "t", "type": "int"}, {"lineNumber": 34, "col_offset": 49, "nodeName": "blankIdx", "type": "int"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "getText", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "mat", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "getPrBlank", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "mat", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "getPrTotal", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "beam", "type": "Any"}, {"lineNumber": 48, "col_offset": 56, "nodeName": "getNonBlank", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 68, "nodeName": "c", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "beam", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "beam", "type": "Any"}, {"lineNumber": 53, "col_offset": 51, "nodeName": "getNonBlank", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 63, "nodeName": "c", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "curr", "type": "Any"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "beam", "type": "Any"}, {"lineNumber": 31, "col_offset": 56, "nodeName": "t", "type": "int"}, {"lineNumber": 31, "col_offset": 59, "nodeName": "labelIdx", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "beam", "type": "Any"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "getText", "type": "Any"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "beam", "type": "Any"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "beam", "type": "Any"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "beam", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "t", "type": "int"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "labelIdx", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "t", "type": "int"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "labelIdx", "type": "Any"}]