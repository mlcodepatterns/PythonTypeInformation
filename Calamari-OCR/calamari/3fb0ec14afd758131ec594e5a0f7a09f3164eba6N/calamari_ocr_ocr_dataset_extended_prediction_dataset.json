[{"lineNumber": 13, "col_offset": 32, "nodeName": "DataReader", "type": "Type[calamari_ocr.ocr.dataset.datareader.base.DataReader]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "texts", "type": "List[str]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "gt_txt_path", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "voted_p", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "vp", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "voted_p", "type": "Any"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "p", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "Evaluation", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "texts", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "sample", "type": "Dict[str, Any]"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "sample", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "gt_txt_path", "type": "str"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "p", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "sample", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "sample", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 14, "col_offset": 30, "nodeName": "List", "type": "Any"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "PipelineMode", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "text_bn", "type": "Any"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "text_ext", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "split_all_ext", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 21, "col_offset": 46, "nodeName": "text", "type": "str"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "text", "type": "str"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "text_bn", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "_load_sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "sample", "type": "Dict[str, Any]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "add_sample", "type": "Callable[[Any], None]"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "sample", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "gt_txt_path", "type": "str"}, {"lineNumber": 36, "col_offset": 59, "nodeName": "f", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "p", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "id", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "voted_p", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "vp", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "voted_p", "type": "Any"}, {"lineNumber": 14, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "self", "type": "ExtendedPredictionDataSet"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "self", "type": "ExtendedPredictionDataSet"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "gt_txt_path", "type": "str"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "from_json", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "gt_txt_path", "type": "str"}, {"lineNumber": 39, "col_offset": 44, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "vp", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "codecs", "type": "module"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "Predictions", "type": "Any"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "gt_txt_path", "type": "str"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "from_json", "type": "Any"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "f", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "Predictions", "type": "Any"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "decompress", "type": "Callable[..., bytes]"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "zlib", "type": "module"}, {"lineNumber": 40, "col_offset": 58, "nodeName": "read", "type": "Callable"}, {"lineNumber": 40, "col_offset": 58, "nodeName": "f", "type": "BinaryIO"}]