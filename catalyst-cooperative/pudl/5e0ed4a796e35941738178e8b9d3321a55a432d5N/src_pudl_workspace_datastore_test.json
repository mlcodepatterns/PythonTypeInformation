[{"lineNumber": 17, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "MOCK_EPACEMS_DEPOSITION", "type": "Dict[str, List[Union[Dict[str, str], Dict[str, Union[Dict[str, str], str]]]]]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "MOCK_EPACEMS_DATAPACKAGE", "type": "Dict[str, List[Dict[str, str]]]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "PROD_EPACEMS_DOI", "type": "str"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "PROD_EPACEMS_ZEN_ID", "type": "int"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "MOCK_DATAPACKAGE", "type": "Dict[str, List[Dict[str, Union[Dict[str, Union[int, str]], str]]]]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "first", "type": "bytes"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "second", "type": "bytes"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "m", "type": "hashlib._Hash"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "fetcher", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "doi", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "fetcher", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "desc", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "fetcher", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "descriptor", "type": "Any"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "PudlFileResource", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "PudlFileResource", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "PudlFileResource", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "PudlFileResource", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "get_path", "type": "Any"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "PudlFileResource", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "urandom", "type": "Callable[[int], bytes]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "urandom", "type": "Callable[[int], bytes]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "md5", "type": "Callable[..., hashlib._Hash]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "update", "type": "Callable[[Union[bytes, bytearray, memoryview, array.array[Any], mmap.mmap]], None]"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "first", "type": "bytes"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "PudlFileResource", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "ZenodoFetcher", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "get_doi", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "PROD_EPACEMS_DOI", "type": "str"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "ZenodoFetcher", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "GET", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "GET", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "fetch_datapackage_descriptor", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "MOCK_EPACEMS_DATAPACKAGE", "type": "Any"}, {"lineNumber": 105, "col_offset": 56, "nodeName": "datapackage_json", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "ZenodoFetcher", "type": "Any"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "PudlFileResource", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "GET", "type": "Any"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "file_path", "type": "str"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "DatapackageDescriptor", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "MOCK_DATAPACKAGE", "type": "Dict[str, List[Dict[str, Union[Dict[str, Union[int, str]], str]]]]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "datastore", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestPudlFileResource"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "matches", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestPudlFileResource"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "matches", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestPudlFileResource"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "matches", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestPudlFileResource"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "matches", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestPudlFileResource"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "matches", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestPudlFileResource"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "matches", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "datastore", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestPudlFileResource"}, {"lineNumber": 35, "col_offset": 56, "nodeName": "get_path", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "datastore", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestPudlFileResource"}, {"lineNumber": 41, "col_offset": 47, "nodeName": "get_path", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "datastore", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestPudlFileResource"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "res", "type": "Any"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "datastore", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestPudlFileResource"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 49, "col_offset": 70, "nodeName": "get_local_path", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "hashlib", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "m", "type": "hashlib._Hash"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "datastore", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestPudlFileResource"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "content_matches_checksum", "type": "Any"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "first", "type": "bytes"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestPudlFileResource"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "content_matches_checksum", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "second", "type": "bytes"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "datastore", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "fetcher", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestZenodoFetcher"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "self", "type": "TestZenodoFetcher"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "get_doi", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "datastore", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "responses", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "responses", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "MOCK_EPACEMS_DEPOSITION", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "responses", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "responses", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "MOCK_EPACEMS_DATAPACKAGE", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "fetcher", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 56, "nodeName": "desc", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "datastore", "type": "Any"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "datastore", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "PROD_EPACEMS_DOI", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "responses", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "responses", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "fetch_resource", "type": "Any"}, {"lineNumber": 120, "col_offset": 57, "nodeName": "res", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "datastore", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "TestDatapackageDescriptor"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestDatapackageDescriptor"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "get_resources", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestDatapackageDescriptor"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestDatapackageDescriptor"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 35, "col_offset": 56, "nodeName": "res", "type": "Any"}, {"lineNumber": 41, "col_offset": 47, "nodeName": "res", "type": "Any"}, {"lineNumber": 49, "col_offset": 70, "nodeName": "res", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "fetcher", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "file_path", "type": "str"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "fetcher", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "descriptor", "type": "Any"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 58, "col_offset": 79, "nodeName": "hexdigest", "type": "Callable[[], str]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "get_resources", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "get_resources", "type": "Any"}, {"lineNumber": 58, "col_offset": 79, "nodeName": "m", "type": "hashlib._Hash"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "descriptor", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "descriptor", "type": "Any"}]