[{"lineNumber": 44, "col_offset": 0, "nodeName": "_fake_data_frames", "type": "Callable[..., Any]"}, {"lineNumber": 11, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "GenericExtractor", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "excel", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "METADATA", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "BLACKLISTED_PAGES", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "Metadata", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "fake_data", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "dfs", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestMetadata"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "Metadata", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "excel", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "page_name", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "mock_read_excel", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "extract", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "expected_calls", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "extract", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "excel", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestMetadata"}, {"lineNumber": 20, "col_offset": 33, "nodeName": "get_dataset_name", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestMetadata"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "get_all_pages", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestMetadata"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "get_all_columns", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestMetadata"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "get_column_map", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestMetadata"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "get_skiprows", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestMetadata"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "get_sheet_name", "type": "Any"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "page", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "year", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "pd", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "call", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "call", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "call", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "call", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "mock_read_excel", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 84, "col_offset": 50, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "dfs", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "dfs", "type": "Any"}, {"lineNumber": 20, "col_offset": 33, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "_metadata", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "pd", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "pd", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "pd", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "pd", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "FakeExtractor", "type": "Type[FakeExtractor]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "mock", "type": "module"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "mock", "type": "module"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "mock", "type": "module"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "mock", "type": "module"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "FakeExtractor", "type": "Type[FakeExtractor]"}, {"lineNumber": 84, "col_offset": 54, "nodeName": "keys", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 20, "col_offset": 33, "nodeName": "self", "type": "TestMetadata"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "self", "type": "TestMetadata"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "self", "type": "TestMetadata"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "TestMetadata"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "self", "type": "TestMetadata"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "self", "type": "TestMetadata"}, {"lineNumber": 84, "col_offset": 54, "nodeName": "dfs", "type": "Any"}]