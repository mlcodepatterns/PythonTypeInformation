[{"lineNumber": 13, "col_offset": 0, "nodeName": "load_curves", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "transmission_single", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "transmission_joint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "plant_region_map", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 0, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 10, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 10, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "lc", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "lc", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "grouped", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "df_list", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "grouped", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "tidy_load_curves", "type": "Any"}, {"lineNumber": 61, "col_offset": 51, "nodeName": "tidy_load_curves", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "epaipm_transformed_dfs", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "trans_df", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "trans_df", "type": "Any"}, {"lineNumber": 87, "col_offset": 59, "nodeName": "trans_df", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "epaipm_transformed_dfs", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "trans_df", "type": "Any"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "trans_df", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "epaipm_transformed_dfs", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "trans_df", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "trans_df", "type": "Any"}, {"lineNumber": 150, "col_offset": 56, "nodeName": "trans_df", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "epaipm_transformed_dfs", "type": "Any"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "epaipm_pudl_tables", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "epaipm_transformed_dfs", "type": "Dict[str, Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "table", "type": "str"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "epaipm_transform_functions", "type": "Dict[str, Callable[[Any, Any], Any]]"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "epaipm_transformed_dfs", "type": "Dict[str, Any]"}, {"lineNumber": 10, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "copy", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "simplify_columns", "type": "Any"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "lc", "type": "Any"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "melt", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 41, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "melt_lc", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "concat", "type": "Any"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "df_list", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "rename", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "epaipm_transformed_dfs", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "copy", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "reset_index", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "rename", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "epaipm_transformed_dfs", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "copy", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "epaipm_transformed_dfs", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "concat", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "drop_duplicates", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "reset_index", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "rename", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "epaipm_transformed_dfs", "type": "Any"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "pc", "type": "Any"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "transmission_single", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "transmission_joint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "load_curves", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "plant_region_map", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "epaipm_raw_dfs", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "epaipm_transformed_dfs", "type": "Dict[str, Any]"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "lc", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "melt_lc", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "sort_values", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "reset_index", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "index", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "df", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "pd", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "tidy_load_curves", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "trans_df", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "trans_df", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "trans_df", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "trans_df", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "trans_df", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "table", "type": "str"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "epaipm_tables", "type": "Any"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "epaipm_dfs", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "replace", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "df_list", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "epaipm_rename_dict", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "epaipm_dfs", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "epaipm_rename_dict", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "epaipm_dfs", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "epaipm_dfs", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "epaipm_dfs", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "epaipm_rename_dict", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 46, "nodeName": "epaipm_raw_dfs", "type": "Any"}, {"lineNumber": 187, "col_offset": 46, "nodeName": "epaipm_transformed_dfs", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "str", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "pc", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "pc", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "pc", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "epaipm_transform_functions", "type": "Dict[str, Callable[[Any, Any], Any]]"}, {"lineNumber": 185, "col_offset": 67, "nodeName": "table", "type": "str"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "table", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "melt_lc", "type": "Any"}]