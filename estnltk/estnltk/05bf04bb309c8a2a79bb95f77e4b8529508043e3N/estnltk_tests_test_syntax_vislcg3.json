[{"lineNumber": 12, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "get_vislcg_cmd", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_vislcg3parser_sent1", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_vislcg3parser_sent2", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_vislcg3parser_sent3", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "test_vislcg3parser_sent1_with_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "test_vislcg3parser_sent1_with_text_trees", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_vislcg3parser_return_depgraph1", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "text_parsed", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "parsing_results", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "text_parsed", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "parsing_results", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "text_parsed", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "parsing_results", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "trees", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "dep_graphs", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "treeStr", "type": "str"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "treeStr", "type": "str"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "VISLCG3Parser", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "parse_text", "type": "Any"}, {"lineNumber": 26, "col_offset": 41, "nodeName": "text", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "parsing_results", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "VISLCG3Parser", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "parse_text", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "text", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "parsing_results", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "VISLCG3Parser", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "parse_text", "type": "Any"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "text", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "parsing_results", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "VISLCG3Parser", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "tag_syntax", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "expected_layer", "type": "List[Dict[unicode, Union[int, List[List[Union[unicode, int]]]]]]"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "VISLCG3Parser", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "syntax_trees", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "syntax_token", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "token", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "VISLCG3Parser", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "parse_text", "type": "Any"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "text", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "treeStr", "type": "str"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "treeStr", "type": "str"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "parser", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "w", "type": "Any"}, {"lineNumber": 27, "col_offset": 46, "nodeName": "w", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "parser", "type": "Any"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "w", "type": "Any"}, {"lineNumber": 36, "col_offset": 46, "nodeName": "w", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "parser", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "w", "type": "Any"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "w", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 51, "col_offset": 74, "nodeName": "parser", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 64, "col_offset": 74, "nodeName": "parser", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "trees", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "parser", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 24, "col_offset": 45, "nodeName": "get_vislcg_cmd", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "PARSER_OUT", "type": "Any"}, {"lineNumber": 27, "col_offset": 51, "nodeName": "text_parsed", "type": "Any"}, {"lineNumber": 33, "col_offset": 45, "nodeName": "get_vislcg_cmd", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "PARSER_OUT", "type": "Any"}, {"lineNumber": 36, "col_offset": 51, "nodeName": "text_parsed", "type": "Any"}, {"lineNumber": 42, "col_offset": 45, "nodeName": "get_vislcg_cmd", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "PARSER_OUT", "type": "Any"}, {"lineNumber": 45, "col_offset": 51, "nodeName": "text_parsed", "type": "Any"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "get_vislcg_cmd", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "LAYER_VISLCG3", "type": "Any"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "get_vislcg_cmd", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "trees", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "trees", "type": "Any"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "get_vislcg_cmd", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 24, "col_offset": 45, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 27, "col_offset": 63, "nodeName": "LAYER_VISLCG3", "type": "Any"}, {"lineNumber": 33, "col_offset": 45, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 36, "col_offset": 63, "nodeName": "LAYER_VISLCG3", "type": "Any"}, {"lineNumber": 42, "col_offset": 45, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 45, "col_offset": 63, "nodeName": "LAYER_VISLCG3", "type": "Any"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "self", "type": "VislCG3ParserTest"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "tree", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "tree", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "dep_graphs", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "dep_graphs", "type": "Any"}]