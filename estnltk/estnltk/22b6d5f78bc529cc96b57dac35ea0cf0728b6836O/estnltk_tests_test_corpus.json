[{"lineNumber": 13, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "test_basic_initialization", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_initialization_with_casting", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "check_values", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "elemdata", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_init_fails_no_start", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "test_init_fails_no_rel_start", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test_init_fails_no_end", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "test_init_fails_no_rel_end", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_init_fails_no_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_invalid_main_span", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_invalid_relative_span", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_negative_start", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "test_negative_relative_start", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "test_initialization", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "data", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "word", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "test_queries", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "test_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "test_single_element", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "test_multiple", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "test_multiple_comparison", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 169, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "elem", "type": "estnltk.corpus.Element"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "check_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "check_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "elemdata", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "encode", "type": "Callable[..., str]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "Element", "type": "Type[estnltk.corpus.Element]"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "check_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "elem", "type": "estnltk.corpus.Element"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "elem", "type": "Any"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "Element", "type": "Type[estnltk.corpus.Element]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "start", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "end", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "rel_start", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "rel_end", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "span", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "rel_span", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "START", "type": "unicode"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "END", "type": "unicode"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 42, "col_offset": 51, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "elemdata", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "Element", "type": "Type[estnltk.corpus.Element]"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "elemdata", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "Element", "type": "Type[estnltk.corpus.Element]"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "elemdata", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "Element", "type": "Type[estnltk.corpus.Element]"}, {"lineNumber": 58, "col_offset": 45, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "elemdata", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "Element", "type": "Type[estnltk.corpus.Element]"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "elemdata", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "Element", "type": "Type[estnltk.corpus.Element]"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "elemdata", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "Element", "type": "Type[estnltk.corpus.Element]"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "elemdata", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "Element", "type": "Type[estnltk.corpus.Element]"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "elemdata", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "Element", "type": "Type[estnltk.corpus.Element]"}, {"lineNumber": 84, "col_offset": 51, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "elemdata", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "Element", "type": "Type[estnltk.corpus.Element]"}, {"lineNumber": 89, "col_offset": 51, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "word", "type": "Callable[[], Any]"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "END", "type": "unicode"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "LABEL", "type": "unicode"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "START", "type": "unicode"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "Word", "type": "Type[estnltk.corpus.Word]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "word", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "start", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "end", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "rel_start", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "rel_end", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "label", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "ending", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "root", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "postag", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "form", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "clitic", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "root_tokens", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "Element", "type": "Type[estnltk.corpus.Element]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "Element", "type": "Type[estnltk.corpus.Element]"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "START", "type": "unicode"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 24, "col_offset": 30, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "END", "type": "unicode"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "elem", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "elem", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "elem", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "elem", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "elem", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "elem", "type": "Any"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "start", "type": "Any"}, {"lineNumber": 37, "col_offset": 49, "nodeName": "end", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "elem", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "rel_start", "type": "Any"}, {"lineNumber": 38, "col_offset": 57, "nodeName": "rel_end", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "START", "type": "unicode"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "END", "type": "unicode"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "START", "type": "unicode"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "START", "type": "unicode"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "data", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "word", "type": "estnltk.corpus.Word"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "MostFrequentTest"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "most_frequent", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "MostFrequentTest"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "most_frequent", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "MostFrequentTest"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "most_frequent", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "MostFrequentTest"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "most_frequent", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "elemdata", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "data", "type": "Dict[unicode, Union[unicode, int, str]]"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "START", "type": "unicode"}, {"lineNumber": 24, "col_offset": 35, "nodeName": "REL_START", "type": "unicode"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "END", "type": "unicode"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "REL_END", "type": "unicode"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "elem", "type": "Any"}, {"lineNumber": 37, "col_offset": 49, "nodeName": "elem", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "elem", "type": "Any"}, {"lineNumber": 38, "col_offset": 57, "nodeName": "elem", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "CLITIC", "type": "unicode"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "ENDING", "type": "unicode"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "FORM", "type": "unicode"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "LEMMA", "type": "unicode"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "POSTAG", "type": "unicode"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "ROOT", "type": "unicode"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "ROOT_TOKENS", "type": "unicode"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "CLITIC", "type": "unicode"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "ENDING", "type": "unicode"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "FORM", "type": "unicode"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "LEMMA", "type": "unicode"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "POSTAG", "type": "unicode"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "ROOT", "type": "unicode"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "ROOT_TOKENS", "type": "unicode"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "CLITIC", "type": "unicode"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "ENDING", "type": "unicode"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "FORM", "type": "unicode"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "LEMMA", "type": "unicode"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "POSTAG", "type": "unicode"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "ROOT", "type": "unicode"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "ROOT_TOKENS", "type": "unicode"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "CLITIC", "type": "unicode"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "ENDING", "type": "unicode"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "FORM", "type": "unicode"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "LEMMA", "type": "unicode"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "POSTAG", "type": "unicode"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "ROOT", "type": "unicode"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "ROOT_TOKENS", "type": "unicode"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "self", "type": "WordTest"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "self", "type": "ElementTest"}, {"lineNumber": 18, "col_offset": 36, "nodeName": "elemdata", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 18, "col_offset": 36, "nodeName": "self", "type": "ElementTest"}]