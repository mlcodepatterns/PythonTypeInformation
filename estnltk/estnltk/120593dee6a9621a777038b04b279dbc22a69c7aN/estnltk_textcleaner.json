[{"lineNumber": 10, "col_offset": 0, "nodeName": "EST_ALPHA_LOWER", "type": "str"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "EST_ALPHA_UPPER", "type": "str"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "EST_ALPHA", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "RUS_ALPHA_LOWER", "type": "str"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "RUS_ALPHA_UPPER", "type": "str"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "RUS_ALPHA", "type": "str"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "DIGITS", "type": "str"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "digits", "type": "str"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "PUNCTUATION", "type": "str"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "WHITESPACE", "type": "str"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "whitespace", "type": "str"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "ESTONIAN", "type": "str"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "RUSSIAN", "type": "str"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "upper", "type": "Callable[[], str]"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "EST_ALPHA_LOWER", "type": "str"}, {"lineNumber": 12, "col_offset": 30, "nodeName": "EST_ALPHA_UPPER", "type": "str"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "upper", "type": "Callable[[], str]"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "RUS_ALPHA_LOWER", "type": "str"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "RUS_ALPHA_UPPER", "type": "str"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "string", "type": "module"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "punctuation", "type": "str"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "string", "type": "module"}, {"lineNumber": 24, "col_offset": 45, "nodeName": "PUNCTUATION", "type": "str"}, {"lineNumber": 25, "col_offset": 44, "nodeName": "PUNCTUATION", "type": "str"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "EST_ALPHA_LOWER", "type": "str"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "RUS_ALPHA_LOWER", "type": "str"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "string", "type": "module"}, {"lineNumber": 24, "col_offset": 32, "nodeName": "WHITESPACE", "type": "str"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "WHITESPACE", "type": "str"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "ESTONIAN", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "alphabet", "type": "FrozenSet[Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "result", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "result", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "result", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "texts", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "result", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 94, "col_offset": 62, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "result", "type": "List[Union[Tuple[Any, List[Any]], Tuple[Any, Any]]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "EST_ALPHA", "type": "str"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "DIGITS", "type": "str"}, {"lineNumber": 25, "col_offset": 10, "nodeName": "RUS_ALPHA", "type": "str"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "DIGITS", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TextCleaner"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "char", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "text", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 94, "col_offset": 62, "nodeName": "sys", "type": "module"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "s", "type": "str"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "result", "type": "List[Union[Tuple[Any, List[Any]], Tuple[Any, Any]]]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "s", "type": "str"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "result", "type": "List[Union[Tuple[Any, List[Any]], Tuple[Any, Any]]]"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "c", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "char", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "alphabet", "type": "FrozenSet[Any]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "start", "type": "Union[int, Any]"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "end", "type": "Union[int, Any]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "char", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "examples", "type": "Any"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "items", "type": "Callable"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "result", "type": "List[Union[Tuple[Any, List[Any]], Tuple[Any, Any]]]"}, {"lineNumber": 111, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "texts", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "texts", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "s", "type": "str"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "result", "type": "List[Union[Tuple[Any, List[Any]], Tuple[Any, Any]]]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "examples", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "s", "type": "str"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "examples", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "s", "type": "str"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "examples", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "s", "type": "str"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "s", "type": "str"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "c", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "text", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "find_invalid_chars", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "text", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "self", "type": "TextCleaner"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "max", "type": "Callable"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "min", "type": "Callable"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "extend", "type": "Any"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "examples", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "c", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 121, "col_offset": 87, "nodeName": "c", "type": "Any"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "sample", "type": "Callable"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "examples", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "idx", "type": "int"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "example", "type": "Any"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 123, "col_offset": 46, "nodeName": "examples", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "s", "type": "str"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "c", "type": "Any"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "alphabet", "type": "FrozenSet[Any]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "self", "type": "TextCleaner"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "c", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "idx", "type": "int"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "context_size", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "text", "type": "Any"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "idx", "type": "int"}, {"lineNumber": 67, "col_offset": 43, "nodeName": "context_size", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "text", "type": "Any"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "find_invalid_chars", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 58, "nodeName": "text", "type": "Any"}, {"lineNumber": 90, "col_offset": 64, "nodeName": "context_size", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "compute_report", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "texts", "type": "Any"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "context_size", "type": "Any"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 118, "col_offset": 50, "nodeName": "examples", "type": "Any"}, {"lineNumber": 121, "col_offset": 90, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 94, "nodeName": "examples", "type": "Any"}, {"lineNumber": 122, "col_offset": 44, "nodeName": "min", "type": "Callable"}, {"lineNumber": 122, "col_offset": 63, "nodeName": "n_examples", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 124, "col_offset": 60, "nodeName": "example", "type": "Any"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "self", "type": "TextCleaner"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "c", "type": "Any"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "text", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "result", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "start", "type": "Union[int, Any]"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "end", "type": "Union[int, Any]"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "self", "type": "TextCleaner"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "result", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "self", "type": "TextCleaner"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 52, "nodeName": "examples", "type": "Any"}, {"lineNumber": 124, "col_offset": 53, "nodeName": "idx", "type": "int"}, {"lineNumber": 51, "col_offset": 54, "nodeName": "c", "type": "Any"}, {"lineNumber": 51, "col_offset": 63, "nodeName": "alphabet", "type": "FrozenSet[Any]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "char", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "char", "type": "Any"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 51, "col_offset": 63, "nodeName": "self", "type": "TextCleaner"}]