[{"lineNumber": 11, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "test_tilde", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "test_questionmark", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "test_rbracket", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "test_lessthan", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "test_phonetics", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "get_tokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "test_simple", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "test_hyphen_grouping", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_underscore", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "test_plus", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "test_equalmark", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "test_ltmark", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "test_bracketclose", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "test_hyphen", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "test_verb_phonetic_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_verb_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "test_verb_phonetic", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_verb", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "verbanalysis", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "verb_phonetic_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "verb_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "verb_phonetic", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "verb", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "substantiveanalysis", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "test_substantive_phonetic_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "test_substantive_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "test_substantive_phonetic", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "test_substantive", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "substantive_phonetic_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "substantive_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "substantive_phonetic", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "substantive", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "test_same", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "test_same_guess", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "test_same_phonetic", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "test_same_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "test_same_heuristic_phonetic", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "test_same_heuristic_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "test_same_phonetic_compound", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "run_test", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "text", "type": "Callable[[Any], Any]"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "test_disambiguation", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "test_grouping", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 262, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "SAMPLE_TEXT", "type": "unicode"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "yes", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "no", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "get_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "Analysis", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "Analysis", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "run_test", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "run_test", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "run_test", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "run_test", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "run_test", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "run_test", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "run_test", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "text_output", "type": "Any"}, {"lineNumber": 233, "col_offset": 42, "nodeName": "list_output", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "SAMPLE_TEXT", "type": "unicode"}, {"lineNumber": 243, "col_offset": 13, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "SAMPLE_TEXT", "type": "unicode"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "first", "type": "Any"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "second", "type": "Any"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 246, "col_offset": 33, "nodeName": "yes", "type": "Any"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "no", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "yes", "type": "int"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "no", "type": "int"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TrimPhoneticsTest"}, {"lineNumber": 14, "col_offset": 25, "nodeName": "trim_phonetics", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TrimPhoneticsTest"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "trim_phonetics", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TrimPhoneticsTest"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "trim_phonetics", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TrimPhoneticsTest"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "trim_phonetics", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TrimPhoneticsTest"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "trim_phonetics", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "operator", "type": "module"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "get_group_tokens", "type": "Any"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "root", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TokensTest"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "postprocess_analysis", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "verb_phonetic_compound", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "postprocess_analysis", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "verb_compound", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "postprocess_analysis", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "verb_phonetic", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "postprocess_analysis", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "verb", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "convert", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "convert", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "convert", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "convert", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "convert", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "convert", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "convert", "type": "Any"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "convert", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "convert", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "convert", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "postprocess_analysis", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "substantive_phonetic_compound", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "postprocess_analysis", "type": "Any"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "substantive_compound", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "postprocess_analysis", "type": "Any"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "substantive_phonetic", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "postprocess_analysis", "type": "Any"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "substantive", "type": "Callable[[], Any]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 36, "nodeName": "guess", "type": "Any"}, {"lineNumber": 227, "col_offset": 39, "nodeName": "phonetic", "type": "Any"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "compound", "type": "Any"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "guess", "type": "Any"}, {"lineNumber": 231, "col_offset": 39, "nodeName": "phonetic", "type": "Any"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "compound", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "DisambiguationTest"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 245, "col_offset": 29, "nodeName": "yes", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 245, "col_offset": 39, "nodeName": "no", "type": "Any"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 248, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 33, "nodeName": "yes", "type": "int"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "no", "type": "int"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "NameGroupingTest"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 259, "col_offset": 32, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "verbanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "verbanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 78, "col_offset": 50, "nodeName": "verbanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "verbanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 136, "col_offset": 50, "nodeName": "substantiveanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 140, "col_offset": 50, "nodeName": "substantiveanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "substantiveanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 148, "col_offset": 50, "nodeName": "substantiveanalysis", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "self", "type": "TextIsSameAsListTest"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "first", "type": "Any"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "second", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "self", "type": "DisambiguationTest"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 78, "col_offset": 50, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 136, "col_offset": 50, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 140, "col_offset": 50, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 148, "col_offset": 50, "nodeName": "self", "type": "AnalysisAsDictTest"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "self", "type": "TextIsSameAsListTest"}]