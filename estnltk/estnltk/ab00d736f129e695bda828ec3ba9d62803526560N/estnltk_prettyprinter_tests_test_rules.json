[{"lineNumber": 22, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "text", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "rules", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "expected", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "test_postag_rules", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "text", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "rules", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "expected", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "test_postag_rules", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "pp", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "html", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "pp", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "html", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "tag_analysis", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "self", "type": "SimpleTest"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "PrettyPrinter", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "render", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "expected", "type": "unicode"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "html", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "tag_analysis", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "self", "type": "ComplexTest"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "PrettyPrinter", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "render", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "expected", "type": "unicode"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "html", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 43, "col_offset": 64, "nodeName": "rules", "type": "List[Tuple[unicode, unicode]]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "pp", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "SimpleTest"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "self", "type": "SimpleTest"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "postags", "type": "Any"}, {"lineNumber": 70, "col_offset": 64, "nodeName": "rules", "type": "List[Tuple[unicode, unicode]]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "pp", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "ComplexTest"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "self", "type": "ComplexTest"}, {"lineNumber": 43, "col_offset": 64, "nodeName": "self", "type": "SimpleTest"}, {"lineNumber": 70, "col_offset": 64, "nodeName": "self", "type": "ComplexTest"}]