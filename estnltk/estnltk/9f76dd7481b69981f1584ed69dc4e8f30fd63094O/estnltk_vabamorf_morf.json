[{"lineNumber": 45, "col_offset": 0, "nodeName": "regex_from_markers", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 0, "nodeName": "postprocess_result", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 295, "col_offset": 0, "nodeName": "postprocess_analysis", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 313, "col_offset": 0, "nodeName": "trim_phonetics", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 0, "nodeName": "trim_compounds", "type": "Callable[[Any], Any]"}, {"lineNumber": 351, "col_offset": 0, "nodeName": "get_root", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 370, "col_offset": 0, "nodeName": "get_group_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 392, "col_offset": 0, "nodeName": "get_lemma", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 404, "col_offset": 0, "nodeName": "analyze", "type": "Callable[..., Any]"}, {"lineNumber": 433, "col_offset": 0, "nodeName": "spellcheck", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 0, "nodeName": "fix_spelling", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 0, "nodeName": "synthesize", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "PACKAGE_PATH", "type": "str"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "DICT_PATH", "type": "Union[str, unicode]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "DEFAULT_ET_PATH", "type": "Union[str, unicode]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "DEFAULT_ET3_PATH", "type": "Union[str, unicode]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "phonetic_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "compound_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "all_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "phonetic_regex", "type": "Pattern[unicode]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "compound_regex", "type": "Pattern[unicode]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "instance", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "analyze", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "spellcheck", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "fix_spelling", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "synthesize", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "__file__", "type": "str"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "PACKAGE_PATH", "type": "str"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "DICT_PATH", "type": "Union[str, unicode]"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "DICT_PATH", "type": "Union[str, unicode]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "phonetic_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "compound_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "regex_from_markers", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "phonetic_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "regex_from_markers", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "compound_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "PY2", "type": "bool"}, {"lineNumber": 79, "col_offset": 7, "nodeName": "PY2", "type": "bool"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "morphresult", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "root", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "grouptoks", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "toks", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 368, "col_offset": 11, "nodeName": "root", "type": "Union[unicode, Any]"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "groups", "type": "List[List[Union[Any, unicode]]]"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 390, "col_offset": 11, "nodeName": "groups", "type": "List[List[Union[Any, unicode]]]"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "lemma", "type": "unicode"}, {"lineNumber": 396, "col_offset": 11, "nodeName": "lemma", "type": "unicode"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "six", "type": "module"}, {"lineNumber": 79, "col_offset": 7, "nodeName": "six", "type": "module"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "morf", "type": "Any"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "DEFAULT_ET_PATH", "type": "Union[unicode, str]"}, {"lineNumber": 111, "col_offset": 65, "nodeName": "DEFAULT_ET3_PATH", "type": "Union[str, unicode]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "_morf", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "trim_phonetic", "type": "Union[Any, bool]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "trim_compound", "type": "Union[Any, bool]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "spellresults", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "results", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "spellresult", "type": "Any"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "spellresults", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "results", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "fixed_words", "type": "List[Any]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "word", "type": "Dict[unicode, Any]"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "join", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "word", "type": "Any"}, {"lineNumber": 289, "col_offset": 10, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 296, "col_offset": 21, "nodeName": "root", "type": "Any"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "get_group_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 33, "nodeName": "root", "type": "Any"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 300, "col_offset": 18, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 300, "col_offset": 32, "nodeName": "grouptoks", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "get_lemma", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "grouptoks", "type": "Any"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "partofspeech", "type": "Any"}, {"lineNumber": 305, "col_offset": 23, "nodeName": "toks", "type": "Any"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 328, "col_offset": 7, "nodeName": "root", "type": "Union[unicode, Any]"}, {"lineNumber": 328, "col_offset": 15, "nodeName": "phonetic_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "root", "type": "Union[unicode, Any]"}, {"lineNumber": 346, "col_offset": 7, "nodeName": "root", "type": "Any"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "compound_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "phonetic", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "root", "type": "Union[Any, unicode]"}, {"lineNumber": 366, "col_offset": 11, "nodeName": "compound", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "root", "type": "Union[unicode, Any]"}, {"lineNumber": 387, "col_offset": 17, "nodeName": "split", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "toks", "type": "List[Union[Any, unicode]]"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "lemma", "type": "unicode"}, {"lineNumber": 431, "col_offset": 11, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 431, "col_offset": 39, "nodeName": "words", "type": "Any"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "spellcheck", "type": "Any"}, {"lineNumber": 455, "col_offset": 42, "nodeName": "words", "type": "Any"}, {"lineNumber": 455, "col_offset": 49, "nodeName": "suggestions", "type": "Any"}, {"lineNumber": 481, "col_offset": 11, "nodeName": "fix_spelling", "type": "Any"}, {"lineNumber": 481, "col_offset": 44, "nodeName": "words", "type": "Any"}, {"lineNumber": 481, "col_offset": 51, "nodeName": "join", "type": "Any"}, {"lineNumber": 481, "col_offset": 57, "nodeName": "joinstring", "type": "Any"}, {"lineNumber": 507, "col_offset": 11, "nodeName": "synthesize", "type": "Any"}, {"lineNumber": 507, "col_offset": 42, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 507, "col_offset": 49, "nodeName": "form", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "word", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "unicode", "type": "Type[unicode]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "decode", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "pid", "type": "int"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "morf", "type": "Vabamorf"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "Vabamorf", "type": "Type[Vabamorf]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "Vabamorf"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "Vabamorf", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "words", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "string_types", "type": "Tuple[Type[str], Type[unicode]]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "words", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "words", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "string_types", "type": "Tuple[Type[str], Type[unicode]]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "words", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "spellcheck", "type": "Any"}, {"lineNumber": 200, "col_offset": 45, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 52, "nodeName": "suggestions", "type": "bool"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "suggestions", "type": "List[Any]"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "spellcheck", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 36, "nodeName": "words", "type": "Any"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "fixed_words", "type": "List[Any]"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "synthesize", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "guess", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "phonetic", "type": "Any"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "word", "type": "Any"}, {"lineNumber": 296, "col_offset": 21, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 300, "col_offset": 18, "nodeName": "operator", "type": "module"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "get_root", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 304, "col_offset": 25, "nodeName": "root", "type": "Any"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "trim_phonetic", "type": "Union[Any, bool]"}, {"lineNumber": 304, "col_offset": 46, "nodeName": "trim_compound", "type": "Union[Any, bool]"}, {"lineNumber": 306, "col_offset": 18, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 306, "col_offset": 28, "nodeName": "ending", "type": "Any"}, {"lineNumber": 307, "col_offset": 18, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "clitic", "type": "Any"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 308, "col_offset": 34, "nodeName": "partofspeech", "type": "Any"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "form", "type": "Any"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 331, "col_offset": 38, "nodeName": "root", "type": "Union[unicode, Any]"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 349, "col_offset": 38, "nodeName": "root", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "trim_phonetics", "type": "Callable[[Any], Any]"}, {"lineNumber": 365, "col_offset": 30, "nodeName": "root", "type": "Any"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "trim_compounds", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 30, "nodeName": "root", "type": "Union[unicode, Any]"}, {"lineNumber": 384, "col_offset": 7, "nodeName": "root", "type": "Any"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "all_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 384, "col_offset": 30, "nodeName": "root", "type": "Any"}, {"lineNumber": 387, "col_offset": 17, "nodeName": "root", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 389, "col_offset": 22, "nodeName": "toks", "type": "List[Union[Any, unicode]]"}, {"lineNumber": 394, "col_offset": 7, "nodeName": "partofspeech", "type": "Any"}, {"lineNumber": 394, "col_offset": 31, "nodeName": "lemma", "type": "unicode"}, {"lineNumber": 431, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 507, "col_offset": 86, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "encode", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "encode", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "word", "type": "Any"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "pid", "type": "int"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "Vabamorf", "type": "Type[Vabamorf]"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "getpid", "type": "Callable[[], int]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "Vabamorf", "type": "Type[Vabamorf]"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "Vabamorf", "type": "Type[Vabamorf]"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "vm", "type": "Any"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 41, "nodeName": "lex_path", "type": "Any"}, {"lineNumber": 125, "col_offset": 52, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 60, "nodeName": "disamb_lex_path", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "six", "type": "module"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "w", "type": "Any"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "words", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "_morf", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "StringVector", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "postprocess_result", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "mr", "type": "Any"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "trim_phonetic", "type": "Union[bool, Any]"}, {"lineNumber": 170, "col_offset": 54, "nodeName": "trim_compound", "type": "Union[Any, bool]"}, {"lineNumber": 170, "col_offset": 73, "nodeName": "mr", "type": "Any"}, {"lineNumber": 170, "col_offset": 79, "nodeName": "morfresults", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "six", "type": "module"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "w", "type": "Any"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 198, "col_offset": 37, "nodeName": "words", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "_morf", "type": "Any"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "spelling", "type": "Any"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "suggestions", "type": "List[Any]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "result", "type": "Dict[unicode, Any]"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "self", "type": "Vabamorf"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "word", "type": "Dict[unicode, Any]"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "suggestions", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "join", "type": "Any"}, {"lineNumber": 247, "col_offset": 35, "nodeName": "fixed_words", "type": "List[Any]"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "_morf", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "form", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 26, "nodeName": "w", "type": "Any"}, {"lineNumber": 284, "col_offset": 33, "nodeName": "w", "type": "Any"}, {"lineNumber": 284, "col_offset": 38, "nodeName": "words", "type": "Any"}, {"lineNumber": 292, "col_offset": 21, "nodeName": "postprocess_analysis", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 292, "col_offset": 42, "nodeName": "a", "type": "Any"}, {"lineNumber": 292, "col_offset": 45, "nodeName": "trim_phonetic", "type": "Union[Any, bool]"}, {"lineNumber": 292, "col_offset": 60, "nodeName": "trim_compound", "type": "Union[bool, Any]"}, {"lineNumber": 292, "col_offset": 79, "nodeName": "a", "type": "Any"}, {"lineNumber": 292, "col_offset": 84, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 306, "col_offset": 28, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 308, "col_offset": 34, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "phonetic_regex", "type": "Pattern[unicode]"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "compound_regex", "type": "Pattern[unicode]"}, {"lineNumber": 385, "col_offset": 17, "nodeName": "root", "type": "Any"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "trim_phonetics", "type": "Callable[[Any], Any]"}, {"lineNumber": 388, "col_offset": 56, "nodeName": "tok", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "groups", "type": "List[List[Union[Any, unicode]]]"}, {"lineNumber": 393, "col_offset": 22, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 393, "col_offset": 30, "nodeName": "gr", "type": "Any"}, {"lineNumber": 393, "col_offset": 38, "nodeName": "gr", "type": "Any"}, {"lineNumber": 393, "col_offset": 44, "nodeName": "grouptoks", "type": "Any"}, {"lineNumber": 431, "col_offset": 11, "nodeName": "instance", "type": "Callable[[], Any]"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "instance", "type": "Callable[[], Any]"}, {"lineNumber": 481, "col_offset": 11, "nodeName": "instance", "type": "Callable[[], Any]"}, {"lineNumber": 507, "col_offset": 11, "nodeName": "instance", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "escape", "type": "Callable"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "c", "type": "unicode"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "c", "type": "unicode"}, {"lineNumber": 58, "col_offset": 54, "nodeName": "markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "word", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "Vabamorf", "type": "Type[Vabamorf]"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "Vabamorf", "type": "Type[Vabamorf]"}, {"lineNumber": 106, "col_offset": 59, "nodeName": "getpid", "type": "Callable[[], int]"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "words", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "self", "type": "Vabamorf"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "vm", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "words", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "self", "type": "Vabamorf"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 37, "nodeName": "s", "type": "Any"}, {"lineNumber": 203, "col_offset": 44, "nodeName": "s", "type": "Any"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "suggestions", "type": "Any"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "word", "type": "Any"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "spellresult", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "results", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 241, "col_offset": 30, "nodeName": "word", "type": "Dict[unicode, Any]"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "joinstring", "type": "Any"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "self", "type": "Vabamorf"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 388, "col_offset": 31, "nodeName": "trim_compounds", "type": "Callable[[Any], Any]"}, {"lineNumber": 388, "col_offset": 46, "nodeName": "tok", "type": "Any"}, {"lineNumber": 388, "col_offset": 63, "nodeName": "split", "type": "Any"}, {"lineNumber": 431, "col_offset": 11, "nodeName": "Vabamorf", "type": "Type[Vabamorf]"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "Vabamorf", "type": "Type[Vabamorf]"}, {"lineNumber": 481, "col_offset": 11, "nodeName": "Vabamorf", "type": "Type[Vabamorf]"}, {"lineNumber": 507, "col_offset": 11, "nodeName": "Vabamorf", "type": "Type[Vabamorf]"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "re", "type": "module"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "decode", "type": "Any"}, {"lineNumber": 106, "col_offset": 59, "nodeName": "os", "type": "module"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "spellresult", "type": "Any"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "spellresult", "type": "Any"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "fixed_words", "type": "List[Any]"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "word", "type": "Dict[unicode, Any]"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "suggestions", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 245, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 388, "col_offset": 63, "nodeName": "group", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "word", "type": "Any"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "fixed_words", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "suggestions", "type": "List[Any]"}, {"lineNumber": 245, "col_offset": 20, "nodeName": "fixed_words", "type": "List[Any]"}, {"lineNumber": 245, "col_offset": 39, "nodeName": "word", "type": "Dict[unicode, Any]"}]