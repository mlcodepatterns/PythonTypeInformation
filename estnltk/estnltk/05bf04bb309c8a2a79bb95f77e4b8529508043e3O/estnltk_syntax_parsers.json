[{"lineNumber": 32, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 302, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "preprocessor", "type": "None"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "vislcg3_processor", "type": "None"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "maltparser_dir", "type": "Any"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "MALTPARSER_PATH", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 326, "col_offset": 24, "nodeName": "MALTPARSER_MODEL", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "maltparser_jar", "type": "Any"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "MALTPARSER_JAR", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "add_ambiguous_pos", "type": "bool"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "augment_words", "type": "bool"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "all_return_types", "type": "List[str]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "return_type", "type": "str"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "result_lines1", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "result_lines2", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "alignments", "type": "List[Dict[str, Any]]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "alignments", "type": "List[Dict[str, Any]]"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "alignments", "type": "List[Dict[str, Any]]"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "augment_words", "type": "Union[Any, bool]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "j", "type": "int"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "augment_words", "type": "bool"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "all_return_types", "type": "List[str]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "return_type", "type": "str"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "textConllStr", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "resultsConllStr", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 469, "col_offset": 28, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 470, "col_offset": 11, "nodeName": "augment_words", "type": "bool"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "argName", "type": "str"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "items", "type": "Callable"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "preprocessor", "type": "estnltk.syntax.syntax_preprocessing.SyntaxPreprocessing"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "vislcg3_processor", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "vislcg3_processor", "type": "estnltk.syntax.vislcg3_syntax.VISLCG3Pipeline"}, {"lineNumber": 206, "col_offset": 27, "nodeName": "all_return_types", "type": "List[str]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "argName", "type": "str"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "items", "type": "Callable"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 217, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 218, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 219, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "process_Text", "type": "Union[Any, Callable[..., Any]]"}, {"lineNumber": 224, "col_offset": 43, "nodeName": "text", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "process_lines", "type": "Union[Any, Callable[..., Any]]"}, {"lineNumber": 226, "col_offset": 49, "nodeName": "result_lines1", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "align_cg3_with_Text", "type": "Callable[..., List[Dict[str, Any]]]"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "result_lines2", "type": "Any"}, {"lineNumber": 228, "col_offset": 47, "nodeName": "text", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "normalise_alignments", "type": "Callable"}, {"lineNumber": 230, "col_offset": 34, "nodeName": "alignments", "type": "List[Dict[str, Any]]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "return_type", "type": "Union[Any, str]"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "result_lines2", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "argName", "type": "str"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 257, "col_offset": 31, "nodeName": "items", "type": "Callable"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "divide", "type": "Any"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "argName", "type": "str"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 351, "col_offset": 31, "nodeName": "items", "type": "Callable"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "maltparser_dir", "type": "Any"}, {"lineNumber": 439, "col_offset": 27, "nodeName": "all_return_types", "type": "List[str]"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "argName", "type": "str"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 440, "col_offset": 31, "nodeName": "items", "type": "Callable"}, {"lineNumber": 455, "col_offset": 23, "nodeName": "convertTextToCONLLstr", "type": "Any"}, {"lineNumber": 455, "col_offset": 45, "nodeName": "text", "type": "Any"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "_executeMaltparser", "type": "Any"}, {"lineNumber": 459, "col_offset": 32, "nodeName": "textConllStr", "type": "Any"}, {"lineNumber": 459, "col_offset": 46, "nodeName": "maltparser_dir", "type": "Any"}, {"lineNumber": 460, "col_offset": 46, "nodeName": "maltparser_jar", "type": "Any"}, {"lineNumber": 461, "col_offset": 46, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "align_CONLL_with_Text", "type": "Any"}, {"lineNumber": 464, "col_offset": 35, "nodeName": "resultsConllStr", "type": "Any"}, {"lineNumber": 464, "col_offset": 52, "nodeName": "text", "type": "Any"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "normalise_alignments", "type": "Callable"}, {"lineNumber": 466, "col_offset": 34, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 475, "col_offset": 11, "nodeName": "return_type", "type": "Union[Any, str]"}, {"lineNumber": 476, "col_offset": 19, "nodeName": "resultsConllStr", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "_filter_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "SyntaxPreprocessing", "type": "Type[estnltk.syntax.syntax_preprocessing.SyntaxPreprocessing]"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "_filter_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "VISLCG3Pipeline", "type": "Type[estnltk.syntax.vislcg3_syntax.VISLCG3Pipeline]"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 217, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 218, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 219, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "preprocessor", "type": "Union[Any, estnltk.syntax.syntax_preprocessing.SyntaxPreprocessing]"}, {"lineNumber": 224, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "vislcg3_processor", "type": "Union[Any, estnltk.syntax.vislcg3_syntax.VISLCG3Pipeline]"}, {"lineNumber": 226, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 228, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 230, "col_offset": 56, "nodeName": "VISLCG3_DATA", "type": "str"}, {"lineNumber": 230, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "LAYER_VISLCG3", "type": "str"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "_augment_text_w_syntactic_info", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 235, "col_offset": 49, "nodeName": "text", "type": "Any"}, {"lineNumber": 238, "col_offset": 13, "nodeName": "return_type", "type": "Union[Any, str]"}, {"lineNumber": 257, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 258, "col_offset": 34, "nodeName": "keep_list", "type": "List[str]"}, {"lineNumber": 259, "col_offset": 46, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "text", "type": "Any"}, {"lineNumber": 275, "col_offset": 43, "nodeName": "WORDS", "type": "str"}, {"lineNumber": 275, "col_offset": 53, "nodeName": "SENTENCES", "type": "str"}, {"lineNumber": 276, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "estnltkToken", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "vislcg3Token", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "parse_found", "type": "bool"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 351, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "argName", "type": "str"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "maltparser_dir", "type": "Any"}, {"lineNumber": 353, "col_offset": 38, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "self", "type": "MaltParser"}, {"lineNumber": 363, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 440, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 441, "col_offset": 15, "nodeName": "argName", "type": "str"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "is_tagged", "type": "Any"}, {"lineNumber": 452, "col_offset": 30, "nodeName": "ANALYSIS", "type": "str"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "tag_analysis", "type": "Any"}, {"lineNumber": 456, "col_offset": 69, "nodeName": "add_ambiguous_pos", "type": "bool"}, {"lineNumber": 459, "col_offset": 46, "nodeName": "self", "type": "MaltParser"}, {"lineNumber": 460, "col_offset": 46, "nodeName": "self", "type": "MaltParser"}, {"lineNumber": 461, "col_offset": 46, "nodeName": "self", "type": "MaltParser"}, {"lineNumber": 464, "col_offset": 60, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 466, "col_offset": 56, "nodeName": "CONLL_DATA", "type": "str"}, {"lineNumber": 466, "col_offset": 70, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 469, "col_offset": 13, "nodeName": "LAYER_CONLL", "type": "str"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "augmentTextWithCONLLstr", "type": "Any"}, {"lineNumber": 474, "col_offset": 37, "nodeName": "resultsConllStr", "type": "Any"}, {"lineNumber": 474, "col_offset": 54, "nodeName": "text", "type": "Any"}, {"lineNumber": 477, "col_offset": 13, "nodeName": "return_type", "type": "Union[Any, str]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "argName", "type": "str"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "SyntaxPreprocessing", "type": "Type[estnltk.syntax.syntax_preprocessing.SyntaxPreprocessing]"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "vislcg3_processor", "type": "Any"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 130, "col_offset": 73, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 55, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 135, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 56, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "all_return_types", "type": "List[str]"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "augment_words", "type": "Any"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 235, "col_offset": 55, "nodeName": "text", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "build_trees_from_text", "type": "Callable[..., List[Any]]"}, {"lineNumber": 239, "col_offset": 42, "nodeName": "text", "type": "Any"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "return_type", "type": "Union[Any, str]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "graphs", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "graphs", "type": "List[Any]"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "text", "type": "Any"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 276, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 278, "col_offset": 31, "nodeName": "text_layer", "type": "Any"}, {"lineNumber": 280, "col_offset": 19, "nodeName": "PARSER_OUT", "type": "str"}, {"lineNumber": 280, "col_offset": 33, "nodeName": "vislcg3Token", "type": "Any"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "parse_found", "type": "bool"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "self", "type": "MaltParser"}, {"lineNumber": 354, "col_offset": 17, "nodeName": "argName", "type": "str"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 355, "col_offset": 34, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 364, "col_offset": 32, "nodeName": "maltparser_dir", "type": "Any"}, {"lineNumber": 365, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 365, "col_offset": 60, "nodeName": "maltparser_dir", "type": "Any"}, {"lineNumber": 366, "col_offset": 17, "nodeName": "maltparser_jar", "type": "Any"}, {"lineNumber": 442, "col_offset": 37, "nodeName": "all_return_types", "type": "List[str]"}, {"lineNumber": 443, "col_offset": 20, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 447, "col_offset": 16, "nodeName": "augment_words", "type": "bool"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 456, "col_offset": 69, "nodeName": "self", "type": "MaltParser"}, {"lineNumber": 478, "col_offset": 19, "nodeName": "build_trees_from_text", "type": "Callable[..., List[Any]]"}, {"lineNumber": 478, "col_offset": 42, "nodeName": "text", "type": "Any"}, {"lineNumber": 479, "col_offset": 13, "nodeName": "return_type", "type": "Union[Any, str]"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "graphs", "type": "List[Any]"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "graphs", "type": "List[Any]"}, {"lineNumber": 492, "col_offset": 19, "nodeName": "text", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "argName", "type": "str"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 124, "col_offset": 42, "nodeName": "VISLCG3Pipeline", "type": "Type[estnltk.syntax.vislcg3_syntax.VISLCG3Pipeline]"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "argName", "type": "str"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "lower", "type": "Any"}, {"lineNumber": 212, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 212, "col_offset": 65, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 213, "col_offset": 56, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 235, "col_offset": 60, "nodeName": "LAYER_VISLCG3", "type": "str"}, {"lineNumber": 239, "col_offset": 54, "nodeName": "LAYER_VISLCG3", "type": "str"}, {"lineNumber": 239, "col_offset": 71, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 241, "col_offset": 20, "nodeName": "build_trees_from_text", "type": "Callable[..., List[Any]]"}, {"lineNumber": 241, "col_offset": 43, "nodeName": "text", "type": "Any"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "argName", "type": "str"}, {"lineNumber": 277, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 278, "col_offset": 42, "nodeName": "j", "type": "int"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "firstParse", "type": "Any"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "deprels", "type": "str"}, {"lineNumber": 288, "col_offset": 53, "nodeName": "deprels", "type": "str"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "parse_found", "type": "bool"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 292, "col_offset": 36, "nodeName": "estnltkToken", "type": "Any"}, {"lineNumber": 292, "col_offset": 60, "nodeName": "vislcg3Token", "type": "Any"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "self", "type": "MaltParser"}, {"lineNumber": 356, "col_offset": 17, "nodeName": "argName", "type": "str"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "maltparser_jar", "type": "Any"}, {"lineNumber": 357, "col_offset": 38, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 364, "col_offset": 32, "nodeName": "self", "type": "MaltParser"}, {"lineNumber": 365, "col_offset": 60, "nodeName": "self", "type": "MaltParser"}, {"lineNumber": 366, "col_offset": 17, "nodeName": "self", "type": "MaltParser"}, {"lineNumber": 367, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 368, "col_offset": 17, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 442, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 443, "col_offset": 34, "nodeName": "lower", "type": "Any"}, {"lineNumber": 445, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 445, "col_offset": 65, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 446, "col_offset": 17, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 447, "col_offset": 32, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 447, "col_offset": 37, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 478, "col_offset": 54, "nodeName": "LAYER_CONLL", "type": "str"}, {"lineNumber": 478, "col_offset": 69, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 480, "col_offset": 20, "nodeName": "build_trees_from_text", "type": "Callable[..., List[Any]]"}, {"lineNumber": 480, "col_offset": 43, "nodeName": "text", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 241, "col_offset": 55, "nodeName": "LAYER_VISLCG3", "type": "str"}, {"lineNumber": 241, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, str]]"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "as_dependencygraph", "type": "Any"}, {"lineNumber": 242, "col_offset": 52, "nodeName": "tree", "type": "Any"}, {"lineNumber": 242, "col_offset": 60, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "estnltkToken", "type": "Any"}, {"lineNumber": 284, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 284, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "estnltkToken", "type": "Any"}, {"lineNumber": 285, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "estnltkToken", "type": "Any"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "self", "type": "MaltParser"}, {"lineNumber": 358, "col_offset": 17, "nodeName": "argName", "type": "str"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "add_ambiguous_pos", "type": "bool"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 368, "col_offset": 17, "nodeName": "self", "type": "MaltParser"}, {"lineNumber": 369, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 442, "col_offset": 19, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 443, "col_offset": 34, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 446, "col_offset": 17, "nodeName": "argName", "type": "str"}, {"lineNumber": 480, "col_offset": 55, "nodeName": "LAYER_CONLL", "type": "str"}, {"lineNumber": 480, "col_offset": 70, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 481, "col_offset": 22, "nodeName": "as_dependencygraph", "type": "Any"}, {"lineNumber": 481, "col_offset": 52, "nodeName": "tree", "type": "Any"}, {"lineNumber": 481, "col_offset": 60, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "argName", "type": "str"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "tree", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "argName", "type": "str"}, {"lineNumber": 281, "col_offset": 28, "nodeName": "vislcg3Token", "type": "Any"}, {"lineNumber": 282, "col_offset": 37, "nodeName": "vislcg3Token", "type": "Any"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "SYNTAX_LABEL", "type": "str"}, {"lineNumber": 285, "col_offset": 37, "nodeName": "SYNTAX_HEAD", "type": "str"}, {"lineNumber": 285, "col_offset": 57, "nodeName": "firstParse", "type": "Any"}, {"lineNumber": 288, "col_offset": 37, "nodeName": "DEPREL", "type": "str"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "self", "type": "MaltParser"}, {"lineNumber": 359, "col_offset": 41, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 359, "col_offset": 46, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 361, "col_offset": 22, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 481, "col_offset": 22, "nodeName": "tree", "type": "Any"}, {"lineNumber": 281, "col_offset": 41, "nodeName": "PARSER_OUT", "type": "str"}, {"lineNumber": 282, "col_offset": 50, "nodeName": "PARSER_OUT", "type": "str"}, {"lineNumber": 287, "col_offset": 45, "nodeName": "p", "type": "Any"}, {"lineNumber": 287, "col_offset": 54, "nodeName": "p", "type": "Any"}, {"lineNumber": 361, "col_offset": 64, "nodeName": "argName", "type": "str"}, {"lineNumber": 287, "col_offset": 59, "nodeName": "vislcg3Token", "type": "Any"}, {"lineNumber": 287, "col_offset": 72, "nodeName": "PARSER_OUT", "type": "str"}]