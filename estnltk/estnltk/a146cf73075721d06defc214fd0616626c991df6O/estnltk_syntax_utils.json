[{"lineNumber": 46, "col_offset": 0, "nodeName": "normalise_alignments", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 0, "nodeName": "read_text_from_cg3_file", "type": "Callable[..., Any]"}, {"lineNumber": 350, "col_offset": 0, "nodeName": "read_text_from_conll_file", "type": "Callable[..., Any]"}, {"lineNumber": 732, "col_offset": 0, "nodeName": "build_trees_from_text", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "CONLL_DATA", "type": "unicode"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "VISLCG3_DATA", "type": "unicode"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "LAYER_CONLL", "type": "unicode"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "LAYER_VISLCG3", "type": "unicode"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "SENT_ID", "type": "unicode"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "PARSER_OUT", "type": "unicode"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "INIT_PARSER_OUT", "type": "unicode"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "pat_cg3_surface_rel", "type": "Pattern[unicode]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "pat_cg3_dep_rel", "type": "Pattern[unicode]"}, {"lineNumber": 250, "col_offset": 0, "nodeName": "pat_double_quoted", "type": "Pattern[unicode]"}, {"lineNumber": 251, "col_offset": 0, "nodeName": "pat_cg3_word_token", "type": "Pattern[unicode]"}, {"lineNumber": 434, "col_offset": 11, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "add_child_to_self", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "add_child_to_subtree", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "get_root", "type": "Callable[..., Any]"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "get_children", "type": "Callable[..., Any]"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "as_dependencygraph", "type": "Callable[..., Any]"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "as_nltk_tree", "type": "Callable[[Any], Any]"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "get_tree_depth", "type": "Callable[[Any], Any]"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "debug_print_tree", "type": "Callable[..., Any]"}, {"lineNumber": 791, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 897, "col_offset": 4, "nodeName": "parse_text", "type": "Callable[..., Any]"}, {"lineNumber": 1003, "col_offset": 4, "nodeName": "_filter_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 1018, "col_offset": 4, "nodeName": "_augment_text_w_syntactic_info", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "VISLCG3_DATA", "type": "unicode"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "keep_old", "type": "bool"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "rep_miss_w_dummy", "type": "bool"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "mark_root", "type": "bool"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "fix_selfrefs", "type": "bool"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "prev_sent_id", "type": "int"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "wordID", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 253, "col_offset": 51, "nodeName": "LAYER_VISLCG3", "type": "unicode"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "clean_up", "type": "bool"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "cg3_lines", "type": "List[Any]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "in_f", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "in_f", "type": "Any"}, {"lineNumber": 302, "col_offset": 7, "nodeName": "clean_up", "type": "Union[Any, bool]"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "sentences", "type": "List[unicode]"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "sentence", "type": "List[unicode]"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 346, "col_offset": 25, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 350, "col_offset": 53, "nodeName": "LAYER_CONLL", "type": "unicode"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "conll_lines", "type": "List[Any]"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "in_f", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "in_f", "type": "Any"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "sentences", "type": "List[unicode]"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "sentence", "type": "List[Any]"}, {"lineNumber": 405, "col_offset": 7, "nodeName": "sentence", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "alignments", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 423, "col_offset": 25, "nodeName": "alignments", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "word_id", "type": "None"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "gen_word_id", "type": "None"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "sent_id", "type": "None"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "labels", "type": "None"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "parent", "type": "None"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "children", "type": "None"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "token", "type": "None"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "text", "type": "None"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "morph", "type": "None"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "syntax_token", "type": "None"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "parser", "type": "None"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "parser_output", "type": "None"}, {"lineNumber": 686, "col_offset": 68, "nodeName": "LAYER_VISLCG3", "type": "unicode"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "trees_of_sentence", "type": "List[Tree]"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "nodes", "type": "List[int]"}, {"lineNumber": 728, "col_offset": 11, "nodeName": "trees_of_sentence", "type": "List[Tree]"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "text_sentences", "type": "List[Any]"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "all_sentence_trees", "type": "List[Tree]"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "prev_sent_id", "type": "int"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "current_sentence", "type": "List[Any]"}, {"lineNumber": 751, "col_offset": 4, "nodeName": "k", "type": "int"}, {"lineNumber": 771, "col_offset": 7, "nodeName": "current_sentence", "type": "List[Any]"}, {"lineNumber": 781, "col_offset": 11, "nodeName": "all_sentence_trees", "type": "List[Tree]"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "preprocessor", "type": "None"}, {"lineNumber": 821, "col_offset": 4, "nodeName": "vislcg3_processor", "type": "None"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "re", "type": "module"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "re", "type": "module"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "VISLCG3_DATA", "type": "unicode"}, {"lineNumber": 145, "col_offset": 7, "nodeName": "data_type", "type": "unicode"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "VISLCG3_DATA", "type": "unicode"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "argName", "type": "Union[str, unicode]"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "argVal", "type": "Union[Any, bool, unicode]"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "items", "type": "Callable"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "foundRelations", "type": "List[Union[List[Any], List[Union[unicode, int]]]]"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "fix_selfrefs", "type": "Union[unicode, bool, Any]"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "mark_root", "type": "Union[bool, unicode, Any]"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "prev_sent_id", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "wordID", "type": "int"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "re", "type": "module"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "re", "type": "module"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "argName", "type": "str"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 291, "col_offset": 27, "nodeName": "items", "type": "Callable"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 297, "col_offset": 23, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "cg3_lines", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 308, "col_offset": 11, "nodeName": "line", "type": "Any"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 308, "col_offset": 30, "nodeName": "cg3_lines", "type": "Any"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "Text", "type": "Type[estnltk.text.Text]"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "tokenize_words", "type": "Callable"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "align_cg3_with_Text", "type": "Any"}, {"lineNumber": 343, "col_offset": 38, "nodeName": "cg3_lines", "type": "Any"}, {"lineNumber": 343, "col_offset": 49, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "normalise_alignments", "type": "Callable[..., Any]"}, {"lineNumber": 344, "col_offset": 26, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "line", "type": "Any"}, {"lineNumber": 388, "col_offset": 19, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 388, "col_offset": 30, "nodeName": "conll_lines", "type": "List[Any]"}, {"lineNumber": 415, "col_offset": 11, "nodeName": "Text", "type": "Type[estnltk.text.Text]"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "tokenize_words", "type": "Callable"}, {"lineNumber": 420, "col_offset": 17, "nodeName": "align_CONLL_with_Text", "type": "Callable[..., List[Dict[unicode, Any]]]"}, {"lineNumber": 420, "col_offset": 40, "nodeName": "conll_lines", "type": "List[Any]"}, {"lineNumber": 420, "col_offset": 53, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "normalise_alignments", "type": "Callable[..., Any]"}, {"lineNumber": 421, "col_offset": 26, "nodeName": "alignments", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "token", "type": "Any"}, {"lineNumber": 465, "col_offset": 23, "nodeName": "token", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "word_id", "type": "Any"}, {"lineNumber": 466, "col_offset": 23, "nodeName": "word_id", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "sent_id", "type": "Any"}, {"lineNumber": 467, "col_offset": 23, "nodeName": "sent_id", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "labels", "type": "Any"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "parser", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "parent", "type": "Tree"}, {"lineNumber": 507, "col_offset": 22, "nodeName": "self", "type": "Tree"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "depth_limit", "type": "int"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "include_self", "type": "bool"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "subtrees", "type": "List[Any]"}, {"lineNumber": 563, "col_offset": 11, "nodeName": "include_self", "type": "bool"}, {"lineNumber": 579, "col_offset": 15, "nodeName": "subtrees", "type": "List[Any]"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "all_tree_nodes", "type": "Union[List[Tree], List[Union[Tree, Any]], List[Any]]"}, {"lineNumber": 608, "col_offset": 11, "nodeName": "keep_dummy_root", "type": "Any"}, {"lineNumber": 619, "col_offset": 12, "nodeName": "child", "type": "Any"}, {"lineNumber": 619, "col_offset": 21, "nodeName": "all_tree_nodes", "type": "Union[List[Any], List[Union[Tree, Any]], List[Tree]]"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "child", "type": "Any"}, {"lineNumber": 636, "col_offset": 21, "nodeName": "all_tree_nodes", "type": "Union[List[Any], List[Union[Tree, Any]], List[Tree]]"}, {"lineNumber": 650, "col_offset": 15, "nodeName": "graph", "type": "Any"}, {"lineNumber": 665, "col_offset": 12, "nodeName": "children", "type": "Union[Any, List[Any]]"}, {"lineNumber": 678, "col_offset": 12, "nodeName": "children", "type": "Union[Any, List[Any]]"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "node", "type": "int"}, {"lineNumber": 743, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 743, "col_offset": 22, "nodeName": "text", "type": "Any"}, {"lineNumber": 743, "col_offset": 28, "nodeName": "Text", "type": "Type[estnltk.text.Text]"}, {"lineNumber": 745, "col_offset": 11, "nodeName": "layer", "type": "unicode"}, {"lineNumber": 745, "col_offset": 20, "nodeName": "text", "type": "Any"}, {"lineNumber": 747, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 752, "col_offset": 10, "nodeName": "k", "type": "int"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "node_desc", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "prev_sent_id", "type": "Any"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "k", "type": "int"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 959, "col_offset": 8, "nodeName": "augment_words", "type": "bool"}, {"lineNumber": 960, "col_offset": 8, "nodeName": "all_return_types", "type": "List[unicode]"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "return_type", "type": "unicode"}, {"lineNumber": 988, "col_offset": 30, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 989, "col_offset": 11, "nodeName": "augment_words", "type": "Union[Any, bool]"}, {"lineNumber": 1011, "col_offset": 8, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1015, "col_offset": 15, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1029, "col_offset": 8, "nodeName": "j", "type": "int"}, {"lineNumber": 1030, "col_offset": 12, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 144, "col_offset": 7, "nodeName": "lower", "type": "Callable[[], unicode]"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "CONLL_DATA", "type": "unicode"}, {"lineNumber": 147, "col_offset": 7, "nodeName": "data_type", "type": "unicode"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "CONLL_DATA", "type": "unicode"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "fix_selfrefs", "type": "Union[unicode, bool, Any]"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "argVal", "type": "Union[unicode, bool, Any]"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "keep_old", "type": "Union[unicode, bool, Any]"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "argVal", "type": "Union[unicode, bool, Any]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "rep_miss_w_dummy", "type": "Union[unicode, bool, Any]"}, {"lineNumber": 163, "col_offset": 30, "nodeName": "argVal", "type": "Union[unicode, bool, Any]"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "mark_root", "type": "Union[unicode, bool, Any]"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "argVal", "type": "Union[unicode, bool, Any]"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "prev_sent_id", "type": "int"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "wordID", "type": "int"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "data_type", "type": "unicode"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "VISLCG3_DATA", "type": "unicode"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "foundRelations", "type": "List[Union[List[Any], List[Union[unicode, int]]]]"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "rep_miss_w_dummy", "type": "Union[unicode, bool, Any]"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "r", "type": "int"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "r", "type": "int"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "keep_old", "type": "Union[bool, unicode, Any]"}, {"lineNumber": 232, "col_offset": 36, "nodeName": "foundRelations", "type": "List[Union[List[Any], List[Union[unicode, int]]]]"}, {"lineNumber": 236, "col_offset": 41, "nodeName": "foundRelations", "type": "List[Union[List[Any], List[Union[unicode, int]]]]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 238, "col_offset": 23, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 291, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 294, "col_offset": 11, "nodeName": "clean_up", "type": "Any"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "codecs", "type": "module"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "in_f", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "cleanup_lines", "type": "Any"}, {"lineNumber": 303, "col_offset": 35, "nodeName": "cg3_lines", "type": "List[Any]"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "line", "type": "Any"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "sentence", "type": "List[unicode]"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "sentence", "type": "List[unicode]"}, {"lineNumber": 335, "col_offset": 24, "nodeName": "RegexpTokenizer", "type": "Any"}, {"lineNumber": 336, "col_offset": 28, "nodeName": "LineTokenizer", "type": "Any"}, {"lineNumber": 338, "col_offset": 17, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 338, "col_offset": 27, "nodeName": "sentences", "type": "List[unicode]"}, {"lineNumber": 338, "col_offset": 41, "nodeName": "kwargs4text", "type": "Dict[unicode, Any]"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 343, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 344, "col_offset": 48, "nodeName": "VISLCG3_DATA", "type": "unicode"}, {"lineNumber": 344, "col_offset": 64, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 346, "col_offset": 10, "nodeName": "layer_name", "type": "Any"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "codecs", "type": "module"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "in_f", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "word_id", "type": "Any"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "token", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 412, "col_offset": 24, "nodeName": "RegexpTokenizer", "type": "Any"}, {"lineNumber": 413, "col_offset": 28, "nodeName": "LineTokenizer", "type": "Any"}, {"lineNumber": 415, "col_offset": 17, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 415, "col_offset": 27, "nodeName": "sentences", "type": "List[unicode]"}, {"lineNumber": 415, "col_offset": 41, "nodeName": "kwargs4text", "type": "Dict[unicode, Any]"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "text", "type": "estnltk.text.Text"}, {"lineNumber": 420, "col_offset": 61, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 421, "col_offset": 48, "nodeName": "CONLL_DATA", "type": "unicode"}, {"lineNumber": 421, "col_offset": 62, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 423, "col_offset": 10, "nodeName": "layer_name", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "self", "type": "Tree"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "self", "type": "Tree"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "Tree"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "self", "type": "Tree"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "self", "type": "Tree"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "argName", "type": "str"}, {"lineNumber": 471, "col_offset": 21, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 471, "col_offset": 31, "nodeName": "items", "type": "Callable"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "token", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "self", "type": "Tree"}, {"lineNumber": 496, "col_offset": 21, "nodeName": "token", "type": "Any"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "ANALYSIS", "type": "unicode"}, {"lineNumber": 497, "col_offset": 23, "nodeName": "token", "type": "Any"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "morph", "type": "Any"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 503, "col_offset": 26, "nodeName": "tree", "type": "Any"}, {"lineNumber": 503, "col_offset": 32, "nodeName": "Tree", "type": "Type[Tree]"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "children", "type": "Any"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "children", "type": "List[Any]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "append", "type": "Union[Any, Callable]"}, {"lineNumber": 508, "col_offset": 29, "nodeName": "tree", "type": "Any"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "word_id", "type": "Any"}, {"lineNumber": 517, "col_offset": 28, "nodeName": "parent_word_id", "type": "Any"}, {"lineNumber": 519, "col_offset": 14, "nodeName": "children", "type": "Union[List[Any], Any]"}, {"lineNumber": 529, "col_offset": 11, "nodeName": "parent", "type": "Any"}, {"lineNumber": 530, "col_offset": 19, "nodeName": "self", "type": "Tree"}, {"lineNumber": 558, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 566, "col_offset": 32, "nodeName": "children", "type": "Union[Any, List[Any]]"}, {"lineNumber": 568, "col_offset": 16, "nodeName": "child", "type": "Any"}, {"lineNumber": 568, "col_offset": 25, "nodeName": "children", "type": "Union[Any, List[Any]]"}, {"lineNumber": 574, "col_offset": 16, "nodeName": "child", "type": "Any"}, {"lineNumber": 574, "col_offset": 25, "nodeName": "children", "type": "Union[Any, List[Any]]"}, {"lineNumber": 603, "col_offset": 16, "nodeName": "DependencyGraph", "type": "Any"}, {"lineNumber": 614, "col_offset": 12, "nodeName": "root", "type": "Any"}, {"lineNumber": 615, "col_offset": 12, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 620, "col_offset": 12, "nodeName": "rel", "type": "unicode"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "address", "type": "Any"}, {"lineNumber": 621, "col_offset": 22, "nodeName": "word_id", "type": "Any"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "word", "type": "Any"}, {"lineNumber": 622, "col_offset": 22, "nodeName": "text", "type": "Any"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "deps", "type": "Union[List[nothing], List[Any]]"}, {"lineNumber": 639, "col_offset": 12, "nodeName": "head_address", "type": "Any"}, {"lineNumber": 639, "col_offset": 27, "nodeName": "word_id", "type": "Any"}, {"lineNumber": 640, "col_offset": 16, "nodeName": "dep", "type": "Any"}, {"lineNumber": 640, "col_offset": 23, "nodeName": "deps", "type": "Union[List[nothing], List[Any]]"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "head", "type": "Any"}, {"lineNumber": 660, "col_offset": 15, "nodeName": "tree", "type": "Any"}, {"lineNumber": 665, "col_offset": 12, "nodeName": "self", "type": "Tree"}, {"lineNumber": 666, "col_offset": 12, "nodeName": "depth", "type": "int"}, {"lineNumber": 667, "col_offset": 12, "nodeName": "childDepths", "type": "List[Any]"}, {"lineNumber": 668, "col_offset": 16, "nodeName": "child", "type": "Any"}, {"lineNumber": 668, "col_offset": 25, "nodeName": "children", "type": "Union[Any, List[Any]]"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 678, "col_offset": 12, "nodeName": "self", "type": "Tree"}, {"lineNumber": 679, "col_offset": 12, "nodeName": "spacing", "type": "Any"}, {"lineNumber": 680, "col_offset": 16, "nodeName": "child", "type": "Any"}, {"lineNumber": 680, "col_offset": 25, "nodeName": "children", "type": "Union[Any, List[Any]]"}, {"lineNumber": 699, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 699, "col_offset": 15, "nodeName": "nodes", "type": "List[int]"}, {"lineNumber": 700, "col_offset": 15, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 702, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 702, "col_offset": 15, "nodeName": "syntax_token", "type": "Any"}, {"lineNumber": 702, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 702, "col_offset": 42, "nodeName": "syntactic_relations", "type": "List[Any]"}, {"lineNumber": 703, "col_offset": 12, "nodeName": "parents", "type": "List[Any]"}, {"lineNumber": 706, "col_offset": 12, "nodeName": "parent", "type": "Any"}, {"lineNumber": 747, "col_offset": 27, "nodeName": "divide", "type": "Any"}, {"lineNumber": 752, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 754, "col_offset": 50, "nodeName": "current_sentence", "type": "List[Any]"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 768, "col_offset": 33, "nodeName": "node_desc", "type": "Any"}, {"lineNumber": 769, "col_offset": 23, "nodeName": "node_desc", "type": "Any"}, {"lineNumber": 772, "col_offset": 15, "nodeName": "prev_sent_id", "type": "Union[Any, int]"}, {"lineNumber": 774, "col_offset": 19, "nodeName": "text_sentences", "type": "List[Any]"}, {"lineNumber": 777, "col_offset": 12, "nodeName": "build_trees_from_sentence", "type": "Callable[..., Any]"}, {"lineNumber": 777, "col_offset": 39, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 777, "col_offset": 49, "nodeName": "current_sentence", "type": "List[Any]"}, {"lineNumber": 777, "col_offset": 67, "nodeName": "layer", "type": "unicode"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 780, "col_offset": 35, "nodeName": "trees_of_sentence", "type": "List[Tree]"}, {"lineNumber": 876, "col_offset": 11, "nodeName": "argName", "type": "str"}, {"lineNumber": 876, "col_offset": 20, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 876, "col_offset": 30, "nodeName": "items", "type": "Callable"}, {"lineNumber": 886, "col_offset": 14, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 889, "col_offset": 12, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 891, "col_offset": 14, "nodeName": "vislcg3_processor", "type": "Any"}, {"lineNumber": 894, "col_offset": 12, "nodeName": "vislcg3_processor", "type": "Any"}, {"lineNumber": 961, "col_offset": 27, "nodeName": "all_return_types", "type": "List[unicode]"}, {"lineNumber": 962, "col_offset": 12, "nodeName": "argName", "type": "str"}, {"lineNumber": 962, "col_offset": 21, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 962, "col_offset": 31, "nodeName": "items", "type": "Callable"}, {"lineNumber": 970, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 972, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 973, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 973, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 974, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 974, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 975, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 979, "col_offset": 12, "nodeName": "process_Text", "type": "Any"}, {"lineNumber": 979, "col_offset": 43, "nodeName": "text", "type": "Any"}, {"lineNumber": 981, "col_offset": 12, "nodeName": "process_lines", "type": "Any"}, {"lineNumber": 981, "col_offset": 49, "nodeName": "result_lines1", "type": "Any"}, {"lineNumber": 983, "col_offset": 12, "nodeName": "align_cg3_with_Text", "type": "Any"}, {"lineNumber": 983, "col_offset": 32, "nodeName": "result_lines2", "type": "Any"}, {"lineNumber": 983, "col_offset": 47, "nodeName": "text", "type": "Any"}, {"lineNumber": 985, "col_offset": 12, "nodeName": "normalise_alignments", "type": "Callable[..., Any]"}, {"lineNumber": 985, "col_offset": 34, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 988, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 991, "col_offset": 11, "nodeName": "return_type", "type": "Union[Any, unicode]"}, {"lineNumber": 992, "col_offset": 19, "nodeName": "result_lines2", "type": "Any"}, {"lineNumber": 1012, "col_offset": 12, "nodeName": "argName", "type": "str"}, {"lineNumber": 1012, "col_offset": 21, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 1012, "col_offset": 31, "nodeName": "items", "type": "Callable"}, {"lineNumber": 1030, "col_offset": 24, "nodeName": "divide", "type": "Any"}, {"lineNumber": 1031, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 144, "col_offset": 7, "nodeName": "data_type", "type": "unicode"}, {"lineNumber": 146, "col_offset": 9, "nodeName": "lower", "type": "Callable[[], unicode]"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 149, "col_offset": 56, "nodeName": "data_type", "type": "unicode"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "argName", "type": "Union[unicode, str]"}, {"lineNumber": 155, "col_offset": 55, "nodeName": "argVal", "type": "Union[unicode, bool, Any]"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "argName", "type": "Union[unicode, str]"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "argVal", "type": "Union[unicode, bool, Any]"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "argName", "type": "Union[unicode, str]"}, {"lineNumber": 161, "col_offset": 59, "nodeName": "argVal", "type": "Union[unicode, bool, Any]"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "argName", "type": "Union[unicode, str]"}, {"lineNumber": 164, "col_offset": 48, "nodeName": "argVal", "type": "Union[unicode, bool, Any]"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "sfuncs", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "deprels", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "sfuncs", "type": "Union[List[unicode], List[Any]]"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "func", "type": "Any"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "sfuncs", "type": "Union[List[Any], List[unicode]]"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "data_type", "type": "unicode"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "CONLL_DATA", "type": "unicode"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 226, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 235, "col_offset": 41, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "SENT_ID", "type": "unicode"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "argName", "type": "str"}, {"lineNumber": 292, "col_offset": 50, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "cg3_lines", "type": "List[Any]"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 303, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "token_match", "type": "Match[unicode]"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "token_match", "type": "Match[unicode]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "conll_lines", "type": "List[Any]"}, {"lineNumber": 382, "col_offset": 28, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 389, "col_offset": 37, "nodeName": "line", "type": "Any"}, {"lineNumber": 390, "col_offset": 23, "nodeName": "split", "type": "Any"}, {"lineNumber": 394, "col_offset": 22, "nodeName": "features", "type": "Any"}, {"lineNumber": 395, "col_offset": 22, "nodeName": "features", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "token", "type": "Any"}, {"lineNumber": 399, "col_offset": 15, "nodeName": "sentence", "type": "List[Any]"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "sentence", "type": "List[nothing]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "sentences", "type": "List[unicode]"}, {"lineNumber": 406, "col_offset": 26, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 406, "col_offset": 36, "nodeName": "sentence", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 471, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "argName", "type": "str"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "parent", "type": "Any"}, {"lineNumber": 475, "col_offset": 30, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "self", "type": "Tree"}, {"lineNumber": 496, "col_offset": 21, "nodeName": "self", "type": "Tree"}, {"lineNumber": 496, "col_offset": 32, "nodeName": "TEXT", "type": "unicode"}, {"lineNumber": 497, "col_offset": 23, "nodeName": "self", "type": "Tree"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "self", "type": "Tree"}, {"lineNumber": 498, "col_offset": 25, "nodeName": "token", "type": "Any"}, {"lineNumber": 504, "col_offset": 54, "nodeName": "argName", "type": "Any"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "self", "type": "Tree"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "self", "type": "Tree"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "children", "type": "Union[Any, List[Any]]"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "self", "type": "Tree"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "add_child_to_self", "type": "Callable[[Any], Any]"}, {"lineNumber": 518, "col_offset": 36, "nodeName": "tree", "type": "Any"}, {"lineNumber": 519, "col_offset": 14, "nodeName": "self", "type": "Tree"}, {"lineNumber": 520, "col_offset": 16, "nodeName": "child", "type": "Any"}, {"lineNumber": 520, "col_offset": 25, "nodeName": "children", "type": "Union[List[Any], Any]"}, {"lineNumber": 529, "col_offset": 11, "nodeName": "self", "type": "Tree"}, {"lineNumber": 532, "col_offset": 19, "nodeName": "get_root", "type": "Any"}, {"lineNumber": 558, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[unicode, Union[bool, int]]"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[unicode, Union[bool, int]]"}, {"lineNumber": 565, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 565, "col_offset": 29, "nodeName": "self", "type": "Tree"}, {"lineNumber": 566, "col_offset": 11, "nodeName": "depth_limit", "type": "int"}, {"lineNumber": 566, "col_offset": 32, "nodeName": "self", "type": "Tree"}, {"lineNumber": 568, "col_offset": 25, "nodeName": "self", "type": "Tree"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[unicode, Union[bool, int]]"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[unicode, Union[bool, int]]"}, {"lineNumber": 573, "col_offset": 37, "nodeName": "depth_limit", "type": "int"}, {"lineNumber": 574, "col_offset": 25, "nodeName": "self", "type": "Tree"}, {"lineNumber": 575, "col_offset": 16, "nodeName": "childs_results", "type": "Any"}, {"lineNumber": 576, "col_offset": 19, "nodeName": "childs_results", "type": "Any"}, {"lineNumber": 604, "col_offset": 26, "nodeName": "self", "type": "Tree"}, {"lineNumber": 604, "col_offset": 34, "nodeName": "get_children", "type": "Callable[..., Any]"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 612, "col_offset": 30, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 614, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 614, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 615, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 621, "col_offset": 22, "nodeName": "child", "type": "Any"}, {"lineNumber": 622, "col_offset": 22, "nodeName": "child", "type": "Any"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 632, "col_offset": 16, "nodeName": "root", "type": "Any"}, {"lineNumber": 639, "col_offset": 27, "nodeName": "child", "type": "Any"}, {"lineNumber": 642, "col_offset": 40, "nodeName": "keep_dummy_root", "type": "Any"}, {"lineNumber": 645, "col_offset": 47, "nodeName": "word_id", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 668, "col_offset": 25, "nodeName": "self", "type": "Tree"}, {"lineNumber": 670, "col_offset": 19, "nodeName": "depth", "type": "int"}, {"lineNumber": 679, "col_offset": 20, "nodeName": "spacing", "type": "Any"}, {"lineNumber": 680, "col_offset": 25, "nodeName": "self", "type": "Tree"}, {"lineNumber": 700, "col_offset": 15, "nodeName": "nodes", "type": "List[int]"}, {"lineNumber": 706, "col_offset": 21, "nodeName": "parents", "type": "List[Any]"}, {"lineNumber": 707, "col_offset": 15, "nodeName": "parent", "type": "Any"}, {"lineNumber": 707, "col_offset": 25, "nodeName": "node", "type": "int"}, {"lineNumber": 708, "col_offset": 16, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 709, "col_offset": 16, "nodeName": "estnltk_token", "type": "Any"}, {"lineNumber": 710, "col_offset": 16, "nodeName": "tree1", "type": "Tree"}, {"lineNumber": 713, "col_offset": 16, "nodeName": "syntax_token", "type": "Any"}, {"lineNumber": 713, "col_offset": 37, "nodeName": "syntax_token", "type": "Any"}, {"lineNumber": 746, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 746, "col_offset": 32, "nodeName": "layer", "type": "unicode"}, {"lineNumber": 747, "col_offset": 27, "nodeName": "text", "type": "Any"}, {"lineNumber": 747, "col_offset": 46, "nodeName": "WORDS", "type": "unicode"}, {"lineNumber": 747, "col_offset": 56, "nodeName": "SENTENCES", "type": "unicode"}, {"lineNumber": 752, "col_offset": 19, "nodeName": "text", "type": "Any"}, {"lineNumber": 753, "col_offset": 20, "nodeName": "text", "type": "Any"}, {"lineNumber": 753, "col_offset": 32, "nodeName": "k", "type": "int"}, {"lineNumber": 754, "col_offset": 11, "nodeName": "prev_sent_id", "type": "int"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "current_sentence", "type": "List[Any]"}, {"lineNumber": 769, "col_offset": 33, "nodeName": "SENT_ID", "type": "unicode"}, {"lineNumber": 772, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 772, "col_offset": 32, "nodeName": "text_sentences", "type": "List[Any]"}, {"lineNumber": 774, "col_offset": 34, "nodeName": "prev_sent_id", "type": "Union[Any, int]"}, {"lineNumber": 777, "col_offset": 86, "nodeName": "prev_sent_id", "type": "Union[Any, int]"}, {"lineNumber": 778, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "all_sentence_trees", "type": "List[Tree]"}, {"lineNumber": 876, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 877, "col_offset": 15, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 880, "col_offset": 16, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 880, "col_offset": 36, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 886, "col_offset": 14, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 887, "col_offset": 25, "nodeName": "_filter_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 889, "col_offset": 12, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 889, "col_offset": 32, "nodeName": "SyntaxPreprocessing", "type": "Any"}, {"lineNumber": 891, "col_offset": 14, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 892, "col_offset": 25, "nodeName": "_filter_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 894, "col_offset": 12, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 894, "col_offset": 37, "nodeName": "VISLCG3Pipeline", "type": "Any"}, {"lineNumber": 962, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 972, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 973, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 974, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 979, "col_offset": 12, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 979, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 981, "col_offset": 12, "nodeName": "vislcg3_processor", "type": "Any"}, {"lineNumber": 981, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 983, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 985, "col_offset": 56, "nodeName": "VISLCG3_DATA", "type": "unicode"}, {"lineNumber": 985, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 988, "col_offset": 13, "nodeName": "LAYER_VISLCG3", "type": "unicode"}, {"lineNumber": 990, "col_offset": 12, "nodeName": "_augment_text_w_syntactic_info", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 990, "col_offset": 49, "nodeName": "text", "type": "Any"}, {"lineNumber": 993, "col_offset": 13, "nodeName": "return_type", "type": "Union[Any, unicode]"}, {"lineNumber": 1012, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1013, "col_offset": 34, "nodeName": "keep_list", "type": "List[unicode]"}, {"lineNumber": 1014, "col_offset": 46, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 1030, "col_offset": 24, "nodeName": "text", "type": "Any"}, {"lineNumber": 1030, "col_offset": 43, "nodeName": "WORDS", "type": "unicode"}, {"lineNumber": 1030, "col_offset": 53, "nodeName": "SENTENCES", "type": "unicode"}, {"lineNumber": 1031, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 1032, "col_offset": 16, "nodeName": "estnltkToken", "type": "Any"}, {"lineNumber": 1033, "col_offset": 16, "nodeName": "vislcg3Token", "type": "Any"}, {"lineNumber": 1034, "col_offset": 16, "nodeName": "parse_found", "type": "bool"}, {"lineNumber": 1048, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 146, "col_offset": 9, "nodeName": "data_type", "type": "unicode"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "SENT_ID", "type": "unicode"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "PARSER_OUT", "type": "unicode"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "findall", "type": "Callable[..., List[Any]]"}, {"lineNumber": 181, "col_offset": 55, "nodeName": "line", "type": "Any"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "findall", "type": "Callable[..., List[Any]]"}, {"lineNumber": 182, "col_offset": 51, "nodeName": "line", "type": "Any"}, {"lineNumber": 185, "col_offset": 52, "nodeName": "sfuncs", "type": "List[Any]"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "deprels", "type": "List[Any]"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "parts", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "relT", "type": "int"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "func", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 212, "col_offset": 31, "nodeName": "foundRelations", "type": "List[Union[List[Any], List[Union[unicode, int]]]]"}, {"lineNumber": 213, "col_offset": 43, "nodeName": "wordID", "type": "int"}, {"lineNumber": 226, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "foundRelations", "type": "List[Union[List[Any], List[Union[unicode, int]]]]"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "PARSER_OUT", "type": "unicode"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "INIT_PARSER_OUT", "type": "unicode"}, {"lineNumber": 235, "col_offset": 51, "nodeName": "PARSER_OUT", "type": "unicode"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "PARSER_OUT", "type": "unicode"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "line", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "match", "type": "Callable"}, {"lineNumber": 314, "col_offset": 38, "nodeName": "line", "type": "Any"}, {"lineNumber": 314, "col_offset": 49, "nodeName": "line", "type": "Any"}, {"lineNumber": 314, "col_offset": 69, "nodeName": "line", "type": "Any"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "match", "type": "Callable"}, {"lineNumber": 315, "col_offset": 52, "nodeName": "line", "type": "Any"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "line", "type": "unicode"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "line", "type": "unicode"}, {"lineNumber": 321, "col_offset": 13, "nodeName": "line", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "sentence", "type": "List[nothing]"}, {"lineNumber": 382, "col_offset": 28, "nodeName": "line", "type": "Any"}, {"lineNumber": 389, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 389, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 390, "col_offset": 23, "nodeName": "line", "type": "Any"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 391, "col_offset": 19, "nodeName": "features", "type": "Any"}, {"lineNumber": 392, "col_offset": 22, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "sentence", "type": "List[Any]"}, {"lineNumber": 397, "col_offset": 29, "nodeName": "match", "type": "Callable"}, {"lineNumber": 397, "col_offset": 47, "nodeName": "line", "type": "Any"}, {"lineNumber": 473, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 473, "col_offset": 34, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 473, "col_offset": 42, "nodeName": "Tree", "type": "Type[Tree]"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "self", "type": "Tree"}, {"lineNumber": 476, "col_offset": 17, "nodeName": "argName", "type": "str"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "children", "type": "Any"}, {"lineNumber": 482, "col_offset": 32, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 498, "col_offset": 25, "nodeName": "self", "type": "Tree"}, {"lineNumber": 498, "col_offset": 36, "nodeName": "ANALYSIS", "type": "unicode"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "self", "type": "Tree"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "self", "type": "Tree"}, {"lineNumber": 520, "col_offset": 25, "nodeName": "self", "type": "Tree"}, {"lineNumber": 532, "col_offset": 19, "nodeName": "parent", "type": "Any"}, {"lineNumber": 532, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 565, "col_offset": 12, "nodeName": "subtrees", "type": "List[Any]"}, {"lineNumber": 570, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 570, "col_offset": 32, "nodeName": "child", "type": "Any"}, {"lineNumber": 575, "col_offset": 33, "nodeName": "get_children", "type": "Any"}, {"lineNumber": 604, "col_offset": 34, "nodeName": "self", "type": "Tree"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 612, "col_offset": 30, "nodeName": "graph", "type": "Any"}, {"lineNumber": 614, "col_offset": 25, "nodeName": "graph", "type": "Any"}, {"lineNumber": 620, "col_offset": 32, "nodeName": "labels", "type": "Any"}, {"lineNumber": 620, "col_offset": 50, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 620, "col_offset": 59, "nodeName": "labels", "type": "Any"}, {"lineNumber": 625, "col_offset": 27, "nodeName": "address", "type": "Any"}, {"lineNumber": 626, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 627, "col_offset": 25, "nodeName": "rel", "type": "unicode"}, {"lineNumber": 629, "col_offset": 19, "nodeName": "keep_dummy_root", "type": "Any"}, {"lineNumber": 629, "col_offset": 39, "nodeName": "child", "type": "Any"}, {"lineNumber": 629, "col_offset": 48, "nodeName": "self", "type": "Tree"}, {"lineNumber": 632, "col_offset": 16, "nodeName": "graph", "type": "Any"}, {"lineNumber": 632, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 638, "col_offset": 29, "nodeName": "children", "type": "Any"}, {"lineNumber": 638, "col_offset": 50, "nodeName": "word_id", "type": "Any"}, {"lineNumber": 641, "col_offset": 16, "nodeName": "add_arc", "type": "Any"}, {"lineNumber": 641, "col_offset": 31, "nodeName": "head_address", "type": "Any"}, {"lineNumber": 641, "col_offset": 45, "nodeName": "dep", "type": "Any"}, {"lineNumber": 642, "col_offset": 15, "nodeName": "parent", "type": "Any"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "add_arc", "type": "Any"}, {"lineNumber": 643, "col_offset": 35, "nodeName": "head_address", "type": "Any"}, {"lineNumber": 645, "col_offset": 29, "nodeName": "parent", "type": "Any"}, {"lineNumber": 645, "col_offset": 47, "nodeName": "parent", "type": "Any"}, {"lineNumber": 648, "col_offset": 25, "nodeName": "head", "type": "Any"}, {"lineNumber": 660, "col_offset": 15, "nodeName": "as_dependencygraph", "type": "Callable[..., Any]"}, {"lineNumber": 669, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 670, "col_offset": 27, "nodeName": "max", "type": "Callable"}, {"lineNumber": 670, "col_offset": 31, "nodeName": "childDepths", "type": "List[Any]"}, {"lineNumber": 677, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 677, "col_offset": 53, "nodeName": "text", "type": "Any"}, {"lineNumber": 681, "col_offset": 16, "nodeName": "debug_print_tree", "type": "Any"}, {"lineNumber": 681, "col_offset": 39, "nodeName": "spacing", "type": "Any"}, {"lineNumber": 703, "col_offset": 24, "nodeName": "o", "type": "Any"}, {"lineNumber": 703, "col_offset": 33, "nodeName": "o", "type": "Any"}, {"lineNumber": 709, "col_offset": 32, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 710, "col_offset": 24, "nodeName": "Tree", "type": "Type[Tree]"}, {"lineNumber": 710, "col_offset": 30, "nodeName": "estnltk_token", "type": "Any"}, {"lineNumber": 710, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 710, "col_offset": 48, "nodeName": "sentence_id", "type": "Union[int, Any]"}, {"lineNumber": 710, "col_offset": 61, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 711, "col_offset": 19, "nodeName": "INIT_PARSER_OUT", "type": "unicode"}, {"lineNumber": 711, "col_offset": 38, "nodeName": "syntax_token", "type": "Any"}, {"lineNumber": 712, "col_offset": 20, "nodeName": "parser_output", "type": "Any"}, {"lineNumber": 713, "col_offset": 16, "nodeName": "tree1", "type": "Tree"}, {"lineNumber": 714, "col_offset": 19, "nodeName": "parent", "type": "Any"}, {"lineNumber": 725, "col_offset": 19, "nodeName": "parent", "type": "Any"}, {"lineNumber": 725, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 752, "col_offset": 24, "nodeName": "layer", "type": "unicode"}, {"lineNumber": 753, "col_offset": 25, "nodeName": "layer", "type": "unicode"}, {"lineNumber": 754, "col_offset": 27, "nodeName": "node_desc", "type": "Any"}, {"lineNumber": 772, "col_offset": 80, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 772, "col_offset": 84, "nodeName": "prev_sent_id", "type": "Union[Any, int]"}, {"lineNumber": 877, "col_offset": 15, "nodeName": "argName", "type": "str"}, {"lineNumber": 878, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 878, "col_offset": 34, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 878, "col_offset": 42, "nodeName": "SyntaxPreprocessing", "type": "Any"}, {"lineNumber": 880, "col_offset": 16, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 881, "col_offset": 17, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 884, "col_offset": 16, "nodeName": "vislcg3_processor", "type": "Any"}, {"lineNumber": 884, "col_offset": 41, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 887, "col_offset": 25, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 888, "col_offset": 73, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 889, "col_offset": 55, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 892, "col_offset": 25, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 893, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 894, "col_offset": 56, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 963, "col_offset": 15, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 964, "col_offset": 37, "nodeName": "all_return_types", "type": "List[unicode]"}, {"lineNumber": 965, "col_offset": 20, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 969, "col_offset": 16, "nodeName": "augment_words", "type": "Any"}, {"lineNumber": 969, "col_offset": 32, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 979, "col_offset": 12, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 981, "col_offset": 12, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 990, "col_offset": 12, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 990, "col_offset": 55, "nodeName": "text", "type": "Any"}, {"lineNumber": 994, "col_offset": 19, "nodeName": "build_trees_from_text", "type": "Callable[..., Any]"}, {"lineNumber": 994, "col_offset": 42, "nodeName": "text", "type": "Any"}, {"lineNumber": 995, "col_offset": 13, "nodeName": "return_type", "type": "Union[Any, unicode]"}, {"lineNumber": 996, "col_offset": 12, "nodeName": "trees", "type": "List[Tree]"}, {"lineNumber": 997, "col_offset": 12, "nodeName": "graphs", "type": "List[Any]"}, {"lineNumber": 998, "col_offset": 19, "nodeName": "graphs", "type": "List[Any]"}, {"lineNumber": 1000, "col_offset": 19, "nodeName": "text", "type": "Any"}, {"lineNumber": 1013, "col_offset": 15, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 1014, "col_offset": 16, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1031, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1031, "col_offset": 31, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 1032, "col_offset": 31, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 1033, "col_offset": 31, "nodeName": "text_layer", "type": "Any"}, {"lineNumber": 1035, "col_offset": 19, "nodeName": "PARSER_OUT", "type": "unicode"}, {"lineNumber": 1035, "col_offset": 33, "nodeName": "vislcg3Token", "type": "Any"}, {"lineNumber": 1045, "col_offset": 23, "nodeName": "parse_found", "type": "bool"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "pat_cg3_surface_rel", "type": "Pattern[unicode]"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "pat_cg3_dep_rel", "type": "Pattern[unicode]"}, {"lineNumber": 185, "col_offset": 40, "nodeName": "sfuncs", "type": "List[Any]"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "relS", "type": "Any"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "relT", "type": "Any"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "relS", "type": "int"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "relT", "type": "int"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "PARSER_OUT", "type": "unicode"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "parts", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "foundRelations", "type": "List[Union[List[Any], List[Union[unicode, int]]]]"}, {"lineNumber": 207, "col_offset": 47, "nodeName": "wordID", "type": "int"}, {"lineNumber": 209, "col_offset": 73, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "pat_double_quoted", "type": "Pattern[unicode]"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "pat_cg3_word_token", "type": "Pattern[unicode]"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "group", "type": "Callable"}, {"lineNumber": 319, "col_offset": 22, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 319, "col_offset": 65, "nodeName": "line", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "sentence", "type": "List[unicode]"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "sentence", "type": "List[unicode]"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 397, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "line", "type": "Any"}, {"lineNumber": 397, "col_offset": 29, "nodeName": "re", "type": "module"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "append", "type": "Callable"}, {"lineNumber": 474, "col_offset": 62, "nodeName": "argName", "type": "str"}, {"lineNumber": 477, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 477, "col_offset": 34, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 477, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "self", "type": "Tree"}, {"lineNumber": 483, "col_offset": 17, "nodeName": "argName", "type": "str"}, {"lineNumber": 486, "col_offset": 16, "nodeName": "gen_word_id", "type": "Any"}, {"lineNumber": 486, "col_offset": 35, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 521, "col_offset": 16, "nodeName": "add_child_to_subtree", "type": "Any"}, {"lineNumber": 521, "col_offset": 43, "nodeName": "parent_word_id", "type": "Any"}, {"lineNumber": 521, "col_offset": 59, "nodeName": "tree", "type": "Any"}, {"lineNumber": 532, "col_offset": 19, "nodeName": "self", "type": "Tree"}, {"lineNumber": 570, "col_offset": 16, "nodeName": "subtrees", "type": "List[Any]"}, {"lineNumber": 575, "col_offset": 33, "nodeName": "child", "type": "Any"}, {"lineNumber": 575, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[unicode, Union[bool, int]]"}, {"lineNumber": 577, "col_offset": 20, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 577, "col_offset": 36, "nodeName": "childs_results", "type": "Any"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 620, "col_offset": 32, "nodeName": "child", "type": "Any"}, {"lineNumber": 620, "col_offset": 59, "nodeName": "child", "type": "Any"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 626, "col_offset": 25, "nodeName": "child", "type": "Any"}, {"lineNumber": 632, "col_offset": 29, "nodeName": "graph", "type": "Any"}, {"lineNumber": 632, "col_offset": 41, "nodeName": "address", "type": "Any"}, {"lineNumber": 638, "col_offset": 29, "nodeName": "child", "type": "Any"}, {"lineNumber": 638, "col_offset": 50, "nodeName": "c", "type": "Any"}, {"lineNumber": 638, "col_offset": 64, "nodeName": "c", "type": "Any"}, {"lineNumber": 638, "col_offset": 69, "nodeName": "children", "type": "Any"}, {"lineNumber": 641, "col_offset": 16, "nodeName": "graph", "type": "Any"}, {"lineNumber": 642, "col_offset": 15, "nodeName": "child", "type": "Any"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "graph", "type": "Any"}, {"lineNumber": 645, "col_offset": 29, "nodeName": "child", "type": "Any"}, {"lineNumber": 645, "col_offset": 47, "nodeName": "child", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 660, "col_offset": 15, "nodeName": "self", "type": "Tree"}, {"lineNumber": 669, "col_offset": 16, "nodeName": "childDepths", "type": "List[Any]"}, {"lineNumber": 669, "col_offset": 36, "nodeName": "get_tree_depth", "type": "Any"}, {"lineNumber": 677, "col_offset": 53, "nodeName": "self", "type": "Tree"}, {"lineNumber": 681, "col_offset": 16, "nodeName": "child", "type": "Any"}, {"lineNumber": 703, "col_offset": 38, "nodeName": "syntax_token", "type": "Any"}, {"lineNumber": 708, "col_offset": 28, "nodeName": "o", "type": "Any"}, {"lineNumber": 708, "col_offset": 37, "nodeName": "o", "type": "Any"}, {"lineNumber": 709, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 710, "col_offset": 76, "nodeName": "layer", "type": "unicode"}, {"lineNumber": 712, "col_offset": 20, "nodeName": "tree1", "type": "Tree"}, {"lineNumber": 712, "col_offset": 42, "nodeName": "syntax_token", "type": "Any"}, {"lineNumber": 716, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 716, "col_offset": 46, "nodeName": "tree1", "type": "Tree"}, {"lineNumber": 717, "col_offset": 21, "nodeName": "parent", "type": "Any"}, {"lineNumber": 717, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 723, "col_offset": 24, "nodeName": "root_node", "type": "Any"}, {"lineNumber": 723, "col_offset": 37, "nodeName": "trees_of_sentence", "type": "List[Tree]"}, {"lineNumber": 727, "col_offset": 19, "nodeName": "append", "type": "Callable"}, {"lineNumber": 727, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 754, "col_offset": 37, "nodeName": "SENT_ID", "type": "unicode"}, {"lineNumber": 881, "col_offset": 17, "nodeName": "argName", "type": "str"}, {"lineNumber": 882, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 882, "col_offset": 34, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 882, "col_offset": 42, "nodeName": "VISLCG3Pipeline", "type": "Any"}, {"lineNumber": 884, "col_offset": 16, "nodeName": "self", "type": "VISLCG3Parser"}, {"lineNumber": 963, "col_offset": 15, "nodeName": "argName", "type": "str"}, {"lineNumber": 964, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 965, "col_offset": 34, "nodeName": "lower", "type": "Any"}, {"lineNumber": 967, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 967, "col_offset": 65, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 968, "col_offset": 56, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 990, "col_offset": 60, "nodeName": "LAYER_VISLCG3", "type": "unicode"}, {"lineNumber": 994, "col_offset": 54, "nodeName": "LAYER_VISLCG3", "type": "unicode"}, {"lineNumber": 994, "col_offset": 71, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 996, "col_offset": 20, "nodeName": "build_trees_from_text", "type": "Callable[..., Any]"}, {"lineNumber": 996, "col_offset": 43, "nodeName": "text", "type": "Any"}, {"lineNumber": 1013, "col_offset": 15, "nodeName": "argName", "type": "str"}, {"lineNumber": 1032, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 1033, "col_offset": 42, "nodeName": "j", "type": "int"}, {"lineNumber": 1037, "col_offset": 24, "nodeName": "firstParse", "type": "Any"}, {"lineNumber": 1042, "col_offset": 24, "nodeName": "deprels", "type": "unicode"}, {"lineNumber": 1043, "col_offset": 53, "nodeName": "deprels", "type": "unicode"}, {"lineNumber": 1044, "col_offset": 24, "nodeName": "parse_found", "type": "bool"}, {"lineNumber": 1046, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 1047, "col_offset": 36, "nodeName": "estnltkToken", "type": "Any"}, {"lineNumber": 1047, "col_offset": 60, "nodeName": "vislcg3Token", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "line", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "parts", "type": "Any"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 197, "col_offset": 82, "nodeName": "line", "type": "Any"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "foundRelations", "type": "List[Union[List[Any], List[Union[unicode, int]]]]"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "func", "type": "Any"}, {"lineNumber": 200, "col_offset": 46, "nodeName": "relT", "type": "int"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "foundRelations", "type": "List[Union[List[Any], List[Union[unicode, int]]]]"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "wordID", "type": "int"}, {"lineNumber": 218, "col_offset": 55, "nodeName": "wordID", "type": "int"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "foundRelations", "type": "List[Union[List[Any], List[Union[unicode, int]]]]"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "foundRelations", "type": "List[Union[List[Any], List[Union[unicode, int]]]]"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "token_match", "type": "Match[unicode]"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "sentences", "type": "List[unicode]"}, {"lineNumber": 328, "col_offset": 30, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 328, "col_offset": 40, "nodeName": "sentence", "type": "List[unicode]"}, {"lineNumber": 393, "col_offset": 61, "nodeName": "line", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "sentences", "type": "List[unicode]"}, {"lineNumber": 403, "col_offset": 33, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 403, "col_offset": 43, "nodeName": "sentence", "type": "List[Any]"}, {"lineNumber": 478, "col_offset": 62, "nodeName": "argName", "type": "str"}, {"lineNumber": 479, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 479, "col_offset": 23, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 480, "col_offset": 27, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 484, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 484, "col_offset": 34, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 484, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 486, "col_offset": 16, "nodeName": "self", "type": "Tree"}, {"lineNumber": 487, "col_offset": 36, "nodeName": "PARSER_OUT", "type": "unicode"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "parser_output", "type": "Any"}, {"lineNumber": 490, "col_offset": 37, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 521, "col_offset": 16, "nodeName": "child", "type": "Any"}, {"lineNumber": 577, "col_offset": 20, "nodeName": "subtrees", "type": "List[Any]"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 623, "col_offset": 24, "nodeName": "address", "type": "Any"}, {"lineNumber": 638, "col_offset": 69, "nodeName": "child", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 646, "col_offset": 24, "nodeName": "head_address", "type": "Any"}, {"lineNumber": 669, "col_offset": 36, "nodeName": "child", "type": "Any"}, {"lineNumber": 677, "col_offset": 15, "nodeName": "spacing", "type": "Any"}, {"lineNumber": 677, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 677, "col_offset": 31, "nodeName": "word_id", "type": "Any"}, {"lineNumber": 703, "col_offset": 51, "nodeName": "PARSER_OUT", "type": "unicode"}, {"lineNumber": 708, "col_offset": 42, "nodeName": "syntax_token", "type": "Any"}, {"lineNumber": 712, "col_offset": 55, "nodeName": "INIT_PARSER_OUT", "type": "unicode"}, {"lineNumber": 716, "col_offset": 20, "nodeName": "trees_of_sentence", "type": "List[Tree]"}, {"lineNumber": 720, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 720, "col_offset": 46, "nodeName": "tree1", "type": "Tree"}, {"lineNumber": 727, "col_offset": 19, "nodeName": "nodes", "type": "List[int]"}, {"lineNumber": 964, "col_offset": 19, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 965, "col_offset": 34, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 968, "col_offset": 17, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 996, "col_offset": 55, "nodeName": "LAYER_VISLCG3", "type": "unicode"}, {"lineNumber": 996, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[Union[str, unicode], Union[Any, bool, unicode]]"}, {"lineNumber": 997, "col_offset": 22, "nodeName": "as_dependencygraph", "type": "Callable[..., Any]"}, {"lineNumber": 997, "col_offset": 52, "nodeName": "tree", "type": "Tree"}, {"lineNumber": 997, "col_offset": 60, "nodeName": "trees", "type": "List[Tree]"}, {"lineNumber": 1014, "col_offset": 27, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 1036, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1039, "col_offset": 24, "nodeName": "estnltkToken", "type": "Any"}, {"lineNumber": 1039, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1039, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 1040, "col_offset": 24, "nodeName": "estnltkToken", "type": "Any"}, {"lineNumber": 1040, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1042, "col_offset": 34, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 1043, "col_offset": 24, "nodeName": "estnltkToken", "type": "Any"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 189, "col_offset": 35, "nodeName": "relS", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "relT", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "foundRelations", "type": "List[Union[List[Any], List[Union[unicode, int]]]]"}, {"lineNumber": 191, "col_offset": 48, "nodeName": "func", "type": "Any"}, {"lineNumber": 191, "col_offset": 54, "nodeName": "relT", "type": "int"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "parts", "type": "Any"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "r", "type": "int"}, {"lineNumber": 218, "col_offset": 36, "nodeName": "wordID", "type": "int"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "wordID", "type": "int"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "foundRelations", "type": "List[Union[List[Any], List[Union[unicode, int]]]]"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "r", "type": "int"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "r", "type": "int"}, {"lineNumber": 324, "col_offset": 27, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 481, "col_offset": 62, "nodeName": "argName", "type": "str"}, {"lineNumber": 485, "col_offset": 62, "nodeName": "argName", "type": "str"}, {"lineNumber": 487, "col_offset": 17, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 488, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 488, "col_offset": 34, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 488, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "self", "type": "Tree"}, {"lineNumber": 491, "col_offset": 17, "nodeName": "argName", "type": "str"}, {"lineNumber": 494, "col_offset": 16, "nodeName": "syntax_token", "type": "Any"}, {"lineNumber": 494, "col_offset": 36, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 677, "col_offset": 31, "nodeName": "self", "type": "Tree"}, {"lineNumber": 708, "col_offset": 55, "nodeName": "PARSER_OUT", "type": "unicode"}, {"lineNumber": 720, "col_offset": 20, "nodeName": "trees_of_sentence", "type": "List[Tree]"}, {"lineNumber": 724, "col_offset": 24, "nodeName": "add_child_to_subtree", "type": "Any"}, {"lineNumber": 724, "col_offset": 56, "nodeName": "parent", "type": "Any"}, {"lineNumber": 724, "col_offset": 64, "nodeName": "tree1", "type": "Tree"}, {"lineNumber": 968, "col_offset": 17, "nodeName": "argName", "type": "str"}, {"lineNumber": 997, "col_offset": 22, "nodeName": "tree", "type": "Tree"}, {"lineNumber": 1014, "col_offset": 27, "nodeName": "argName", "type": "str"}, {"lineNumber": 1036, "col_offset": 28, "nodeName": "vislcg3Token", "type": "Any"}, {"lineNumber": 1037, "col_offset": 37, "nodeName": "vislcg3Token", "type": "Any"}, {"lineNumber": 1039, "col_offset": 37, "nodeName": "SYNTAX_LABEL", "type": "unicode"}, {"lineNumber": 1040, "col_offset": 37, "nodeName": "SYNTAX_HEAD", "type": "unicode"}, {"lineNumber": 1040, "col_offset": 57, "nodeName": "firstParse", "type": "Any"}, {"lineNumber": 1043, "col_offset": 37, "nodeName": "DEPREL", "type": "unicode"}, {"lineNumber": 221, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 221, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 221, "col_offset": 54, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 223, "col_offset": 39, "nodeName": "r", "type": "int"}, {"lineNumber": 323, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 323, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 324, "col_offset": 27, "nodeName": "sys", "type": "module"}, {"lineNumber": 480, "col_offset": 31, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 480, "col_offset": 42, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 480, "col_offset": 50, "nodeName": "Tree", "type": "Type[Tree]"}, {"lineNumber": 480, "col_offset": 60, "nodeName": "t", "type": "Any"}, {"lineNumber": 480, "col_offset": 65, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 487, "col_offset": 17, "nodeName": "argName", "type": "str"}, {"lineNumber": 489, "col_offset": 62, "nodeName": "argName", "type": "str"}, {"lineNumber": 492, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 492, "col_offset": 34, "nodeName": "argVal", "type": "Any"}, {"lineNumber": 492, "col_offset": 42, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 494, "col_offset": 16, "nodeName": "self", "type": "Tree"}, {"lineNumber": 724, "col_offset": 24, "nodeName": "root_node", "type": "Any"}, {"lineNumber": 1036, "col_offset": 41, "nodeName": "PARSER_OUT", "type": "unicode"}, {"lineNumber": 1037, "col_offset": 50, "nodeName": "PARSER_OUT", "type": "unicode"}, {"lineNumber": 1042, "col_offset": 45, "nodeName": "p", "type": "Any"}, {"lineNumber": 1042, "col_offset": 54, "nodeName": "p", "type": "Any"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "SENT_ID", "type": "unicode"}, {"lineNumber": 222, "col_offset": 49, "nodeName": "alignments", "type": "Any"}, {"lineNumber": 222, "col_offset": 65, "nodeName": "SENT_ID", "type": "unicode"}, {"lineNumber": 493, "col_offset": 62, "nodeName": "argName", "type": "str"}, {"lineNumber": 1042, "col_offset": 59, "nodeName": "vislcg3Token", "type": "Any"}, {"lineNumber": 222, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1042, "col_offset": 72, "nodeName": "PARSER_OUT", "type": "unicode"}, {"lineNumber": 222, "col_offset": 60, "nodeName": "i", "type": "int"}]