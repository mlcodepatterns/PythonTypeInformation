[{"lineNumber": 14, "col_offset": 0, "nodeName": "load_grammar", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "TEST_GRAMMARS_PATH", "type": "Union[str, unicode]"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "test_dictionaries", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "test_regex", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_production", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 11, "col_offset": 34, "nodeName": "PACKAGE_PATH", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "fnm", "type": "Union[str, unicode]"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 11, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 15, "col_offset": 10, "nodeName": "join", "type": "Callable"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "TEST_GRAMMARS_PATH", "type": "Union[str, unicode]"}, {"lineNumber": 15, "col_offset": 43, "nodeName": "fnm", "type": "unicode"}, {"lineNumber": 16, "col_offset": 44, "nodeName": "f", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "grammar", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "grammar", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "case_sensitive_words", "type": "Set[unicode]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "case_insensitive_words", "type": "Set[unicode]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "grammar", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "grammar", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "case_sensitive_words", "type": "Set[unicode]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "lemmas", "type": "Set[unicode]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "all", "type": "bool"}, {"lineNumber": 11, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 15, "col_offset": 10, "nodeName": "path", "type": "module"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "fnm", "type": "Union[str, unicode]"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "load_grammar", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "grammar", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "case_sensitive_words", "type": "Set[unicode]"}, {"lineNumber": 29, "col_offset": 50, "nodeName": "case_sensitive_words", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "case_insensitive_words", "type": "Set[unicode]"}, {"lineNumber": 30, "col_offset": 52, "nodeName": "case_insensitive_words", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "load_grammar", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "grammar", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "case_sensitive_words", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "case_insensitive_words", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "all", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "load_grammar", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "grammar", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "case_sensitive_words", "type": "Set[unicode]"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "case_sensitive_words", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "case_insensitive_words", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "lemmas", "type": "Set[unicode]"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "lemmas", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "all", "type": "bool"}, {"lineNumber": 15, "col_offset": 10, "nodeName": "os", "type": "module"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "codecs", "type": "module"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "GrammarParser", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "PrefilterTest"}, {"lineNumber": 29, "col_offset": 50, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "PrefilterTest"}, {"lineNumber": 30, "col_offset": 52, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "PrefilterTest"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "PrefilterTest"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "PrefilterTest"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "PrefilterTest"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "PrefilterTest"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "PrefilterTest"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "PrefilterTest"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "PrefilterTest"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "read", "type": "Any"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "f", "type": "Any"}]