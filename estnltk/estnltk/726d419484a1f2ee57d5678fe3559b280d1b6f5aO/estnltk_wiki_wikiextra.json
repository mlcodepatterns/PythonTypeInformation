[{"lineNumber": 5, "col_offset": 0, "nodeName": "balancedSlicer", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "findBalanced", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "linkGetter", "type": "Callable[[Any], Any]"}, {"lineNumber": 2, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "openbr", "type": "int"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "cur", "type": "int"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "char", "type": "Any"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "openPat", "type": "str"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "afterPat", "type": "Dict[str, Pattern[str]]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "stack", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "start", "type": "int"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "cur", "type": "int"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "end", "type": "int"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "startSet", "type": "bool"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "startPat", "type": "Pattern[str]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "nextPat", "type": "Pattern[str]"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "startPat", "type": "Pattern[str]"}, {"lineNumber": 68, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "cur", "type": "int"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "cur", "type": "int"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "o", "type": "str"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "text", "type": "str"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "openPat", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "next", "type": "Match[str]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "delim", "type": "str"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "cur", "type": "int"}, {"lineNumber": 69, "col_offset": 51, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "spans", "type": "Generator[Tuple[int, int], Any, None]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "spans", "type": "Generator[Tuple[int, int], Any, None]"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "char", "type": "Any"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "openDelim", "type": "Any"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "openbr", "type": "int"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "char", "type": "Any"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "closeDelim", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "openbr", "type": "int"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "openbr", "type": "int"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "text", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 36, "col_offset": 45, "nodeName": "DOTALL", "type": "int"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "search", "type": "Callable"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "text", "type": "str"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "cur", "type": "int"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "next", "type": "Match[str]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "startSet", "type": "bool"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "start", "type": "int"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "startSet", "type": "bool"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "group", "type": "Callable"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "delim", "type": "str"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "openDelim", "type": "str"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "nextPat", "type": "Pattern[str]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "opening", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "stack", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "end", "type": "Callable[..., int]"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "read", "type": "Callable"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "findBalanced", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "text", "type": "str"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "start", "type": "int"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "end", "type": "int"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "link", "type": "str"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "cur", "type": "int"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "escape", "type": "Callable"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "x", "type": "str"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "x", "type": "str"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "openDelim", "type": "str"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "re", "type": "module"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "c", "type": "str"}, {"lineNumber": 36, "col_offset": 45, "nodeName": "re", "type": "module"}, {"lineNumber": 36, "col_offset": 60, "nodeName": "o", "type": "str"}, {"lineNumber": 36, "col_offset": 62, "nodeName": "c", "type": "str"}, {"lineNumber": 36, "col_offset": 67, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 36, "col_offset": 71, "nodeName": "openDelim", "type": "str"}, {"lineNumber": 36, "col_offset": 82, "nodeName": "closeDelim", "type": "str"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "nextPat", "type": "Pattern[str]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "start", "type": "Callable[..., int]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "next", "type": "Match[str]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "delim", "type": "str"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "afterPat", "type": "Dict[str, Pattern[str]]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "nextPat", "type": "Pattern[str]"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "nextPat", "type": "Pattern[str]"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "startPat", "type": "Pattern[str]"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "start", "type": "int"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "startSet", "type": "bool"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "next", "type": "Match[str]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "text", "type": "str"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "link", "type": "str"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "re", "type": "module"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "openPat", "type": "str"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "next", "type": "Match[str]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "stack", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "delim", "type": "str"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "stack", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "afterPat", "type": "Dict[str, Pattern[str]]"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "end", "type": "Callable[..., int]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "start", "type": "int"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "end", "type": "int"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "start", "type": "int"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "next", "type": "Match[str]"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "stack", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "end", "type": "Callable[..., int]"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "next", "type": "Match[str]"}]