[{"lineNumber": 10, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "test_divide_multi", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "test_split_by_clauses", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "test_ignore_missing_commas_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_ignore_missing_commas_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "segmenter", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "clauses", "type": "Any"}, {"lineNumber": 16, "col_offset": 91, "nodeName": "words", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "segmenter", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "outer", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "inner", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "segmenter", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "clauses", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "segmenter", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "clauses", "type": "Any"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "ClauseSegmenter", "type": "Any"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "divide", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "korred", "type": "Any"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "_1", "type": "Any"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "millel", "type": "Any"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "on", "type": "Any"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "toitunud", "type": "Any"}, {"lineNumber": 16, "col_offset": 42, "nodeName": "viljasaase", "type": "Any"}, {"lineNumber": 16, "col_offset": 54, "nodeName": "vastsed", "type": "Any"}, {"lineNumber": 16, "col_offset": 63, "nodeName": "_2", "type": "Any"}, {"lineNumber": 16, "col_offset": 67, "nodeName": "jaavad", "type": "Any"}, {"lineNumber": 16, "col_offset": 75, "nodeName": "ohukeseks", "type": "Any"}, {"lineNumber": 16, "col_offset": 86, "nodeName": "_3", "type": "Any"}, {"lineNumber": 16, "col_offset": 91, "nodeName": "text", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "ClauseSegmenter", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "tag_clauses", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "tag_clauses", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "outer_split", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "inner_split", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "split_by", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "word_spans", "type": "Any"}, {"lineNumber": 30, "col_offset": 47, "nodeName": "word_spans", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "word_spans", "type": "Any"}, {"lineNumber": 31, "col_offset": 47, "nodeName": "word_spans", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "ClauseSegmenter", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "divide", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "ClauseSegmenter", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "divide", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 14, "col_offset": 113, "nodeName": "segmenter", "type": "Any"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "text", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "ClausesTest"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "korred", "type": "Any"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "jaavad", "type": "Any"}, {"lineNumber": 17, "col_offset": 46, "nodeName": "ohukeseks", "type": "Any"}, {"lineNumber": 17, "col_offset": 57, "nodeName": "_3", "type": "Any"}, {"lineNumber": 17, "col_offset": 62, "nodeName": "clauses", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "ClausesTest"}, {"lineNumber": 18, "col_offset": 30, "nodeName": "_1", "type": "Any"}, {"lineNumber": 18, "col_offset": 34, "nodeName": "millel", "type": "Any"}, {"lineNumber": 18, "col_offset": 42, "nodeName": "on", "type": "Any"}, {"lineNumber": 18, "col_offset": 46, "nodeName": "toitunud", "type": "Any"}, {"lineNumber": 18, "col_offset": 56, "nodeName": "viljasaase", "type": "Any"}, {"lineNumber": 18, "col_offset": 68, "nodeName": "vastsed", "type": "Any"}, {"lineNumber": 18, "col_offset": 77, "nodeName": "_2", "type": "Any"}, {"lineNumber": 18, "col_offset": 82, "nodeName": "clauses", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "ClausesTest"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "clauses", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "_process", "type": "Any"}, {"lineNumber": 26, "col_offset": 113, "nodeName": "segmenter", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "text", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "ClausesTest"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "inner", "type": "Any"}, {"lineNumber": 30, "col_offset": 47, "nodeName": "inner_split", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "ClausesTest"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "outer", "type": "Any"}, {"lineNumber": 31, "col_offset": 47, "nodeName": "outer_split", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "_process", "type": "Any"}, {"lineNumber": 38, "col_offset": 222, "nodeName": "segmenter", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "text", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "ClausesTest"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "clauses", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_process", "type": "Any"}, {"lineNumber": 47, "col_offset": 152, "nodeName": "segmenter", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "text", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "ClausesTest"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "clauses", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "_process", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "segmenter", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "Text", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "Text", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "segmenter", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "segmenter", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "segmenter", "type": "Any"}, {"lineNumber": 27, "col_offset": 72, "nodeName": "segmenter", "type": "Any"}, {"lineNumber": 28, "col_offset": 87, "nodeName": "segmenter", "type": "Any"}]