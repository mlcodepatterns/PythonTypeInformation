[{"lineNumber": 10, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "test_tokenize_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "empty_document", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "empty_tokenized", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "test_simple", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "simple_document", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "simple_tokenized", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "test_tokenizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_tokenize_fails", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "text", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "result", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "tokenizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "bad_tokenizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 124, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "tokenizer", "type": "estnltk.tokenize.Tokenizer"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "tokenized", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "tokenizer", "type": "estnltk.tokenize.Tokenizer"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "tokenized", "type": "Dict[unicode, Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "result", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 14, "col_offset": 20, "nodeName": "Tokenizer", "type": "Type[estnltk.tokenize.Tokenizer]"}, {"lineNumber": 15, "col_offset": 20, "nodeName": "tokenizer", "type": "estnltk.tokenize.Tokenizer"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "tokenized", "type": "Any"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "Tokenizer", "type": "Type[estnltk.tokenize.Tokenizer]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "tokenize", "type": "Callable[[Any], Dict[unicode, Any]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "tokenized", "type": "Dict[unicode, Any]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "tokenize", "type": "Callable[..., List[Dict[unicode, Any]]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "result", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "tokenize", "type": "Callable[..., List[Dict[unicode, Any]]]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "RegexpTokenizer", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "RegexpTokenizer", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 30, "nodeName": "empty_document", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TokenizerTest"}, {"lineNumber": 16, "col_offset": 40, "nodeName": "empty_tokenized", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "tokenizer", "type": "estnltk.tokenize.Tokenizer"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "simple_document", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TokenizerTest"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "simple_tokenized", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "tokenizer", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TokenizeTest"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "result", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TokenizeTest"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 65, "nodeName": "bad_tokenizer", "type": "Callable[[], Any]"}, {"lineNumber": 15, "col_offset": 30, "nodeName": "self", "type": "TokenizerTest"}, {"lineNumber": 16, "col_offset": 40, "nodeName": "self", "type": "TokenizerTest"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "self", "type": "TokenizerTest"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "self", "type": "TokenizerTest"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "self", "type": "TokenizeTest"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "self", "type": "TokenizeTest"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "self", "type": "TokenizeTest"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "self", "type": "TokenizeTest"}, {"lineNumber": 92, "col_offset": 65, "nodeName": "self", "type": "TokenizeTest"}]