[{"lineNumber": 12, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "test_initialization", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_initialization_fails", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "text", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "test_split_by_sentences", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "sentence", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "test_split_by_words", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "word", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_split_by_regex", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_split_by_regex_notcaps", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_as_zip", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "text", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "zip", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "test_as_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "list", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test_as_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_as_dataframe", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "test_zipbuilder_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "test_divide", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "test_modifying_reference", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "text", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "divisions", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "test_tag_separately", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "document", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "timexes", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "test_divide_multi", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "test_split_by_clauses", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "create", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "sentences", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "words", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "word", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "word", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "regex", "type": "unicode"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "texts", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "regex", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "texts", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "built_zip", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "as_zip", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "expected", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "built_list", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "built_dict", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "as_dict", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "expected", "type": "Dict[unicode, Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "as_dataframe", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "built_list", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "divisions", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "divisions", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "words", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "words", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "document", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "clauses", "type": "Any"}, {"lineNumber": 196, "col_offset": 91, "nodeName": "words", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "outer", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "inner", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "text", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "text", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "create", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "compute_words", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "split_by_sentences", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "sentences", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "compute_words", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "compute_analysis", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "split_by_words", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "words", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "compute_analysis", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "word", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "split_by_regex", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "regex", "type": "unicode"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "texts", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "compile", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "split_by_regex", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "regex", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "texts", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "endings", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "zip", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "word_texts", "type": "Any"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "lemmas", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "postags", "type": "Any"}, {"lineNumber": 92, "col_offset": 63, "nodeName": "endings", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "endings", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "list", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "built_list", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "word_texts", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "lemmas", "type": "Any"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "postags", "type": "Any"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "endings", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "endings", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "dict", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "expected", "type": "Dict[unicode, Any]"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "built_dict", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "lemmas", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "word_texts", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "lemmas", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "word_texts", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "lemmas", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "postags", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "endings", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "list", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "expected", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "built_list", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "self", "type": "TextDivideTest"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "divide", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "divisions", "type": "List[List[Any]]"}, {"lineNumber": 137, "col_offset": 45, "nodeName": "divisions", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "self", "type": "TextDivideTest"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "divide", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "compute_words", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "self", "type": "TimexTest"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "timexes", "type": "Any"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "timexes", "type": "List[Dict[unicode, Union[int, bool, unicode]]]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "divide", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "korred", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "_1", "type": "Any"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "millel", "type": "Any"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "on", "type": "Any"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "toitunud", "type": "Any"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "viljasaase", "type": "Any"}, {"lineNumber": 196, "col_offset": 54, "nodeName": "vastsed", "type": "Any"}, {"lineNumber": 196, "col_offset": 63, "nodeName": "_2", "type": "Any"}, {"lineNumber": 196, "col_offset": 67, "nodeName": "jaavad", "type": "Any"}, {"lineNumber": 196, "col_offset": 75, "nodeName": "ohukeseks", "type": "Any"}, {"lineNumber": 196, "col_offset": 86, "nodeName": "_3", "type": "Any"}, {"lineNumber": 196, "col_offset": 91, "nodeName": "text", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "compute_clauses", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "compute_clauses", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "outer_split", "type": "Any"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "inner_split", "type": "Any"}, {"lineNumber": 205, "col_offset": 35, "nodeName": "split_by", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "word_spans", "type": "Any"}, {"lineNumber": 206, "col_offset": 47, "nodeName": "word_spans", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "word_spans", "type": "Any"}, {"lineNumber": 207, "col_offset": 47, "nodeName": "word_spans", "type": "Any"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TextInitializationTest"}, {"lineNumber": 17, "col_offset": 35, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TextInitializationTest"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "text", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "Text", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TextInitializationTest"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "text", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "sentence", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "sentence", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TextSplittingTest"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "word", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "word", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "word", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "word", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TextSplittingTest"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "Text", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "Text", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TextSplittingTest"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "re", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "Text", "type": "Any"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "Text", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TextSplittingTest"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "postags", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "expected", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 85, "col_offset": 50, "nodeName": "built_zip", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "text", "type": "Any"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "text", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "text", "type": "Any"}, {"lineNumber": 92, "col_offset": 63, "nodeName": "text", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "postags", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "text", "type": "Any"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "text", "type": "Any"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "text", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "postags", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "word_texts", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "text", "type": "Any"}, {"lineNumber": 113, "col_offset": 46, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 113, "col_offset": 51, "nodeName": "word_texts", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "text", "type": "Any"}, {"lineNumber": 114, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "lemmas", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "text", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "text", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "text", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "text", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "ZipBuilderTest"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "text", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TextDivideTest"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "self", "type": "TextDivideTest"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "text", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TextDivideTest"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TimexTest"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "text", "type": "Any"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "self", "type": "TimexTest"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "text", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "ClausesTest"}, {"lineNumber": 197, "col_offset": 30, "nodeName": "korred", "type": "Any"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "jaavad", "type": "Any"}, {"lineNumber": 197, "col_offset": 46, "nodeName": "ohukeseks", "type": "Any"}, {"lineNumber": 197, "col_offset": 57, "nodeName": "_3", "type": "Any"}, {"lineNumber": 197, "col_offset": 62, "nodeName": "clauses", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "ClausesTest"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "_1", "type": "Any"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "millel", "type": "Any"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "on", "type": "Any"}, {"lineNumber": 198, "col_offset": 46, "nodeName": "toitunud", "type": "Any"}, {"lineNumber": 198, "col_offset": 56, "nodeName": "viljasaase", "type": "Any"}, {"lineNumber": 198, "col_offset": 68, "nodeName": "vastsed", "type": "Any"}, {"lineNumber": 198, "col_offset": 77, "nodeName": "_2", "type": "Any"}, {"lineNumber": 198, "col_offset": 82, "nodeName": "clauses", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "ClausesTest"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "clauses", "type": "Any"}, {"lineNumber": 205, "col_offset": 35, "nodeName": "text", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "ClausesTest"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "inner", "type": "Any"}, {"lineNumber": 206, "col_offset": 47, "nodeName": "inner_split", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "ClausesTest"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "outer", "type": "Any"}, {"lineNumber": 207, "col_offset": 47, "nodeName": "outer_split", "type": "Any"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "self", "type": "TextInitializationTest"}, {"lineNumber": 17, "col_offset": 35, "nodeName": "self", "type": "TextInitializationTest"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "self", "type": "TextInitializationTest"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "TextSplittingTest"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "TextSplittingTest"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "compute_sentences", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "TextSplittingTest"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "TextSplittingTest"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "TextSplittingTest"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "TextSplittingTest"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "word", "type": "unicode"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "lemmas", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "lemmas", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "lemmas", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 113, "col_offset": 51, "nodeName": "df", "type": "Any"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "df", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "text", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "divisions", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "words", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "words", "type": "Any"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "words", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "words", "type": "Any"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "words", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "words", "type": "Any"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "words", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "words", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "words", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "words", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "Text", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "Text", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "word_texts", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "word_texts", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "word_texts", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "text", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "Text", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "text", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "text", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "text", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "text", "type": "Any"}]