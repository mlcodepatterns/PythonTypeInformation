[{"lineNumber": 39, "col_offset": 0, "nodeName": "regex_from_markers", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "trim_phonetics", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "trim_compounds", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "get_root", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "get_group_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "get_lemma", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "analysis_as_dict", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 0, "nodeName": "get_args", "type": "Callable[..., Any]"}, {"lineNumber": 331, "col_offset": 0, "nodeName": "analyze", "type": "Callable[..., Any]"}, {"lineNumber": 355, "col_offset": 0, "nodeName": "synthesize", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "PACKAGE_PATH", "type": "str"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "DICT_PATH", "type": "Union[str, unicode]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "phonetic_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "compound_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "all_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "phonetic_regex", "type": "Pattern[unicode]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "compound_regex", "type": "Pattern[unicode]"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "instance", "type": "Callable[[], Any]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "analyze", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "synthesize", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "__file__", "type": "str"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "PACKAGE_PATH", "type": "str"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "phonetic_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "compound_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "regex_from_markers", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "phonetic_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "regex_from_markers", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "compound_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "PY2", "type": "bool"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "PY2", "type": "bool"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "root", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "groups", "type": "List[List[Any]]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "groups", "type": "List[List[Any]]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "lemma", "type": "unicode"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "lemma", "type": "unicode"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "root", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "grouptoks", "type": "List[List[Any]]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "toks", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "lemma", "type": "unicode"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "guess", "type": "bool"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "phonetic", "type": "bool"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "compound", "type": "bool"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "six", "type": "module"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "six", "type": "module"}, {"lineNumber": 93, "col_offset": 7, "nodeName": "root", "type": "Union[Any, unicode]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "phonetic_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "root", "type": "Union[Any, unicode]"}, {"lineNumber": 114, "col_offset": 7, "nodeName": "root", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "compound_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "phonetic", "type": "bool"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "compound", "type": "bool"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "split", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "toks", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "lemma", "type": "unicode"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "root", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "get_group_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "root", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "grouptoks", "type": "List[List[Any]]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "get_lemma", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "grouptoks", "type": "List[List[Any]]"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "partofspeech", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "toks", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "lemma", "type": "unicode"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "value", "type": "Any"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "guess", "type": "bool"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "phonetic", "type": "bool"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "compound", "type": "bool"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "DICT_PATH", "type": "Union[unicode, str]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "_analyzer", "type": "estnltk.pyvabamorf.vabamorf.Analyzer"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "_synthesizer", "type": "estnltk.pyvabamorf.vabamorf.Synthesizer"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "morf", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "morfresult", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "result", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "morfresult", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "result", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 352, "col_offset": 41, "nodeName": "words", "type": "Any"}, {"lineNumber": 378, "col_offset": 11, "nodeName": "synthesize", "type": "Any"}, {"lineNumber": 378, "col_offset": 44, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 52, "col_offset": 71, "nodeName": "M", "type": "int"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "word", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "unicode", "type": "Type[unicode]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "decode", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "root", "type": "Union[Any, unicode]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "root", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "trim_phonetics", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "root", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "trim_compounds", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "root", "type": "Any"}, {"lineNumber": 152, "col_offset": 7, "nodeName": "root", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "all_markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "root", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "root", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "toks", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 7, "nodeName": "partofspeech", "type": "Any"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "lemma", "type": "unicode"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "an", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "operator", "type": "module"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "an", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "get_root", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "root", "type": "Any"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "trim_phonetic", "type": "bool"}, {"lineNumber": 191, "col_offset": 50, "nodeName": "trim_compound", "type": "bool"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "ending", "type": "Any"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 32, "nodeName": "clitic", "type": "Any"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "partofspeech", "type": "Any"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "form", "type": "Any"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "key", "type": "str"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "guess", "type": "bool"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "PyVabamorf"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "Analyzer", "type": "Type[estnltk.pyvabamorf.vabamorf.Analyzer]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "PyVabamorf"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "Synthesizer", "type": "Type[estnltk.pyvabamorf.vabamorf.Synthesizer]"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "pid", "type": "int"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "morf", "type": "PyVabamorf"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "PyVabamorf", "type": "Type[PyVabamorf]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "guess", "type": "bool"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "phonetic", "type": "bool"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "compound", "type": "bool"}, {"lineNumber": 281, "col_offset": 36, "nodeName": "get_args", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 284, "col_offset": 22, "nodeName": "words", "type": "Any"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "string_types", "type": "Tuple[Type[str], Type[unicode]]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "words", "type": "Any"}, {"lineNumber": 291, "col_offset": 21, "nodeName": "analyze", "type": "Callable[..., Any]"}, {"lineNumber": 291, "col_offset": 68, "nodeName": "guess", "type": "bool"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "word", "type": "Any"}, {"lineNumber": 293, "col_offset": 18, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "analysis", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "synthesize", "type": "Callable[..., Any]"}, {"lineNumber": 326, "col_offset": 45, "nodeName": "guess", "type": "Any"}, {"lineNumber": 327, "col_offset": 45, "nodeName": "phonetic", "type": "Any"}, {"lineNumber": 352, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 378, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 71, "nodeName": "re", "type": "module"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "encode", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "encode", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "word", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "phonetic_regex", "type": "Pattern[unicode]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "compound_regex", "type": "Pattern[unicode]"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "root", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "trim_phonetics", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 56, "nodeName": "tok", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "groups", "type": "List[List[Any]]"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "gr", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "gr", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "grouptoks", "type": "List[List[Any]]"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "an", "type": "Any"}, {"lineNumber": 194, "col_offset": 32, "nodeName": "an", "type": "Any"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "an", "type": "Any"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "an", "type": "Any"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "key", "type": "str"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "phonetic", "type": "bool"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "vm", "type": "module"}, {"lineNumber": 244, "col_offset": 37, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 45, "nodeName": "lexPath", "type": "Any"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "vm", "type": "module"}, {"lineNumber": 245, "col_offset": 43, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 245, "col_offset": 51, "nodeName": "lexPath", "type": "Any"}, {"lineNumber": 255, "col_offset": 45, "nodeName": "pid", "type": "int"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "PyVabamorf", "type": "Type[PyVabamorf]"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "getpid", "type": "Callable[[], int]"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "PyVabamorf", "type": "Type[PyVabamorf]"}, {"lineNumber": 257, "col_offset": 30, "nodeName": "PyVabamorf", "type": "Type[PyVabamorf]"}, {"lineNumber": 281, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "six", "type": "module"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "w", "type": "Any"}, {"lineNumber": 288, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 288, "col_offset": 37, "nodeName": "words", "type": "Any"}, {"lineNumber": 291, "col_offset": 21, "nodeName": "_analyzer", "type": "estnltk.pyvabamorf.vabamorf.Analyzer"}, {"lineNumber": 291, "col_offset": 44, "nodeName": "StringVector", "type": "Type[estnltk.pyvabamorf.vabamorf.StringVector]"}, {"lineNumber": 291, "col_offset": 60, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "_synthesizer", "type": "estnltk.pyvabamorf.vabamorf.Synthesizer"}, {"lineNumber": 322, "col_offset": 45, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 322, "col_offset": 53, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 323, "col_offset": 45, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 53, "nodeName": "partofspeech", "type": "Any"}, {"lineNumber": 324, "col_offset": 45, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 324, "col_offset": 53, "nodeName": "form", "type": "Any"}, {"lineNumber": 325, "col_offset": 45, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 53, "nodeName": "hint", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 26, "nodeName": "word", "type": "Any"}, {"lineNumber": 328, "col_offset": 36, "nodeName": "word", "type": "Any"}, {"lineNumber": 328, "col_offset": 44, "nodeName": "words", "type": "Any"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "instance", "type": "Callable[[], Any]"}, {"lineNumber": 378, "col_offset": 11, "nodeName": "instance", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "escape", "type": "Callable"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "c", "type": "unicode"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "c", "type": "unicode"}, {"lineNumber": 52, "col_offset": 54, "nodeName": "markers", "type": "FrozenSet[unicode]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "word", "type": "Any"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "trim_compounds", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 46, "nodeName": "tok", "type": "Any"}, {"lineNumber": 156, "col_offset": 63, "nodeName": "split", "type": "Any"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "value", "type": "Any"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "key", "type": "str"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "compound", "type": "bool"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 255, "col_offset": 23, "nodeName": "PyVabamorf", "type": "Type[PyVabamorf]"}, {"lineNumber": 255, "col_offset": 45, "nodeName": "PyVabamorf", "type": "Type[PyVabamorf]"}, {"lineNumber": 255, "col_offset": 63, "nodeName": "getpid", "type": "Callable[[], int]"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "os", "type": "module"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "words", "type": "Any"}, {"lineNumber": 291, "col_offset": 21, "nodeName": "self", "type": "PyVabamorf"}, {"lineNumber": 291, "col_offset": 44, "nodeName": "vm", "type": "module"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "analysis_as_dict", "type": "Callable[..., Any]"}, {"lineNumber": 294, "col_offset": 41, "nodeName": "an", "type": "Any"}, {"lineNumber": 294, "col_offset": 45, "nodeName": "phonetic", "type": "bool"}, {"lineNumber": 294, "col_offset": 55, "nodeName": "compound", "type": "bool"}, {"lineNumber": 294, "col_offset": 69, "nodeName": "an", "type": "Any"}, {"lineNumber": 294, "col_offset": 75, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "result", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 296, "col_offset": 39, "nodeName": "analysis", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "self", "type": "PyVabamorf"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "PyVabamorf", "type": "Type[PyVabamorf]"}, {"lineNumber": 378, "col_offset": 11, "nodeName": "PyVabamorf", "type": "Type[PyVabamorf]"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "re", "type": "module"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "decode", "type": "Any"}, {"lineNumber": 156, "col_offset": 63, "nodeName": "group", "type": "Any"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "value", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 255, "col_offset": 63, "nodeName": "os", "type": "module"}, {"lineNumber": 295, "col_offset": 35, "nodeName": "deconvert", "type": "Callable[[Any], Any]"}, {"lineNumber": 295, "col_offset": 45, "nodeName": "word", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "word", "type": "Any"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 223, "col_offset": 58, "nodeName": "key", "type": "str"}]