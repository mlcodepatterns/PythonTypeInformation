[{"lineNumber": 20, "col_offset": 0, "nodeName": "apply_tokenizer", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "read", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "end", "type": "int"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "toks", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "spans", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "results", "type": "List[Dict[str, Any]]"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "results", "type": "List[Dict[str, Any]]"}, {"lineNumber": 33, "col_offset": 10, "nodeName": "start", "type": "int"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "text", "type": "unicode"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "span_tokenize", "type": "Any"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "text", "type": "unicode"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "tok", "type": "Any"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "izip", "type": "Callable"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "toks", "type": "Any"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "spans", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "text", "type": "unicode"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "paras", "type": "List[Dict[str, Any]]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "para", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "paras", "type": "List[Dict[str, Any]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "_root_path", "type": "Any"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "root_path", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "_prefix", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "_suffix", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "suffix", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_importer", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "importer", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "documents", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "fnm", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "text", "type": "unicode"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "tokstart", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "tokend", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "tok", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "tokstart", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "tokend", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "d", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "get", "type": "Callable"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "get", "type": "Callable"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "get", "type": "Callable"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "unicode", "type": "Type[unicode]"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "text", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "apply_tokenizer", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "text", "type": "unicode"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "_paragraph_tokenizer", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "sentences", "type": "List[Dict[str, Any]]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "sent", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "sentences", "type": "List[Dict[str, Any]]"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "sentences", "type": "List[Dict[str, Any]]"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "text", "type": "unicode"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "paras", "type": "List[Dict[str, Any]]"}, {"lineNumber": 92, "col_offset": 69, "nodeName": "PlainTextDocumentImporter", "type": "Type[PlainTextDocumentImporter]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "PlaintextCorpusImporter"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "PlaintextCorpusImporter"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "PlaintextCorpusImporter"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "PlaintextCorpusImporter"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "get_filenames", "type": "Callable"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "_root_path", "type": "Any"}, {"lineNumber": 111, "col_offset": 50, "nodeName": "_prefix", "type": "Any"}, {"lineNumber": 111, "col_offset": 64, "nodeName": "_suffix", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "abs_path", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "document", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "fnm", "type": "Any"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "abs_path", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "documents", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "start", "type": "int"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "tokstart", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "start", "type": "int"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "tokend", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "results", "type": "List[Dict[str, Any]]"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "RegexpTokenizer", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "PunktWordTokenizer", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "self", "type": "PlainTextDocumentImporter"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "apply_tokenizer", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "_sentence_tokenizer", "type": "Any"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "words", "type": "List[Dict[str, Any]]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "para", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "text", "type": "unicode"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "text", "type": "unicode"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "self", "type": "PlaintextCorpusImporter"}, {"lineNumber": 111, "col_offset": 50, "nodeName": "self", "type": "PlaintextCorpusImporter"}, {"lineNumber": 111, "col_offset": 64, "nodeName": "self", "type": "PlaintextCorpusImporter"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "_root_path", "type": "Any"}, {"lineNumber": 112, "col_offset": 53, "nodeName": "fnm", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "_importer", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "document", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "document", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "document", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "para", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "self", "type": "PlainTextDocumentImporter"}, {"lineNumber": 77, "col_offset": 80, "nodeName": "para", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "sent", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "apply_tokenizer", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 70, "nodeName": "_word_tokenizer", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "self", "type": "PlaintextCorpusImporter"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "self", "type": "PlaintextCorpusImporter"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "read", "type": "Callable[..., Union[str, unicode]]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "documents", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "nltk", "type": "Any"}, {"lineNumber": 79, "col_offset": 56, "nodeName": "sent", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 70, "nodeName": "self", "type": "PlainTextDocumentImporter"}, {"lineNumber": 79, "col_offset": 92, "nodeName": "sent", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 113, "col_offset": 50, "nodeName": "abs_path", "type": "Any"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "codecs", "type": "module"}]