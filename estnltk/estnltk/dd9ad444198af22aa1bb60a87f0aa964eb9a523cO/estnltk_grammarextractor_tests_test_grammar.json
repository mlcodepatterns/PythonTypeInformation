[{"lineNumber": 10, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "test_regex_cover", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "test_iregex_cover", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "test_lemma_cover", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_postag_cover", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_layer_cover", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "test_union_cover", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "test_concatenation", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "cover", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "expected", "type": "List[Tuple[int, int]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "cover", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "expected", "type": "List[Tuple[int, int]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "l", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "cover", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "expected", "type": "List[Tuple[int, int]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "cover", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "expected", "type": "List[Tuple[int, int]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "l", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "cover", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "expected", "type": "List[Tuple[int, int]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "cover", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "expected", "type": "List[Tuple[int, int]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "space", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "cover", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "expected", "type": "List[Tuple[int, int]]"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "Regex", "type": "Any"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "Text", "type": "Any"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "get_cover", "type": "Any"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "t", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "expected", "type": "List[Tuple[int, int]]"}, {"lineNumber": 19, "col_offset": 39, "nodeName": "cover", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "IRegex", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "Text", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "get_cover", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "t", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "expected", "type": "List[Tuple[int, int]]"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "cover", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "Lemmas", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "Text", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "get_cover", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "t", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "expected", "type": "List[Tuple[int, int]]"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "cover", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "Postags", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "Text", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "get_cover", "type": "Any"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "t", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "expected", "type": "List[Tuple[int, int]]"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "cover", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "Text", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "tag_with_regex", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "get_cover", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "t", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "expected", "type": "List[Tuple[int, int]]"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "cover", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "Text", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "Union", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "get_cover", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "t", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "expected", "type": "List[Tuple[int, int]]"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "cover", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "Text", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "Regex", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "Concatenation", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "space", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "get_cover", "type": "Any"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "t", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "expected", "type": "List[Tuple[int, int]]"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "cover", "type": "Any"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "r", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "RegexTest"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "r", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "RegexTest"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "l", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "LemmaTest"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "PostagTest"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "l", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "LayerTest"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "Postags", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "Lemmas", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "u", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "UnionTest"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "Lemmas", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "Lemmas", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "concat", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "ConcatenationTest"}]