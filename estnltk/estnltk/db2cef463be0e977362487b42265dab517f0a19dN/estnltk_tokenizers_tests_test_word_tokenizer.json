[{"lineNumber": 7, "col_offset": 0, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 10, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "test_ordinals", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "test_hyphen", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_unusual_hyphens", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "test_fractions", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "test_abbreviations", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_mistakenly_conjoined_sentences", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 12, "nodeName": "EstWordTokenizer", "type": "Any"}, {"lineNumber": 10, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "text", "type": "unicode"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "expected_tokens", "type": "List[unicode]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "expected_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "text", "type": "unicode"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "expected_tokens", "type": "List[unicode]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "expected_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "text", "type": "unicode"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "expected_tokens", "type": "List[unicode]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "expected_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "text", "type": "unicode"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "expected_tokens", "type": "List[unicode]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "expected_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "text", "type": "unicode"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "expected_tokens", "type": "List[unicode]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "expected_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "text1", "type": "unicode"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "expected_tokens", "type": "List[unicode]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "expected_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "text2", "type": "unicode"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "expected_tokens", "type": "List[unicode]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "expected_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "spans", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "expected_tokens", "type": "List[unicode]"}, {"lineNumber": 19, "col_offset": 46, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "expected_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "spans", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "spans", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "expected_tokens", "type": "List[unicode]"}, {"lineNumber": 29, "col_offset": 46, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "expected_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 30, "col_offset": 45, "nodeName": "spans", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "spans", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "expected_tokens", "type": "List[unicode]"}, {"lineNumber": 41, "col_offset": 46, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "expected_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 42, "col_offset": 45, "nodeName": "spans", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "spans", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "expected_tokens", "type": "List[unicode]"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "expected_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "spans", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "spans", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "expected_tokens", "type": "List[unicode]"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "expected_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "spans", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "spans", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "expected_tokens", "type": "List[unicode]"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "expected_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 70, "col_offset": 45, "nodeName": "spans", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "spans", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "expected_tokens", "type": "List[unicode]"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "expected_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "spans", "type": "Any"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 17, "col_offset": 43, "nodeName": "text", "type": "unicode"}, {"lineNumber": 17, "col_offset": 50, "nodeName": "span_tokenize", "type": "Any"}, {"lineNumber": 17, "col_offset": 74, "nodeName": "text", "type": "unicode"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "WordTokenizerTest"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "WordTokenizerTest"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "text", "type": "unicode"}, {"lineNumber": 27, "col_offset": 50, "nodeName": "span_tokenize", "type": "Any"}, {"lineNumber": 27, "col_offset": 74, "nodeName": "text", "type": "unicode"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "WordTokenizerTest"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "WordTokenizerTest"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 39, "col_offset": 43, "nodeName": "text", "type": "unicode"}, {"lineNumber": 39, "col_offset": 50, "nodeName": "span_tokenize", "type": "Any"}, {"lineNumber": 39, "col_offset": 74, "nodeName": "text", "type": "unicode"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "WordTokenizerTest"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "WordTokenizerTest"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "text", "type": "unicode"}, {"lineNumber": 49, "col_offset": 50, "nodeName": "span_tokenize", "type": "Any"}, {"lineNumber": 49, "col_offset": 74, "nodeName": "text", "type": "unicode"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "WordTokenizerTest"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "WordTokenizerTest"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "text", "type": "unicode"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "span_tokenize", "type": "Any"}, {"lineNumber": 59, "col_offset": 74, "nodeName": "text", "type": "unicode"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "WordTokenizerTest"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "WordTokenizerTest"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "text1", "type": "unicode"}, {"lineNumber": 68, "col_offset": 51, "nodeName": "span_tokenize", "type": "Any"}, {"lineNumber": 68, "col_offset": 75, "nodeName": "text1", "type": "unicode"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "WordTokenizerTest"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "WordTokenizerTest"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "text2", "type": "unicode"}, {"lineNumber": 75, "col_offset": 51, "nodeName": "span_tokenize", "type": "Any"}, {"lineNumber": 75, "col_offset": 75, "nodeName": "text2", "type": "unicode"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "WordTokenizerTest"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "WordTokenizerTest"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 17, "col_offset": 50, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 27, "col_offset": 50, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 39, "col_offset": 50, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 49, "col_offset": 50, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 68, "col_offset": 51, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 75, "col_offset": 51, "nodeName": "tokenizer", "type": "Any"}]